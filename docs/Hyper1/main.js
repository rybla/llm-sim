(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __esm = (fn, res) => function __init() {
    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
  };
  var __commonJS = (cb, mod3) => function __require() {
    return mod3 || (0, cb[__getOwnPropNames(cb)[0]])((mod3 = { exports: {} }).exports, mod3), mod3.exports;
  };
  var __export = (target6, all4) => {
    for (var name15 in all4)
      __defProp(target6, name15, { get: all4[name15], enumerable: true });
  };
  var __copyProps = (to, from3, except2, desc) => {
    if (from3 && typeof from3 === "object" || typeof from3 === "function") {
      for (let key2 of __getOwnPropNames(from3))
        if (!__hasOwnProp.call(to, key2) && key2 !== except2)
          __defProp(to, key2, { get: () => from3[key2], enumerable: !(desc = __getOwnPropDesc(from3, key2)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod3, isNodeMode, target6) => (target6 = mod3 != null ? __create(__getProtoOf(mod3)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod3 || !mod3.__esModule ? __defProp(target6, "default", { value: mod3, enumerable: true }) : target6,
    mod3
  ));
  var __toCommonJS = (mod3) => __copyProps(__defProp({}, "__esModule", { value: true }), mod3);

  // node_modules/tslib/tslib.es6.mjs
  var tslib_es6_exports = {};
  __export(tslib_es6_exports, {
    __addDisposableResource: () => __addDisposableResource,
    __assign: () => __assign,
    __asyncDelegator: () => __asyncDelegator,
    __asyncGenerator: () => __asyncGenerator,
    __asyncValues: () => __asyncValues,
    __await: () => __await,
    __awaiter: () => __awaiter,
    __classPrivateFieldGet: () => __classPrivateFieldGet,
    __classPrivateFieldIn: () => __classPrivateFieldIn,
    __classPrivateFieldSet: () => __classPrivateFieldSet,
    __createBinding: () => __createBinding,
    __decorate: () => __decorate,
    __disposeResources: () => __disposeResources,
    __esDecorate: () => __esDecorate,
    __exportStar: () => __exportStar,
    __extends: () => __extends,
    __generator: () => __generator,
    __importDefault: () => __importDefault,
    __importStar: () => __importStar,
    __makeTemplateObject: () => __makeTemplateObject,
    __metadata: () => __metadata,
    __param: () => __param,
    __propKey: () => __propKey,
    __read: () => __read,
    __rest: () => __rest,
    __runInitializers: () => __runInitializers,
    __setFunctionName: () => __setFunctionName,
    __spread: () => __spread,
    __spreadArray: () => __spreadArray,
    __spreadArrays: () => __spreadArrays,
    __values: () => __values2,
    default: () => tslib_es6_default
  });
  function __extends(d3, b4) {
    if (typeof b4 !== "function" && b4 !== null)
      throw new TypeError("Class extends value " + String(b4) + " is not a constructor or null");
    extendStatics(d3, b4);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b4 === null ? Object.create(b4) : (__.prototype = b4.prototype, new __());
  }
  function __rest(s3, e3) {
    var t3 = {};
    for (var p4 in s3) if (Object.prototype.hasOwnProperty.call(s3, p4) && e3.indexOf(p4) < 0)
      t3[p4] = s3[p4];
    if (s3 != null && typeof Object.getOwnPropertySymbols === "function")
      for (var i4 = 0, p4 = Object.getOwnPropertySymbols(s3); i4 < p4.length; i4++) {
        if (e3.indexOf(p4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s3, p4[i4]))
          t3[p4[i4]] = s3[p4[i4]];
      }
    return t3;
  }
  function __decorate(decorators, target6, key2, desc) {
    var c3 = arguments.length, r3 = c3 < 3 ? target6 : desc === null ? desc = Object.getOwnPropertyDescriptor(target6, key2) : desc, d3;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target6, key2, desc);
    else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d3 = decorators[i4]) r3 = (c3 < 3 ? d3(r3) : c3 > 3 ? d3(target6, key2, r3) : d3(target6, key2)) || r3;
    return c3 > 3 && r3 && Object.defineProperty(target6, key2, r3), r3;
  }
  function __param(paramIndex, decorator) {
    return function(target6, key2) {
      decorator(target6, key2, paramIndex);
    };
  }
  function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept2(f3) {
      if (f3 !== void 0 && typeof f3 !== "function") throw new TypeError("Function expected");
      return f3;
    }
    var kind2 = contextIn.kind, key2 = kind2 === "getter" ? "get" : kind2 === "setter" ? "set" : "value";
    var target6 = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target6 ? Object.getOwnPropertyDescriptor(target6, contextIn.name) : {});
    var _2, done = false;
    for (var i4 = decorators.length - 1; i4 >= 0; i4--) {
      var context = {};
      for (var p4 in contextIn) context[p4] = p4 === "access" ? {} : contextIn[p4];
      for (var p4 in contextIn.access) context.access[p4] = contextIn.access[p4];
      context.addInitializer = function(f3) {
        if (done) throw new TypeError("Cannot add initializers after decoration has completed");
        extraInitializers.push(accept2(f3 || null));
      };
      var result = (0, decorators[i4])(kind2 === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key2], context);
      if (kind2 === "accessor") {
        if (result === void 0) continue;
        if (result === null || typeof result !== "object") throw new TypeError("Object expected");
        if (_2 = accept2(result.get)) descriptor.get = _2;
        if (_2 = accept2(result.set)) descriptor.set = _2;
        if (_2 = accept2(result.init)) initializers.unshift(_2);
      } else if (_2 = accept2(result)) {
        if (kind2 === "field") initializers.unshift(_2);
        else descriptor[key2] = _2;
      }
    }
    if (target6) Object.defineProperty(target6, contextIn.name, descriptor);
    done = true;
  }
  function __runInitializers(thisArg, initializers, value14) {
    var useValue = arguments.length > 2;
    for (var i4 = 0; i4 < initializers.length; i4++) {
      value14 = useValue ? initializers[i4].call(thisArg, value14) : initializers[i4].call(thisArg);
    }
    return useValue ? value14 : void 0;
  }
  function __propKey(x2) {
    return typeof x2 === "symbol" ? x2 : "".concat(x2);
  }
  function __setFunctionName(f3, name15, prefix) {
    if (typeof name15 === "symbol") name15 = name15.description ? "[".concat(name15.description, "]") : "";
    return Object.defineProperty(f3, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name15) : name15 });
  }
  function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
  }
  function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value14) {
      return value14 instanceof P ? value14 : new P(function(resolve) {
        resolve(value14);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value14) {
        try {
          step3(generator.next(value14));
        } catch (e3) {
          reject(e3);
        }
      }
      function rejected(value14) {
        try {
          step3(generator["throw"](value14));
        } catch (e3) {
          reject(e3);
        }
      }
      function step3(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step3((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  }
  function __generator(thisArg, body2) {
    var _2 = { label: 0, sent: function() {
      if (t3[0] & 1) throw t3[1];
      return t3[1];
    }, trys: [], ops: [] }, f3, y2, t3, g3;
    return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
      return this;
    }), g3;
    function verb(n3) {
      return function(v3) {
        return step3([n3, v3]);
      };
    }
    function step3(op) {
      if (f3) throw new TypeError("Generator is already executing.");
      while (g3 && (g3 = 0, op[0] && (_2 = 0)), _2) try {
        if (f3 = 1, y2 && (t3 = op[0] & 2 ? y2["return"] : op[0] ? y2["throw"] || ((t3 = y2["return"]) && t3.call(y2), 0) : y2.next) && !(t3 = t3.call(y2, op[1])).done) return t3;
        if (y2 = 0, t3) op = [op[0] & 2, t3.value];
        switch (op[0]) {
          case 0:
          case 1:
            t3 = op;
            break;
          case 4:
            _2.label++;
            return { value: op[1], done: false };
          case 5:
            _2.label++;
            y2 = op[1];
            op = [0];
            continue;
          case 7:
            op = _2.ops.pop();
            _2.trys.pop();
            continue;
          default:
            if (!(t3 = _2.trys, t3 = t3.length > 0 && t3[t3.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _2 = 0;
              continue;
            }
            if (op[0] === 3 && (!t3 || op[1] > t3[0] && op[1] < t3[3])) {
              _2.label = op[1];
              break;
            }
            if (op[0] === 6 && _2.label < t3[1]) {
              _2.label = t3[1];
              t3 = op;
              break;
            }
            if (t3 && _2.label < t3[2]) {
              _2.label = t3[2];
              _2.ops.push(op);
              break;
            }
            if (t3[2]) _2.ops.pop();
            _2.trys.pop();
            continue;
        }
        op = body2.call(thisArg, _2);
      } catch (e3) {
        op = [6, e3];
        y2 = 0;
      } finally {
        f3 = t3 = 0;
      }
      if (op[0] & 5) throw op[1];
      return { value: op[0] ? op[1] : void 0, done: true };
    }
  }
  function __exportStar(m3, o3) {
    for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(o3, p4)) __createBinding(o3, m3, p4);
  }
  function __values2(o3) {
    var s3 = typeof Symbol === "function" && Symbol.iterator, m3 = s3 && o3[s3], i4 = 0;
    if (m3) return m3.call(o3);
    if (o3 && typeof o3.length === "number") return {
      next: function() {
        if (o3 && i4 >= o3.length) o3 = void 0;
        return { value: o3 && o3[i4++], done: !o3 };
      }
    };
    throw new TypeError(s3 ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }
  function __read(o3, n3) {
    var m3 = typeof Symbol === "function" && o3[Symbol.iterator];
    if (!m3) return o3;
    var i4 = m3.call(o3), r3, ar = [], e3;
    try {
      while ((n3 === void 0 || n3-- > 0) && !(r3 = i4.next()).done) ar.push(r3.value);
    } catch (error4) {
      e3 = { error: error4 };
    } finally {
      try {
        if (r3 && !r3.done && (m3 = i4["return"])) m3.call(i4);
      } finally {
        if (e3) throw e3.error;
      }
    }
    return ar;
  }
  function __spread() {
    for (var ar = [], i4 = 0; i4 < arguments.length; i4++)
      ar = ar.concat(__read(arguments[i4]));
    return ar;
  }
  function __spreadArrays() {
    for (var s3 = 0, i4 = 0, il = arguments.length; i4 < il; i4++) s3 += arguments[i4].length;
    for (var r3 = Array(s3), k3 = 0, i4 = 0; i4 < il; i4++)
      for (var a4 = arguments[i4], j3 = 0, jl = a4.length; j3 < jl; j3++, k3++)
        r3[k3] = a4[j3];
    return r3;
  }
  function __spreadArray(to, from3, pack) {
    if (pack || arguments.length === 2) for (var i4 = 0, l3 = from3.length, ar; i4 < l3; i4++) {
      if (ar || !(i4 in from3)) {
        if (!ar) ar = Array.prototype.slice.call(from3, 0, i4);
        ar[i4] = from3[i4];
      }
    }
    return to.concat(ar || Array.prototype.slice.call(from3));
  }
  function __await(v3) {
    return this instanceof __await ? (this.v = v3, this) : new __await(v3);
  }
  function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g3 = generator.apply(thisArg, _arguments || []), i4, q4 = [];
    return i4 = {}, verb("next"), verb("throw"), verb("return", awaitReturn), i4[Symbol.asyncIterator] = function() {
      return this;
    }, i4;
    function awaitReturn(f3) {
      return function(v3) {
        return Promise.resolve(v3).then(f3, reject);
      };
    }
    function verb(n3, f3) {
      if (g3[n3]) {
        i4[n3] = function(v3) {
          return new Promise(function(a4, b4) {
            q4.push([n3, v3, a4, b4]) > 1 || resume(n3, v3);
          });
        };
        if (f3) i4[n3] = f3(i4[n3]);
      }
    }
    function resume(n3, v3) {
      try {
        step3(g3[n3](v3));
      } catch (e3) {
        settle(q4[0][3], e3);
      }
    }
    function step3(r3) {
      r3.value instanceof __await ? Promise.resolve(r3.value.v).then(fulfill, reject) : settle(q4[0][2], r3);
    }
    function fulfill(value14) {
      resume("next", value14);
    }
    function reject(value14) {
      resume("throw", value14);
    }
    function settle(f3, v3) {
      if (f3(v3), q4.shift(), q4.length) resume(q4[0][0], q4[0][1]);
    }
  }
  function __asyncDelegator(o3) {
    var i4, p4;
    return i4 = {}, verb("next"), verb("throw", function(e3) {
      throw e3;
    }), verb("return"), i4[Symbol.iterator] = function() {
      return this;
    }, i4;
    function verb(n3, f3) {
      i4[n3] = o3[n3] ? function(v3) {
        return (p4 = !p4) ? { value: __await(o3[n3](v3)), done: false } : f3 ? f3(v3) : v3;
      } : f3;
    }
  }
  function __asyncValues(o3) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m3 = o3[Symbol.asyncIterator], i4;
    return m3 ? m3.call(o3) : (o3 = typeof __values2 === "function" ? __values2(o3) : o3[Symbol.iterator](), i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
      return this;
    }, i4);
    function verb(n3) {
      i4[n3] = o3[n3] && function(v3) {
        return new Promise(function(resolve, reject) {
          v3 = o3[n3](v3), settle(resolve, reject, v3.done, v3.value);
        });
      };
    }
    function settle(resolve, reject, d3, v3) {
      Promise.resolve(v3).then(function(v5) {
        resolve({ value: v5, done: d3 });
      }, reject);
    }
  }
  function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) {
      Object.defineProperty(cooked, "raw", { value: raw });
    } else {
      cooked.raw = raw;
    }
    return cooked;
  }
  function __importStar(mod3) {
    if (mod3 && mod3.__esModule) return mod3;
    var result = {};
    if (mod3 != null) {
      for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding(result, mod3, k3);
    }
    __setModuleDefault(result, mod3);
    return result;
  }
  function __importDefault(mod3) {
    return mod3 && mod3.__esModule ? mod3 : { default: mod3 };
  }
  function __classPrivateFieldGet(receiver, state3, kind2, f3) {
    if (kind2 === "a" && !f3) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state3 === "function" ? receiver !== state3 || !f3 : !state3.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind2 === "m" ? f3 : kind2 === "a" ? f3.call(receiver) : f3 ? f3.value : state3.get(receiver);
  }
  function __classPrivateFieldSet(receiver, state3, value14, kind2, f3) {
    if (kind2 === "m") throw new TypeError("Private method is not writable");
    if (kind2 === "a" && !f3) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state3 === "function" ? receiver !== state3 || !f3 : !state3.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind2 === "a" ? f3.call(receiver, value14) : f3 ? f3.value = value14 : state3.set(receiver, value14), value14;
  }
  function __classPrivateFieldIn(state3, receiver) {
    if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state3 === "function" ? receiver === state3 : state3.has(receiver);
  }
  function __addDisposableResource(env, value14, async2) {
    if (value14 !== null && value14 !== void 0) {
      if (typeof value14 !== "object" && typeof value14 !== "function") throw new TypeError("Object expected.");
      var dispose, inner;
      if (async2) {
        if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
        dispose = value14[Symbol.asyncDispose];
      }
      if (dispose === void 0) {
        if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
        dispose = value14[Symbol.dispose];
        if (async2) inner = dispose;
      }
      if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
      if (inner) dispose = function() {
        try {
          inner.call(this);
        } catch (e3) {
          return Promise.reject(e3);
        }
      };
      env.stack.push({ value: value14, dispose, async: async2 });
    } else if (async2) {
      env.stack.push({ async: true });
    }
    return value14;
  }
  function __disposeResources(env) {
    function fail2(e3) {
      env.error = env.hasError ? new _SuppressedError(e3, env.error, "An error was suppressed during disposal.") : e3;
      env.hasError = true;
    }
    function next() {
      while (env.stack.length) {
        var rec = env.stack.pop();
        try {
          var result = rec.dispose && rec.dispose.call(rec.value);
          if (rec.async) return Promise.resolve(result).then(next, function(e3) {
            fail2(e3);
            return next();
          });
        } catch (e3) {
          fail2(e3);
        }
      }
      if (env.hasError) throw env.error;
    }
    return next();
  }
  var extendStatics, __assign, __createBinding, __setModuleDefault, _SuppressedError, tslib_es6_default;
  var init_tslib_es6 = __esm({
    "node_modules/tslib/tslib.es6.mjs"() {
      extendStatics = function(d3, b4) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b5) {
          d4.__proto__ = b5;
        } || function(d4, b5) {
          for (var p4 in b5) if (Object.prototype.hasOwnProperty.call(b5, p4)) d4[p4] = b5[p4];
        };
        return extendStatics(d3, b4);
      };
      __assign = function() {
        __assign = Object.assign || function __assign3(t3) {
          for (var s3, i4 = 1, n3 = arguments.length; i4 < n3; i4++) {
            s3 = arguments[i4];
            for (var p4 in s3) if (Object.prototype.hasOwnProperty.call(s3, p4)) t3[p4] = s3[p4];
          }
          return t3;
        };
        return __assign.apply(this, arguments);
      };
      __createBinding = Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      };
      __setModuleDefault = Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      };
      _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function(error4, suppressed, message2) {
        var e3 = new Error(message2);
        return e3.name = "SuppressedError", e3.error = error4, e3.suppressed = suppressed, e3;
      };
      tslib_es6_default = {
        __extends,
        __assign,
        __rest,
        __decorate,
        __param,
        __metadata,
        __awaiter,
        __generator,
        __createBinding,
        __exportStar,
        __values: __values2,
        __read,
        __spread,
        __spreadArrays,
        __spreadArray,
        __await,
        __asyncGenerator,
        __asyncDelegator,
        __asyncValues,
        __makeTemplateObject,
        __importStar,
        __importDefault,
        __classPrivateFieldGet,
        __classPrivateFieldSet,
        __classPrivateFieldIn,
        __addDisposableResource,
        __disposeResources
      };
    }
  });

  // node_modules/@aws-crypto/sha256-js/build/main/constants.js
  var require_constants = __commonJS({
    "node_modules/@aws-crypto/sha256-js/build/main/constants.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.MAX_HASHABLE_LENGTH = exports.INIT = exports.KEY = exports.DIGEST_LENGTH = exports.BLOCK_SIZE = void 0;
      exports.BLOCK_SIZE = 64;
      exports.DIGEST_LENGTH = 32;
      exports.KEY = new Uint32Array([
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
      ]);
      exports.INIT = [
        1779033703,
        3144134277,
        1013904242,
        2773480762,
        1359893119,
        2600822924,
        528734635,
        1541459225
      ];
      exports.MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;
    }
  });

  // node_modules/@aws-crypto/sha256-js/build/main/RawSha256.js
  var require_RawSha256 = __commonJS({
    "node_modules/@aws-crypto/sha256-js/build/main/RawSha256.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.RawSha256 = void 0;
      var constants_1 = require_constants();
      var RawSha256 = (
        /** @class */
        function() {
          function RawSha2562() {
            this.state = Int32Array.from(constants_1.INIT);
            this.temp = new Int32Array(64);
            this.buffer = new Uint8Array(64);
            this.bufferLength = 0;
            this.bytesHashed = 0;
            this.finished = false;
          }
          RawSha2562.prototype.update = function(data) {
            if (this.finished) {
              throw new Error("Attempted to update an already finished hash.");
            }
            var position2 = 0;
            var byteLength = data.byteLength;
            this.bytesHashed += byteLength;
            if (this.bytesHashed * 8 > constants_1.MAX_HASHABLE_LENGTH) {
              throw new Error("Cannot hash more than 2^53 - 1 bits");
            }
            while (byteLength > 0) {
              this.buffer[this.bufferLength++] = data[position2++];
              byteLength--;
              if (this.bufferLength === constants_1.BLOCK_SIZE) {
                this.hashBuffer();
                this.bufferLength = 0;
              }
            }
          };
          RawSha2562.prototype.digest = function() {
            if (!this.finished) {
              var bitsHashed = this.bytesHashed * 8;
              var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);
              var undecoratedLength = this.bufferLength;
              bufferView.setUint8(this.bufferLength++, 128);
              if (undecoratedLength % constants_1.BLOCK_SIZE >= constants_1.BLOCK_SIZE - 8) {
                for (var i4 = this.bufferLength; i4 < constants_1.BLOCK_SIZE; i4++) {
                  bufferView.setUint8(i4, 0);
                }
                this.hashBuffer();
                this.bufferLength = 0;
              }
              for (var i4 = this.bufferLength; i4 < constants_1.BLOCK_SIZE - 8; i4++) {
                bufferView.setUint8(i4, 0);
              }
              bufferView.setUint32(constants_1.BLOCK_SIZE - 8, Math.floor(bitsHashed / 4294967296), true);
              bufferView.setUint32(constants_1.BLOCK_SIZE - 4, bitsHashed);
              this.hashBuffer();
              this.finished = true;
            }
            var out = new Uint8Array(constants_1.DIGEST_LENGTH);
            for (var i4 = 0; i4 < 8; i4++) {
              out[i4 * 4] = this.state[i4] >>> 24 & 255;
              out[i4 * 4 + 1] = this.state[i4] >>> 16 & 255;
              out[i4 * 4 + 2] = this.state[i4] >>> 8 & 255;
              out[i4 * 4 + 3] = this.state[i4] >>> 0 & 255;
            }
            return out;
          };
          RawSha2562.prototype.hashBuffer = function() {
            var _a2 = this, buffer = _a2.buffer, state3 = _a2.state;
            var state0 = state3[0], state1 = state3[1], state22 = state3[2], state32 = state3[3], state4 = state3[4], state5 = state3[5], state6 = state3[6], state7 = state3[7];
            for (var i4 = 0; i4 < constants_1.BLOCK_SIZE; i4++) {
              if (i4 < 16) {
                this.temp[i4] = (buffer[i4 * 4] & 255) << 24 | (buffer[i4 * 4 + 1] & 255) << 16 | (buffer[i4 * 4 + 2] & 255) << 8 | buffer[i4 * 4 + 3] & 255;
              } else {
                var u4 = this.temp[i4 - 2];
                var t1_1 = (u4 >>> 17 | u4 << 15) ^ (u4 >>> 19 | u4 << 13) ^ u4 >>> 10;
                u4 = this.temp[i4 - 15];
                var t2_1 = (u4 >>> 7 | u4 << 25) ^ (u4 >>> 18 | u4 << 14) ^ u4 >>> 3;
                this.temp[i4] = (t1_1 + this.temp[i4 - 7] | 0) + (t2_1 + this.temp[i4 - 16] | 0);
              }
              var t1 = (((state4 >>> 6 | state4 << 26) ^ (state4 >>> 11 | state4 << 21) ^ (state4 >>> 25 | state4 << 7)) + (state4 & state5 ^ ~state4 & state6) | 0) + (state7 + (constants_1.KEY[i4] + this.temp[i4] | 0) | 0) | 0;
              var t22 = ((state0 >>> 2 | state0 << 30) ^ (state0 >>> 13 | state0 << 19) ^ (state0 >>> 22 | state0 << 10)) + (state0 & state1 ^ state0 & state22 ^ state1 & state22) | 0;
              state7 = state6;
              state6 = state5;
              state5 = state4;
              state4 = state32 + t1 | 0;
              state32 = state22;
              state22 = state1;
              state1 = state0;
              state0 = t1 + t22 | 0;
            }
            state3[0] += state0;
            state3[1] += state1;
            state3[2] += state22;
            state3[3] += state32;
            state3[4] += state4;
            state3[5] += state5;
            state3[6] += state6;
            state3[7] += state7;
          };
          return RawSha2562;
        }()
      );
      exports.RawSha256 = RawSha256;
    }
  });

  // node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/node_modules/@smithy/util-buffer-from/node_modules/@smithy/is-array-buffer/dist-cjs/index.js
  var require_dist_cjs = __commonJS({
    "node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/node_modules/@smithy/util-buffer-from/node_modules/@smithy/is-array-buffer/dist-cjs/index.js"(exports, module) {
      var __defProp2 = Object.defineProperty;
      var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
      var __getOwnPropNames2 = Object.getOwnPropertyNames;
      var __hasOwnProp2 = Object.prototype.hasOwnProperty;
      var __name = (target6, value14) => __defProp2(target6, "name", { value: value14, configurable: true });
      var __export2 = (target6, all4) => {
        for (var name15 in all4)
          __defProp2(target6, name15, { get: all4[name15], enumerable: true });
      };
      var __copyProps2 = (to, from3, except2, desc) => {
        if (from3 && typeof from3 === "object" || typeof from3 === "function") {
          for (let key2 of __getOwnPropNames2(from3))
            if (!__hasOwnProp2.call(to, key2) && key2 !== except2)
              __defProp2(to, key2, { get: () => from3[key2], enumerable: !(desc = __getOwnPropDesc2(from3, key2)) || desc.enumerable });
        }
        return to;
      };
      var __toCommonJS2 = (mod3) => __copyProps2(__defProp2({}, "__esModule", { value: true }), mod3);
      var src_exports = {};
      __export2(src_exports, {
        isArrayBuffer: () => isArrayBuffer2
      });
      module.exports = __toCommonJS2(src_exports);
      var isArrayBuffer2 = /* @__PURE__ */ __name((arg) => typeof ArrayBuffer === "function" && arg instanceof ArrayBuffer || Object.prototype.toString.call(arg) === "[object ArrayBuffer]", "isArrayBuffer");
    }
  });

  // node_modules/base64-js/index.js
  var require_base64_js = __commonJS({
    "node_modules/base64-js/index.js"(exports) {
      "use strict";
      exports.byteLength = byteLength;
      exports.toByteArray = toByteArray;
      exports.fromByteArray = fromByteArray;
      var lookup8 = [];
      var revLookup = [];
      var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
      var code3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      for (i4 = 0, len = code3.length; i4 < len; ++i4) {
        lookup8[i4] = code3[i4];
        revLookup[code3.charCodeAt(i4)] = i4;
      }
      var i4;
      var len;
      revLookup["-".charCodeAt(0)] = 62;
      revLookup["_".charCodeAt(0)] = 63;
      function getLens(b64) {
        var len2 = b64.length;
        if (len2 % 4 > 0) {
          throw new Error("Invalid string. Length must be a multiple of 4");
        }
        var validLen = b64.indexOf("=");
        if (validLen === -1) validLen = len2;
        var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;
        return [validLen, placeHoldersLen];
      }
      function byteLength(b64) {
        var lens = getLens(b64);
        var validLen = lens[0];
        var placeHoldersLen = lens[1];
        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
      }
      function _byteLength(b64, validLen, placeHoldersLen) {
        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
      }
      function toByteArray(b64) {
        var tmp;
        var lens = getLens(b64);
        var validLen = lens[0];
        var placeHoldersLen = lens[1];
        var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
        var curByte = 0;
        var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;
        var i5;
        for (i5 = 0; i5 < len2; i5 += 4) {
          tmp = revLookup[b64.charCodeAt(i5)] << 18 | revLookup[b64.charCodeAt(i5 + 1)] << 12 | revLookup[b64.charCodeAt(i5 + 2)] << 6 | revLookup[b64.charCodeAt(i5 + 3)];
          arr[curByte++] = tmp >> 16 & 255;
          arr[curByte++] = tmp >> 8 & 255;
          arr[curByte++] = tmp & 255;
        }
        if (placeHoldersLen === 2) {
          tmp = revLookup[b64.charCodeAt(i5)] << 2 | revLookup[b64.charCodeAt(i5 + 1)] >> 4;
          arr[curByte++] = tmp & 255;
        }
        if (placeHoldersLen === 1) {
          tmp = revLookup[b64.charCodeAt(i5)] << 10 | revLookup[b64.charCodeAt(i5 + 1)] << 4 | revLookup[b64.charCodeAt(i5 + 2)] >> 2;
          arr[curByte++] = tmp >> 8 & 255;
          arr[curByte++] = tmp & 255;
        }
        return arr;
      }
      function tripletToBase64(num) {
        return lookup8[num >> 18 & 63] + lookup8[num >> 12 & 63] + lookup8[num >> 6 & 63] + lookup8[num & 63];
      }
      function encodeChunk(uint8, start2, end) {
        var tmp;
        var output2 = [];
        for (var i5 = start2; i5 < end; i5 += 3) {
          tmp = (uint8[i5] << 16 & 16711680) + (uint8[i5 + 1] << 8 & 65280) + (uint8[i5 + 2] & 255);
          output2.push(tripletToBase64(tmp));
        }
        return output2.join("");
      }
      function fromByteArray(uint8) {
        var tmp;
        var len2 = uint8.length;
        var extraBytes = len2 % 3;
        var parts = [];
        var maxChunkLength = 16383;
        for (var i5 = 0, len22 = len2 - extraBytes; i5 < len22; i5 += maxChunkLength) {
          parts.push(encodeChunk(uint8, i5, i5 + maxChunkLength > len22 ? len22 : i5 + maxChunkLength));
        }
        if (extraBytes === 1) {
          tmp = uint8[len2 - 1];
          parts.push(
            lookup8[tmp >> 2] + lookup8[tmp << 4 & 63] + "=="
          );
        } else if (extraBytes === 2) {
          tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];
          parts.push(
            lookup8[tmp >> 10] + lookup8[tmp >> 4 & 63] + lookup8[tmp << 2 & 63] + "="
          );
        }
        return parts.join("");
      }
    }
  });

  // node_modules/ieee754/index.js
  var require_ieee754 = __commonJS({
    "node_modules/ieee754/index.js"(exports) {
      exports.read = function(buffer, offset, isLE, mLen, nBytes) {
        var e3, m3;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var nBits = -7;
        var i4 = isLE ? nBytes - 1 : 0;
        var d3 = isLE ? -1 : 1;
        var s3 = buffer[offset + i4];
        i4 += d3;
        e3 = s3 & (1 << -nBits) - 1;
        s3 >>= -nBits;
        nBits += eLen;
        for (; nBits > 0; e3 = e3 * 256 + buffer[offset + i4], i4 += d3, nBits -= 8) {
        }
        m3 = e3 & (1 << -nBits) - 1;
        e3 >>= -nBits;
        nBits += mLen;
        for (; nBits > 0; m3 = m3 * 256 + buffer[offset + i4], i4 += d3, nBits -= 8) {
        }
        if (e3 === 0) {
          e3 = 1 - eBias;
        } else if (e3 === eMax) {
          return m3 ? NaN : (s3 ? -1 : 1) * Infinity;
        } else {
          m3 = m3 + Math.pow(2, mLen);
          e3 = e3 - eBias;
        }
        return (s3 ? -1 : 1) * m3 * Math.pow(2, e3 - mLen);
      };
      exports.write = function(buffer, value14, offset, isLE, mLen, nBytes) {
        var e3, m3, c3;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var rt2 = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
        var i4 = isLE ? 0 : nBytes - 1;
        var d3 = isLE ? 1 : -1;
        var s3 = value14 < 0 || value14 === 0 && 1 / value14 < 0 ? 1 : 0;
        value14 = Math.abs(value14);
        if (isNaN(value14) || value14 === Infinity) {
          m3 = isNaN(value14) ? 1 : 0;
          e3 = eMax;
        } else {
          e3 = Math.floor(Math.log(value14) / Math.LN2);
          if (value14 * (c3 = Math.pow(2, -e3)) < 1) {
            e3--;
            c3 *= 2;
          }
          if (e3 + eBias >= 1) {
            value14 += rt2 / c3;
          } else {
            value14 += rt2 * Math.pow(2, 1 - eBias);
          }
          if (value14 * c3 >= 2) {
            e3++;
            c3 /= 2;
          }
          if (e3 + eBias >= eMax) {
            m3 = 0;
            e3 = eMax;
          } else if (e3 + eBias >= 1) {
            m3 = (value14 * c3 - 1) * Math.pow(2, mLen);
            e3 = e3 + eBias;
          } else {
            m3 = value14 * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e3 = 0;
          }
        }
        for (; mLen >= 8; buffer[offset + i4] = m3 & 255, i4 += d3, m3 /= 256, mLen -= 8) {
        }
        e3 = e3 << mLen | m3;
        eLen += mLen;
        for (; eLen > 0; buffer[offset + i4] = e3 & 255, i4 += d3, e3 /= 256, eLen -= 8) {
        }
        buffer[offset + i4 - d3] |= s3 * 128;
      };
    }
  });

  // node_modules/buffer/index.js
  var require_buffer = __commonJS({
    "node_modules/buffer/index.js"(exports) {
      "use strict";
      var base64 = require_base64_js();
      var ieee754 = require_ieee754();
      var customInspectSymbol = typeof Symbol === "function" && typeof Symbol["for"] === "function" ? Symbol["for"]("nodejs.util.inspect.custom") : null;
      exports.Buffer = Buffer2;
      exports.SlowBuffer = SlowBuffer;
      exports.INSPECT_MAX_BYTES = 50;
      var K_MAX_LENGTH = 2147483647;
      exports.kMaxLength = K_MAX_LENGTH;
      Buffer2.TYPED_ARRAY_SUPPORT = typedArraySupport();
      if (!Buffer2.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") {
        console.error(
          "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
        );
      }
      function typedArraySupport() {
        try {
          const arr = new Uint8Array(1);
          const proto = { foo: function() {
            return 42;
          } };
          Object.setPrototypeOf(proto, Uint8Array.prototype);
          Object.setPrototypeOf(arr, proto);
          return arr.foo() === 42;
        } catch (e3) {
          return false;
        }
      }
      Object.defineProperty(Buffer2.prototype, "parent", {
        enumerable: true,
        get: function() {
          if (!Buffer2.isBuffer(this)) return void 0;
          return this.buffer;
        }
      });
      Object.defineProperty(Buffer2.prototype, "offset", {
        enumerable: true,
        get: function() {
          if (!Buffer2.isBuffer(this)) return void 0;
          return this.byteOffset;
        }
      });
      function createBuffer(length8) {
        if (length8 > K_MAX_LENGTH) {
          throw new RangeError('The value "' + length8 + '" is invalid for option "size"');
        }
        const buf = new Uint8Array(length8);
        Object.setPrototypeOf(buf, Buffer2.prototype);
        return buf;
      }
      function Buffer2(arg, encodingOrOffset, length8) {
        if (typeof arg === "number") {
          if (typeof encodingOrOffset === "string") {
            throw new TypeError(
              'The "string" argument must be of type string. Received type number'
            );
          }
          return allocUnsafe(arg);
        }
        return from3(arg, encodingOrOffset, length8);
      }
      Buffer2.poolSize = 8192;
      function from3(value14, encodingOrOffset, length8) {
        if (typeof value14 === "string") {
          return fromString2(value14, encodingOrOffset);
        }
        if (ArrayBuffer.isView(value14)) {
          return fromArrayView(value14);
        }
        if (value14 == null) {
          throw new TypeError(
            "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value14
          );
        }
        if (isInstance(value14, ArrayBuffer) || value14 && isInstance(value14.buffer, ArrayBuffer)) {
          return fromArrayBuffer(value14, encodingOrOffset, length8);
        }
        if (typeof SharedArrayBuffer !== "undefined" && (isInstance(value14, SharedArrayBuffer) || value14 && isInstance(value14.buffer, SharedArrayBuffer))) {
          return fromArrayBuffer(value14, encodingOrOffset, length8);
        }
        if (typeof value14 === "number") {
          throw new TypeError(
            'The "value" argument must not be of type number. Received type number'
          );
        }
        const valueOf = value14.valueOf && value14.valueOf();
        if (valueOf != null && valueOf !== value14) {
          return Buffer2.from(valueOf, encodingOrOffset, length8);
        }
        const b4 = fromObject(value14);
        if (b4) return b4;
        if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof value14[Symbol.toPrimitive] === "function") {
          return Buffer2.from(value14[Symbol.toPrimitive]("string"), encodingOrOffset, length8);
        }
        throw new TypeError(
          "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value14
        );
      }
      Buffer2.from = function(value14, encodingOrOffset, length8) {
        return from3(value14, encodingOrOffset, length8);
      };
      Object.setPrototypeOf(Buffer2.prototype, Uint8Array.prototype);
      Object.setPrototypeOf(Buffer2, Uint8Array);
      function assertSize(size5) {
        if (typeof size5 !== "number") {
          throw new TypeError('"size" argument must be of type number');
        } else if (size5 < 0) {
          throw new RangeError('The value "' + size5 + '" is invalid for option "size"');
        }
      }
      function alloc(size5, fill, encoding2) {
        assertSize(size5);
        if (size5 <= 0) {
          return createBuffer(size5);
        }
        if (fill !== void 0) {
          return typeof encoding2 === "string" ? createBuffer(size5).fill(fill, encoding2) : createBuffer(size5).fill(fill);
        }
        return createBuffer(size5);
      }
      Buffer2.alloc = function(size5, fill, encoding2) {
        return alloc(size5, fill, encoding2);
      };
      function allocUnsafe(size5) {
        assertSize(size5);
        return createBuffer(size5 < 0 ? 0 : checked2(size5) | 0);
      }
      Buffer2.allocUnsafe = function(size5) {
        return allocUnsafe(size5);
      };
      Buffer2.allocUnsafeSlow = function(size5) {
        return allocUnsafe(size5);
      };
      function fromString2(string, encoding2) {
        if (typeof encoding2 !== "string" || encoding2 === "") {
          encoding2 = "utf8";
        }
        if (!Buffer2.isEncoding(encoding2)) {
          throw new TypeError("Unknown encoding: " + encoding2);
        }
        const length8 = byteLength(string, encoding2) | 0;
        let buf = createBuffer(length8);
        const actual = buf.write(string, encoding2);
        if (actual !== length8) {
          buf = buf.slice(0, actual);
        }
        return buf;
      }
      function fromArrayLike(array) {
        const length8 = array.length < 0 ? 0 : checked2(array.length) | 0;
        const buf = createBuffer(length8);
        for (let i4 = 0; i4 < length8; i4 += 1) {
          buf[i4] = array[i4] & 255;
        }
        return buf;
      }
      function fromArrayView(arrayView) {
        if (isInstance(arrayView, Uint8Array)) {
          const copy2 = new Uint8Array(arrayView);
          return fromArrayBuffer(copy2.buffer, copy2.byteOffset, copy2.byteLength);
        }
        return fromArrayLike(arrayView);
      }
      function fromArrayBuffer(array, byteOffset, length8) {
        if (byteOffset < 0 || array.byteLength < byteOffset) {
          throw new RangeError('"offset" is outside of buffer bounds');
        }
        if (array.byteLength < byteOffset + (length8 || 0)) {
          throw new RangeError('"length" is outside of buffer bounds');
        }
        let buf;
        if (byteOffset === void 0 && length8 === void 0) {
          buf = new Uint8Array(array);
        } else if (length8 === void 0) {
          buf = new Uint8Array(array, byteOffset);
        } else {
          buf = new Uint8Array(array, byteOffset, length8);
        }
        Object.setPrototypeOf(buf, Buffer2.prototype);
        return buf;
      }
      function fromObject(obj) {
        if (Buffer2.isBuffer(obj)) {
          const len = checked2(obj.length) | 0;
          const buf = createBuffer(len);
          if (buf.length === 0) {
            return buf;
          }
          obj.copy(buf, 0, 0, len);
          return buf;
        }
        if (obj.length !== void 0) {
          if (typeof obj.length !== "number" || numberIsNaN(obj.length)) {
            return createBuffer(0);
          }
          return fromArrayLike(obj);
        }
        if (obj.type === "Buffer" && Array.isArray(obj.data)) {
          return fromArrayLike(obj.data);
        }
      }
      function checked2(length8) {
        if (length8 >= K_MAX_LENGTH) {
          throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
        }
        return length8 | 0;
      }
      function SlowBuffer(length8) {
        if (+length8 != length8) {
          length8 = 0;
        }
        return Buffer2.alloc(+length8);
      }
      Buffer2.isBuffer = function isBuffer(b4) {
        return b4 != null && b4._isBuffer === true && b4 !== Buffer2.prototype;
      };
      Buffer2.compare = function compare2(a4, b4) {
        if (isInstance(a4, Uint8Array)) a4 = Buffer2.from(a4, a4.offset, a4.byteLength);
        if (isInstance(b4, Uint8Array)) b4 = Buffer2.from(b4, b4.offset, b4.byteLength);
        if (!Buffer2.isBuffer(a4) || !Buffer2.isBuffer(b4)) {
          throw new TypeError(
            'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
          );
        }
        if (a4 === b4) return 0;
        let x2 = a4.length;
        let y2 = b4.length;
        for (let i4 = 0, len = Math.min(x2, y2); i4 < len; ++i4) {
          if (a4[i4] !== b4[i4]) {
            x2 = a4[i4];
            y2 = b4[i4];
            break;
          }
        }
        if (x2 < y2) return -1;
        if (y2 < x2) return 1;
        return 0;
      };
      Buffer2.isEncoding = function isEncoding(encoding2) {
        switch (String(encoding2).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return true;
          default:
            return false;
        }
      };
      Buffer2.concat = function concat2(list, length8) {
        if (!Array.isArray(list)) {
          throw new TypeError('"list" argument must be an Array of Buffers');
        }
        if (list.length === 0) {
          return Buffer2.alloc(0);
        }
        let i4;
        if (length8 === void 0) {
          length8 = 0;
          for (i4 = 0; i4 < list.length; ++i4) {
            length8 += list[i4].length;
          }
        }
        const buffer = Buffer2.allocUnsafe(length8);
        let pos = 0;
        for (i4 = 0; i4 < list.length; ++i4) {
          let buf = list[i4];
          if (isInstance(buf, Uint8Array)) {
            if (pos + buf.length > buffer.length) {
              if (!Buffer2.isBuffer(buf)) buf = Buffer2.from(buf);
              buf.copy(buffer, pos);
            } else {
              Uint8Array.prototype.set.call(
                buffer,
                buf,
                pos
              );
            }
          } else if (!Buffer2.isBuffer(buf)) {
            throw new TypeError('"list" argument must be an Array of Buffers');
          } else {
            buf.copy(buffer, pos);
          }
          pos += buf.length;
        }
        return buffer;
      };
      function byteLength(string, encoding2) {
        if (Buffer2.isBuffer(string)) {
          return string.length;
        }
        if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
          return string.byteLength;
        }
        if (typeof string !== "string") {
          throw new TypeError(
            'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string
          );
        }
        const len = string.length;
        const mustMatch = arguments.length > 2 && arguments[2] === true;
        if (!mustMatch && len === 0) return 0;
        let loweredCase = false;
        for (; ; ) {
          switch (encoding2) {
            case "ascii":
            case "latin1":
            case "binary":
              return len;
            case "utf8":
            case "utf-8":
              return utf8ToBytes(string).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return len * 2;
            case "hex":
              return len >>> 1;
            case "base64":
              return base64ToBytes(string).length;
            default:
              if (loweredCase) {
                return mustMatch ? -1 : utf8ToBytes(string).length;
              }
              encoding2 = ("" + encoding2).toLowerCase();
              loweredCase = true;
          }
        }
      }
      Buffer2.byteLength = byteLength;
      function slowToString(encoding2, start2, end) {
        let loweredCase = false;
        if (start2 === void 0 || start2 < 0) {
          start2 = 0;
        }
        if (start2 > this.length) {
          return "";
        }
        if (end === void 0 || end > this.length) {
          end = this.length;
        }
        if (end <= 0) {
          return "";
        }
        end >>>= 0;
        start2 >>>= 0;
        if (end <= start2) {
          return "";
        }
        if (!encoding2) encoding2 = "utf8";
        while (true) {
          switch (encoding2) {
            case "hex":
              return hexSlice(this, start2, end);
            case "utf8":
            case "utf-8":
              return utf8Slice(this, start2, end);
            case "ascii":
              return asciiSlice(this, start2, end);
            case "latin1":
            case "binary":
              return latin1Slice(this, start2, end);
            case "base64":
              return base64Slice(this, start2, end);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return utf16leSlice(this, start2, end);
            default:
              if (loweredCase) throw new TypeError("Unknown encoding: " + encoding2);
              encoding2 = (encoding2 + "").toLowerCase();
              loweredCase = true;
          }
        }
      }
      Buffer2.prototype._isBuffer = true;
      function swap(b4, n3, m3) {
        const i4 = b4[n3];
        b4[n3] = b4[m3];
        b4[m3] = i4;
      }
      Buffer2.prototype.swap16 = function swap16() {
        const len = this.length;
        if (len % 2 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 16-bits");
        }
        for (let i4 = 0; i4 < len; i4 += 2) {
          swap(this, i4, i4 + 1);
        }
        return this;
      };
      Buffer2.prototype.swap32 = function swap32() {
        const len = this.length;
        if (len % 4 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 32-bits");
        }
        for (let i4 = 0; i4 < len; i4 += 4) {
          swap(this, i4, i4 + 3);
          swap(this, i4 + 1, i4 + 2);
        }
        return this;
      };
      Buffer2.prototype.swap64 = function swap64() {
        const len = this.length;
        if (len % 8 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 64-bits");
        }
        for (let i4 = 0; i4 < len; i4 += 8) {
          swap(this, i4, i4 + 7);
          swap(this, i4 + 1, i4 + 6);
          swap(this, i4 + 2, i4 + 5);
          swap(this, i4 + 3, i4 + 4);
        }
        return this;
      };
      Buffer2.prototype.toString = function toString3() {
        const length8 = this.length;
        if (length8 === 0) return "";
        if (arguments.length === 0) return utf8Slice(this, 0, length8);
        return slowToString.apply(this, arguments);
      };
      Buffer2.prototype.toLocaleString = Buffer2.prototype.toString;
      Buffer2.prototype.equals = function equals(b4) {
        if (!Buffer2.isBuffer(b4)) throw new TypeError("Argument must be a Buffer");
        if (this === b4) return true;
        return Buffer2.compare(this, b4) === 0;
      };
      Buffer2.prototype.inspect = function inspect() {
        let str = "";
        const max6 = exports.INSPECT_MAX_BYTES;
        str = this.toString("hex", 0, max6).replace(/(.{2})/g, "$1 ").trim();
        if (this.length > max6) str += " ... ";
        return "<Buffer " + str + ">";
      };
      if (customInspectSymbol) {
        Buffer2.prototype[customInspectSymbol] = Buffer2.prototype.inspect;
      }
      Buffer2.prototype.compare = function compare2(target6, start2, end, thisStart, thisEnd) {
        if (isInstance(target6, Uint8Array)) {
          target6 = Buffer2.from(target6, target6.offset, target6.byteLength);
        }
        if (!Buffer2.isBuffer(target6)) {
          throw new TypeError(
            'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target6
          );
        }
        if (start2 === void 0) {
          start2 = 0;
        }
        if (end === void 0) {
          end = target6 ? target6.length : 0;
        }
        if (thisStart === void 0) {
          thisStart = 0;
        }
        if (thisEnd === void 0) {
          thisEnd = this.length;
        }
        if (start2 < 0 || end > target6.length || thisStart < 0 || thisEnd > this.length) {
          throw new RangeError("out of range index");
        }
        if (thisStart >= thisEnd && start2 >= end) {
          return 0;
        }
        if (thisStart >= thisEnd) {
          return -1;
        }
        if (start2 >= end) {
          return 1;
        }
        start2 >>>= 0;
        end >>>= 0;
        thisStart >>>= 0;
        thisEnd >>>= 0;
        if (this === target6) return 0;
        let x2 = thisEnd - thisStart;
        let y2 = end - start2;
        const len = Math.min(x2, y2);
        const thisCopy = this.slice(thisStart, thisEnd);
        const targetCopy = target6.slice(start2, end);
        for (let i4 = 0; i4 < len; ++i4) {
          if (thisCopy[i4] !== targetCopy[i4]) {
            x2 = thisCopy[i4];
            y2 = targetCopy[i4];
            break;
          }
        }
        if (x2 < y2) return -1;
        if (y2 < x2) return 1;
        return 0;
      };
      function bidirectionalIndexOf(buffer, val2, byteOffset, encoding2, dir2) {
        if (buffer.length === 0) return -1;
        if (typeof byteOffset === "string") {
          encoding2 = byteOffset;
          byteOffset = 0;
        } else if (byteOffset > 2147483647) {
          byteOffset = 2147483647;
        } else if (byteOffset < -2147483648) {
          byteOffset = -2147483648;
        }
        byteOffset = +byteOffset;
        if (numberIsNaN(byteOffset)) {
          byteOffset = dir2 ? 0 : buffer.length - 1;
        }
        if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
        if (byteOffset >= buffer.length) {
          if (dir2) return -1;
          else byteOffset = buffer.length - 1;
        } else if (byteOffset < 0) {
          if (dir2) byteOffset = 0;
          else return -1;
        }
        if (typeof val2 === "string") {
          val2 = Buffer2.from(val2, encoding2);
        }
        if (Buffer2.isBuffer(val2)) {
          if (val2.length === 0) {
            return -1;
          }
          return arrayIndexOf(buffer, val2, byteOffset, encoding2, dir2);
        } else if (typeof val2 === "number") {
          val2 = val2 & 255;
          if (typeof Uint8Array.prototype.indexOf === "function") {
            if (dir2) {
              return Uint8Array.prototype.indexOf.call(buffer, val2, byteOffset);
            } else {
              return Uint8Array.prototype.lastIndexOf.call(buffer, val2, byteOffset);
            }
          }
          return arrayIndexOf(buffer, [val2], byteOffset, encoding2, dir2);
        }
        throw new TypeError("val must be string, number or Buffer");
      }
      function arrayIndexOf(arr, val2, byteOffset, encoding2, dir2) {
        let indexSize = 1;
        let arrLength = arr.length;
        let valLength = val2.length;
        if (encoding2 !== void 0) {
          encoding2 = String(encoding2).toLowerCase();
          if (encoding2 === "ucs2" || encoding2 === "ucs-2" || encoding2 === "utf16le" || encoding2 === "utf-16le") {
            if (arr.length < 2 || val2.length < 2) {
              return -1;
            }
            indexSize = 2;
            arrLength /= 2;
            valLength /= 2;
            byteOffset /= 2;
          }
        }
        function read3(buf, i5) {
          if (indexSize === 1) {
            return buf[i5];
          } else {
            return buf.readUInt16BE(i5 * indexSize);
          }
        }
        let i4;
        if (dir2) {
          let foundIndex = -1;
          for (i4 = byteOffset; i4 < arrLength; i4++) {
            if (read3(arr, i4) === read3(val2, foundIndex === -1 ? 0 : i4 - foundIndex)) {
              if (foundIndex === -1) foundIndex = i4;
              if (i4 - foundIndex + 1 === valLength) return foundIndex * indexSize;
            } else {
              if (foundIndex !== -1) i4 -= i4 - foundIndex;
              foundIndex = -1;
            }
          }
        } else {
          if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
          for (i4 = byteOffset; i4 >= 0; i4--) {
            let found = true;
            for (let j3 = 0; j3 < valLength; j3++) {
              if (read3(arr, i4 + j3) !== read3(val2, j3)) {
                found = false;
                break;
              }
            }
            if (found) return i4;
          }
        }
        return -1;
      }
      Buffer2.prototype.includes = function includes(val2, byteOffset, encoding2) {
        return this.indexOf(val2, byteOffset, encoding2) !== -1;
      };
      Buffer2.prototype.indexOf = function indexOf2(val2, byteOffset, encoding2) {
        return bidirectionalIndexOf(this, val2, byteOffset, encoding2, true);
      };
      Buffer2.prototype.lastIndexOf = function lastIndexOf2(val2, byteOffset, encoding2) {
        return bidirectionalIndexOf(this, val2, byteOffset, encoding2, false);
      };
      function hexWrite(buf, string, offset, length8) {
        offset = Number(offset) || 0;
        const remaining = buf.length - offset;
        if (!length8) {
          length8 = remaining;
        } else {
          length8 = Number(length8);
          if (length8 > remaining) {
            length8 = remaining;
          }
        }
        const strLen = string.length;
        if (length8 > strLen / 2) {
          length8 = strLen / 2;
        }
        let i4;
        for (i4 = 0; i4 < length8; ++i4) {
          const parsed = parseInt(string.substr(i4 * 2, 2), 16);
          if (numberIsNaN(parsed)) return i4;
          buf[offset + i4] = parsed;
        }
        return i4;
      }
      function utf8Write(buf, string, offset, length8) {
        return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length8);
      }
      function asciiWrite(buf, string, offset, length8) {
        return blitBuffer(asciiToBytes(string), buf, offset, length8);
      }
      function base64Write(buf, string, offset, length8) {
        return blitBuffer(base64ToBytes(string), buf, offset, length8);
      }
      function ucs2Write(buf, string, offset, length8) {
        return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length8);
      }
      Buffer2.prototype.write = function write3(string, offset, length8, encoding2) {
        if (offset === void 0) {
          encoding2 = "utf8";
          length8 = this.length;
          offset = 0;
        } else if (length8 === void 0 && typeof offset === "string") {
          encoding2 = offset;
          length8 = this.length;
          offset = 0;
        } else if (isFinite(offset)) {
          offset = offset >>> 0;
          if (isFinite(length8)) {
            length8 = length8 >>> 0;
            if (encoding2 === void 0) encoding2 = "utf8";
          } else {
            encoding2 = length8;
            length8 = void 0;
          }
        } else {
          throw new Error(
            "Buffer.write(string, encoding, offset[, length]) is no longer supported"
          );
        }
        const remaining = this.length - offset;
        if (length8 === void 0 || length8 > remaining) length8 = remaining;
        if (string.length > 0 && (length8 < 0 || offset < 0) || offset > this.length) {
          throw new RangeError("Attempt to write outside buffer bounds");
        }
        if (!encoding2) encoding2 = "utf8";
        let loweredCase = false;
        for (; ; ) {
          switch (encoding2) {
            case "hex":
              return hexWrite(this, string, offset, length8);
            case "utf8":
            case "utf-8":
              return utf8Write(this, string, offset, length8);
            case "ascii":
            case "latin1":
            case "binary":
              return asciiWrite(this, string, offset, length8);
            case "base64":
              return base64Write(this, string, offset, length8);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return ucs2Write(this, string, offset, length8);
            default:
              if (loweredCase) throw new TypeError("Unknown encoding: " + encoding2);
              encoding2 = ("" + encoding2).toLowerCase();
              loweredCase = true;
          }
        }
      };
      Buffer2.prototype.toJSON = function toJSON() {
        return {
          type: "Buffer",
          data: Array.prototype.slice.call(this._arr || this, 0)
        };
      };
      function base64Slice(buf, start2, end) {
        if (start2 === 0 && end === buf.length) {
          return base64.fromByteArray(buf);
        } else {
          return base64.fromByteArray(buf.slice(start2, end));
        }
      }
      function utf8Slice(buf, start2, end) {
        end = Math.min(buf.length, end);
        const res = [];
        let i4 = start2;
        while (i4 < end) {
          const firstByte = buf[i4];
          let codePoint = null;
          let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
          if (i4 + bytesPerSequence <= end) {
            let secondByte, thirdByte, fourthByte, tempCodePoint;
            switch (bytesPerSequence) {
              case 1:
                if (firstByte < 128) {
                  codePoint = firstByte;
                }
                break;
              case 2:
                secondByte = buf[i4 + 1];
                if ((secondByte & 192) === 128) {
                  tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                  if (tempCodePoint > 127) {
                    codePoint = tempCodePoint;
                  }
                }
                break;
              case 3:
                secondByte = buf[i4 + 1];
                thirdByte = buf[i4 + 2];
                if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                  tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                  if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                    codePoint = tempCodePoint;
                  }
                }
                break;
              case 4:
                secondByte = buf[i4 + 1];
                thirdByte = buf[i4 + 2];
                fourthByte = buf[i4 + 3];
                if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                  tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                  if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                    codePoint = tempCodePoint;
                  }
                }
            }
          }
          if (codePoint === null) {
            codePoint = 65533;
            bytesPerSequence = 1;
          } else if (codePoint > 65535) {
            codePoint -= 65536;
            res.push(codePoint >>> 10 & 1023 | 55296);
            codePoint = 56320 | codePoint & 1023;
          }
          res.push(codePoint);
          i4 += bytesPerSequence;
        }
        return decodeCodePointsArray(res);
      }
      var MAX_ARGUMENTS_LENGTH = 4096;
      function decodeCodePointsArray(codePoints) {
        const len = codePoints.length;
        if (len <= MAX_ARGUMENTS_LENGTH) {
          return String.fromCharCode.apply(String, codePoints);
        }
        let res = "";
        let i4 = 0;
        while (i4 < len) {
          res += String.fromCharCode.apply(
            String,
            codePoints.slice(i4, i4 += MAX_ARGUMENTS_LENGTH)
          );
        }
        return res;
      }
      function asciiSlice(buf, start2, end) {
        let ret = "";
        end = Math.min(buf.length, end);
        for (let i4 = start2; i4 < end; ++i4) {
          ret += String.fromCharCode(buf[i4] & 127);
        }
        return ret;
      }
      function latin1Slice(buf, start2, end) {
        let ret = "";
        end = Math.min(buf.length, end);
        for (let i4 = start2; i4 < end; ++i4) {
          ret += String.fromCharCode(buf[i4]);
        }
        return ret;
      }
      function hexSlice(buf, start2, end) {
        const len = buf.length;
        if (!start2 || start2 < 0) start2 = 0;
        if (!end || end < 0 || end > len) end = len;
        let out = "";
        for (let i4 = start2; i4 < end; ++i4) {
          out += hexSliceLookupTable[buf[i4]];
        }
        return out;
      }
      function utf16leSlice(buf, start2, end) {
        const bytes = buf.slice(start2, end);
        let res = "";
        for (let i4 = 0; i4 < bytes.length - 1; i4 += 2) {
          res += String.fromCharCode(bytes[i4] + bytes[i4 + 1] * 256);
        }
        return res;
      }
      Buffer2.prototype.slice = function slice3(start2, end) {
        const len = this.length;
        start2 = ~~start2;
        end = end === void 0 ? len : ~~end;
        if (start2 < 0) {
          start2 += len;
          if (start2 < 0) start2 = 0;
        } else if (start2 > len) {
          start2 = len;
        }
        if (end < 0) {
          end += len;
          if (end < 0) end = 0;
        } else if (end > len) {
          end = len;
        }
        if (end < start2) end = start2;
        const newBuf = this.subarray(start2, end);
        Object.setPrototypeOf(newBuf, Buffer2.prototype);
        return newBuf;
      };
      function checkOffset(offset, ext, length8) {
        if (offset % 1 !== 0 || offset < 0) throw new RangeError("offset is not uint");
        if (offset + ext > length8) throw new RangeError("Trying to access beyond buffer length");
      }
      Buffer2.prototype.readUintLE = Buffer2.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert) checkOffset(offset, byteLength2, this.length);
        let val2 = this[offset];
        let mul2 = 1;
        let i4 = 0;
        while (++i4 < byteLength2 && (mul2 *= 256)) {
          val2 += this[offset + i4] * mul2;
        }
        return val2;
      };
      Buffer2.prototype.readUintBE = Buffer2.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert) {
          checkOffset(offset, byteLength2, this.length);
        }
        let val2 = this[offset + --byteLength2];
        let mul2 = 1;
        while (byteLength2 > 0 && (mul2 *= 256)) {
          val2 += this[offset + --byteLength2] * mul2;
        }
        return val2;
      };
      Buffer2.prototype.readUint8 = Buffer2.prototype.readUInt8 = function readUInt8(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 1, this.length);
        return this[offset];
      };
      Buffer2.prototype.readUint16LE = Buffer2.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 2, this.length);
        return this[offset] | this[offset + 1] << 8;
      };
      Buffer2.prototype.readUint16BE = Buffer2.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 2, this.length);
        return this[offset] << 8 | this[offset + 1];
      };
      Buffer2.prototype.readUint32LE = Buffer2.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
      };
      Buffer2.prototype.readUint32BE = Buffer2.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
      };
      Buffer2.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last3 = this[offset + 7];
        if (first === void 0 || last3 === void 0) {
          boundsError(offset, this.length - 8);
        }
        const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;
        const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last3 * 2 ** 24;
        return BigInt(lo) + (BigInt(hi) << BigInt(32));
      });
      Buffer2.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last3 = this[offset + 7];
        if (first === void 0 || last3 === void 0) {
          boundsError(offset, this.length - 8);
        }
        const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
        const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last3;
        return (BigInt(hi) << BigInt(32)) + BigInt(lo);
      });
      Buffer2.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert) checkOffset(offset, byteLength2, this.length);
        let val2 = this[offset];
        let mul2 = 1;
        let i4 = 0;
        while (++i4 < byteLength2 && (mul2 *= 256)) {
          val2 += this[offset + i4] * mul2;
        }
        mul2 *= 128;
        if (val2 >= mul2) val2 -= Math.pow(2, 8 * byteLength2);
        return val2;
      };
      Buffer2.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert) checkOffset(offset, byteLength2, this.length);
        let i4 = byteLength2;
        let mul2 = 1;
        let val2 = this[offset + --i4];
        while (i4 > 0 && (mul2 *= 256)) {
          val2 += this[offset + --i4] * mul2;
        }
        mul2 *= 128;
        if (val2 >= mul2) val2 -= Math.pow(2, 8 * byteLength2);
        return val2;
      };
      Buffer2.prototype.readInt8 = function readInt8(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 1, this.length);
        if (!(this[offset] & 128)) return this[offset];
        return (255 - this[offset] + 1) * -1;
      };
      Buffer2.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 2, this.length);
        const val2 = this[offset] | this[offset + 1] << 8;
        return val2 & 32768 ? val2 | 4294901760 : val2;
      };
      Buffer2.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 2, this.length);
        const val2 = this[offset + 1] | this[offset] << 8;
        return val2 & 32768 ? val2 | 4294901760 : val2;
      };
      Buffer2.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
      };
      Buffer2.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
      };
      Buffer2.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last3 = this[offset + 7];
        if (first === void 0 || last3 === void 0) {
          boundsError(offset, this.length - 8);
        }
        const val2 = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last3 << 24);
        return (BigInt(val2) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);
      });
      Buffer2.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last3 = this[offset + 7];
        if (first === void 0 || last3 === void 0) {
          boundsError(offset, this.length - 8);
        }
        const val2 = (first << 24) + // Overflow
        this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
        return (BigInt(val2) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last3);
      });
      Buffer2.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, true, 23, 4);
      };
      Buffer2.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, false, 23, 4);
      };
      Buffer2.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, true, 52, 8);
      };
      Buffer2.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, false, 52, 8);
      };
      function checkInt(buf, value14, offset, ext, max6, min5) {
        if (!Buffer2.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
        if (value14 > max6 || value14 < min5) throw new RangeError('"value" argument is out of bounds');
        if (offset + ext > buf.length) throw new RangeError("Index out of range");
      }
      Buffer2.prototype.writeUintLE = Buffer2.prototype.writeUIntLE = function writeUIntLE(value14, offset, byteLength2, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert) {
          const maxBytes = Math.pow(2, 8 * byteLength2) - 1;
          checkInt(this, value14, offset, byteLength2, maxBytes, 0);
        }
        let mul2 = 1;
        let i4 = 0;
        this[offset] = value14 & 255;
        while (++i4 < byteLength2 && (mul2 *= 256)) {
          this[offset + i4] = value14 / mul2 & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeUintBE = Buffer2.prototype.writeUIntBE = function writeUIntBE(value14, offset, byteLength2, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert) {
          const maxBytes = Math.pow(2, 8 * byteLength2) - 1;
          checkInt(this, value14, offset, byteLength2, maxBytes, 0);
        }
        let i4 = byteLength2 - 1;
        let mul2 = 1;
        this[offset + i4] = value14 & 255;
        while (--i4 >= 0 && (mul2 *= 256)) {
          this[offset + i4] = value14 / mul2 & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeUint8 = Buffer2.prototype.writeUInt8 = function writeUInt8(value14, offset, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value14, offset, 1, 255, 0);
        this[offset] = value14 & 255;
        return offset + 1;
      };
      Buffer2.prototype.writeUint16LE = Buffer2.prototype.writeUInt16LE = function writeUInt16LE(value14, offset, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value14, offset, 2, 65535, 0);
        this[offset] = value14 & 255;
        this[offset + 1] = value14 >>> 8;
        return offset + 2;
      };
      Buffer2.prototype.writeUint16BE = Buffer2.prototype.writeUInt16BE = function writeUInt16BE(value14, offset, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value14, offset, 2, 65535, 0);
        this[offset] = value14 >>> 8;
        this[offset + 1] = value14 & 255;
        return offset + 2;
      };
      Buffer2.prototype.writeUint32LE = Buffer2.prototype.writeUInt32LE = function writeUInt32LE(value14, offset, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value14, offset, 4, 4294967295, 0);
        this[offset + 3] = value14 >>> 24;
        this[offset + 2] = value14 >>> 16;
        this[offset + 1] = value14 >>> 8;
        this[offset] = value14 & 255;
        return offset + 4;
      };
      Buffer2.prototype.writeUint32BE = Buffer2.prototype.writeUInt32BE = function writeUInt32BE(value14, offset, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value14, offset, 4, 4294967295, 0);
        this[offset] = value14 >>> 24;
        this[offset + 1] = value14 >>> 16;
        this[offset + 2] = value14 >>> 8;
        this[offset + 3] = value14 & 255;
        return offset + 4;
      };
      function wrtBigUInt64LE(buf, value14, offset, min5, max6) {
        checkIntBI(value14, min5, max6, buf, offset, 7);
        let lo = Number(value14 & BigInt(4294967295));
        buf[offset++] = lo;
        lo = lo >> 8;
        buf[offset++] = lo;
        lo = lo >> 8;
        buf[offset++] = lo;
        lo = lo >> 8;
        buf[offset++] = lo;
        let hi = Number(value14 >> BigInt(32) & BigInt(4294967295));
        buf[offset++] = hi;
        hi = hi >> 8;
        buf[offset++] = hi;
        hi = hi >> 8;
        buf[offset++] = hi;
        hi = hi >> 8;
        buf[offset++] = hi;
        return offset;
      }
      function wrtBigUInt64BE(buf, value14, offset, min5, max6) {
        checkIntBI(value14, min5, max6, buf, offset, 7);
        let lo = Number(value14 & BigInt(4294967295));
        buf[offset + 7] = lo;
        lo = lo >> 8;
        buf[offset + 6] = lo;
        lo = lo >> 8;
        buf[offset + 5] = lo;
        lo = lo >> 8;
        buf[offset + 4] = lo;
        let hi = Number(value14 >> BigInt(32) & BigInt(4294967295));
        buf[offset + 3] = hi;
        hi = hi >> 8;
        buf[offset + 2] = hi;
        hi = hi >> 8;
        buf[offset + 1] = hi;
        hi = hi >> 8;
        buf[offset] = hi;
        return offset + 8;
      }
      Buffer2.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value14, offset = 0) {
        return wrtBigUInt64LE(this, value14, offset, BigInt(0), BigInt("0xffffffffffffffff"));
      });
      Buffer2.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value14, offset = 0) {
        return wrtBigUInt64BE(this, value14, offset, BigInt(0), BigInt("0xffffffffffffffff"));
      });
      Buffer2.prototype.writeIntLE = function writeIntLE(value14, offset, byteLength2, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) {
          const limit = Math.pow(2, 8 * byteLength2 - 1);
          checkInt(this, value14, offset, byteLength2, limit - 1, -limit);
        }
        let i4 = 0;
        let mul2 = 1;
        let sub3 = 0;
        this[offset] = value14 & 255;
        while (++i4 < byteLength2 && (mul2 *= 256)) {
          if (value14 < 0 && sub3 === 0 && this[offset + i4 - 1] !== 0) {
            sub3 = 1;
          }
          this[offset + i4] = (value14 / mul2 >> 0) - sub3 & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeIntBE = function writeIntBE(value14, offset, byteLength2, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) {
          const limit = Math.pow(2, 8 * byteLength2 - 1);
          checkInt(this, value14, offset, byteLength2, limit - 1, -limit);
        }
        let i4 = byteLength2 - 1;
        let mul2 = 1;
        let sub3 = 0;
        this[offset + i4] = value14 & 255;
        while (--i4 >= 0 && (mul2 *= 256)) {
          if (value14 < 0 && sub3 === 0 && this[offset + i4 + 1] !== 0) {
            sub3 = 1;
          }
          this[offset + i4] = (value14 / mul2 >> 0) - sub3 & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeInt8 = function writeInt8(value14, offset, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value14, offset, 1, 127, -128);
        if (value14 < 0) value14 = 255 + value14 + 1;
        this[offset] = value14 & 255;
        return offset + 1;
      };
      Buffer2.prototype.writeInt16LE = function writeInt16LE(value14, offset, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value14, offset, 2, 32767, -32768);
        this[offset] = value14 & 255;
        this[offset + 1] = value14 >>> 8;
        return offset + 2;
      };
      Buffer2.prototype.writeInt16BE = function writeInt16BE(value14, offset, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value14, offset, 2, 32767, -32768);
        this[offset] = value14 >>> 8;
        this[offset + 1] = value14 & 255;
        return offset + 2;
      };
      Buffer2.prototype.writeInt32LE = function writeInt32LE(value14, offset, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value14, offset, 4, 2147483647, -2147483648);
        this[offset] = value14 & 255;
        this[offset + 1] = value14 >>> 8;
        this[offset + 2] = value14 >>> 16;
        this[offset + 3] = value14 >>> 24;
        return offset + 4;
      };
      Buffer2.prototype.writeInt32BE = function writeInt32BE(value14, offset, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value14, offset, 4, 2147483647, -2147483648);
        if (value14 < 0) value14 = 4294967295 + value14 + 1;
        this[offset] = value14 >>> 24;
        this[offset + 1] = value14 >>> 16;
        this[offset + 2] = value14 >>> 8;
        this[offset + 3] = value14 & 255;
        return offset + 4;
      };
      Buffer2.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value14, offset = 0) {
        return wrtBigUInt64LE(this, value14, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      Buffer2.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value14, offset = 0) {
        return wrtBigUInt64BE(this, value14, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      function checkIEEE754(buf, value14, offset, ext, max6, min5) {
        if (offset + ext > buf.length) throw new RangeError("Index out of range");
        if (offset < 0) throw new RangeError("Index out of range");
      }
      function writeFloat(buf, value14, offset, littleEndian, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) {
          checkIEEE754(buf, value14, offset, 4, 34028234663852886e22, -34028234663852886e22);
        }
        ieee754.write(buf, value14, offset, littleEndian, 23, 4);
        return offset + 4;
      }
      Buffer2.prototype.writeFloatLE = function writeFloatLE(value14, offset, noAssert) {
        return writeFloat(this, value14, offset, true, noAssert);
      };
      Buffer2.prototype.writeFloatBE = function writeFloatBE(value14, offset, noAssert) {
        return writeFloat(this, value14, offset, false, noAssert);
      };
      function writeDouble(buf, value14, offset, littleEndian, noAssert) {
        value14 = +value14;
        offset = offset >>> 0;
        if (!noAssert) {
          checkIEEE754(buf, value14, offset, 8, 17976931348623157e292, -17976931348623157e292);
        }
        ieee754.write(buf, value14, offset, littleEndian, 52, 8);
        return offset + 8;
      }
      Buffer2.prototype.writeDoubleLE = function writeDoubleLE(value14, offset, noAssert) {
        return writeDouble(this, value14, offset, true, noAssert);
      };
      Buffer2.prototype.writeDoubleBE = function writeDoubleBE(value14, offset, noAssert) {
        return writeDouble(this, value14, offset, false, noAssert);
      };
      Buffer2.prototype.copy = function copy2(target6, targetStart, start2, end) {
        if (!Buffer2.isBuffer(target6)) throw new TypeError("argument should be a Buffer");
        if (!start2) start2 = 0;
        if (!end && end !== 0) end = this.length;
        if (targetStart >= target6.length) targetStart = target6.length;
        if (!targetStart) targetStart = 0;
        if (end > 0 && end < start2) end = start2;
        if (end === start2) return 0;
        if (target6.length === 0 || this.length === 0) return 0;
        if (targetStart < 0) {
          throw new RangeError("targetStart out of bounds");
        }
        if (start2 < 0 || start2 >= this.length) throw new RangeError("Index out of range");
        if (end < 0) throw new RangeError("sourceEnd out of bounds");
        if (end > this.length) end = this.length;
        if (target6.length - targetStart < end - start2) {
          end = target6.length - targetStart + start2;
        }
        const len = end - start2;
        if (this === target6 && typeof Uint8Array.prototype.copyWithin === "function") {
          this.copyWithin(targetStart, start2, end);
        } else {
          Uint8Array.prototype.set.call(
            target6,
            this.subarray(start2, end),
            targetStart
          );
        }
        return len;
      };
      Buffer2.prototype.fill = function fill(val2, start2, end, encoding2) {
        if (typeof val2 === "string") {
          if (typeof start2 === "string") {
            encoding2 = start2;
            start2 = 0;
            end = this.length;
          } else if (typeof end === "string") {
            encoding2 = end;
            end = this.length;
          }
          if (encoding2 !== void 0 && typeof encoding2 !== "string") {
            throw new TypeError("encoding must be a string");
          }
          if (typeof encoding2 === "string" && !Buffer2.isEncoding(encoding2)) {
            throw new TypeError("Unknown encoding: " + encoding2);
          }
          if (val2.length === 1) {
            const code3 = val2.charCodeAt(0);
            if (encoding2 === "utf8" && code3 < 128 || encoding2 === "latin1") {
              val2 = code3;
            }
          }
        } else if (typeof val2 === "number") {
          val2 = val2 & 255;
        } else if (typeof val2 === "boolean") {
          val2 = Number(val2);
        }
        if (start2 < 0 || this.length < start2 || this.length < end) {
          throw new RangeError("Out of range index");
        }
        if (end <= start2) {
          return this;
        }
        start2 = start2 >>> 0;
        end = end === void 0 ? this.length : end >>> 0;
        if (!val2) val2 = 0;
        let i4;
        if (typeof val2 === "number") {
          for (i4 = start2; i4 < end; ++i4) {
            this[i4] = val2;
          }
        } else {
          const bytes = Buffer2.isBuffer(val2) ? val2 : Buffer2.from(val2, encoding2);
          const len = bytes.length;
          if (len === 0) {
            throw new TypeError('The value "' + val2 + '" is invalid for argument "value"');
          }
          for (i4 = 0; i4 < end - start2; ++i4) {
            this[i4 + start2] = bytes[i4 % len];
          }
        }
        return this;
      };
      var errors = {};
      function E2(sym, getMessage, Base) {
        errors[sym] = class NodeError extends Base {
          constructor() {
            super();
            Object.defineProperty(this, "message", {
              value: getMessage.apply(this, arguments),
              writable: true,
              configurable: true
            });
            this.name = `${this.name} [${sym}]`;
            this.stack;
            delete this.name;
          }
          get code() {
            return sym;
          }
          set code(value14) {
            Object.defineProperty(this, "code", {
              configurable: true,
              enumerable: true,
              value: value14,
              writable: true
            });
          }
          toString() {
            return `${this.name} [${sym}]: ${this.message}`;
          }
        };
      }
      E2(
        "ERR_BUFFER_OUT_OF_BOUNDS",
        function(name15) {
          if (name15) {
            return `${name15} is outside of buffer bounds`;
          }
          return "Attempt to access memory outside buffer bounds";
        },
        RangeError
      );
      E2(
        "ERR_INVALID_ARG_TYPE",
        function(name15, actual) {
          return `The "${name15}" argument must be of type number. Received type ${typeof actual}`;
        },
        TypeError
      );
      E2(
        "ERR_OUT_OF_RANGE",
        function(str, range3, input3) {
          let msg = `The value of "${str}" is out of range.`;
          let received = input3;
          if (Number.isInteger(input3) && Math.abs(input3) > 2 ** 32) {
            received = addNumericalSeparator(String(input3));
          } else if (typeof input3 === "bigint") {
            received = String(input3);
            if (input3 > BigInt(2) ** BigInt(32) || input3 < -(BigInt(2) ** BigInt(32))) {
              received = addNumericalSeparator(received);
            }
            received += "n";
          }
          msg += ` It must be ${range3}. Received ${received}`;
          return msg;
        },
        RangeError
      );
      function addNumericalSeparator(val2) {
        let res = "";
        let i4 = val2.length;
        const start2 = val2[0] === "-" ? 1 : 0;
        for (; i4 >= start2 + 4; i4 -= 3) {
          res = `_${val2.slice(i4 - 3, i4)}${res}`;
        }
        return `${val2.slice(0, i4)}${res}`;
      }
      function checkBounds(buf, offset, byteLength2) {
        validateNumber(offset, "offset");
        if (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) {
          boundsError(offset, buf.length - (byteLength2 + 1));
        }
      }
      function checkIntBI(value14, min5, max6, buf, offset, byteLength2) {
        if (value14 > max6 || value14 < min5) {
          const n3 = typeof min5 === "bigint" ? "n" : "";
          let range3;
          if (byteLength2 > 3) {
            if (min5 === 0 || min5 === BigInt(0)) {
              range3 = `>= 0${n3} and < 2${n3} ** ${(byteLength2 + 1) * 8}${n3}`;
            } else {
              range3 = `>= -(2${n3} ** ${(byteLength2 + 1) * 8 - 1}${n3}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n3}`;
            }
          } else {
            range3 = `>= ${min5}${n3} and <= ${max6}${n3}`;
          }
          throw new errors.ERR_OUT_OF_RANGE("value", range3, value14);
        }
        checkBounds(buf, offset, byteLength2);
      }
      function validateNumber(value14, name15) {
        if (typeof value14 !== "number") {
          throw new errors.ERR_INVALID_ARG_TYPE(name15, "number", value14);
        }
      }
      function boundsError(value14, length8, type) {
        if (Math.floor(value14) !== value14) {
          validateNumber(value14, type);
          throw new errors.ERR_OUT_OF_RANGE(type || "offset", "an integer", value14);
        }
        if (length8 < 0) {
          throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();
        }
        throw new errors.ERR_OUT_OF_RANGE(
          type || "offset",
          `>= ${type ? 1 : 0} and <= ${length8}`,
          value14
        );
      }
      var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
      function base64clean(str) {
        str = str.split("=")[0];
        str = str.trim().replace(INVALID_BASE64_RE, "");
        if (str.length < 2) return "";
        while (str.length % 4 !== 0) {
          str = str + "=";
        }
        return str;
      }
      function utf8ToBytes(string, units) {
        units = units || Infinity;
        let codePoint;
        const length8 = string.length;
        let leadSurrogate = null;
        const bytes = [];
        for (let i4 = 0; i4 < length8; ++i4) {
          codePoint = string.charCodeAt(i4);
          if (codePoint > 55295 && codePoint < 57344) {
            if (!leadSurrogate) {
              if (codePoint > 56319) {
                if ((units -= 3) > -1) bytes.push(239, 191, 189);
                continue;
              } else if (i4 + 1 === length8) {
                if ((units -= 3) > -1) bytes.push(239, 191, 189);
                continue;
              }
              leadSurrogate = codePoint;
              continue;
            }
            if (codePoint < 56320) {
              if ((units -= 3) > -1) bytes.push(239, 191, 189);
              leadSurrogate = codePoint;
              continue;
            }
            codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
          } else if (leadSurrogate) {
            if ((units -= 3) > -1) bytes.push(239, 191, 189);
          }
          leadSurrogate = null;
          if (codePoint < 128) {
            if ((units -= 1) < 0) break;
            bytes.push(codePoint);
          } else if (codePoint < 2048) {
            if ((units -= 2) < 0) break;
            bytes.push(
              codePoint >> 6 | 192,
              codePoint & 63 | 128
            );
          } else if (codePoint < 65536) {
            if ((units -= 3) < 0) break;
            bytes.push(
              codePoint >> 12 | 224,
              codePoint >> 6 & 63 | 128,
              codePoint & 63 | 128
            );
          } else if (codePoint < 1114112) {
            if ((units -= 4) < 0) break;
            bytes.push(
              codePoint >> 18 | 240,
              codePoint >> 12 & 63 | 128,
              codePoint >> 6 & 63 | 128,
              codePoint & 63 | 128
            );
          } else {
            throw new Error("Invalid code point");
          }
        }
        return bytes;
      }
      function asciiToBytes(str) {
        const byteArray = [];
        for (let i4 = 0; i4 < str.length; ++i4) {
          byteArray.push(str.charCodeAt(i4) & 255);
        }
        return byteArray;
      }
      function utf16leToBytes(str, units) {
        let c3, hi, lo;
        const byteArray = [];
        for (let i4 = 0; i4 < str.length; ++i4) {
          if ((units -= 2) < 0) break;
          c3 = str.charCodeAt(i4);
          hi = c3 >> 8;
          lo = c3 % 256;
          byteArray.push(lo);
          byteArray.push(hi);
        }
        return byteArray;
      }
      function base64ToBytes(str) {
        return base64.toByteArray(base64clean(str));
      }
      function blitBuffer(src9, dst, offset, length8) {
        let i4;
        for (i4 = 0; i4 < length8; ++i4) {
          if (i4 + offset >= dst.length || i4 >= src9.length) break;
          dst[i4 + offset] = src9[i4];
        }
        return i4;
      }
      function isInstance(obj, type) {
        return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
      }
      function numberIsNaN(obj) {
        return obj !== obj;
      }
      var hexSliceLookupTable = function() {
        const alphabet = "0123456789abcdef";
        const table2 = new Array(256);
        for (let i4 = 0; i4 < 16; ++i4) {
          const i16 = i4 * 16;
          for (let j3 = 0; j3 < 16; ++j3) {
            table2[i16 + j3] = alphabet[i4] + alphabet[j3];
          }
        }
        return table2;
      }();
      function defineBigIntMethod(fn) {
        return typeof BigInt === "undefined" ? BufferBigIntNotDefined : fn;
      }
      function BufferBigIntNotDefined() {
        throw new Error("BigInt not supported");
      }
    }
  });

  // node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/node_modules/@smithy/util-buffer-from/dist-cjs/index.js
  var require_dist_cjs2 = __commonJS({
    "node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/node_modules/@smithy/util-buffer-from/dist-cjs/index.js"(exports, module) {
      var __defProp2 = Object.defineProperty;
      var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
      var __getOwnPropNames2 = Object.getOwnPropertyNames;
      var __hasOwnProp2 = Object.prototype.hasOwnProperty;
      var __name = (target6, value14) => __defProp2(target6, "name", { value: value14, configurable: true });
      var __export2 = (target6, all4) => {
        for (var name15 in all4)
          __defProp2(target6, name15, { get: all4[name15], enumerable: true });
      };
      var __copyProps2 = (to, from3, except2, desc) => {
        if (from3 && typeof from3 === "object" || typeof from3 === "function") {
          for (let key2 of __getOwnPropNames2(from3))
            if (!__hasOwnProp2.call(to, key2) && key2 !== except2)
              __defProp2(to, key2, { get: () => from3[key2], enumerable: !(desc = __getOwnPropDesc2(from3, key2)) || desc.enumerable });
        }
        return to;
      };
      var __toCommonJS2 = (mod3) => __copyProps2(__defProp2({}, "__esModule", { value: true }), mod3);
      var src_exports = {};
      __export2(src_exports, {
        fromArrayBuffer: () => fromArrayBuffer,
        fromString: () => fromString2
      });
      module.exports = __toCommonJS2(src_exports);
      var import_is_array_buffer2 = require_dist_cjs();
      var import_buffer = require_buffer();
      var fromArrayBuffer = /* @__PURE__ */ __name((input3, offset = 0, length8 = input3.byteLength - offset) => {
        if (!(0, import_is_array_buffer2.isArrayBuffer)(input3)) {
          throw new TypeError(`The "input" argument must be ArrayBuffer. Received type ${typeof input3} (${input3})`);
        }
        return import_buffer.Buffer.from(input3, offset, length8);
      }, "fromArrayBuffer");
      var fromString2 = /* @__PURE__ */ __name((input3, encoding2) => {
        if (typeof input3 !== "string") {
          throw new TypeError(`The "input" argument must be of type string. Received type ${typeof input3} (${input3})`);
        }
        return encoding2 ? import_buffer.Buffer.from(input3, encoding2) : import_buffer.Buffer.from(input3);
      }, "fromString");
    }
  });

  // node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-cjs/index.js
  var require_dist_cjs3 = __commonJS({
    "node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-cjs/index.js"(exports, module) {
      var __defProp2 = Object.defineProperty;
      var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
      var __getOwnPropNames2 = Object.getOwnPropertyNames;
      var __hasOwnProp2 = Object.prototype.hasOwnProperty;
      var __name = (target6, value14) => __defProp2(target6, "name", { value: value14, configurable: true });
      var __export2 = (target6, all4) => {
        for (var name15 in all4)
          __defProp2(target6, name15, { get: all4[name15], enumerable: true });
      };
      var __copyProps2 = (to, from3, except2, desc) => {
        if (from3 && typeof from3 === "object" || typeof from3 === "function") {
          for (let key2 of __getOwnPropNames2(from3))
            if (!__hasOwnProp2.call(to, key2) && key2 !== except2)
              __defProp2(to, key2, { get: () => from3[key2], enumerable: !(desc = __getOwnPropDesc2(from3, key2)) || desc.enumerable });
        }
        return to;
      };
      var __toCommonJS2 = (mod3) => __copyProps2(__defProp2({}, "__esModule", { value: true }), mod3);
      var src_exports = {};
      __export2(src_exports, {
        fromUtf8: () => fromUtf82,
        toUint8Array: () => toUint8Array2,
        toUtf8: () => toUtf82
      });
      module.exports = __toCommonJS2(src_exports);
      var import_util_buffer_from = require_dist_cjs2();
      var fromUtf82 = /* @__PURE__ */ __name((input3) => {
        const buf = (0, import_util_buffer_from.fromString)(input3, "utf8");
        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);
      }, "fromUtf8");
      var toUint8Array2 = /* @__PURE__ */ __name((data) => {
        if (typeof data === "string") {
          return fromUtf82(data);
        }
        if (ArrayBuffer.isView(data)) {
          return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
        }
        return new Uint8Array(data);
      }, "toUint8Array");
      var toUtf82 = /* @__PURE__ */ __name((input3) => {
        if (typeof input3 === "string") {
          return input3;
        }
        if (typeof input3 !== "object" || typeof input3.byteOffset !== "number" || typeof input3.byteLength !== "number") {
          throw new Error("@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.");
        }
        return (0, import_util_buffer_from.fromArrayBuffer)(input3.buffer, input3.byteOffset, input3.byteLength).toString("utf8");
      }, "toUtf8");
    }
  });

  // node_modules/@aws-crypto/util/build/main/convertToBuffer.js
  var require_convertToBuffer = __commonJS({
    "node_modules/@aws-crypto/util/build/main/convertToBuffer.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.convertToBuffer = void 0;
      var util_utf8_1 = require_dist_cjs3();
      var fromUtf82 = typeof Buffer !== "undefined" && Buffer.from ? function(input3) {
        return Buffer.from(input3, "utf8");
      } : util_utf8_1.fromUtf8;
      function convertToBuffer3(data) {
        if (data instanceof Uint8Array)
          return data;
        if (typeof data === "string") {
          return fromUtf82(data);
        }
        if (ArrayBuffer.isView(data)) {
          return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
        }
        return new Uint8Array(data);
      }
      exports.convertToBuffer = convertToBuffer3;
    }
  });

  // node_modules/@aws-crypto/util/build/main/isEmptyData.js
  var require_isEmptyData = __commonJS({
    "node_modules/@aws-crypto/util/build/main/isEmptyData.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.isEmptyData = void 0;
      function isEmptyData2(data) {
        if (typeof data === "string") {
          return data.length === 0;
        }
        return data.byteLength === 0;
      }
      exports.isEmptyData = isEmptyData2;
    }
  });

  // node_modules/@aws-crypto/util/build/main/numToUint8.js
  var require_numToUint8 = __commonJS({
    "node_modules/@aws-crypto/util/build/main/numToUint8.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.numToUint8 = void 0;
      function numToUint8(num) {
        return new Uint8Array([
          (num & 4278190080) >> 24,
          (num & 16711680) >> 16,
          (num & 65280) >> 8,
          num & 255
        ]);
      }
      exports.numToUint8 = numToUint8;
    }
  });

  // node_modules/@aws-crypto/util/build/main/uint32ArrayFrom.js
  var require_uint32ArrayFrom = __commonJS({
    "node_modules/@aws-crypto/util/build/main/uint32ArrayFrom.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.uint32ArrayFrom = void 0;
      function uint32ArrayFrom(a_lookUpTable) {
        if (!Uint32Array.from) {
          var return_array = new Uint32Array(a_lookUpTable.length);
          var a_index = 0;
          while (a_index < a_lookUpTable.length) {
            return_array[a_index] = a_lookUpTable[a_index];
            a_index += 1;
          }
          return return_array;
        }
        return Uint32Array.from(a_lookUpTable);
      }
      exports.uint32ArrayFrom = uint32ArrayFrom;
    }
  });

  // node_modules/@aws-crypto/util/build/main/index.js
  var require_main = __commonJS({
    "node_modules/@aws-crypto/util/build/main/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.uint32ArrayFrom = exports.numToUint8 = exports.isEmptyData = exports.convertToBuffer = void 0;
      var convertToBuffer_1 = require_convertToBuffer();
      Object.defineProperty(exports, "convertToBuffer", { enumerable: true, get: function() {
        return convertToBuffer_1.convertToBuffer;
      } });
      var isEmptyData_1 = require_isEmptyData();
      Object.defineProperty(exports, "isEmptyData", { enumerable: true, get: function() {
        return isEmptyData_1.isEmptyData;
      } });
      var numToUint8_1 = require_numToUint8();
      Object.defineProperty(exports, "numToUint8", { enumerable: true, get: function() {
        return numToUint8_1.numToUint8;
      } });
      var uint32ArrayFrom_1 = require_uint32ArrayFrom();
      Object.defineProperty(exports, "uint32ArrayFrom", { enumerable: true, get: function() {
        return uint32ArrayFrom_1.uint32ArrayFrom;
      } });
    }
  });

  // node_modules/@aws-crypto/sha256-js/build/main/jsSha256.js
  var require_jsSha256 = __commonJS({
    "node_modules/@aws-crypto/sha256-js/build/main/jsSha256.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Sha256 = void 0;
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      var constants_1 = require_constants();
      var RawSha256_1 = require_RawSha256();
      var util_1 = require_main();
      var Sha2563 = (
        /** @class */
        function() {
          function Sha2564(secret) {
            this.secret = secret;
            this.hash = new RawSha256_1.RawSha256();
            this.reset();
          }
          Sha2564.prototype.update = function(toHash) {
            if ((0, util_1.isEmptyData)(toHash) || this.error) {
              return;
            }
            try {
              this.hash.update((0, util_1.convertToBuffer)(toHash));
            } catch (e3) {
              this.error = e3;
            }
          };
          Sha2564.prototype.digestSync = function() {
            if (this.error) {
              throw this.error;
            }
            if (this.outer) {
              if (!this.outer.finished) {
                this.outer.update(this.hash.digest());
              }
              return this.outer.digest();
            }
            return this.hash.digest();
          };
          Sha2564.prototype.digest = function() {
            return tslib_1.__awaiter(this, void 0, void 0, function() {
              return tslib_1.__generator(this, function(_a2) {
                return [2, this.digestSync()];
              });
            });
          };
          Sha2564.prototype.reset = function() {
            this.hash = new RawSha256_1.RawSha256();
            if (this.secret) {
              this.outer = new RawSha256_1.RawSha256();
              var inner = bufferFromSecret(this.secret);
              var outer = new Uint8Array(constants_1.BLOCK_SIZE);
              outer.set(inner);
              for (var i4 = 0; i4 < constants_1.BLOCK_SIZE; i4++) {
                inner[i4] ^= 54;
                outer[i4] ^= 92;
              }
              this.hash.update(inner);
              this.outer.update(outer);
              for (var i4 = 0; i4 < inner.byteLength; i4++) {
                inner[i4] = 0;
              }
            }
          };
          return Sha2564;
        }()
      );
      exports.Sha256 = Sha2563;
      function bufferFromSecret(secret) {
        var input3 = (0, util_1.convertToBuffer)(secret);
        if (input3.byteLength > constants_1.BLOCK_SIZE) {
          var bufferHash = new RawSha256_1.RawSha256();
          bufferHash.update(input3);
          input3 = bufferHash.digest();
        }
        var buffer = new Uint8Array(constants_1.BLOCK_SIZE);
        buffer.set(input3);
        return buffer;
      }
    }
  });

  // node_modules/@aws-crypto/sha256-js/build/main/index.js
  var require_main2 = __commonJS({
    "node_modules/@aws-crypto/sha256-js/build/main/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_jsSha256(), exports);
    }
  });

  // node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/CognitoProviderParameters.js
  var init_CognitoProviderParameters = __esm({
    "node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/CognitoProviderParameters.js"() {
    }
  });

  // node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/Logins.js
  var init_Logins = __esm({
    "node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/Logins.js"() {
    }
  });

  // node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/Storage.js
  var init_Storage = __esm({
    "node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/Storage.js"() {
    }
  });

  // node_modules/@smithy/property-provider/dist-es/ProviderError.js
  var ProviderError;
  var init_ProviderError = __esm({
    "node_modules/@smithy/property-provider/dist-es/ProviderError.js"() {
      ProviderError = class _ProviderError extends Error {
        constructor(message2, options2 = true) {
          let logger2;
          let tryNextLink = true;
          if (typeof options2 === "boolean") {
            logger2 = void 0;
            tryNextLink = options2;
          } else if (options2 != null && typeof options2 === "object") {
            logger2 = options2.logger;
            tryNextLink = options2.tryNextLink ?? true;
          }
          super(message2);
          this.name = "ProviderError";
          this.tryNextLink = tryNextLink;
          Object.setPrototypeOf(this, _ProviderError.prototype);
          logger2?.debug?.(`@smithy/property-provider ${tryNextLink ? "->" : "(!)"} ${message2}`);
        }
        static from(error4, options2 = true) {
          return Object.assign(new this(error4.message, options2), error4);
        }
      };
    }
  });

  // node_modules/@smithy/property-provider/dist-es/CredentialsProviderError.js
  var CredentialsProviderError;
  var init_CredentialsProviderError = __esm({
    "node_modules/@smithy/property-provider/dist-es/CredentialsProviderError.js"() {
      init_ProviderError();
      CredentialsProviderError = class _CredentialsProviderError extends ProviderError {
        constructor(message2, options2 = true) {
          super(message2, options2);
          this.name = "CredentialsProviderError";
          Object.setPrototypeOf(this, _CredentialsProviderError.prototype);
        }
      };
    }
  });

  // node_modules/@smithy/property-provider/dist-es/TokenProviderError.js
  var init_TokenProviderError = __esm({
    "node_modules/@smithy/property-provider/dist-es/TokenProviderError.js"() {
      init_ProviderError();
    }
  });

  // node_modules/@smithy/property-provider/dist-es/chain.js
  var init_chain = __esm({
    "node_modules/@smithy/property-provider/dist-es/chain.js"() {
      init_ProviderError();
    }
  });

  // node_modules/@smithy/property-provider/dist-es/fromStatic.js
  var init_fromStatic = __esm({
    "node_modules/@smithy/property-provider/dist-es/fromStatic.js"() {
    }
  });

  // node_modules/@smithy/property-provider/dist-es/memoize.js
  var memoize;
  var init_memoize = __esm({
    "node_modules/@smithy/property-provider/dist-es/memoize.js"() {
      memoize = (provider, isExpired, requiresRefresh) => {
        let resolved;
        let pending;
        let hasResult;
        let isConstant = false;
        const coalesceProvider = async () => {
          if (!pending) {
            pending = provider();
          }
          try {
            resolved = await pending;
            hasResult = true;
            isConstant = false;
          } finally {
            pending = void 0;
          }
          return resolved;
        };
        if (isExpired === void 0) {
          return async (options2) => {
            if (!hasResult || options2?.forceRefresh) {
              resolved = await coalesceProvider();
            }
            return resolved;
          };
        }
        return async (options2) => {
          if (!hasResult || options2?.forceRefresh) {
            resolved = await coalesceProvider();
          }
          if (isConstant) {
            return resolved;
          }
          if (requiresRefresh && !requiresRefresh(resolved)) {
            isConstant = true;
            return resolved;
          }
          if (isExpired(resolved)) {
            await coalesceProvider();
            return resolved;
          }
          return resolved;
        };
      };
    }
  });

  // node_modules/@smithy/property-provider/dist-es/index.js
  var init_dist_es = __esm({
    "node_modules/@smithy/property-provider/dist-es/index.js"() {
      init_CredentialsProviderError();
      init_ProviderError();
      init_TokenProviderError();
      init_chain();
      init_fromStatic();
      init_memoize();
    }
  });

  // node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/resolveLogins.js
  function resolveLogins(logins) {
    return Promise.all(Object.keys(logins).reduce((arr, name15) => {
      const tokenOrProvider = logins[name15];
      if (typeof tokenOrProvider === "string") {
        arr.push([name15, tokenOrProvider]);
      } else {
        arr.push(tokenOrProvider().then((token) => [name15, token]));
      }
      return arr;
    }, [])).then((resolvedPairs) => resolvedPairs.reduce((logins2, [key2, value14]) => {
      logins2[key2] = value14;
      return logins2;
    }, {}));
  }
  var init_resolveLogins = __esm({
    "node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/resolveLogins.js"() {
    }
  });

  // node_modules/@smithy/protocol-http/dist-es/extensions/httpExtensionConfiguration.js
  var getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig;
  var init_httpExtensionConfiguration = __esm({
    "node_modules/@smithy/protocol-http/dist-es/extensions/httpExtensionConfiguration.js"() {
      getHttpHandlerExtensionConfiguration = (runtimeConfig) => {
        let httpHandler = runtimeConfig.httpHandler;
        return {
          setHttpHandler(handler3) {
            httpHandler = handler3;
          },
          httpHandler() {
            return httpHandler;
          },
          updateHttpClientConfig(key2, value14) {
            httpHandler.updateHttpClientConfig(key2, value14);
          },
          httpHandlerConfigs() {
            return httpHandler.httpHandlerConfigs();
          }
        };
      };
      resolveHttpHandlerRuntimeConfig = (httpHandlerExtensionConfiguration) => {
        return {
          httpHandler: httpHandlerExtensionConfiguration.httpHandler()
        };
      };
    }
  });

  // node_modules/@smithy/protocol-http/dist-es/extensions/index.js
  var init_extensions = __esm({
    "node_modules/@smithy/protocol-http/dist-es/extensions/index.js"() {
      init_httpExtensionConfiguration();
    }
  });

  // node_modules/@smithy/types/dist-es/abort.js
  var init_abort = __esm({
    "node_modules/@smithy/types/dist-es/abort.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/auth/auth.js
  var HttpAuthLocation;
  var init_auth = __esm({
    "node_modules/@smithy/types/dist-es/auth/auth.js"() {
      (function(HttpAuthLocation2) {
        HttpAuthLocation2["HEADER"] = "header";
        HttpAuthLocation2["QUERY"] = "query";
      })(HttpAuthLocation || (HttpAuthLocation = {}));
    }
  });

  // node_modules/@smithy/types/dist-es/auth/HttpApiKeyAuth.js
  var HttpApiKeyAuthLocation;
  var init_HttpApiKeyAuth = __esm({
    "node_modules/@smithy/types/dist-es/auth/HttpApiKeyAuth.js"() {
      (function(HttpApiKeyAuthLocation2) {
        HttpApiKeyAuthLocation2["HEADER"] = "header";
        HttpApiKeyAuthLocation2["QUERY"] = "query";
      })(HttpApiKeyAuthLocation || (HttpApiKeyAuthLocation = {}));
    }
  });

  // node_modules/@smithy/types/dist-es/auth/HttpAuthScheme.js
  var init_HttpAuthScheme = __esm({
    "node_modules/@smithy/types/dist-es/auth/HttpAuthScheme.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/auth/HttpAuthSchemeProvider.js
  var init_HttpAuthSchemeProvider = __esm({
    "node_modules/@smithy/types/dist-es/auth/HttpAuthSchemeProvider.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/auth/HttpSigner.js
  var init_HttpSigner = __esm({
    "node_modules/@smithy/types/dist-es/auth/HttpSigner.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/auth/IdentityProviderConfig.js
  var init_IdentityProviderConfig = __esm({
    "node_modules/@smithy/types/dist-es/auth/IdentityProviderConfig.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/auth/index.js
  var init_auth2 = __esm({
    "node_modules/@smithy/types/dist-es/auth/index.js"() {
      init_auth();
      init_HttpApiKeyAuth();
      init_HttpAuthScheme();
      init_HttpAuthSchemeProvider();
      init_HttpSigner();
      init_IdentityProviderConfig();
    }
  });

  // node_modules/@smithy/types/dist-es/blob/blob-payload-input-types.js
  var init_blob_payload_input_types = __esm({
    "node_modules/@smithy/types/dist-es/blob/blob-payload-input-types.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/checksum.js
  var init_checksum = __esm({
    "node_modules/@smithy/types/dist-es/checksum.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/client.js
  var init_client = __esm({
    "node_modules/@smithy/types/dist-es/client.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/command.js
  var init_command = __esm({
    "node_modules/@smithy/types/dist-es/command.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/connection/config.js
  var init_config = __esm({
    "node_modules/@smithy/types/dist-es/connection/config.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/connection/manager.js
  var init_manager = __esm({
    "node_modules/@smithy/types/dist-es/connection/manager.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/connection/pool.js
  var init_pool = __esm({
    "node_modules/@smithy/types/dist-es/connection/pool.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/connection/index.js
  var init_connection = __esm({
    "node_modules/@smithy/types/dist-es/connection/index.js"() {
      init_config();
      init_manager();
      init_pool();
    }
  });

  // node_modules/@smithy/types/dist-es/crypto.js
  var init_crypto = __esm({
    "node_modules/@smithy/types/dist-es/crypto.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/encode.js
  var init_encode = __esm({
    "node_modules/@smithy/types/dist-es/encode.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/endpoint.js
  var EndpointURLScheme;
  var init_endpoint = __esm({
    "node_modules/@smithy/types/dist-es/endpoint.js"() {
      (function(EndpointURLScheme2) {
        EndpointURLScheme2["HTTP"] = "http";
        EndpointURLScheme2["HTTPS"] = "https";
      })(EndpointURLScheme || (EndpointURLScheme = {}));
    }
  });

  // node_modules/@smithy/types/dist-es/endpoints/EndpointRuleObject.js
  var init_EndpointRuleObject = __esm({
    "node_modules/@smithy/types/dist-es/endpoints/EndpointRuleObject.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/endpoints/ErrorRuleObject.js
  var init_ErrorRuleObject = __esm({
    "node_modules/@smithy/types/dist-es/endpoints/ErrorRuleObject.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/endpoints/RuleSetObject.js
  var init_RuleSetObject = __esm({
    "node_modules/@smithy/types/dist-es/endpoints/RuleSetObject.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/endpoints/shared.js
  var init_shared = __esm({
    "node_modules/@smithy/types/dist-es/endpoints/shared.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/endpoints/TreeRuleObject.js
  var init_TreeRuleObject = __esm({
    "node_modules/@smithy/types/dist-es/endpoints/TreeRuleObject.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/endpoints/index.js
  var init_endpoints = __esm({
    "node_modules/@smithy/types/dist-es/endpoints/index.js"() {
      init_EndpointRuleObject();
      init_ErrorRuleObject();
      init_RuleSetObject();
      init_shared();
      init_TreeRuleObject();
    }
  });

  // node_modules/@smithy/types/dist-es/eventStream.js
  var init_eventStream = __esm({
    "node_modules/@smithy/types/dist-es/eventStream.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/extensions/checksum.js
  var AlgorithmId;
  var init_checksum2 = __esm({
    "node_modules/@smithy/types/dist-es/extensions/checksum.js"() {
      (function(AlgorithmId2) {
        AlgorithmId2["MD5"] = "md5";
        AlgorithmId2["CRC32"] = "crc32";
        AlgorithmId2["CRC32C"] = "crc32c";
        AlgorithmId2["SHA1"] = "sha1";
        AlgorithmId2["SHA256"] = "sha256";
      })(AlgorithmId || (AlgorithmId = {}));
    }
  });

  // node_modules/@smithy/types/dist-es/extensions/defaultClientConfiguration.js
  var init_defaultClientConfiguration = __esm({
    "node_modules/@smithy/types/dist-es/extensions/defaultClientConfiguration.js"() {
      init_checksum2();
    }
  });

  // node_modules/@smithy/types/dist-es/extensions/defaultExtensionConfiguration.js
  var init_defaultExtensionConfiguration = __esm({
    "node_modules/@smithy/types/dist-es/extensions/defaultExtensionConfiguration.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/extensions/index.js
  var init_extensions2 = __esm({
    "node_modules/@smithy/types/dist-es/extensions/index.js"() {
      init_defaultClientConfiguration();
      init_defaultExtensionConfiguration();
      init_checksum2();
    }
  });

  // node_modules/@smithy/types/dist-es/http.js
  var FieldPosition;
  var init_http = __esm({
    "node_modules/@smithy/types/dist-es/http.js"() {
      (function(FieldPosition2) {
        FieldPosition2[FieldPosition2["HEADER"] = 0] = "HEADER";
        FieldPosition2[FieldPosition2["TRAILER"] = 1] = "TRAILER";
      })(FieldPosition || (FieldPosition = {}));
    }
  });

  // node_modules/@smithy/types/dist-es/http/httpHandlerInitialization.js
  var init_httpHandlerInitialization = __esm({
    "node_modules/@smithy/types/dist-es/http/httpHandlerInitialization.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/identity/apiKeyIdentity.js
  var init_apiKeyIdentity = __esm({
    "node_modules/@smithy/types/dist-es/identity/apiKeyIdentity.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/identity/awsCredentialIdentity.js
  var init_awsCredentialIdentity = __esm({
    "node_modules/@smithy/types/dist-es/identity/awsCredentialIdentity.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/identity/identity.js
  var init_identity = __esm({
    "node_modules/@smithy/types/dist-es/identity/identity.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/identity/tokenIdentity.js
  var init_tokenIdentity = __esm({
    "node_modules/@smithy/types/dist-es/identity/tokenIdentity.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/identity/index.js
  var init_identity2 = __esm({
    "node_modules/@smithy/types/dist-es/identity/index.js"() {
      init_apiKeyIdentity();
      init_awsCredentialIdentity();
      init_identity();
      init_tokenIdentity();
    }
  });

  // node_modules/@smithy/types/dist-es/logger.js
  var init_logger = __esm({
    "node_modules/@smithy/types/dist-es/logger.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/middleware.js
  var SMITHY_CONTEXT_KEY;
  var init_middleware = __esm({
    "node_modules/@smithy/types/dist-es/middleware.js"() {
      SMITHY_CONTEXT_KEY = "__smithy_context";
    }
  });

  // node_modules/@smithy/types/dist-es/pagination.js
  var init_pagination = __esm({
    "node_modules/@smithy/types/dist-es/pagination.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/profile.js
  var IniSectionType;
  var init_profile = __esm({
    "node_modules/@smithy/types/dist-es/profile.js"() {
      (function(IniSectionType2) {
        IniSectionType2["PROFILE"] = "profile";
        IniSectionType2["SSO_SESSION"] = "sso-session";
        IniSectionType2["SERVICES"] = "services";
      })(IniSectionType || (IniSectionType = {}));
    }
  });

  // node_modules/@smithy/types/dist-es/response.js
  var init_response = __esm({
    "node_modules/@smithy/types/dist-es/response.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/retry.js
  var init_retry = __esm({
    "node_modules/@smithy/types/dist-es/retry.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/serde.js
  var init_serde = __esm({
    "node_modules/@smithy/types/dist-es/serde.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/shapes.js
  var init_shapes = __esm({
    "node_modules/@smithy/types/dist-es/shapes.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/signature.js
  var init_signature = __esm({
    "node_modules/@smithy/types/dist-es/signature.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/stream.js
  var init_stream = __esm({
    "node_modules/@smithy/types/dist-es/stream.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/streaming-payload/streaming-blob-common-types.js
  var init_streaming_blob_common_types = __esm({
    "node_modules/@smithy/types/dist-es/streaming-payload/streaming-blob-common-types.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/streaming-payload/streaming-blob-payload-input-types.js
  var init_streaming_blob_payload_input_types = __esm({
    "node_modules/@smithy/types/dist-es/streaming-payload/streaming-blob-payload-input-types.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/streaming-payload/streaming-blob-payload-output-types.js
  var init_streaming_blob_payload_output_types = __esm({
    "node_modules/@smithy/types/dist-es/streaming-payload/streaming-blob-payload-output-types.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/transfer.js
  var RequestHandlerProtocol;
  var init_transfer = __esm({
    "node_modules/@smithy/types/dist-es/transfer.js"() {
      (function(RequestHandlerProtocol2) {
        RequestHandlerProtocol2["HTTP_0_9"] = "http/0.9";
        RequestHandlerProtocol2["HTTP_1_0"] = "http/1.0";
        RequestHandlerProtocol2["TDS_8_0"] = "tds/8.0";
      })(RequestHandlerProtocol || (RequestHandlerProtocol = {}));
    }
  });

  // node_modules/@smithy/types/dist-es/transform/client-payload-blob-type-narrow.js
  var init_client_payload_blob_type_narrow = __esm({
    "node_modules/@smithy/types/dist-es/transform/client-payload-blob-type-narrow.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/transform/no-undefined.js
  var init_no_undefined = __esm({
    "node_modules/@smithy/types/dist-es/transform/no-undefined.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/transform/type-transform.js
  var init_type_transform = __esm({
    "node_modules/@smithy/types/dist-es/transform/type-transform.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/uri.js
  var init_uri = __esm({
    "node_modules/@smithy/types/dist-es/uri.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/util.js
  var init_util = __esm({
    "node_modules/@smithy/types/dist-es/util.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/waiter.js
  var init_waiter = __esm({
    "node_modules/@smithy/types/dist-es/waiter.js"() {
    }
  });

  // node_modules/@smithy/types/dist-es/index.js
  var init_dist_es2 = __esm({
    "node_modules/@smithy/types/dist-es/index.js"() {
      init_abort();
      init_auth2();
      init_blob_payload_input_types();
      init_checksum();
      init_client();
      init_command();
      init_connection();
      init_crypto();
      init_encode();
      init_endpoint();
      init_endpoints();
      init_eventStream();
      init_extensions2();
      init_http();
      init_httpHandlerInitialization();
      init_identity2();
      init_logger();
      init_middleware();
      init_pagination();
      init_profile();
      init_response();
      init_retry();
      init_serde();
      init_shapes();
      init_signature();
      init_stream();
      init_streaming_blob_common_types();
      init_streaming_blob_payload_input_types();
      init_streaming_blob_payload_output_types();
      init_transfer();
      init_client_payload_blob_type_narrow();
      init_no_undefined();
      init_type_transform();
      init_uri();
      init_util();
      init_waiter();
    }
  });

  // node_modules/@smithy/protocol-http/dist-es/Field.js
  var init_Field = __esm({
    "node_modules/@smithy/protocol-http/dist-es/Field.js"() {
      init_dist_es2();
    }
  });

  // node_modules/@smithy/protocol-http/dist-es/Fields.js
  var init_Fields = __esm({
    "node_modules/@smithy/protocol-http/dist-es/Fields.js"() {
    }
  });

  // node_modules/@smithy/protocol-http/dist-es/httpHandler.js
  var init_httpHandler = __esm({
    "node_modules/@smithy/protocol-http/dist-es/httpHandler.js"() {
    }
  });

  // node_modules/@smithy/protocol-http/dist-es/httpRequest.js
  function cloneQuery(query3) {
    return Object.keys(query3).reduce((carry, paramName) => {
      const param2 = query3[paramName];
      return {
        ...carry,
        [paramName]: Array.isArray(param2) ? [...param2] : param2
      };
    }, {});
  }
  var HttpRequest;
  var init_httpRequest = __esm({
    "node_modules/@smithy/protocol-http/dist-es/httpRequest.js"() {
      HttpRequest = class _HttpRequest {
        constructor(options2) {
          this.method = options2.method || "GET";
          this.hostname = options2.hostname || "localhost";
          this.port = options2.port;
          this.query = options2.query || {};
          this.headers = options2.headers || {};
          this.body = options2.body;
          this.protocol = options2.protocol ? options2.protocol.slice(-1) !== ":" ? `${options2.protocol}:` : options2.protocol : "https:";
          this.path = options2.path ? options2.path.charAt(0) !== "/" ? `/${options2.path}` : options2.path : "/";
          this.username = options2.username;
          this.password = options2.password;
          this.fragment = options2.fragment;
        }
        static clone(request3) {
          const cloned = new _HttpRequest({
            ...request3,
            headers: { ...request3.headers }
          });
          if (cloned.query) {
            cloned.query = cloneQuery(cloned.query);
          }
          return cloned;
        }
        static isInstance(request3) {
          if (!request3) {
            return false;
          }
          const req = request3;
          return "method" in req && "protocol" in req && "hostname" in req && "path" in req && typeof req["query"] === "object" && typeof req["headers"] === "object";
        }
        clone() {
          return _HttpRequest.clone(this);
        }
      };
    }
  });

  // node_modules/@smithy/protocol-http/dist-es/httpResponse.js
  var HttpResponse;
  var init_httpResponse = __esm({
    "node_modules/@smithy/protocol-http/dist-es/httpResponse.js"() {
      HttpResponse = class {
        constructor(options2) {
          this.statusCode = options2.statusCode;
          this.reason = options2.reason;
          this.headers = options2.headers || {};
          this.body = options2.body;
        }
        static isInstance(response) {
          if (!response)
            return false;
          const resp = response;
          return typeof resp.statusCode === "number" && typeof resp.headers === "object";
        }
      };
    }
  });

  // node_modules/@smithy/protocol-http/dist-es/isValidHostname.js
  var init_isValidHostname = __esm({
    "node_modules/@smithy/protocol-http/dist-es/isValidHostname.js"() {
    }
  });

  // node_modules/@smithy/protocol-http/dist-es/types.js
  var init_types = __esm({
    "node_modules/@smithy/protocol-http/dist-es/types.js"() {
    }
  });

  // node_modules/@smithy/protocol-http/dist-es/index.js
  var init_dist_es3 = __esm({
    "node_modules/@smithy/protocol-http/dist-es/index.js"() {
      init_extensions();
      init_Field();
      init_Fields();
      init_httpHandler();
      init_httpRequest();
      init_httpResponse();
      init_isValidHostname();
      init_types();
    }
  });

  // node_modules/@aws-sdk/middleware-host-header/dist-es/index.js
  function resolveHostHeaderConfig(input3) {
    return input3;
  }
  var hostHeaderMiddleware, hostHeaderMiddlewareOptions, getHostHeaderPlugin;
  var init_dist_es4 = __esm({
    "node_modules/@aws-sdk/middleware-host-header/dist-es/index.js"() {
      init_dist_es3();
      hostHeaderMiddleware = (options2) => (next) => async (args) => {
        if (!HttpRequest.isInstance(args.request))
          return next(args);
        const { request: request3 } = args;
        const { handlerProtocol = "" } = options2.requestHandler.metadata || {};
        if (handlerProtocol.indexOf("h2") >= 0 && !request3.headers[":authority"]) {
          delete request3.headers["host"];
          request3.headers[":authority"] = request3.hostname + (request3.port ? ":" + request3.port : "");
        } else if (!request3.headers["host"]) {
          let host3 = request3.hostname;
          if (request3.port != null)
            host3 += `:${request3.port}`;
          request3.headers["host"] = host3;
        }
        return next(args);
      };
      hostHeaderMiddlewareOptions = {
        name: "hostHeaderMiddleware",
        step: "build",
        priority: "low",
        tags: ["HOST"],
        override: true
      };
      getHostHeaderPlugin = (options2) => ({
        applyToStack: (clientStack) => {
          clientStack.add(hostHeaderMiddleware(options2), hostHeaderMiddlewareOptions);
        }
      });
    }
  });

  // node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js
  var loggerMiddleware, loggerMiddlewareOptions, getLoggerPlugin;
  var init_loggerMiddleware = __esm({
    "node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js"() {
      loggerMiddleware = () => (next, context) => async (args) => {
        try {
          const response = await next(args);
          const { clientName, commandName, logger: logger2, dynamoDbDocumentClientOptions = {} } = context;
          const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;
          const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;
          const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;
          const { $metadata, ...outputWithoutMetadata } = response.output;
          logger2?.info?.({
            clientName,
            commandName,
            input: inputFilterSensitiveLog(args.input),
            output: outputFilterSensitiveLog(outputWithoutMetadata),
            metadata: $metadata
          });
          return response;
        } catch (error4) {
          const { clientName, commandName, logger: logger2, dynamoDbDocumentClientOptions = {} } = context;
          const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;
          const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;
          logger2?.error?.({
            clientName,
            commandName,
            input: inputFilterSensitiveLog(args.input),
            error: error4,
            metadata: error4.$metadata
          });
          throw error4;
        }
      };
      loggerMiddlewareOptions = {
        name: "loggerMiddleware",
        tags: ["LOGGER"],
        step: "initialize",
        override: true
      };
      getLoggerPlugin = (options2) => ({
        applyToStack: (clientStack) => {
          clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);
        }
      });
    }
  });

  // node_modules/@aws-sdk/middleware-logger/dist-es/index.js
  var init_dist_es5 = __esm({
    "node_modules/@aws-sdk/middleware-logger/dist-es/index.js"() {
      init_loggerMiddleware();
    }
  });

  // node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js
  var TRACE_ID_HEADER_NAME, ENV_LAMBDA_FUNCTION_NAME, ENV_TRACE_ID, recursionDetectionMiddleware, addRecursionDetectionMiddlewareOptions, getRecursionDetectionPlugin;
  var init_dist_es6 = __esm({
    "node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js"() {
      init_dist_es3();
      TRACE_ID_HEADER_NAME = "X-Amzn-Trace-Id";
      ENV_LAMBDA_FUNCTION_NAME = "AWS_LAMBDA_FUNCTION_NAME";
      ENV_TRACE_ID = "_X_AMZN_TRACE_ID";
      recursionDetectionMiddleware = (options2) => (next) => async (args) => {
        const { request: request3 } = args;
        if (!HttpRequest.isInstance(request3) || options2.runtime !== "node" || request3.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {
          return next(args);
        }
        const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];
        const traceId = process.env[ENV_TRACE_ID];
        const nonEmptyString = (str) => typeof str === "string" && str.length > 0;
        if (nonEmptyString(functionName) && nonEmptyString(traceId)) {
          request3.headers[TRACE_ID_HEADER_NAME] = traceId;
        }
        return next({
          ...args,
          request: request3
        });
      };
      addRecursionDetectionMiddlewareOptions = {
        step: "build",
        tags: ["RECURSION_DETECTION"],
        name: "recursionDetectionMiddleware",
        override: true,
        priority: "low"
      };
      getRecursionDetectionPlugin = (options2) => ({
        applyToStack: (clientStack) => {
          clientStack.add(recursionDetectionMiddleware(options2), addRecursionDetectionMiddlewareOptions);
        }
      });
    }
  });

  // node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js
  function resolveUserAgentConfig(input3) {
    return {
      ...input3,
      customUserAgent: typeof input3.customUserAgent === "string" ? [[input3.customUserAgent]] : input3.customUserAgent
    };
  }
  var init_configurations = __esm({
    "node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js"() {
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/lib/isIpAddress.js
  var IP_V4_REGEX, isIpAddress;
  var init_isIpAddress = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/lib/isIpAddress.js"() {
      IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$`);
      isIpAddress = (value14) => IP_V4_REGEX.test(value14) || value14.startsWith("[") && value14.endsWith("]");
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/lib/isValidHostLabel.js
  var VALID_HOST_LABEL_REGEX, isValidHostLabel;
  var init_isValidHostLabel = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/lib/isValidHostLabel.js"() {
      VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);
      isValidHostLabel = (value14, allowSubDomains = false) => {
        if (!allowSubDomains) {
          return VALID_HOST_LABEL_REGEX.test(value14);
        }
        const labels9 = value14.split(".");
        for (const label5 of labels9) {
          if (!isValidHostLabel(label5)) {
            return false;
          }
        }
        return true;
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/customEndpointFunctions.js
  var customEndpointFunctions;
  var init_customEndpointFunctions = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/customEndpointFunctions.js"() {
      customEndpointFunctions = {};
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/debug/debugId.js
  var debugId;
  var init_debugId = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/debug/debugId.js"() {
      debugId = "endpoints";
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/debug/toDebugString.js
  function toDebugString(input3) {
    if (typeof input3 !== "object" || input3 == null) {
      return input3;
    }
    if ("ref" in input3) {
      return `$${toDebugString(input3.ref)}`;
    }
    if ("fn" in input3) {
      return `${input3.fn}(${(input3.argv || []).map(toDebugString).join(", ")})`;
    }
    return JSON.stringify(input3, null, 2);
  }
  var init_toDebugString = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/debug/toDebugString.js"() {
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/debug/index.js
  var init_debug = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/debug/index.js"() {
      init_debugId();
      init_toDebugString();
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/types/EndpointError.js
  var EndpointError;
  var init_EndpointError = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/types/EndpointError.js"() {
      EndpointError = class extends Error {
        constructor(message2) {
          super(message2);
          this.name = "EndpointError";
        }
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/types/EndpointFunctions.js
  var init_EndpointFunctions = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/types/EndpointFunctions.js"() {
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/types/EndpointRuleObject.js
  var init_EndpointRuleObject2 = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/types/EndpointRuleObject.js"() {
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/types/ErrorRuleObject.js
  var init_ErrorRuleObject2 = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/types/ErrorRuleObject.js"() {
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/types/RuleSetObject.js
  var init_RuleSetObject2 = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/types/RuleSetObject.js"() {
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/types/TreeRuleObject.js
  var init_TreeRuleObject2 = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/types/TreeRuleObject.js"() {
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/types/shared.js
  var init_shared2 = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/types/shared.js"() {
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/types/index.js
  var init_types2 = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/types/index.js"() {
      init_EndpointError();
      init_EndpointFunctions();
      init_EndpointRuleObject2();
      init_ErrorRuleObject2();
      init_RuleSetObject2();
      init_TreeRuleObject2();
      init_shared2();
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/lib/booleanEquals.js
  var booleanEquals;
  var init_booleanEquals = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/lib/booleanEquals.js"() {
      booleanEquals = (value1, value22) => value1 === value22;
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/lib/getAttrPathList.js
  var getAttrPathList;
  var init_getAttrPathList = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/lib/getAttrPathList.js"() {
      init_types2();
      getAttrPathList = (path) => {
        const parts = path.split(".");
        const pathList = [];
        for (const part of parts) {
          const squareBracketIndex = part.indexOf("[");
          if (squareBracketIndex !== -1) {
            if (part.indexOf("]") !== part.length - 1) {
              throw new EndpointError(`Path: '${path}' does not end with ']'`);
            }
            const arrayIndex = part.slice(squareBracketIndex + 1, -1);
            if (Number.isNaN(parseInt(arrayIndex))) {
              throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);
            }
            if (squareBracketIndex !== 0) {
              pathList.push(part.slice(0, squareBracketIndex));
            }
            pathList.push(arrayIndex);
          } else {
            pathList.push(part);
          }
        }
        return pathList;
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/lib/getAttr.js
  var getAttr;
  var init_getAttr = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/lib/getAttr.js"() {
      init_types2();
      init_getAttrPathList();
      getAttr = (value14, path) => getAttrPathList(path).reduce((acc, index4) => {
        if (typeof acc !== "object") {
          throw new EndpointError(`Index '${index4}' in '${path}' not found in '${JSON.stringify(value14)}'`);
        } else if (Array.isArray(acc)) {
          return acc[parseInt(index4)];
        }
        return acc[index4];
      }, value14);
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/lib/isSet.js
  var isSet;
  var init_isSet = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/lib/isSet.js"() {
      isSet = (value14) => value14 != null;
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/lib/not.js
  var not;
  var init_not = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/lib/not.js"() {
      not = (value14) => !value14;
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/lib/parseURL.js
  var DEFAULT_PORTS, parseURL;
  var init_parseURL = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/lib/parseURL.js"() {
      init_dist_es2();
      init_isIpAddress();
      DEFAULT_PORTS = {
        [EndpointURLScheme.HTTP]: 80,
        [EndpointURLScheme.HTTPS]: 443
      };
      parseURL = (value14) => {
        const whatwgURL = (() => {
          try {
            if (value14 instanceof URL) {
              return value14;
            }
            if (typeof value14 === "object" && "hostname" in value14) {
              const { hostname: hostname3, port: port2, protocol: protocol3 = "", path = "", query: query3 = {} } = value14;
              const url = new URL(`${protocol3}//${hostname3}${port2 ? `:${port2}` : ""}${path}`);
              url.search = Object.entries(query3).map(([k3, v3]) => `${k3}=${v3}`).join("&");
              return url;
            }
            return new URL(value14);
          } catch (error4) {
            return null;
          }
        })();
        if (!whatwgURL) {
          console.error(`Unable to parse ${JSON.stringify(value14)} as a whatwg URL.`);
          return null;
        }
        const urlString = whatwgURL.href;
        const { host: host3, hostname: hostname2, pathname: pathname2, protocol: protocol2, search: search2 } = whatwgURL;
        if (search2) {
          return null;
        }
        const scheme = protocol2.slice(0, -1);
        if (!Object.values(EndpointURLScheme).includes(scheme)) {
          return null;
        }
        const isIp = isIpAddress(hostname2);
        const inputContainsDefaultPort = urlString.includes(`${host3}:${DEFAULT_PORTS[scheme]}`) || typeof value14 === "string" && value14.includes(`${host3}:${DEFAULT_PORTS[scheme]}`);
        const authority = `${host3}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;
        return {
          scheme,
          authority,
          path: pathname2,
          normalizedPath: pathname2.endsWith("/") ? pathname2 : `${pathname2}/`,
          isIp
        };
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/lib/stringEquals.js
  var stringEquals;
  var init_stringEquals = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/lib/stringEquals.js"() {
      stringEquals = (value1, value22) => value1 === value22;
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/lib/substring.js
  var substring;
  var init_substring = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/lib/substring.js"() {
      substring = (input3, start2, stop, reverse3) => {
        if (start2 >= stop || input3.length < stop) {
          return null;
        }
        if (!reverse3) {
          return input3.substring(start2, stop);
        }
        return input3.substring(input3.length - stop, input3.length - start2);
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/lib/uriEncode.js
  var uriEncode;
  var init_uriEncode = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/lib/uriEncode.js"() {
      uriEncode = (value14) => encodeURIComponent(value14).replace(/[!*'()]/g, (c3) => `%${c3.charCodeAt(0).toString(16).toUpperCase()}`);
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/lib/index.js
  var init_lib = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/lib/index.js"() {
      init_booleanEquals();
      init_getAttr();
      init_isSet();
      init_isValidHostLabel();
      init_not();
      init_parseURL();
      init_stringEquals();
      init_substring();
      init_uriEncode();
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/endpointFunctions.js
  var endpointFunctions;
  var init_endpointFunctions = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/endpointFunctions.js"() {
      init_lib();
      endpointFunctions = {
        booleanEquals,
        getAttr,
        isSet,
        isValidHostLabel,
        not,
        parseURL,
        stringEquals,
        substring,
        uriEncode
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/evaluateTemplate.js
  var evaluateTemplate;
  var init_evaluateTemplate = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/evaluateTemplate.js"() {
      init_lib();
      evaluateTemplate = (template, options2) => {
        const evaluatedTemplateArr = [];
        const templateContext = {
          ...options2.endpointParams,
          ...options2.referenceRecord
        };
        let currentIndex = 0;
        while (currentIndex < template.length) {
          const openingBraceIndex = template.indexOf("{", currentIndex);
          if (openingBraceIndex === -1) {
            evaluatedTemplateArr.push(template.slice(currentIndex));
            break;
          }
          evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));
          const closingBraceIndex = template.indexOf("}", openingBraceIndex);
          if (closingBraceIndex === -1) {
            evaluatedTemplateArr.push(template.slice(openingBraceIndex));
            break;
          }
          if (template[openingBraceIndex + 1] === "{" && template[closingBraceIndex + 1] === "}") {
            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));
            currentIndex = closingBraceIndex + 2;
          }
          const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);
          if (parameterName.includes("#")) {
            const [refName, attrName] = parameterName.split("#");
            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));
          } else {
            evaluatedTemplateArr.push(templateContext[parameterName]);
          }
          currentIndex = closingBraceIndex + 1;
        }
        return evaluatedTemplateArr.join("");
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/getReferenceValue.js
  var getReferenceValue;
  var init_getReferenceValue = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/getReferenceValue.js"() {
      getReferenceValue = ({ ref: ref2 }, options2) => {
        const referenceRecord = {
          ...options2.endpointParams,
          ...options2.referenceRecord
        };
        return referenceRecord[ref2];
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/evaluateExpression.js
  var evaluateExpression;
  var init_evaluateExpression = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/evaluateExpression.js"() {
      init_types2();
      init_callFunction();
      init_evaluateTemplate();
      init_getReferenceValue();
      evaluateExpression = (obj, keyName, options2) => {
        if (typeof obj === "string") {
          return evaluateTemplate(obj, options2);
        } else if (obj["fn"]) {
          return callFunction(obj, options2);
        } else if (obj["ref"]) {
          return getReferenceValue(obj, options2);
        }
        throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/callFunction.js
  var callFunction;
  var init_callFunction = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/callFunction.js"() {
      init_customEndpointFunctions();
      init_endpointFunctions();
      init_evaluateExpression();
      callFunction = ({ fn, argv }, options2) => {
        const evaluatedArgs = argv.map((arg) => ["boolean", "number"].includes(typeof arg) ? arg : evaluateExpression(arg, "arg", options2));
        const fnSegments = fn.split(".");
        if (fnSegments[0] in customEndpointFunctions && fnSegments[1] != null) {
          return customEndpointFunctions[fnSegments[0]][fnSegments[1]](...evaluatedArgs);
        }
        return endpointFunctions[fn](...evaluatedArgs);
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/evaluateCondition.js
  var evaluateCondition;
  var init_evaluateCondition = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/evaluateCondition.js"() {
      init_debug();
      init_types2();
      init_callFunction();
      evaluateCondition = ({ assign: assign2, ...fnArgs }, options2) => {
        if (assign2 && assign2 in options2.referenceRecord) {
          throw new EndpointError(`'${assign2}' is already defined in Reference Record.`);
        }
        const value14 = callFunction(fnArgs, options2);
        options2.logger?.debug?.(`${debugId} evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value14)}`);
        return {
          result: value14 === "" ? true : !!value14,
          ...assign2 != null && { toAssign: { name: assign2, value: value14 } }
        };
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/evaluateConditions.js
  var evaluateConditions;
  var init_evaluateConditions = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/evaluateConditions.js"() {
      init_debug();
      init_evaluateCondition();
      evaluateConditions = (conditions = [], options2) => {
        const conditionsReferenceRecord = {};
        for (const condition of conditions) {
          const { result, toAssign } = evaluateCondition(condition, {
            ...options2,
            referenceRecord: {
              ...options2.referenceRecord,
              ...conditionsReferenceRecord
            }
          });
          if (!result) {
            return { result };
          }
          if (toAssign) {
            conditionsReferenceRecord[toAssign.name] = toAssign.value;
            options2.logger?.debug?.(`${debugId} assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);
          }
        }
        return { result: true, referenceRecord: conditionsReferenceRecord };
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointHeaders.js
  var getEndpointHeaders;
  var init_getEndpointHeaders = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointHeaders.js"() {
      init_types2();
      init_evaluateExpression();
      getEndpointHeaders = (headers, options2) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({
        ...acc,
        [headerKey]: headerVal.map((headerValEntry) => {
          const processedExpr = evaluateExpression(headerValEntry, "Header value entry", options2);
          if (typeof processedExpr !== "string") {
            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);
          }
          return processedExpr;
        })
      }), {});
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointProperty.js
  var getEndpointProperty;
  var init_getEndpointProperty = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointProperty.js"() {
      init_types2();
      init_evaluateTemplate();
      init_getEndpointProperties();
      getEndpointProperty = (property, options2) => {
        if (Array.isArray(property)) {
          return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options2));
        }
        switch (typeof property) {
          case "string":
            return evaluateTemplate(property, options2);
          case "object":
            if (property === null) {
              throw new EndpointError(`Unexpected endpoint property: ${property}`);
            }
            return getEndpointProperties(property, options2);
          case "boolean":
            return property;
          default:
            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);
        }
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointProperties.js
  var getEndpointProperties;
  var init_getEndpointProperties = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointProperties.js"() {
      init_getEndpointProperty();
      getEndpointProperties = (properties, options2) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({
        ...acc,
        [propertyKey]: getEndpointProperty(propertyVal, options2)
      }), {});
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointUrl.js
  var getEndpointUrl;
  var init_getEndpointUrl = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointUrl.js"() {
      init_types2();
      init_evaluateExpression();
      getEndpointUrl = (endpointUrl, options2) => {
        const expression = evaluateExpression(endpointUrl, "Endpoint URL", options2);
        if (typeof expression === "string") {
          try {
            return new URL(expression);
          } catch (error4) {
            console.error(`Failed to construct URL with ${expression}`, error4);
            throw error4;
          }
        }
        throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/evaluateEndpointRule.js
  var evaluateEndpointRule;
  var init_evaluateEndpointRule = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/evaluateEndpointRule.js"() {
      init_debug();
      init_evaluateConditions();
      init_getEndpointHeaders();
      init_getEndpointProperties();
      init_getEndpointUrl();
      evaluateEndpointRule = (endpointRule, options2) => {
        const { conditions, endpoint } = endpointRule;
        const { result, referenceRecord } = evaluateConditions(conditions, options2);
        if (!result) {
          return;
        }
        const endpointRuleOptions = {
          ...options2,
          referenceRecord: { ...options2.referenceRecord, ...referenceRecord }
        };
        const { url, properties, headers } = endpoint;
        options2.logger?.debug?.(`${debugId} Resolving endpoint from template: ${toDebugString(endpoint)}`);
        return {
          ...headers != void 0 && {
            headers: getEndpointHeaders(headers, endpointRuleOptions)
          },
          ...properties != void 0 && {
            properties: getEndpointProperties(properties, endpointRuleOptions)
          },
          url: getEndpointUrl(url, endpointRuleOptions)
        };
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/evaluateErrorRule.js
  var evaluateErrorRule;
  var init_evaluateErrorRule = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/evaluateErrorRule.js"() {
      init_types2();
      init_evaluateConditions();
      init_evaluateExpression();
      evaluateErrorRule = (errorRule, options2) => {
        const { conditions, error: error4 } = errorRule;
        const { result, referenceRecord } = evaluateConditions(conditions, options2);
        if (!result) {
          return;
        }
        throw new EndpointError(evaluateExpression(error4, "Error", {
          ...options2,
          referenceRecord: { ...options2.referenceRecord, ...referenceRecord }
        }));
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/evaluateTreeRule.js
  var evaluateTreeRule;
  var init_evaluateTreeRule = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/evaluateTreeRule.js"() {
      init_evaluateConditions();
      init_evaluateRules();
      evaluateTreeRule = (treeRule, options2) => {
        const { conditions, rules } = treeRule;
        const { result, referenceRecord } = evaluateConditions(conditions, options2);
        if (!result) {
          return;
        }
        return evaluateRules(rules, {
          ...options2,
          referenceRecord: { ...options2.referenceRecord, ...referenceRecord }
        });
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/evaluateRules.js
  var evaluateRules;
  var init_evaluateRules = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/evaluateRules.js"() {
      init_types2();
      init_evaluateEndpointRule();
      init_evaluateErrorRule();
      init_evaluateTreeRule();
      evaluateRules = (rules, options2) => {
        for (const rule of rules) {
          if (rule.type === "endpoint") {
            const endpointOrUndefined = evaluateEndpointRule(rule, options2);
            if (endpointOrUndefined) {
              return endpointOrUndefined;
            }
          } else if (rule.type === "error") {
            evaluateErrorRule(rule, options2);
          } else if (rule.type === "tree") {
            const endpointOrUndefined = evaluateTreeRule(rule, options2);
            if (endpointOrUndefined) {
              return endpointOrUndefined;
            }
          } else {
            throw new EndpointError(`Unknown endpoint rule: ${rule}`);
          }
        }
        throw new EndpointError(`Rules evaluation failed`);
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/utils/index.js
  var init_utils = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/utils/index.js"() {
      init_customEndpointFunctions();
      init_evaluateRules();
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/resolveEndpoint.js
  var resolveEndpoint;
  var init_resolveEndpoint = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/resolveEndpoint.js"() {
      init_debug();
      init_types2();
      init_utils();
      resolveEndpoint = (ruleSetObject, options2) => {
        const { endpointParams, logger: logger2 } = options2;
        const { parameters, rules } = ruleSetObject;
        options2.logger?.debug?.(`${debugId} Initial EndpointParams: ${toDebugString(endpointParams)}`);
        const paramsWithDefault = Object.entries(parameters).filter(([, v3]) => v3.default != null).map(([k3, v3]) => [k3, v3.default]);
        if (paramsWithDefault.length > 0) {
          for (const [paramKey, paramDefaultValue] of paramsWithDefault) {
            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;
          }
        }
        const requiredParams = Object.entries(parameters).filter(([, v3]) => v3.required).map(([k3]) => k3);
        for (const requiredParam of requiredParams) {
          if (endpointParams[requiredParam] == null) {
            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);
          }
        }
        const endpoint = evaluateRules(rules, { endpointParams, logger: logger2, referenceRecord: {} });
        if (options2.endpointParams?.Endpoint) {
          try {
            const givenEndpoint = new URL(options2.endpointParams.Endpoint);
            const { protocol: protocol2, port: port2 } = givenEndpoint;
            endpoint.url.protocol = protocol2;
            endpoint.url.port = port2;
          } catch (e3) {
          }
        }
        options2.logger?.debug?.(`${debugId} Resolved endpoint: ${toDebugString(endpoint)}`);
        return endpoint;
      };
    }
  });

  // node_modules/@smithy/util-endpoints/dist-es/index.js
  var init_dist_es7 = __esm({
    "node_modules/@smithy/util-endpoints/dist-es/index.js"() {
      init_isIpAddress();
      init_isValidHostLabel();
      init_customEndpointFunctions();
      init_resolveEndpoint();
      init_types2();
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/lib/isIpAddress.js
  var init_isIpAddress2 = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/lib/isIpAddress.js"() {
      init_dist_es7();
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js
  var isVirtualHostableS3Bucket;
  var init_isVirtualHostableS3Bucket = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js"() {
      init_dist_es7();
      init_isIpAddress2();
      isVirtualHostableS3Bucket = (value14, allowSubDomains = false) => {
        if (allowSubDomains) {
          for (const label5 of value14.split(".")) {
            if (!isVirtualHostableS3Bucket(label5)) {
              return false;
            }
          }
          return true;
        }
        if (!isValidHostLabel(value14)) {
          return false;
        }
        if (value14.length < 3 || value14.length > 63) {
          return false;
        }
        if (value14 !== value14.toLowerCase()) {
          return false;
        }
        if (isIpAddress(value14)) {
          return false;
        }
        return true;
      };
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js
  var parseArn;
  var init_parseArn = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js"() {
      parseArn = (value14) => {
        const segments = value14.split(":");
        if (segments.length < 6)
          return null;
        const [arn, partition4, service, region, accountId, ...resourceId] = segments;
        if (arn !== "arn" || partition4 === "" || service === "" || resourceId[0] === "")
          return null;
        return {
          partition: partition4,
          service,
          region,
          accountId,
          resourceId: resourceId[0].includes("/") ? resourceId[0].split("/") : resourceId
        };
      };
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partitions.json
  var partitions_default;
  var init_partitions = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partitions.json"() {
      partitions_default = {
        partitions: [{
          id: "aws",
          outputs: {
            dnsSuffix: "amazonaws.com",
            dualStackDnsSuffix: "api.aws",
            implicitGlobalRegion: "us-east-1",
            name: "aws",
            supportsDualStack: true,
            supportsFIPS: true
          },
          regionRegex: "^(us|eu|ap|sa|ca|me|af|il)\\-\\w+\\-\\d+$",
          regions: {
            "af-south-1": {
              description: "Africa (Cape Town)"
            },
            "ap-east-1": {
              description: "Asia Pacific (Hong Kong)"
            },
            "ap-northeast-1": {
              description: "Asia Pacific (Tokyo)"
            },
            "ap-northeast-2": {
              description: "Asia Pacific (Seoul)"
            },
            "ap-northeast-3": {
              description: "Asia Pacific (Osaka)"
            },
            "ap-south-1": {
              description: "Asia Pacific (Mumbai)"
            },
            "ap-south-2": {
              description: "Asia Pacific (Hyderabad)"
            },
            "ap-southeast-1": {
              description: "Asia Pacific (Singapore)"
            },
            "ap-southeast-2": {
              description: "Asia Pacific (Sydney)"
            },
            "ap-southeast-3": {
              description: "Asia Pacific (Jakarta)"
            },
            "ap-southeast-4": {
              description: "Asia Pacific (Melbourne)"
            },
            "aws-global": {
              description: "AWS Standard global region"
            },
            "ca-central-1": {
              description: "Canada (Central)"
            },
            "ca-west-1": {
              description: "Canada West (Calgary)"
            },
            "eu-central-1": {
              description: "Europe (Frankfurt)"
            },
            "eu-central-2": {
              description: "Europe (Zurich)"
            },
            "eu-north-1": {
              description: "Europe (Stockholm)"
            },
            "eu-south-1": {
              description: "Europe (Milan)"
            },
            "eu-south-2": {
              description: "Europe (Spain)"
            },
            "eu-west-1": {
              description: "Europe (Ireland)"
            },
            "eu-west-2": {
              description: "Europe (London)"
            },
            "eu-west-3": {
              description: "Europe (Paris)"
            },
            "il-central-1": {
              description: "Israel (Tel Aviv)"
            },
            "me-central-1": {
              description: "Middle East (UAE)"
            },
            "me-south-1": {
              description: "Middle East (Bahrain)"
            },
            "sa-east-1": {
              description: "South America (Sao Paulo)"
            },
            "us-east-1": {
              description: "US East (N. Virginia)"
            },
            "us-east-2": {
              description: "US East (Ohio)"
            },
            "us-west-1": {
              description: "US West (N. California)"
            },
            "us-west-2": {
              description: "US West (Oregon)"
            }
          }
        }, {
          id: "aws-cn",
          outputs: {
            dnsSuffix: "amazonaws.com.cn",
            dualStackDnsSuffix: "api.amazonwebservices.com.cn",
            implicitGlobalRegion: "cn-northwest-1",
            name: "aws-cn",
            supportsDualStack: true,
            supportsFIPS: true
          },
          regionRegex: "^cn\\-\\w+\\-\\d+$",
          regions: {
            "aws-cn-global": {
              description: "AWS China global region"
            },
            "cn-north-1": {
              description: "China (Beijing)"
            },
            "cn-northwest-1": {
              description: "China (Ningxia)"
            }
          }
        }, {
          id: "aws-us-gov",
          outputs: {
            dnsSuffix: "amazonaws.com",
            dualStackDnsSuffix: "api.aws",
            implicitGlobalRegion: "us-gov-west-1",
            name: "aws-us-gov",
            supportsDualStack: true,
            supportsFIPS: true
          },
          regionRegex: "^us\\-gov\\-\\w+\\-\\d+$",
          regions: {
            "aws-us-gov-global": {
              description: "AWS GovCloud (US) global region"
            },
            "us-gov-east-1": {
              description: "AWS GovCloud (US-East)"
            },
            "us-gov-west-1": {
              description: "AWS GovCloud (US-West)"
            }
          }
        }, {
          id: "aws-iso",
          outputs: {
            dnsSuffix: "c2s.ic.gov",
            dualStackDnsSuffix: "c2s.ic.gov",
            implicitGlobalRegion: "us-iso-east-1",
            name: "aws-iso",
            supportsDualStack: false,
            supportsFIPS: true
          },
          regionRegex: "^us\\-iso\\-\\w+\\-\\d+$",
          regions: {
            "aws-iso-global": {
              description: "AWS ISO (US) global region"
            },
            "us-iso-east-1": {
              description: "US ISO East"
            },
            "us-iso-west-1": {
              description: "US ISO WEST"
            }
          }
        }, {
          id: "aws-iso-b",
          outputs: {
            dnsSuffix: "sc2s.sgov.gov",
            dualStackDnsSuffix: "sc2s.sgov.gov",
            implicitGlobalRegion: "us-isob-east-1",
            name: "aws-iso-b",
            supportsDualStack: false,
            supportsFIPS: true
          },
          regionRegex: "^us\\-isob\\-\\w+\\-\\d+$",
          regions: {
            "aws-iso-b-global": {
              description: "AWS ISOB (US) global region"
            },
            "us-isob-east-1": {
              description: "US ISOB East (Ohio)"
            }
          }
        }, {
          id: "aws-iso-e",
          outputs: {
            dnsSuffix: "cloud.adc-e.uk",
            dualStackDnsSuffix: "cloud.adc-e.uk",
            implicitGlobalRegion: "eu-isoe-west-1",
            name: "aws-iso-e",
            supportsDualStack: false,
            supportsFIPS: true
          },
          regionRegex: "^eu\\-isoe\\-\\w+\\-\\d+$",
          regions: {
            "eu-isoe-west-1": {
              description: "EU ISOE West"
            }
          }
        }, {
          id: "aws-iso-f",
          outputs: {
            dnsSuffix: "csp.hci.ic.gov",
            dualStackDnsSuffix: "csp.hci.ic.gov",
            implicitGlobalRegion: "us-isof-south-1",
            name: "aws-iso-f",
            supportsDualStack: false,
            supportsFIPS: true
          },
          regionRegex: "^us\\-isof\\-\\w+\\-\\d+$",
          regions: {}
        }],
        version: "1.1"
      };
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js
  var selectedPartitionsInfo, selectedUserAgentPrefix, partition, getUserAgentPrefix;
  var init_partition = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js"() {
      init_partitions();
      selectedPartitionsInfo = partitions_default;
      selectedUserAgentPrefix = "";
      partition = (value14) => {
        const { partitions } = selectedPartitionsInfo;
        for (const partition4 of partitions) {
          const { regions, outputs } = partition4;
          for (const [region, regionData] of Object.entries(regions)) {
            if (region === value14) {
              return {
                ...outputs,
                ...regionData
              };
            }
          }
        }
        for (const partition4 of partitions) {
          const { regionRegex, outputs } = partition4;
          if (new RegExp(regionRegex).test(value14)) {
            return {
              ...outputs
            };
          }
        }
        const DEFAULT_PARTITION = partitions.find((partition4) => partition4.id === "aws");
        if (!DEFAULT_PARTITION) {
          throw new Error("Provided region was not found in the partition array or regex, and default partition with id 'aws' doesn't exist.");
        }
        return {
          ...DEFAULT_PARTITION.outputs
        };
      };
      getUserAgentPrefix = () => selectedUserAgentPrefix;
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/aws.js
  var awsEndpointFunctions;
  var init_aws = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/aws.js"() {
      init_dist_es7();
      init_isVirtualHostableS3Bucket();
      init_parseArn();
      init_partition();
      awsEndpointFunctions = {
        isVirtualHostableS3Bucket,
        parseArn,
        partition
      };
      customEndpointFunctions.aws = awsEndpointFunctions;
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/resolveEndpoint.js
  var init_resolveEndpoint2 = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/resolveEndpoint.js"() {
      init_dist_es7();
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointError.js
  var init_EndpointError2 = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointError.js"() {
      init_dist_es7();
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointRuleObject.js
  var init_EndpointRuleObject3 = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointRuleObject.js"() {
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/types/ErrorRuleObject.js
  var init_ErrorRuleObject3 = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/types/ErrorRuleObject.js"() {
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/types/RuleSetObject.js
  var init_RuleSetObject3 = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/types/RuleSetObject.js"() {
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/types/TreeRuleObject.js
  var init_TreeRuleObject3 = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/types/TreeRuleObject.js"() {
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/types/shared.js
  var init_shared3 = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/types/shared.js"() {
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/types/index.js
  var init_types3 = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/types/index.js"() {
      init_EndpointError2();
      init_EndpointRuleObject3();
      init_ErrorRuleObject3();
      init_RuleSetObject3();
      init_TreeRuleObject3();
      init_shared3();
    }
  });

  // node_modules/@aws-sdk/util-endpoints/dist-es/index.js
  var init_dist_es8 = __esm({
    "node_modules/@aws-sdk/util-endpoints/dist-es/index.js"() {
      init_aws();
      init_partition();
      init_isIpAddress2();
      init_resolveEndpoint2();
      init_types3();
    }
  });

  // node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js
  var USER_AGENT, X_AMZ_USER_AGENT, SPACE, UA_NAME_SEPARATOR, UA_NAME_ESCAPE_REGEX, UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR;
  var init_constants = __esm({
    "node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js"() {
      USER_AGENT = "user-agent";
      X_AMZ_USER_AGENT = "x-amz-user-agent";
      SPACE = " ";
      UA_NAME_SEPARATOR = "/";
      UA_NAME_ESCAPE_REGEX = /[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w]/g;
      UA_VALUE_ESCAPE_REGEX = /[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w\#]/g;
      UA_ESCAPE_CHAR = "-";
    }
  });

  // node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js
  var userAgentMiddleware, escapeUserAgent, getUserAgentMiddlewareOptions, getUserAgentPlugin;
  var init_user_agent_middleware = __esm({
    "node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js"() {
      init_dist_es8();
      init_dist_es3();
      init_constants();
      userAgentMiddleware = (options2) => (next, context) => async (args) => {
        const { request: request3 } = args;
        if (!HttpRequest.isInstance(request3))
          return next(args);
        const { headers } = request3;
        const userAgent2 = context?.userAgent?.map(escapeUserAgent) || [];
        const defaultUserAgent2 = (await options2.defaultUserAgentProvider()).map(escapeUserAgent);
        const customUserAgent = options2?.customUserAgent?.map(escapeUserAgent) || [];
        const prefix = getUserAgentPrefix();
        const sdkUserAgentValue = (prefix ? [prefix] : []).concat([...defaultUserAgent2, ...userAgent2, ...customUserAgent]).join(SPACE);
        const normalUAValue = [
          ...defaultUserAgent2.filter((section2) => section2.startsWith("aws-sdk-")),
          ...customUserAgent
        ].join(SPACE);
        if (options2.runtime !== "browser") {
          if (normalUAValue) {
            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT] ? `${headers[USER_AGENT]} ${normalUAValue}` : normalUAValue;
          }
          headers[USER_AGENT] = sdkUserAgentValue;
        } else {
          headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;
        }
        return next({
          ...args,
          request: request3
        });
      };
      escapeUserAgent = (userAgentPair) => {
        const name15 = userAgentPair[0].split(UA_NAME_SEPARATOR).map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR)).join(UA_NAME_SEPARATOR);
        const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);
        const prefixSeparatorIndex = name15.indexOf(UA_NAME_SEPARATOR);
        const prefix = name15.substring(0, prefixSeparatorIndex);
        let uaName = name15.substring(prefixSeparatorIndex + 1);
        if (prefix === "api") {
          uaName = uaName.toLowerCase();
        }
        return [prefix, uaName, version].filter((item) => item && item.length > 0).reduce((acc, item, index4) => {
          switch (index4) {
            case 0:
              return item;
            case 1:
              return `${acc}/${item}`;
            default:
              return `${acc}#${item}`;
          }
        }, "");
      };
      getUserAgentMiddlewareOptions = {
        name: "getUserAgentMiddleware",
        step: "build",
        priority: "low",
        tags: ["SET_USER_AGENT", "USER_AGENT"],
        override: true
      };
      getUserAgentPlugin = (config) => ({
        applyToStack: (clientStack) => {
          clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);
        }
      });
    }
  });

  // node_modules/@aws-sdk/middleware-user-agent/dist-es/index.js
  var init_dist_es9 = __esm({
    "node_modules/@aws-sdk/middleware-user-agent/dist-es/index.js"() {
      init_configurations();
      init_user_agent_middleware();
    }
  });

  // node_modules/@smithy/util-config-provider/dist-es/booleanSelector.js
  var init_booleanSelector = __esm({
    "node_modules/@smithy/util-config-provider/dist-es/booleanSelector.js"() {
    }
  });

  // node_modules/@smithy/util-config-provider/dist-es/numberSelector.js
  var init_numberSelector = __esm({
    "node_modules/@smithy/util-config-provider/dist-es/numberSelector.js"() {
    }
  });

  // node_modules/@smithy/util-config-provider/dist-es/types.js
  var SelectorType;
  var init_types4 = __esm({
    "node_modules/@smithy/util-config-provider/dist-es/types.js"() {
      (function(SelectorType2) {
        SelectorType2["ENV"] = "env";
        SelectorType2["CONFIG"] = "shared config entry";
      })(SelectorType || (SelectorType = {}));
    }
  });

  // node_modules/@smithy/util-config-provider/dist-es/index.js
  var init_dist_es10 = __esm({
    "node_modules/@smithy/util-config-provider/dist-es/index.js"() {
      init_booleanSelector();
      init_numberSelector();
      init_types4();
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js
  var DEFAULT_USE_DUALSTACK_ENDPOINT;
  var init_NodeUseDualstackEndpointConfigOptions = __esm({
    "node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js"() {
      init_dist_es10();
      DEFAULT_USE_DUALSTACK_ENDPOINT = false;
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js
  var DEFAULT_USE_FIPS_ENDPOINT;
  var init_NodeUseFipsEndpointConfigOptions = __esm({
    "node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js"() {
      init_dist_es10();
      DEFAULT_USE_FIPS_ENDPOINT = false;
    }
  });

  // node_modules/@smithy/util-middleware/dist-es/getSmithyContext.js
  var getSmithyContext;
  var init_getSmithyContext = __esm({
    "node_modules/@smithy/util-middleware/dist-es/getSmithyContext.js"() {
      init_dist_es2();
      getSmithyContext = (context) => context[SMITHY_CONTEXT_KEY] || (context[SMITHY_CONTEXT_KEY] = {});
    }
  });

  // node_modules/@smithy/util-middleware/dist-es/normalizeProvider.js
  var normalizeProvider;
  var init_normalizeProvider = __esm({
    "node_modules/@smithy/util-middleware/dist-es/normalizeProvider.js"() {
      normalizeProvider = (input3) => {
        if (typeof input3 === "function")
          return input3;
        const promisified = Promise.resolve(input3);
        return () => promisified;
      };
    }
  });

  // node_modules/@smithy/util-middleware/dist-es/index.js
  var init_dist_es11 = __esm({
    "node_modules/@smithy/util-middleware/dist-es/index.js"() {
      init_getSmithyContext();
      init_normalizeProvider();
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/endpointsConfig/resolveCustomEndpointsConfig.js
  var init_resolveCustomEndpointsConfig = __esm({
    "node_modules/@smithy/config-resolver/dist-es/endpointsConfig/resolveCustomEndpointsConfig.js"() {
      init_dist_es11();
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/endpointsConfig/utils/getEndpointFromRegion.js
  var init_getEndpointFromRegion = __esm({
    "node_modules/@smithy/config-resolver/dist-es/endpointsConfig/utils/getEndpointFromRegion.js"() {
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/endpointsConfig/resolveEndpointsConfig.js
  var init_resolveEndpointsConfig = __esm({
    "node_modules/@smithy/config-resolver/dist-es/endpointsConfig/resolveEndpointsConfig.js"() {
      init_dist_es11();
      init_getEndpointFromRegion();
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/endpointsConfig/index.js
  var init_endpointsConfig = __esm({
    "node_modules/@smithy/config-resolver/dist-es/endpointsConfig/index.js"() {
      init_NodeUseDualstackEndpointConfigOptions();
      init_NodeUseFipsEndpointConfigOptions();
      init_resolveCustomEndpointsConfig();
      init_resolveEndpointsConfig();
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionConfig/config.js
  var init_config2 = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionConfig/config.js"() {
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionConfig/isFipsRegion.js
  var isFipsRegion;
  var init_isFipsRegion = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionConfig/isFipsRegion.js"() {
      isFipsRegion = (region) => typeof region === "string" && (region.startsWith("fips-") || region.endsWith("-fips"));
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionConfig/getRealRegion.js
  var getRealRegion;
  var init_getRealRegion = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionConfig/getRealRegion.js"() {
      init_isFipsRegion();
      getRealRegion = (region) => isFipsRegion(region) ? ["fips-aws-global", "aws-fips"].includes(region) ? "us-east-1" : region.replace(/fips-(dkr-|prod-)?|-fips/, "") : region;
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionConfig/resolveRegionConfig.js
  var resolveRegionConfig;
  var init_resolveRegionConfig = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionConfig/resolveRegionConfig.js"() {
      init_getRealRegion();
      init_isFipsRegion();
      resolveRegionConfig = (input3) => {
        const { region, useFipsEndpoint } = input3;
        if (!region) {
          throw new Error("Region is missing");
        }
        return {
          ...input3,
          region: async () => {
            if (typeof region === "string") {
              return getRealRegion(region);
            }
            const providedRegion = await region();
            return getRealRegion(providedRegion);
          },
          useFipsEndpoint: async () => {
            const providedRegion = typeof region === "string" ? region : await region();
            if (isFipsRegion(providedRegion)) {
              return true;
            }
            return typeof useFipsEndpoint !== "function" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();
          }
        };
      };
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionConfig/index.js
  var init_regionConfig = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionConfig/index.js"() {
      init_config2();
      init_resolveRegionConfig();
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionInfo/PartitionHash.js
  var init_PartitionHash = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionInfo/PartitionHash.js"() {
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionInfo/RegionHash.js
  var init_RegionHash = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionInfo/RegionHash.js"() {
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionInfo/getHostnameFromVariants.js
  var init_getHostnameFromVariants = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionInfo/getHostnameFromVariants.js"() {
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionInfo/getResolvedHostname.js
  var init_getResolvedHostname = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionInfo/getResolvedHostname.js"() {
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionInfo/getResolvedPartition.js
  var init_getResolvedPartition = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionInfo/getResolvedPartition.js"() {
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionInfo/getResolvedSigningRegion.js
  var init_getResolvedSigningRegion = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionInfo/getResolvedSigningRegion.js"() {
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionInfo/getRegionInfo.js
  var init_getRegionInfo = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionInfo/getRegionInfo.js"() {
      init_getHostnameFromVariants();
      init_getResolvedHostname();
      init_getResolvedPartition();
      init_getResolvedSigningRegion();
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/regionInfo/index.js
  var init_regionInfo = __esm({
    "node_modules/@smithy/config-resolver/dist-es/regionInfo/index.js"() {
      init_PartitionHash();
      init_RegionHash();
      init_getRegionInfo();
    }
  });

  // node_modules/@smithy/config-resolver/dist-es/index.js
  var init_dist_es12 = __esm({
    "node_modules/@smithy/config-resolver/dist-es/index.js"() {
      init_endpointsConfig();
      init_regionConfig();
      init_regionInfo();
    }
  });

  // node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/httpAuthSchemeMiddleware.js
  function convertHttpAuthSchemesToMap(httpAuthSchemes) {
    const map25 = /* @__PURE__ */ new Map();
    for (const scheme of httpAuthSchemes) {
      map25.set(scheme.schemeId, scheme);
    }
    return map25;
  }
  var httpAuthSchemeMiddleware;
  var init_httpAuthSchemeMiddleware = __esm({
    "node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/httpAuthSchemeMiddleware.js"() {
      init_dist_es2();
      init_dist_es11();
      httpAuthSchemeMiddleware = (config, mwOptions) => (next, context) => async (args) => {
        const options2 = config.httpAuthSchemeProvider(await mwOptions.httpAuthSchemeParametersProvider(config, context, args.input));
        const authSchemes = convertHttpAuthSchemesToMap(config.httpAuthSchemes);
        const smithyContext = getSmithyContext(context);
        const failureReasons = [];
        for (const option2 of options2) {
          const scheme = authSchemes.get(option2.schemeId);
          if (!scheme) {
            failureReasons.push(`HttpAuthScheme \`${option2.schemeId}\` was not enabled for this service.`);
            continue;
          }
          const identityProvider = scheme.identityProvider(await mwOptions.identityProviderConfigProvider(config));
          if (!identityProvider) {
            failureReasons.push(`HttpAuthScheme \`${option2.schemeId}\` did not have an IdentityProvider configured.`);
            continue;
          }
          const { identityProperties = {}, signingProperties = {} } = option2.propertiesExtractor?.(config, context) || {};
          option2.identityProperties = Object.assign(option2.identityProperties || {}, identityProperties);
          option2.signingProperties = Object.assign(option2.signingProperties || {}, signingProperties);
          smithyContext.selectedHttpAuthScheme = {
            httpAuthOption: option2,
            identity: await identityProvider(option2.identityProperties),
            signer: scheme.signer
          };
          break;
        }
        if (!smithyContext.selectedHttpAuthScheme) {
          throw new Error(failureReasons.join("\n"));
        }
        return next(args);
      };
    }
  });

  // node_modules/@smithy/middleware-endpoint/dist-es/service-customizations/s3.js
  var resolveParamsForS3, DOMAIN_PATTERN, IP_ADDRESS_PATTERN, DOTS_PATTERN, isDnsCompatibleBucketName, isArnBucketName;
  var init_s3 = __esm({
    "node_modules/@smithy/middleware-endpoint/dist-es/service-customizations/s3.js"() {
      resolveParamsForS3 = async (endpointParams) => {
        const bucket = endpointParams?.Bucket || "";
        if (typeof endpointParams.Bucket === "string") {
          endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent("#")).replace(/\?/g, encodeURIComponent("?"));
        }
        if (isArnBucketName(bucket)) {
          if (endpointParams.ForcePathStyle === true) {
            throw new Error("Path-style addressing cannot be used with ARN buckets");
          }
        } else if (!isDnsCompatibleBucketName(bucket) || bucket.indexOf(".") !== -1 && !String(endpointParams.Endpoint).startsWith("http:") || bucket.toLowerCase() !== bucket || bucket.length < 3) {
          endpointParams.ForcePathStyle = true;
        }
        if (endpointParams.DisableMultiRegionAccessPoints) {
          endpointParams.disableMultiRegionAccessPoints = true;
          endpointParams.DisableMRAP = true;
        }
        return endpointParams;
      };
      DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/;
      IP_ADDRESS_PATTERN = /(\d+\.){3}\d+/;
      DOTS_PATTERN = /\.\./;
      isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);
      isArnBucketName = (bucketName) => {
        const [arn, partition4, service, , , bucket] = bucketName.split(":");
        const isArn = arn === "arn" && bucketName.split(":").length >= 6;
        const isValidArn = Boolean(isArn && partition4 && service && bucket);
        if (isArn && !isValidArn) {
          throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);
        }
        return isValidArn;
      };
    }
  });

  // node_modules/@smithy/middleware-endpoint/dist-es/service-customizations/index.js
  var init_service_customizations = __esm({
    "node_modules/@smithy/middleware-endpoint/dist-es/service-customizations/index.js"() {
      init_s3();
    }
  });

  // node_modules/@smithy/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js
  var createConfigValueProvider;
  var init_createConfigValueProvider = __esm({
    "node_modules/@smithy/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js"() {
      createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {
        const configProvider = async () => {
          const configValue = config[configKey] ?? config[canonicalEndpointParamKey];
          if (typeof configValue === "function") {
            return configValue();
          }
          return configValue;
        };
        if (configKey === "credentialScope" || canonicalEndpointParamKey === "CredentialScope") {
          return async () => {
            const credentials = typeof config.credentials === "function" ? await config.credentials() : config.credentials;
            const configValue = credentials?.credentialScope ?? credentials?.CredentialScope;
            return configValue;
          };
        }
        if (configKey === "endpoint" || canonicalEndpointParamKey === "endpoint") {
          return async () => {
            const endpoint = await configProvider();
            if (endpoint && typeof endpoint === "object") {
              if ("url" in endpoint) {
                return endpoint.url.href;
              }
              if ("hostname" in endpoint) {
                const { protocol: protocol2, hostname: hostname2, port: port2, path } = endpoint;
                return `${protocol2}//${hostname2}${port2 ? ":" + port2 : ""}${path}`;
              }
            }
            return endpoint;
          };
        }
        return configProvider;
      };
    }
  });

  // node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromConfig.browser.js
  var getEndpointFromConfig;
  var init_getEndpointFromConfig_browser = __esm({
    "node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromConfig.browser.js"() {
      getEndpointFromConfig = async (serviceId) => void 0;
    }
  });

  // node_modules/@smithy/querystring-parser/dist-es/index.js
  function parseQueryString(querystring) {
    const query3 = {};
    querystring = querystring.replace(/^\?/, "");
    if (querystring) {
      for (const pair of querystring.split("&")) {
        let [key2, value14 = null] = pair.split("=");
        key2 = decodeURIComponent(key2);
        if (value14) {
          value14 = decodeURIComponent(value14);
        }
        if (!(key2 in query3)) {
          query3[key2] = value14;
        } else if (Array.isArray(query3[key2])) {
          query3[key2].push(value14);
        } else {
          query3[key2] = [query3[key2], value14];
        }
      }
    }
    return query3;
  }
  var init_dist_es13 = __esm({
    "node_modules/@smithy/querystring-parser/dist-es/index.js"() {
    }
  });

  // node_modules/@smithy/url-parser/dist-es/index.js
  var parseUrl;
  var init_dist_es14 = __esm({
    "node_modules/@smithy/url-parser/dist-es/index.js"() {
      init_dist_es13();
      parseUrl = (url) => {
        if (typeof url === "string") {
          return parseUrl(new URL(url));
        }
        const { hostname: hostname2, pathname: pathname2, port: port2, protocol: protocol2, search: search2 } = url;
        let query3;
        if (search2) {
          query3 = parseQueryString(search2);
        }
        return {
          hostname: hostname2,
          port: port2 ? parseInt(port2) : void 0,
          protocol: protocol2,
          path: pathname2,
          query: query3
        };
      };
    }
  });

  // node_modules/@smithy/middleware-endpoint/dist-es/adaptors/toEndpointV1.js
  var toEndpointV1;
  var init_toEndpointV1 = __esm({
    "node_modules/@smithy/middleware-endpoint/dist-es/adaptors/toEndpointV1.js"() {
      init_dist_es14();
      toEndpointV1 = (endpoint) => {
        if (typeof endpoint === "object") {
          if ("url" in endpoint) {
            return parseUrl(endpoint.url);
          }
          return endpoint;
        }
        return parseUrl(endpoint);
      };
    }
  });

  // node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js
  var getEndpointFromInstructions, resolveParams;
  var init_getEndpointFromInstructions = __esm({
    "node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js"() {
      init_service_customizations();
      init_createConfigValueProvider();
      init_getEndpointFromConfig_browser();
      init_toEndpointV1();
      getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {
        if (!clientConfig.endpoint) {
          const endpointFromConfig = await getEndpointFromConfig(clientConfig.serviceId || "");
          if (endpointFromConfig) {
            clientConfig.endpoint = () => Promise.resolve(toEndpointV1(endpointFromConfig));
          }
        }
        const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);
        if (typeof clientConfig.endpointProvider !== "function") {
          throw new Error("config.endpointProvider is not set.");
        }
        const endpoint = clientConfig.endpointProvider(endpointParams, context);
        return endpoint;
      };
      resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {
        const endpointParams = {};
        const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};
        for (const [name15, instruction] of Object.entries(instructions)) {
          switch (instruction.type) {
            case "staticContextParams":
              endpointParams[name15] = instruction.value;
              break;
            case "contextParams":
              endpointParams[name15] = commandInput[instruction.name];
              break;
            case "clientContextParams":
            case "builtInParams":
              endpointParams[name15] = await createConfigValueProvider(instruction.name, name15, clientConfig)();
              break;
            default:
              throw new Error("Unrecognized endpoint parameter instruction: " + JSON.stringify(instruction));
          }
        }
        if (Object.keys(instructions).length === 0) {
          Object.assign(endpointParams, clientConfig);
        }
        if (String(clientConfig.serviceId).toLowerCase() === "s3") {
          await resolveParamsForS3(endpointParams);
        }
        return endpointParams;
      };
    }
  });

  // node_modules/@smithy/middleware-endpoint/dist-es/adaptors/index.js
  var init_adaptors = __esm({
    "node_modules/@smithy/middleware-endpoint/dist-es/adaptors/index.js"() {
      init_getEndpointFromInstructions();
      init_toEndpointV1();
    }
  });

  // node_modules/@smithy/middleware-endpoint/dist-es/endpointMiddleware.js
  var endpointMiddleware;
  var init_endpointMiddleware = __esm({
    "node_modules/@smithy/middleware-endpoint/dist-es/endpointMiddleware.js"() {
      init_dist_es11();
      init_getEndpointFromInstructions();
      endpointMiddleware = ({ config, instructions }) => {
        return (next, context) => async (args) => {
          const endpoint = await getEndpointFromInstructions(args.input, {
            getEndpointParameterInstructions() {
              return instructions;
            }
          }, { ...config }, context);
          context.endpointV2 = endpoint;
          context.authSchemes = endpoint.properties?.authSchemes;
          const authScheme = context.authSchemes?.[0];
          if (authScheme) {
            context["signing_region"] = authScheme.signingRegion;
            context["signing_service"] = authScheme.signingName;
            const smithyContext = getSmithyContext(context);
            const httpAuthOption = smithyContext?.selectedHttpAuthScheme?.httpAuthOption;
            if (httpAuthOption) {
              httpAuthOption.signingProperties = Object.assign(httpAuthOption.signingProperties || {}, {
                signing_region: authScheme.signingRegion,
                signingRegion: authScheme.signingRegion,
                signing_service: authScheme.signingName,
                signingName: authScheme.signingName,
                signingRegionSet: authScheme.signingRegionSet
              }, authScheme.properties);
            }
          }
          return next({
            ...args
          });
        };
      };
    }
  });

  // node_modules/@smithy/middleware-serde/dist-es/deserializerMiddleware.js
  var deserializerMiddleware;
  var init_deserializerMiddleware = __esm({
    "node_modules/@smithy/middleware-serde/dist-es/deserializerMiddleware.js"() {
      deserializerMiddleware = (options2, deserializer) => (next) => async (args) => {
        const { response } = await next(args);
        try {
          const parsed = await deserializer(response, options2);
          return {
            response,
            output: parsed
          };
        } catch (error4) {
          Object.defineProperty(error4, "$response", {
            value: response
          });
          if (!("$metadata" in error4)) {
            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;
            error4.message += "\n  " + hint;
            if (typeof error4.$responseBodyText !== "undefined") {
              if (error4.$response) {
                error4.$response.body = error4.$responseBodyText;
              }
            }
          }
          throw error4;
        }
      };
    }
  });

  // node_modules/@smithy/middleware-serde/dist-es/serializerMiddleware.js
  var serializerMiddleware;
  var init_serializerMiddleware = __esm({
    "node_modules/@smithy/middleware-serde/dist-es/serializerMiddleware.js"() {
      serializerMiddleware = (options2, serializer) => (next, context) => async (args) => {
        const endpoint = context.endpointV2?.url && options2.urlParser ? async () => options2.urlParser(context.endpointV2.url) : options2.endpoint;
        if (!endpoint) {
          throw new Error("No valid endpoint provider available.");
        }
        const request3 = await serializer(args.input, { ...options2, endpoint });
        return next({
          ...args,
          request: request3
        });
      };
    }
  });

  // node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js
  function getSerdePlugin(config, serializer, deserializer) {
    return {
      applyToStack: (commandStack) => {
        commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);
        commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);
      }
    };
  }
  var deserializerMiddlewareOption, serializerMiddlewareOption;
  var init_serdePlugin = __esm({
    "node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js"() {
      init_deserializerMiddleware();
      init_serializerMiddleware();
      deserializerMiddlewareOption = {
        name: "deserializerMiddleware",
        step: "deserialize",
        tags: ["DESERIALIZER"],
        override: true
      };
      serializerMiddlewareOption = {
        name: "serializerMiddleware",
        step: "serialize",
        tags: ["SERIALIZER"],
        override: true
      };
    }
  });

  // node_modules/@smithy/middleware-serde/dist-es/index.js
  var init_dist_es15 = __esm({
    "node_modules/@smithy/middleware-serde/dist-es/index.js"() {
      init_deserializerMiddleware();
      init_serdePlugin();
      init_serializerMiddleware();
    }
  });

  // node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js
  var endpointMiddlewareOptions, getEndpointPlugin;
  var init_getEndpointPlugin = __esm({
    "node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js"() {
      init_dist_es15();
      init_endpointMiddleware();
      endpointMiddlewareOptions = {
        step: "serialize",
        tags: ["ENDPOINT_PARAMETERS", "ENDPOINT_V2", "ENDPOINT"],
        name: "endpointV2Middleware",
        override: true,
        relation: "before",
        toMiddleware: serializerMiddlewareOption.name
      };
      getEndpointPlugin = (config, instructions) => ({
        applyToStack: (clientStack) => {
          clientStack.addRelativeTo(endpointMiddleware({
            config,
            instructions
          }), endpointMiddlewareOptions);
        }
      });
    }
  });

  // node_modules/@smithy/middleware-endpoint/dist-es/resolveEndpointConfig.js
  var resolveEndpointConfig;
  var init_resolveEndpointConfig = __esm({
    "node_modules/@smithy/middleware-endpoint/dist-es/resolveEndpointConfig.js"() {
      init_dist_es11();
      init_toEndpointV1();
      resolveEndpointConfig = (input3) => {
        const tls = input3.tls ?? true;
        const { endpoint } = input3;
        const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : void 0;
        const isCustomEndpoint = !!endpoint;
        return {
          ...input3,
          endpoint: customEndpointProvider,
          tls,
          isCustomEndpoint,
          useDualstackEndpoint: normalizeProvider(input3.useDualstackEndpoint ?? false),
          useFipsEndpoint: normalizeProvider(input3.useFipsEndpoint ?? false)
        };
      };
    }
  });

  // node_modules/@smithy/middleware-endpoint/dist-es/types.js
  var init_types5 = __esm({
    "node_modules/@smithy/middleware-endpoint/dist-es/types.js"() {
    }
  });

  // node_modules/@smithy/middleware-endpoint/dist-es/index.js
  var init_dist_es16 = __esm({
    "node_modules/@smithy/middleware-endpoint/dist-es/index.js"() {
      init_adaptors();
      init_endpointMiddleware();
      init_getEndpointPlugin();
      init_resolveEndpointConfig();
      init_types5();
    }
  });

  // node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemeEndpointRuleSetPlugin.js
  var httpAuthSchemeEndpointRuleSetMiddlewareOptions, getHttpAuthSchemeEndpointRuleSetPlugin;
  var init_getHttpAuthSchemeEndpointRuleSetPlugin = __esm({
    "node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemeEndpointRuleSetPlugin.js"() {
      init_dist_es16();
      init_httpAuthSchemeMiddleware();
      httpAuthSchemeEndpointRuleSetMiddlewareOptions = {
        step: "serialize",
        tags: ["HTTP_AUTH_SCHEME"],
        name: "httpAuthSchemeMiddleware",
        override: true,
        relation: "before",
        toMiddleware: endpointMiddlewareOptions.name
      };
      getHttpAuthSchemeEndpointRuleSetPlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider }) => ({
        applyToStack: (clientStack) => {
          clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {
            httpAuthSchemeParametersProvider,
            identityProviderConfigProvider
          }), httpAuthSchemeEndpointRuleSetMiddlewareOptions);
        }
      });
    }
  });

  // node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemePlugin.js
  var httpAuthSchemeMiddlewareOptions;
  var init_getHttpAuthSchemePlugin = __esm({
    "node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemePlugin.js"() {
      init_dist_es15();
      init_httpAuthSchemeMiddleware();
      httpAuthSchemeMiddlewareOptions = {
        step: "serialize",
        tags: ["HTTP_AUTH_SCHEME"],
        name: "httpAuthSchemeMiddleware",
        override: true,
        relation: "before",
        toMiddleware: serializerMiddlewareOption.name
      };
    }
  });

  // node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/index.js
  var init_middleware_http_auth_scheme = __esm({
    "node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/index.js"() {
      init_httpAuthSchemeMiddleware();
      init_getHttpAuthSchemeEndpointRuleSetPlugin();
      init_getHttpAuthSchemePlugin();
    }
  });

  // node_modules/@smithy/core/dist-es/middleware-http-signing/httpSigningMiddleware.js
  var defaultErrorHandler, defaultSuccessHandler, httpSigningMiddleware;
  var init_httpSigningMiddleware = __esm({
    "node_modules/@smithy/core/dist-es/middleware-http-signing/httpSigningMiddleware.js"() {
      init_dist_es3();
      init_dist_es2();
      init_dist_es11();
      defaultErrorHandler = (signingProperties) => (error4) => {
        throw error4;
      };
      defaultSuccessHandler = (httpResponse, signingProperties) => {
      };
      httpSigningMiddleware = (config) => (next, context) => async (args) => {
        if (!HttpRequest.isInstance(args.request)) {
          return next(args);
        }
        const smithyContext = getSmithyContext(context);
        const scheme = smithyContext.selectedHttpAuthScheme;
        if (!scheme) {
          throw new Error(`No HttpAuthScheme was selected: unable to sign request`);
        }
        const { httpAuthOption: { signingProperties = {} }, identity: identity13, signer } = scheme;
        const output2 = await next({
          ...args,
          request: await signer.sign(args.request, identity13, signingProperties)
        }).catch((signer.errorHandler || defaultErrorHandler)(signingProperties));
        (signer.successHandler || defaultSuccessHandler)(output2.response, signingProperties);
        return output2;
      };
    }
  });

  // node_modules/@smithy/util-retry/dist-es/config.js
  var RETRY_MODES, DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE;
  var init_config3 = __esm({
    "node_modules/@smithy/util-retry/dist-es/config.js"() {
      (function(RETRY_MODES2) {
        RETRY_MODES2["STANDARD"] = "standard";
        RETRY_MODES2["ADAPTIVE"] = "adaptive";
      })(RETRY_MODES || (RETRY_MODES = {}));
      DEFAULT_MAX_ATTEMPTS = 3;
      DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;
    }
  });

  // node_modules/@smithy/service-error-classification/dist-es/constants.js
  var THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, NODEJS_TIMEOUT_ERROR_CODES;
  var init_constants2 = __esm({
    "node_modules/@smithy/service-error-classification/dist-es/constants.js"() {
      THROTTLING_ERROR_CODES = [
        "BandwidthLimitExceeded",
        "EC2ThrottledException",
        "LimitExceededException",
        "PriorRequestNotComplete",
        "ProvisionedThroughputExceededException",
        "RequestLimitExceeded",
        "RequestThrottled",
        "RequestThrottledException",
        "SlowDown",
        "ThrottledException",
        "Throttling",
        "ThrottlingException",
        "TooManyRequestsException",
        "TransactionInProgressException"
      ];
      TRANSIENT_ERROR_CODES = ["TimeoutError", "RequestTimeout", "RequestTimeoutException"];
      TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];
      NODEJS_TIMEOUT_ERROR_CODES = ["ECONNRESET", "ECONNREFUSED", "EPIPE", "ETIMEDOUT"];
    }
  });

  // node_modules/@smithy/service-error-classification/dist-es/index.js
  var isClockSkewCorrectedError, isThrottlingError, isTransientError, isServerError;
  var init_dist_es17 = __esm({
    "node_modules/@smithy/service-error-classification/dist-es/index.js"() {
      init_constants2();
      isClockSkewCorrectedError = (error4) => error4.$metadata?.clockSkewCorrected;
      isThrottlingError = (error4) => error4.$metadata?.httpStatusCode === 429 || THROTTLING_ERROR_CODES.includes(error4.name) || error4.$retryable?.throttling == true;
      isTransientError = (error4) => isClockSkewCorrectedError(error4) || TRANSIENT_ERROR_CODES.includes(error4.name) || NODEJS_TIMEOUT_ERROR_CODES.includes(error4?.code || "") || TRANSIENT_ERROR_STATUS_CODES.includes(error4.$metadata?.httpStatusCode || 0);
      isServerError = (error4) => {
        if (error4.$metadata?.httpStatusCode !== void 0) {
          const statusCode = error4.$metadata.httpStatusCode;
          if (500 <= statusCode && statusCode <= 599 && !isTransientError(error4)) {
            return true;
          }
          return false;
        }
        return false;
      };
    }
  });

  // node_modules/@smithy/util-retry/dist-es/DefaultRateLimiter.js
  var DefaultRateLimiter;
  var init_DefaultRateLimiter = __esm({
    "node_modules/@smithy/util-retry/dist-es/DefaultRateLimiter.js"() {
      init_dist_es17();
      DefaultRateLimiter = class {
        constructor(options2) {
          this.currentCapacity = 0;
          this.enabled = false;
          this.lastMaxRate = 0;
          this.measuredTxRate = 0;
          this.requestCount = 0;
          this.lastTimestamp = 0;
          this.timeWindow = 0;
          this.beta = options2?.beta ?? 0.7;
          this.minCapacity = options2?.minCapacity ?? 1;
          this.minFillRate = options2?.minFillRate ?? 0.5;
          this.scaleConstant = options2?.scaleConstant ?? 0.4;
          this.smooth = options2?.smooth ?? 0.8;
          const currentTimeInSeconds = this.getCurrentTimeInSeconds();
          this.lastThrottleTime = currentTimeInSeconds;
          this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());
          this.fillRate = this.minFillRate;
          this.maxCapacity = this.minCapacity;
        }
        getCurrentTimeInSeconds() {
          return Date.now() / 1e3;
        }
        async getSendToken() {
          return this.acquireTokenBucket(1);
        }
        async acquireTokenBucket(amount) {
          if (!this.enabled) {
            return;
          }
          this.refillTokenBucket();
          if (amount > this.currentCapacity) {
            const delay = (amount - this.currentCapacity) / this.fillRate * 1e3;
            await new Promise((resolve) => setTimeout(resolve, delay));
          }
          this.currentCapacity = this.currentCapacity - amount;
        }
        refillTokenBucket() {
          const timestamp = this.getCurrentTimeInSeconds();
          if (!this.lastTimestamp) {
            this.lastTimestamp = timestamp;
            return;
          }
          const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;
          this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);
          this.lastTimestamp = timestamp;
        }
        updateClientSendingRate(response) {
          let calculatedRate;
          this.updateMeasuredRate();
          if (isThrottlingError(response)) {
            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);
            this.lastMaxRate = rateToUse;
            this.calculateTimeWindow();
            this.lastThrottleTime = this.getCurrentTimeInSeconds();
            calculatedRate = this.cubicThrottle(rateToUse);
            this.enableTokenBucket();
          } else {
            this.calculateTimeWindow();
            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());
          }
          const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);
          this.updateTokenBucketRate(newRate);
        }
        calculateTimeWindow() {
          this.timeWindow = this.getPrecise(Math.pow(this.lastMaxRate * (1 - this.beta) / this.scaleConstant, 1 / 3));
        }
        cubicThrottle(rateToUse) {
          return this.getPrecise(rateToUse * this.beta);
        }
        cubicSuccess(timestamp) {
          return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);
        }
        enableTokenBucket() {
          this.enabled = true;
        }
        updateTokenBucketRate(newRate) {
          this.refillTokenBucket();
          this.fillRate = Math.max(newRate, this.minFillRate);
          this.maxCapacity = Math.max(newRate, this.minCapacity);
          this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);
        }
        updateMeasuredRate() {
          const t3 = this.getCurrentTimeInSeconds();
          const timeBucket = Math.floor(t3 * 2) / 2;
          this.requestCount++;
          if (timeBucket > this.lastTxRateBucket) {
            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);
            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));
            this.requestCount = 0;
            this.lastTxRateBucket = timeBucket;
          }
        }
        getPrecise(num) {
          return parseFloat(num.toFixed(8));
        }
      };
    }
  });

  // node_modules/@smithy/util-retry/dist-es/constants.js
  var DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY, THROTTLING_RETRY_DELAY_BASE, INITIAL_RETRY_TOKENS, RETRY_COST, TIMEOUT_RETRY_COST, NO_RETRY_INCREMENT, INVOCATION_ID_HEADER, REQUEST_HEADER;
  var init_constants3 = __esm({
    "node_modules/@smithy/util-retry/dist-es/constants.js"() {
      DEFAULT_RETRY_DELAY_BASE = 100;
      MAXIMUM_RETRY_DELAY = 20 * 1e3;
      THROTTLING_RETRY_DELAY_BASE = 500;
      INITIAL_RETRY_TOKENS = 500;
      RETRY_COST = 5;
      TIMEOUT_RETRY_COST = 10;
      NO_RETRY_INCREMENT = 1;
      INVOCATION_ID_HEADER = "amz-sdk-invocation-id";
      REQUEST_HEADER = "amz-sdk-request";
    }
  });

  // node_modules/@smithy/util-retry/dist-es/defaultRetryBackoffStrategy.js
  var getDefaultRetryBackoffStrategy;
  var init_defaultRetryBackoffStrategy = __esm({
    "node_modules/@smithy/util-retry/dist-es/defaultRetryBackoffStrategy.js"() {
      init_constants3();
      getDefaultRetryBackoffStrategy = () => {
        let delayBase = DEFAULT_RETRY_DELAY_BASE;
        const computeNextBackoffDelay = (attempts) => {
          return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));
        };
        const setDelayBase = (delay) => {
          delayBase = delay;
        };
        return {
          computeNextBackoffDelay,
          setDelayBase
        };
      };
    }
  });

  // node_modules/@smithy/util-retry/dist-es/defaultRetryToken.js
  var createDefaultRetryToken;
  var init_defaultRetryToken = __esm({
    "node_modules/@smithy/util-retry/dist-es/defaultRetryToken.js"() {
      init_constants3();
      createDefaultRetryToken = ({ retryDelay, retryCount, retryCost }) => {
        const getRetryCount = () => retryCount;
        const getRetryDelay = () => Math.min(MAXIMUM_RETRY_DELAY, retryDelay);
        const getRetryCost = () => retryCost;
        return {
          getRetryCount,
          getRetryDelay,
          getRetryCost
        };
      };
    }
  });

  // node_modules/@smithy/util-retry/dist-es/StandardRetryStrategy.js
  var StandardRetryStrategy;
  var init_StandardRetryStrategy = __esm({
    "node_modules/@smithy/util-retry/dist-es/StandardRetryStrategy.js"() {
      init_config3();
      init_constants3();
      init_defaultRetryBackoffStrategy();
      init_defaultRetryToken();
      StandardRetryStrategy = class {
        constructor(maxAttempts) {
          this.maxAttempts = maxAttempts;
          this.mode = RETRY_MODES.STANDARD;
          this.capacity = INITIAL_RETRY_TOKENS;
          this.retryBackoffStrategy = getDefaultRetryBackoffStrategy();
          this.maxAttemptsProvider = typeof maxAttempts === "function" ? maxAttempts : async () => maxAttempts;
        }
        async acquireInitialRetryToken(retryTokenScope) {
          return createDefaultRetryToken({
            retryDelay: DEFAULT_RETRY_DELAY_BASE,
            retryCount: 0
          });
        }
        async refreshRetryTokenForRetry(token, errorInfo) {
          const maxAttempts = await this.getMaxAttempts();
          if (this.shouldRetry(token, errorInfo, maxAttempts)) {
            const errorType = errorInfo.errorType;
            this.retryBackoffStrategy.setDelayBase(errorType === "THROTTLING" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE);
            const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());
            const retryDelay = errorInfo.retryAfterHint ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType) : delayFromErrorType;
            const capacityCost = this.getCapacityCost(errorType);
            this.capacity -= capacityCost;
            return createDefaultRetryToken({
              retryDelay,
              retryCount: token.getRetryCount() + 1,
              retryCost: capacityCost
            });
          }
          throw new Error("No retry token available");
        }
        recordSuccess(token) {
          this.capacity = Math.max(INITIAL_RETRY_TOKENS, this.capacity + (token.getRetryCost() ?? NO_RETRY_INCREMENT));
        }
        getCapacity() {
          return this.capacity;
        }
        async getMaxAttempts() {
          try {
            return await this.maxAttemptsProvider();
          } catch (error4) {
            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);
            return DEFAULT_MAX_ATTEMPTS;
          }
        }
        shouldRetry(tokenToRenew, errorInfo, maxAttempts) {
          const attempts = tokenToRenew.getRetryCount() + 1;
          return attempts < maxAttempts && this.capacity >= this.getCapacityCost(errorInfo.errorType) && this.isRetryableError(errorInfo.errorType);
        }
        getCapacityCost(errorType) {
          return errorType === "TRANSIENT" ? TIMEOUT_RETRY_COST : RETRY_COST;
        }
        isRetryableError(errorType) {
          return errorType === "THROTTLING" || errorType === "TRANSIENT";
        }
      };
    }
  });

  // node_modules/@smithy/util-retry/dist-es/AdaptiveRetryStrategy.js
  var AdaptiveRetryStrategy;
  var init_AdaptiveRetryStrategy = __esm({
    "node_modules/@smithy/util-retry/dist-es/AdaptiveRetryStrategy.js"() {
      init_config3();
      init_DefaultRateLimiter();
      init_StandardRetryStrategy();
      AdaptiveRetryStrategy = class {
        constructor(maxAttemptsProvider, options2) {
          this.maxAttemptsProvider = maxAttemptsProvider;
          this.mode = RETRY_MODES.ADAPTIVE;
          const { rateLimiter } = options2 ?? {};
          this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();
          this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);
        }
        async acquireInitialRetryToken(retryTokenScope) {
          await this.rateLimiter.getSendToken();
          return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);
        }
        async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {
          this.rateLimiter.updateClientSendingRate(errorInfo);
          return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);
        }
        recordSuccess(token) {
          this.rateLimiter.updateClientSendingRate({});
          this.standardRetryStrategy.recordSuccess(token);
        }
      };
    }
  });

  // node_modules/@smithy/util-retry/dist-es/ConfiguredRetryStrategy.js
  var init_ConfiguredRetryStrategy = __esm({
    "node_modules/@smithy/util-retry/dist-es/ConfiguredRetryStrategy.js"() {
      init_constants3();
      init_StandardRetryStrategy();
    }
  });

  // node_modules/@smithy/util-retry/dist-es/types.js
  var init_types6 = __esm({
    "node_modules/@smithy/util-retry/dist-es/types.js"() {
    }
  });

  // node_modules/@smithy/util-retry/dist-es/index.js
  var init_dist_es18 = __esm({
    "node_modules/@smithy/util-retry/dist-es/index.js"() {
      init_AdaptiveRetryStrategy();
      init_ConfiguredRetryStrategy();
      init_DefaultRateLimiter();
      init_StandardRetryStrategy();
      init_config3();
      init_constants3();
      init_types6();
    }
  });

  // node_modules/uuid/dist/esm-browser/rng.js
  function rng() {
    if (!getRandomValues) {
      getRandomValues = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);
      if (!getRandomValues) {
        throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
      }
    }
    return getRandomValues(rnds8);
  }
  var getRandomValues, rnds8;
  var init_rng = __esm({
    "node_modules/uuid/dist/esm-browser/rng.js"() {
      rnds8 = new Uint8Array(16);
    }
  });

  // node_modules/uuid/dist/esm-browser/stringify.js
  function unsafeStringify(arr, offset = 0) {
    return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + "-" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + "-" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + "-" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + "-" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];
  }
  var byteToHex;
  var init_stringify = __esm({
    "node_modules/uuid/dist/esm-browser/stringify.js"() {
      byteToHex = [];
      for (let i4 = 0; i4 < 256; ++i4) {
        byteToHex.push((i4 + 256).toString(16).slice(1));
      }
    }
  });

  // node_modules/uuid/dist/esm-browser/native.js
  var randomUUID, native_default;
  var init_native = __esm({
    "node_modules/uuid/dist/esm-browser/native.js"() {
      randomUUID = typeof crypto !== "undefined" && crypto.randomUUID && crypto.randomUUID.bind(crypto);
      native_default = {
        randomUUID
      };
    }
  });

  // node_modules/uuid/dist/esm-browser/v4.js
  function v4(options2, buf, offset) {
    if (native_default.randomUUID && !buf && !options2) {
      return native_default.randomUUID();
    }
    options2 = options2 || {};
    const rnds = options2.random || (options2.rng || rng)();
    rnds[6] = rnds[6] & 15 | 64;
    rnds[8] = rnds[8] & 63 | 128;
    if (buf) {
      offset = offset || 0;
      for (let i4 = 0; i4 < 16; ++i4) {
        buf[offset + i4] = rnds[i4];
      }
      return buf;
    }
    return unsafeStringify(rnds);
  }
  var v4_default;
  var init_v4 = __esm({
    "node_modules/uuid/dist/esm-browser/v4.js"() {
      init_native();
      init_rng();
      init_stringify();
      v4_default = v4;
    }
  });

  // node_modules/uuid/dist/esm-browser/index.js
  var init_esm_browser = __esm({
    "node_modules/uuid/dist/esm-browser/index.js"() {
      init_v4();
    }
  });

  // node_modules/@smithy/middleware-retry/dist-es/defaultRetryQuota.js
  var init_defaultRetryQuota = __esm({
    "node_modules/@smithy/middleware-retry/dist-es/defaultRetryQuota.js"() {
      init_dist_es18();
    }
  });

  // node_modules/@smithy/middleware-retry/dist-es/delayDecider.js
  var init_delayDecider = __esm({
    "node_modules/@smithy/middleware-retry/dist-es/delayDecider.js"() {
      init_dist_es18();
    }
  });

  // node_modules/@smithy/middleware-retry/dist-es/retryDecider.js
  var init_retryDecider = __esm({
    "node_modules/@smithy/middleware-retry/dist-es/retryDecider.js"() {
      init_dist_es17();
    }
  });

  // node_modules/@smithy/middleware-retry/dist-es/util.js
  var asSdkError;
  var init_util2 = __esm({
    "node_modules/@smithy/middleware-retry/dist-es/util.js"() {
      asSdkError = (error4) => {
        if (error4 instanceof Error)
          return error4;
        if (error4 instanceof Object)
          return Object.assign(new Error(), error4);
        if (typeof error4 === "string")
          return new Error(error4);
        return new Error(`AWS SDK error wrapper for ${error4}`);
      };
    }
  });

  // node_modules/@smithy/middleware-retry/dist-es/StandardRetryStrategy.js
  var init_StandardRetryStrategy2 = __esm({
    "node_modules/@smithy/middleware-retry/dist-es/StandardRetryStrategy.js"() {
      init_dist_es3();
      init_dist_es17();
      init_dist_es18();
      init_defaultRetryQuota();
      init_delayDecider();
      init_retryDecider();
      init_util2();
    }
  });

  // node_modules/@smithy/middleware-retry/dist-es/AdaptiveRetryStrategy.js
  var init_AdaptiveRetryStrategy2 = __esm({
    "node_modules/@smithy/middleware-retry/dist-es/AdaptiveRetryStrategy.js"() {
      init_dist_es18();
      init_StandardRetryStrategy2();
    }
  });

  // node_modules/@smithy/middleware-retry/dist-es/configurations.js
  var resolveRetryConfig;
  var init_configurations2 = __esm({
    "node_modules/@smithy/middleware-retry/dist-es/configurations.js"() {
      init_dist_es11();
      init_dist_es18();
      resolveRetryConfig = (input3) => {
        const { retryStrategy } = input3;
        const maxAttempts = normalizeProvider(input3.maxAttempts ?? DEFAULT_MAX_ATTEMPTS);
        return {
          ...input3,
          maxAttempts,
          retryStrategy: async () => {
            if (retryStrategy) {
              return retryStrategy;
            }
            const retryMode = await normalizeProvider(input3.retryMode)();
            if (retryMode === RETRY_MODES.ADAPTIVE) {
              return new AdaptiveRetryStrategy(maxAttempts);
            }
            return new StandardRetryStrategy(maxAttempts);
          }
        };
      };
    }
  });

  // node_modules/@smithy/middleware-retry/dist-es/omitRetryHeadersMiddleware.js
  var init_omitRetryHeadersMiddleware = __esm({
    "node_modules/@smithy/middleware-retry/dist-es/omitRetryHeadersMiddleware.js"() {
      init_dist_es3();
      init_dist_es18();
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/NoOpLogger.js
  var NoOpLogger;
  var init_NoOpLogger = __esm({
    "node_modules/@smithy/smithy-client/dist-es/NoOpLogger.js"() {
      NoOpLogger = class {
        trace() {
        }
        debug() {
        }
        info() {
        }
        warn() {
        }
        error() {
        }
      };
    }
  });

  // node_modules/@smithy/middleware-stack/dist-es/MiddlewareStack.js
  var getAllAliases, getMiddlewareNameWithAliases, constructStack, stepWeights, priorityWeights;
  var init_MiddlewareStack = __esm({
    "node_modules/@smithy/middleware-stack/dist-es/MiddlewareStack.js"() {
      getAllAliases = (name15, aliases) => {
        const _aliases = [];
        if (name15) {
          _aliases.push(name15);
        }
        if (aliases) {
          for (const alias of aliases) {
            _aliases.push(alias);
          }
        }
        return _aliases;
      };
      getMiddlewareNameWithAliases = (name15, aliases) => {
        return `${name15 || "anonymous"}${aliases && aliases.length > 0 ? ` (a.k.a. ${aliases.join(",")})` : ""}`;
      };
      constructStack = () => {
        let absoluteEntries = [];
        let relativeEntries = [];
        let identifyOnResolve = false;
        const entriesNameSet = /* @__PURE__ */ new Set();
        const sort2 = (entries) => entries.sort((a4, b4) => stepWeights[b4.step] - stepWeights[a4.step] || priorityWeights[b4.priority || "normal"] - priorityWeights[a4.priority || "normal"]);
        const removeByName = (toRemove) => {
          let isRemoved = false;
          const filterCb = (entry) => {
            const aliases = getAllAliases(entry.name, entry.aliases);
            if (aliases.includes(toRemove)) {
              isRemoved = true;
              for (const alias of aliases) {
                entriesNameSet.delete(alias);
              }
              return false;
            }
            return true;
          };
          absoluteEntries = absoluteEntries.filter(filterCb);
          relativeEntries = relativeEntries.filter(filterCb);
          return isRemoved;
        };
        const removeByReference = (toRemove) => {
          let isRemoved = false;
          const filterCb = (entry) => {
            if (entry.middleware === toRemove) {
              isRemoved = true;
              for (const alias of getAllAliases(entry.name, entry.aliases)) {
                entriesNameSet.delete(alias);
              }
              return false;
            }
            return true;
          };
          absoluteEntries = absoluteEntries.filter(filterCb);
          relativeEntries = relativeEntries.filter(filterCb);
          return isRemoved;
        };
        const cloneTo = (toStack) => {
          absoluteEntries.forEach((entry) => {
            toStack.add(entry.middleware, { ...entry });
          });
          relativeEntries.forEach((entry) => {
            toStack.addRelativeTo(entry.middleware, { ...entry });
          });
          toStack.identifyOnResolve?.(stack.identifyOnResolve());
          return toStack;
        };
        const expandRelativeMiddlewareList = (from3) => {
          const expandedMiddlewareList = [];
          from3.before.forEach((entry) => {
            if (entry.before.length === 0 && entry.after.length === 0) {
              expandedMiddlewareList.push(entry);
            } else {
              expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));
            }
          });
          expandedMiddlewareList.push(from3);
          from3.after.reverse().forEach((entry) => {
            if (entry.before.length === 0 && entry.after.length === 0) {
              expandedMiddlewareList.push(entry);
            } else {
              expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));
            }
          });
          return expandedMiddlewareList;
        };
        const getMiddlewareList = (debug2 = false) => {
          const normalizedAbsoluteEntries = [];
          const normalizedRelativeEntries = [];
          const normalizedEntriesNameMap = {};
          absoluteEntries.forEach((entry) => {
            const normalizedEntry = {
              ...entry,
              before: [],
              after: []
            };
            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {
              normalizedEntriesNameMap[alias] = normalizedEntry;
            }
            normalizedAbsoluteEntries.push(normalizedEntry);
          });
          relativeEntries.forEach((entry) => {
            const normalizedEntry = {
              ...entry,
              before: [],
              after: []
            };
            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {
              normalizedEntriesNameMap[alias] = normalizedEntry;
            }
            normalizedRelativeEntries.push(normalizedEntry);
          });
          normalizedRelativeEntries.forEach((entry) => {
            if (entry.toMiddleware) {
              const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];
              if (toMiddleware === void 0) {
                if (debug2) {
                  return;
                }
                throw new Error(`${entry.toMiddleware} is not found when adding ${getMiddlewareNameWithAliases(entry.name, entry.aliases)} middleware ${entry.relation} ${entry.toMiddleware}`);
              }
              if (entry.relation === "after") {
                toMiddleware.after.push(entry);
              }
              if (entry.relation === "before") {
                toMiddleware.before.push(entry);
              }
            }
          });
          const mainChain = sort2(normalizedAbsoluteEntries).map(expandRelativeMiddlewareList).reduce((wholeList, expandedMiddlewareList) => {
            wholeList.push(...expandedMiddlewareList);
            return wholeList;
          }, []);
          return mainChain;
        };
        const stack = {
          add: (middleware, options2 = {}) => {
            const { name: name15, override, aliases: _aliases } = options2;
            const entry = {
              step: "initialize",
              priority: "normal",
              middleware,
              ...options2
            };
            const aliases = getAllAliases(name15, _aliases);
            if (aliases.length > 0) {
              if (aliases.some((alias) => entriesNameSet.has(alias))) {
                if (!override)
                  throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name15, _aliases)}'`);
                for (const alias of aliases) {
                  const toOverrideIndex = absoluteEntries.findIndex((entry2) => entry2.name === alias || entry2.aliases?.some((a4) => a4 === alias));
                  if (toOverrideIndex === -1) {
                    continue;
                  }
                  const toOverride = absoluteEntries[toOverrideIndex];
                  if (toOverride.step !== entry.step || entry.priority !== toOverride.priority) {
                    throw new Error(`"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be overridden by "${getMiddlewareNameWithAliases(name15, _aliases)}" middleware with ${entry.priority} priority in ${entry.step} step.`);
                  }
                  absoluteEntries.splice(toOverrideIndex, 1);
                }
              }
              for (const alias of aliases) {
                entriesNameSet.add(alias);
              }
            }
            absoluteEntries.push(entry);
          },
          addRelativeTo: (middleware, options2) => {
            const { name: name15, override, aliases: _aliases } = options2;
            const entry = {
              middleware,
              ...options2
            };
            const aliases = getAllAliases(name15, _aliases);
            if (aliases.length > 0) {
              if (aliases.some((alias) => entriesNameSet.has(alias))) {
                if (!override)
                  throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name15, _aliases)}'`);
                for (const alias of aliases) {
                  const toOverrideIndex = relativeEntries.findIndex((entry2) => entry2.name === alias || entry2.aliases?.some((a4) => a4 === alias));
                  if (toOverrideIndex === -1) {
                    continue;
                  }
                  const toOverride = relativeEntries[toOverrideIndex];
                  if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {
                    throw new Error(`"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}" middleware ${toOverride.relation} "${toOverride.toMiddleware}" middleware cannot be overridden by "${getMiddlewareNameWithAliases(name15, _aliases)}" middleware ${entry.relation} "${entry.toMiddleware}" middleware.`);
                  }
                  relativeEntries.splice(toOverrideIndex, 1);
                }
              }
              for (const alias of aliases) {
                entriesNameSet.add(alias);
              }
            }
            relativeEntries.push(entry);
          },
          clone: () => cloneTo(constructStack()),
          use: (plugin) => {
            plugin.applyToStack(stack);
          },
          remove: (toRemove) => {
            if (typeof toRemove === "string")
              return removeByName(toRemove);
            else
              return removeByReference(toRemove);
          },
          removeByTag: (toRemove) => {
            let isRemoved = false;
            const filterCb = (entry) => {
              const { tags, name: name15, aliases: _aliases } = entry;
              if (tags && tags.includes(toRemove)) {
                const aliases = getAllAliases(name15, _aliases);
                for (const alias of aliases) {
                  entriesNameSet.delete(alias);
                }
                isRemoved = true;
                return false;
              }
              return true;
            };
            absoluteEntries = absoluteEntries.filter(filterCb);
            relativeEntries = relativeEntries.filter(filterCb);
            return isRemoved;
          },
          concat: (from3) => {
            const cloned = cloneTo(constructStack());
            cloned.use(from3);
            cloned.identifyOnResolve(identifyOnResolve || cloned.identifyOnResolve() || (from3.identifyOnResolve?.() ?? false));
            return cloned;
          },
          applyToStack: cloneTo,
          identify: () => {
            return getMiddlewareList(true).map((mw) => {
              const step3 = mw.step ?? mw.relation + " " + mw.toMiddleware;
              return getMiddlewareNameWithAliases(mw.name, mw.aliases) + " - " + step3;
            });
          },
          identifyOnResolve(toggle) {
            if (typeof toggle === "boolean")
              identifyOnResolve = toggle;
            return identifyOnResolve;
          },
          resolve: (handler3, context) => {
            for (const middleware of getMiddlewareList().map((entry) => entry.middleware).reverse()) {
              handler3 = middleware(handler3, context);
            }
            if (identifyOnResolve) {
              console.log(stack.identify());
            }
            return handler3;
          }
        };
        return stack;
      };
      stepWeights = {
        initialize: 5,
        serialize: 4,
        build: 3,
        finalizeRequest: 2,
        deserialize: 1
      };
      priorityWeights = {
        high: 3,
        normal: 2,
        low: 1
      };
    }
  });

  // node_modules/@smithy/middleware-stack/dist-es/index.js
  var init_dist_es19 = __esm({
    "node_modules/@smithy/middleware-stack/dist-es/index.js"() {
      init_MiddlewareStack();
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/client.js
  var Client;
  var init_client2 = __esm({
    "node_modules/@smithy/smithy-client/dist-es/client.js"() {
      init_dist_es19();
      Client = class {
        constructor(config) {
          this.middlewareStack = constructStack();
          this.config = config;
        }
        send(command2, optionsOrCb, cb) {
          const options2 = typeof optionsOrCb !== "function" ? optionsOrCb : void 0;
          const callback = typeof optionsOrCb === "function" ? optionsOrCb : cb;
          const handler3 = command2.resolveMiddleware(this.middlewareStack, this.config, options2);
          if (callback) {
            handler3(command2).then((result) => callback(null, result.output), (err) => callback(err)).catch(() => {
            });
          } else {
            return handler3(command2).then((result) => result.output);
          }
        }
        destroy() {
          if (this.config.requestHandler.destroy)
            this.config.requestHandler.destroy();
        }
      };
    }
  });

  // node_modules/@smithy/util-base64/dist-es/constants.browser.js
  var alphabetByEncoding, alphabetByValue, bitsPerLetter, bitsPerByte, maxLetterValue;
  var init_constants_browser = __esm({
    "node_modules/@smithy/util-base64/dist-es/constants.browser.js"() {
      alphabetByEncoding = {};
      alphabetByValue = new Array(64);
      for (let i4 = 0, start2 = "A".charCodeAt(0), limit = "Z".charCodeAt(0); i4 + start2 <= limit; i4++) {
        const char2 = String.fromCharCode(i4 + start2);
        alphabetByEncoding[char2] = i4;
        alphabetByValue[i4] = char2;
      }
      for (let i4 = 0, start2 = "a".charCodeAt(0), limit = "z".charCodeAt(0); i4 + start2 <= limit; i4++) {
        const char2 = String.fromCharCode(i4 + start2);
        const index4 = i4 + 26;
        alphabetByEncoding[char2] = index4;
        alphabetByValue[index4] = char2;
      }
      for (let i4 = 0; i4 < 10; i4++) {
        alphabetByEncoding[i4.toString(10)] = i4 + 52;
        const char2 = i4.toString(10);
        const index4 = i4 + 52;
        alphabetByEncoding[char2] = index4;
        alphabetByValue[index4] = char2;
      }
      alphabetByEncoding["+"] = 62;
      alphabetByValue[62] = "+";
      alphabetByEncoding["/"] = 63;
      alphabetByValue[63] = "/";
      bitsPerLetter = 6;
      bitsPerByte = 8;
      maxLetterValue = 63;
    }
  });

  // node_modules/@smithy/util-base64/dist-es/fromBase64.browser.js
  var fromBase64;
  var init_fromBase64_browser = __esm({
    "node_modules/@smithy/util-base64/dist-es/fromBase64.browser.js"() {
      init_constants_browser();
      fromBase64 = (input3) => {
        let totalByteLength = input3.length / 4 * 3;
        if (input3.slice(-2) === "==") {
          totalByteLength -= 2;
        } else if (input3.slice(-1) === "=") {
          totalByteLength--;
        }
        const out = new ArrayBuffer(totalByteLength);
        const dataView = new DataView(out);
        for (let i4 = 0; i4 < input3.length; i4 += 4) {
          let bits = 0;
          let bitLength = 0;
          for (let j3 = i4, limit = i4 + 3; j3 <= limit; j3++) {
            if (input3[j3] !== "=") {
              if (!(input3[j3] in alphabetByEncoding)) {
                throw new TypeError(`Invalid character ${input3[j3]} in base64 string.`);
              }
              bits |= alphabetByEncoding[input3[j3]] << (limit - j3) * bitsPerLetter;
              bitLength += bitsPerLetter;
            } else {
              bits >>= bitsPerLetter;
            }
          }
          const chunkOffset = i4 / 4 * 3;
          bits >>= bitLength % bitsPerByte;
          const byteLength = Math.floor(bitLength / bitsPerByte);
          for (let k3 = 0; k3 < byteLength; k3++) {
            const offset = (byteLength - k3 - 1) * bitsPerByte;
            dataView.setUint8(chunkOffset + k3, (bits & 255 << offset) >> offset);
          }
        }
        return new Uint8Array(out);
      };
    }
  });

  // node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js
  var fromUtf8;
  var init_fromUtf8_browser = __esm({
    "node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js"() {
      fromUtf8 = (input3) => new TextEncoder().encode(input3);
    }
  });

  // node_modules/@smithy/util-utf8/dist-es/toUint8Array.js
  var toUint8Array;
  var init_toUint8Array = __esm({
    "node_modules/@smithy/util-utf8/dist-es/toUint8Array.js"() {
      init_fromUtf8_browser();
      toUint8Array = (data) => {
        if (typeof data === "string") {
          return fromUtf8(data);
        }
        if (ArrayBuffer.isView(data)) {
          return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
        }
        return new Uint8Array(data);
      };
    }
  });

  // node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js
  var toUtf8;
  var init_toUtf8_browser = __esm({
    "node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js"() {
      toUtf8 = (input3) => {
        if (typeof input3 === "string") {
          return input3;
        }
        if (typeof input3 !== "object" || typeof input3.byteOffset !== "number" || typeof input3.byteLength !== "number") {
          throw new Error("@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.");
        }
        return new TextDecoder("utf-8").decode(input3);
      };
    }
  });

  // node_modules/@smithy/util-utf8/dist-es/index.js
  var init_dist_es20 = __esm({
    "node_modules/@smithy/util-utf8/dist-es/index.js"() {
      init_fromUtf8_browser();
      init_toUint8Array();
      init_toUtf8_browser();
    }
  });

  // node_modules/@smithy/util-base64/dist-es/toBase64.browser.js
  function toBase64(_input) {
    let input3;
    if (typeof _input === "string") {
      input3 = fromUtf8(_input);
    } else {
      input3 = _input;
    }
    const isArrayLike = typeof input3 === "object" && typeof input3.length === "number";
    const isUint8Array = typeof input3 === "object" && typeof input3.byteOffset === "number" && typeof input3.byteLength === "number";
    if (!isArrayLike && !isUint8Array) {
      throw new Error("@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.");
    }
    let str = "";
    for (let i4 = 0; i4 < input3.length; i4 += 3) {
      let bits = 0;
      let bitLength = 0;
      for (let j3 = i4, limit = Math.min(i4 + 3, input3.length); j3 < limit; j3++) {
        bits |= input3[j3] << (limit - j3 - 1) * bitsPerByte;
        bitLength += bitsPerByte;
      }
      const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);
      bits <<= bitClusterCount * bitsPerLetter - bitLength;
      for (let k3 = 1; k3 <= bitClusterCount; k3++) {
        const offset = (bitClusterCount - k3) * bitsPerLetter;
        str += alphabetByValue[(bits & maxLetterValue << offset) >> offset];
      }
      str += "==".slice(0, 4 - bitClusterCount);
    }
    return str;
  }
  var init_toBase64_browser = __esm({
    "node_modules/@smithy/util-base64/dist-es/toBase64.browser.js"() {
      init_dist_es20();
      init_constants_browser();
    }
  });

  // node_modules/@smithy/util-base64/dist-es/index.js
  var init_dist_es21 = __esm({
    "node_modules/@smithy/util-base64/dist-es/index.js"() {
      init_fromBase64_browser();
      init_toBase64_browser();
    }
  });

  // node_modules/@smithy/util-stream/dist-es/blob/transforms.js
  function transformToString(payload, encoding2 = "utf-8") {
    if (encoding2 === "base64") {
      return toBase64(payload);
    }
    return toUtf8(payload);
  }
  function transformFromString(str, encoding2) {
    if (encoding2 === "base64") {
      return Uint8ArrayBlobAdapter.mutate(fromBase64(str));
    }
    return Uint8ArrayBlobAdapter.mutate(fromUtf8(str));
  }
  var init_transforms = __esm({
    "node_modules/@smithy/util-stream/dist-es/blob/transforms.js"() {
      init_dist_es21();
      init_dist_es20();
      init_Uint8ArrayBlobAdapter();
    }
  });

  // node_modules/@smithy/util-stream/dist-es/blob/Uint8ArrayBlobAdapter.js
  var Uint8ArrayBlobAdapter;
  var init_Uint8ArrayBlobAdapter = __esm({
    "node_modules/@smithy/util-stream/dist-es/blob/Uint8ArrayBlobAdapter.js"() {
      init_transforms();
      Uint8ArrayBlobAdapter = class _Uint8ArrayBlobAdapter extends Uint8Array {
        static fromString(source2, encoding2 = "utf-8") {
          switch (typeof source2) {
            case "string":
              return transformFromString(source2, encoding2);
            default:
              throw new Error(`Unsupported conversion from ${typeof source2} to Uint8ArrayBlobAdapter.`);
          }
        }
        static mutate(source2) {
          Object.setPrototypeOf(source2, _Uint8ArrayBlobAdapter.prototype);
          return source2;
        }
        transformToString(encoding2 = "utf-8") {
          return transformToString(this, encoding2);
        }
      };
    }
  });

  // node_modules/@smithy/util-stream/dist-es/getAwsChunkedEncodingStream.browser.js
  var init_getAwsChunkedEncodingStream_browser = __esm({
    "node_modules/@smithy/util-stream/dist-es/getAwsChunkedEncodingStream.browser.js"() {
    }
  });

  // node_modules/@smithy/querystring-builder/node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js
  var escapeUri, hexEncode;
  var init_escape_uri = __esm({
    "node_modules/@smithy/querystring-builder/node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js"() {
      escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);
      hexEncode = (c3) => `%${c3.charCodeAt(0).toString(16).toUpperCase()}`;
    }
  });

  // node_modules/@smithy/querystring-builder/node_modules/@smithy/util-uri-escape/dist-es/escape-uri-path.js
  var init_escape_uri_path = __esm({
    "node_modules/@smithy/querystring-builder/node_modules/@smithy/util-uri-escape/dist-es/escape-uri-path.js"() {
      init_escape_uri();
    }
  });

  // node_modules/@smithy/querystring-builder/node_modules/@smithy/util-uri-escape/dist-es/index.js
  var init_dist_es22 = __esm({
    "node_modules/@smithy/querystring-builder/node_modules/@smithy/util-uri-escape/dist-es/index.js"() {
      init_escape_uri();
      init_escape_uri_path();
    }
  });

  // node_modules/@smithy/querystring-builder/dist-es/index.js
  function buildQueryString(query3) {
    const parts = [];
    for (let key2 of Object.keys(query3).sort()) {
      const value14 = query3[key2];
      key2 = escapeUri(key2);
      if (Array.isArray(value14)) {
        for (let i4 = 0, iLen = value14.length; i4 < iLen; i4++) {
          parts.push(`${key2}=${escapeUri(value14[i4])}`);
        }
      } else {
        let qsEntry = key2;
        if (value14 || typeof value14 === "string") {
          qsEntry += `=${escapeUri(value14)}`;
        }
        parts.push(qsEntry);
      }
    }
    return parts.join("&");
  }
  var init_dist_es23 = __esm({
    "node_modules/@smithy/querystring-builder/dist-es/index.js"() {
      init_dist_es22();
    }
  });

  // node_modules/@smithy/fetch-http-handler/dist-es/request-timeout.js
  function requestTimeout(timeoutInMs = 0) {
    return new Promise((resolve, reject) => {
      if (timeoutInMs) {
        setTimeout(() => {
          const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);
          timeoutError.name = "TimeoutError";
          reject(timeoutError);
        }, timeoutInMs);
      }
    });
  }
  var init_request_timeout = __esm({
    "node_modules/@smithy/fetch-http-handler/dist-es/request-timeout.js"() {
    }
  });

  // node_modules/@smithy/fetch-http-handler/dist-es/fetch-http-handler.js
  var keepAliveSupport, FetchHttpHandler;
  var init_fetch_http_handler = __esm({
    "node_modules/@smithy/fetch-http-handler/dist-es/fetch-http-handler.js"() {
      init_dist_es3();
      init_dist_es23();
      init_request_timeout();
      keepAliveSupport = {
        supported: void 0
      };
      FetchHttpHandler = class _FetchHttpHandler {
        static create(instanceOrOptions) {
          if (typeof instanceOrOptions?.handle === "function") {
            return instanceOrOptions;
          }
          return new _FetchHttpHandler(instanceOrOptions);
        }
        constructor(options2) {
          if (typeof options2 === "function") {
            this.configProvider = options2().then((opts) => opts || {});
          } else {
            this.config = options2 ?? {};
            this.configProvider = Promise.resolve(this.config);
          }
          if (keepAliveSupport.supported === void 0) {
            keepAliveSupport.supported = Boolean(typeof Request !== "undefined" && "keepalive" in new Request("https://[::1]"));
          }
        }
        destroy() {
        }
        async handle(request3, { abortSignal } = {}) {
          if (!this.config) {
            this.config = await this.configProvider;
          }
          const requestTimeoutInMs = this.config.requestTimeout;
          const keepAlive = this.config.keepAlive === true;
          const credentials = this.config.credentials;
          if (abortSignal?.aborted) {
            const abortError = new Error("Request aborted");
            abortError.name = "AbortError";
            return Promise.reject(abortError);
          }
          let path = request3.path;
          const queryString = buildQueryString(request3.query || {});
          if (queryString) {
            path += `?${queryString}`;
          }
          if (request3.fragment) {
            path += `#${request3.fragment}`;
          }
          let auth = "";
          if (request3.username != null || request3.password != null) {
            const username = request3.username ?? "";
            const password = request3.password ?? "";
            auth = `${username}:${password}@`;
          }
          const { port: port2, method: method2 } = request3;
          const url = `${request3.protocol}//${auth}${request3.hostname}${port2 ? `:${port2}` : ""}${path}`;
          const body2 = method2 === "GET" || method2 === "HEAD" ? void 0 : request3.body;
          const requestOptions = {
            body: body2,
            headers: new Headers(request3.headers),
            method: method2,
            credentials
          };
          if (body2) {
            requestOptions.duplex = "half";
          }
          if (typeof AbortController !== "undefined") {
            requestOptions.signal = abortSignal;
          }
          if (keepAliveSupport.supported) {
            requestOptions.keepalive = keepAlive;
          }
          let removeSignalEventListener = null;
          const fetchRequest = new Request(url, requestOptions);
          const raceOfPromises = [
            fetch(fetchRequest).then((response) => {
              const fetchHeaders = response.headers;
              const transformedHeaders = {};
              for (const pair of fetchHeaders.entries()) {
                transformedHeaders[pair[0]] = pair[1];
              }
              const hasReadableStream = response.body != void 0;
              if (!hasReadableStream) {
                return response.blob().then((body3) => ({
                  response: new HttpResponse({
                    headers: transformedHeaders,
                    reason: response.statusText,
                    statusCode: response.status,
                    body: body3
                  })
                }));
              }
              return {
                response: new HttpResponse({
                  headers: transformedHeaders,
                  reason: response.statusText,
                  statusCode: response.status,
                  body: response.body
                })
              };
            }),
            requestTimeout(requestTimeoutInMs)
          ];
          if (abortSignal) {
            raceOfPromises.push(new Promise((resolve, reject) => {
              const onAbort = () => {
                const abortError = new Error("Request aborted");
                abortError.name = "AbortError";
                reject(abortError);
              };
              if (typeof abortSignal.addEventListener === "function") {
                const signal = abortSignal;
                signal.addEventListener("abort", onAbort, { once: true });
                removeSignalEventListener = () => signal.removeEventListener("abort", onAbort);
              } else {
                abortSignal.onabort = onAbort;
              }
            }));
          }
          return Promise.race(raceOfPromises).finally(removeSignalEventListener);
        }
        updateHttpClientConfig(key2, value14) {
          this.config = void 0;
          this.configProvider = this.configProvider.then((config) => {
            config[key2] = value14;
            return config;
          });
        }
        httpHandlerConfigs() {
          return this.config ?? {};
        }
      };
    }
  });

  // node_modules/@smithy/fetch-http-handler/dist-es/stream-collector.js
  async function collectBlob(blob) {
    const base64 = await readToBase64(blob);
    const arrayBuffer = fromBase64(base64);
    return new Uint8Array(arrayBuffer);
  }
  async function collectStream(stream) {
    const chunks = [];
    const reader = stream.getReader();
    let isDone = false;
    let length8 = 0;
    while (!isDone) {
      const { done, value: value14 } = await reader.read();
      if (value14) {
        chunks.push(value14);
        length8 += value14.length;
      }
      isDone = done;
    }
    const collected = new Uint8Array(length8);
    let offset = 0;
    for (const chunk of chunks) {
      collected.set(chunk, offset);
      offset += chunk.length;
    }
    return collected;
  }
  function readToBase64(blob) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.onloadend = () => {
        if (reader.readyState !== 2) {
          return reject(new Error("Reader aborted too early"));
        }
        const result = reader.result ?? "";
        const commaIndex = result.indexOf(",");
        const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;
        resolve(result.substring(dataOffset));
      };
      reader.onabort = () => reject(new Error("Read aborted"));
      reader.onerror = () => reject(reader.error);
      reader.readAsDataURL(blob);
    });
  }
  var streamCollector;
  var init_stream_collector = __esm({
    "node_modules/@smithy/fetch-http-handler/dist-es/stream-collector.js"() {
      init_dist_es21();
      streamCollector = (stream) => {
        if (typeof Blob === "function" && stream instanceof Blob) {
          return collectBlob(stream);
        }
        return collectStream(stream);
      };
    }
  });

  // node_modules/@smithy/fetch-http-handler/dist-es/index.js
  var init_dist_es24 = __esm({
    "node_modules/@smithy/fetch-http-handler/dist-es/index.js"() {
      init_fetch_http_handler();
      init_stream_collector();
    }
  });

  // node_modules/@smithy/util-stream/node_modules/@smithy/util-hex-encoding/dist-es/index.js
  function toHex(bytes) {
    let out = "";
    for (let i4 = 0; i4 < bytes.byteLength; i4++) {
      out += SHORT_TO_HEX[bytes[i4]];
    }
    return out;
  }
  var SHORT_TO_HEX, HEX_TO_SHORT;
  var init_dist_es25 = __esm({
    "node_modules/@smithy/util-stream/node_modules/@smithy/util-hex-encoding/dist-es/index.js"() {
      SHORT_TO_HEX = {};
      HEX_TO_SHORT = {};
      for (let i4 = 0; i4 < 256; i4++) {
        let encodedByte = i4.toString(16).toLowerCase();
        if (encodedByte.length === 1) {
          encodedByte = `0${encodedByte}`;
        }
        SHORT_TO_HEX[i4] = encodedByte;
        HEX_TO_SHORT[encodedByte] = i4;
      }
    }
  });

  // node_modules/@smithy/util-stream/dist-es/stream-type-check.js
  var isReadableStream;
  var init_stream_type_check = __esm({
    "node_modules/@smithy/util-stream/dist-es/stream-type-check.js"() {
      isReadableStream = (stream) => typeof ReadableStream === "function" && (stream?.constructor?.name === ReadableStream.name || stream instanceof ReadableStream);
    }
  });

  // node_modules/@smithy/util-stream/dist-es/sdk-stream-mixin.browser.js
  var ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED, sdkStreamMixin, isBlobInstance;
  var init_sdk_stream_mixin_browser = __esm({
    "node_modules/@smithy/util-stream/dist-es/sdk-stream-mixin.browser.js"() {
      init_dist_es24();
      init_dist_es21();
      init_dist_es25();
      init_dist_es20();
      init_stream_type_check();
      ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = "The stream has already been transformed.";
      sdkStreamMixin = (stream) => {
        if (!isBlobInstance(stream) && !isReadableStream(stream)) {
          const name15 = stream?.__proto__?.constructor?.name || stream;
          throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${name15}`);
        }
        let transformed = false;
        const transformToByteArray = async () => {
          if (transformed) {
            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);
          }
          transformed = true;
          return await streamCollector(stream);
        };
        const blobToWebStream = (blob) => {
          if (typeof blob.stream !== "function") {
            throw new Error("Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.\nIf you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body");
          }
          return blob.stream();
        };
        return Object.assign(stream, {
          transformToByteArray,
          transformToString: async (encoding2) => {
            const buf = await transformToByteArray();
            if (encoding2 === "base64") {
              return toBase64(buf);
            } else if (encoding2 === "hex") {
              return toHex(buf);
            } else if (encoding2 === void 0 || encoding2 === "utf8" || encoding2 === "utf-8") {
              return toUtf8(buf);
            } else if (typeof TextDecoder === "function") {
              return new TextDecoder(encoding2).decode(buf);
            } else {
              throw new Error("TextDecoder is not available, please make sure polyfill is provided.");
            }
          },
          transformToWebStream: () => {
            if (transformed) {
              throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);
            }
            transformed = true;
            if (isBlobInstance(stream)) {
              return blobToWebStream(stream);
            } else if (isReadableStream(stream)) {
              return stream;
            } else {
              throw new Error(`Cannot transform payload to web stream, got ${stream}`);
            }
          }
        });
      };
      isBlobInstance = (stream) => typeof Blob === "function" && stream instanceof Blob;
    }
  });

  // node_modules/@smithy/util-stream/dist-es/splitStream.browser.js
  var init_splitStream_browser = __esm({
    "node_modules/@smithy/util-stream/dist-es/splitStream.browser.js"() {
    }
  });

  // node_modules/@smithy/util-stream/dist-es/headStream.browser.js
  var init_headStream_browser = __esm({
    "node_modules/@smithy/util-stream/dist-es/headStream.browser.js"() {
    }
  });

  // node_modules/@smithy/util-stream/dist-es/index.js
  var init_dist_es26 = __esm({
    "node_modules/@smithy/util-stream/dist-es/index.js"() {
      init_Uint8ArrayBlobAdapter();
      init_getAwsChunkedEncodingStream_browser();
      init_sdk_stream_mixin_browser();
      init_splitStream_browser();
      init_headStream_browser();
      init_stream_type_check();
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/collect-stream-body.js
  var collectBody;
  var init_collect_stream_body = __esm({
    "node_modules/@smithy/smithy-client/dist-es/collect-stream-body.js"() {
      init_dist_es26();
      collectBody = async (streamBody = new Uint8Array(), context) => {
        if (streamBody instanceof Uint8Array) {
          return Uint8ArrayBlobAdapter.mutate(streamBody);
        }
        if (!streamBody) {
          return Uint8ArrayBlobAdapter.mutate(new Uint8Array());
        }
        const fromContext = context.streamCollector(streamBody);
        return Uint8ArrayBlobAdapter.mutate(await fromContext);
      };
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/command.js
  var Command, ClassBuilder;
  var init_command2 = __esm({
    "node_modules/@smithy/smithy-client/dist-es/command.js"() {
      init_dist_es19();
      init_dist_es2();
      Command = class {
        constructor() {
          this.middlewareStack = constructStack();
        }
        static classBuilder() {
          return new ClassBuilder();
        }
        resolveMiddlewareWithContext(clientStack, configuration, options2, { middlewareFn, clientName, commandName, inputFilterSensitiveLog, outputFilterSensitiveLog, smithyContext, additionalContext, CommandCtor }) {
          for (const mw of middlewareFn.bind(this)(CommandCtor, clientStack, configuration, options2)) {
            this.middlewareStack.use(mw);
          }
          const stack = clientStack.concat(this.middlewareStack);
          const { logger: logger2 } = configuration;
          const handlerExecutionContext = {
            logger: logger2,
            clientName,
            commandName,
            inputFilterSensitiveLog,
            outputFilterSensitiveLog,
            [SMITHY_CONTEXT_KEY]: {
              ...smithyContext
            },
            ...additionalContext
          };
          const { requestHandler } = configuration;
          return stack.resolve((request3) => requestHandler.handle(request3.request, options2 || {}), handlerExecutionContext);
        }
      };
      ClassBuilder = class {
        constructor() {
          this._init = () => {
          };
          this._ep = {};
          this._middlewareFn = () => [];
          this._commandName = "";
          this._clientName = "";
          this._additionalContext = {};
          this._smithyContext = {};
          this._inputFilterSensitiveLog = (_2) => _2;
          this._outputFilterSensitiveLog = (_2) => _2;
          this._serializer = null;
          this._deserializer = null;
        }
        init(cb) {
          this._init = cb;
        }
        ep(endpointParameterInstructions) {
          this._ep = endpointParameterInstructions;
          return this;
        }
        m(middlewareSupplier) {
          this._middlewareFn = middlewareSupplier;
          return this;
        }
        s(service, operation, smithyContext = {}) {
          this._smithyContext = {
            service,
            operation,
            ...smithyContext
          };
          return this;
        }
        c(additionalContext = {}) {
          this._additionalContext = additionalContext;
          return this;
        }
        n(clientName, commandName) {
          this._clientName = clientName;
          this._commandName = commandName;
          return this;
        }
        f(inputFilter = (_2) => _2, outputFilter = (_2) => _2) {
          this._inputFilterSensitiveLog = inputFilter;
          this._outputFilterSensitiveLog = outputFilter;
          return this;
        }
        ser(serializer) {
          this._serializer = serializer;
          return this;
        }
        de(deserializer) {
          this._deserializer = deserializer;
          return this;
        }
        build() {
          const closure = this;
          let CommandRef;
          return CommandRef = class extends Command {
            static getEndpointParameterInstructions() {
              return closure._ep;
            }
            constructor(...[input3]) {
              super();
              this.serialize = closure._serializer;
              this.deserialize = closure._deserializer;
              this.input = input3 ?? {};
              closure._init(this);
            }
            resolveMiddleware(stack, configuration, options2) {
              return this.resolveMiddlewareWithContext(stack, configuration, options2, {
                CommandCtor: CommandRef,
                middlewareFn: closure._middlewareFn,
                clientName: closure._clientName,
                commandName: closure._commandName,
                inputFilterSensitiveLog: closure._inputFilterSensitiveLog,
                outputFilterSensitiveLog: closure._outputFilterSensitiveLog,
                smithyContext: closure._smithyContext,
                additionalContext: closure._additionalContext
              });
            }
          };
        }
      };
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/constants.js
  var SENSITIVE_STRING;
  var init_constants4 = __esm({
    "node_modules/@smithy/smithy-client/dist-es/constants.js"() {
      SENSITIVE_STRING = "***SensitiveInformation***";
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/create-aggregated-client.js
  var createAggregatedClient;
  var init_create_aggregated_client = __esm({
    "node_modules/@smithy/smithy-client/dist-es/create-aggregated-client.js"() {
      createAggregatedClient = (commands3, Client2) => {
        for (const command2 of Object.keys(commands3)) {
          const CommandCtor = commands3[command2];
          const methodImpl = async function(args, optionsOrCb, cb) {
            const command3 = new CommandCtor(args);
            if (typeof optionsOrCb === "function") {
              this.send(command3, optionsOrCb);
            } else if (typeof cb === "function") {
              if (typeof optionsOrCb !== "object")
                throw new Error(`Expected http options but got ${typeof optionsOrCb}`);
              this.send(command3, optionsOrCb || {}, cb);
            } else {
              return this.send(command3, optionsOrCb);
            }
          };
          const methodName = (command2[0].toLowerCase() + command2.slice(1)).replace(/Command$/, "");
          Client2.prototype[methodName] = methodImpl;
        }
      };
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/parse-utils.js
  var expectNumber, MAX_FLOAT, expectFloat32, expectLong, expectInt32, expectShort, expectByte, expectSizedInt, castInt, expectNonNull, expectString, strictParseDouble, strictParseFloat32, NUMBER_REGEX, parseNumber, strictParseInt32, strictParseShort, strictParseByte, stackTraceWarning, logger;
  var init_parse_utils = __esm({
    "node_modules/@smithy/smithy-client/dist-es/parse-utils.js"() {
      expectNumber = (value14) => {
        if (value14 === null || value14 === void 0) {
          return void 0;
        }
        if (typeof value14 === "string") {
          const parsed = parseFloat(value14);
          if (!Number.isNaN(parsed)) {
            if (String(parsed) !== String(value14)) {
              logger.warn(stackTraceWarning(`Expected number but observed string: ${value14}`));
            }
            return parsed;
          }
        }
        if (typeof value14 === "number") {
          return value14;
        }
        throw new TypeError(`Expected number, got ${typeof value14}: ${value14}`);
      };
      MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));
      expectFloat32 = (value14) => {
        const expected = expectNumber(value14);
        if (expected !== void 0 && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {
          if (Math.abs(expected) > MAX_FLOAT) {
            throw new TypeError(`Expected 32-bit float, got ${value14}`);
          }
        }
        return expected;
      };
      expectLong = (value14) => {
        if (value14 === null || value14 === void 0) {
          return void 0;
        }
        if (Number.isInteger(value14) && !Number.isNaN(value14)) {
          return value14;
        }
        throw new TypeError(`Expected integer, got ${typeof value14}: ${value14}`);
      };
      expectInt32 = (value14) => expectSizedInt(value14, 32);
      expectShort = (value14) => expectSizedInt(value14, 16);
      expectByte = (value14) => expectSizedInt(value14, 8);
      expectSizedInt = (value14, size5) => {
        const expected = expectLong(value14);
        if (expected !== void 0 && castInt(expected, size5) !== expected) {
          throw new TypeError(`Expected ${size5}-bit integer, got ${value14}`);
        }
        return expected;
      };
      castInt = (value14, size5) => {
        switch (size5) {
          case 32:
            return Int32Array.of(value14)[0];
          case 16:
            return Int16Array.of(value14)[0];
          case 8:
            return Int8Array.of(value14)[0];
        }
      };
      expectNonNull = (value14, location2) => {
        if (value14 === null || value14 === void 0) {
          if (location2) {
            throw new TypeError(`Expected a non-null value for ${location2}`);
          }
          throw new TypeError("Expected a non-null value");
        }
        return value14;
      };
      expectString = (value14) => {
        if (value14 === null || value14 === void 0) {
          return void 0;
        }
        if (typeof value14 === "string") {
          return value14;
        }
        if (["boolean", "number", "bigint"].includes(typeof value14)) {
          logger.warn(stackTraceWarning(`Expected string, got ${typeof value14}: ${value14}`));
          return String(value14);
        }
        throw new TypeError(`Expected string, got ${typeof value14}: ${value14}`);
      };
      strictParseDouble = (value14) => {
        if (typeof value14 == "string") {
          return expectNumber(parseNumber(value14));
        }
        return expectNumber(value14);
      };
      strictParseFloat32 = (value14) => {
        if (typeof value14 == "string") {
          return expectFloat32(parseNumber(value14));
        }
        return expectFloat32(value14);
      };
      NUMBER_REGEX = /(-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?)|(-?Infinity)|(NaN)/g;
      parseNumber = (value14) => {
        const matches2 = value14.match(NUMBER_REGEX);
        if (matches2 === null || matches2[0].length !== value14.length) {
          throw new TypeError(`Expected real number, got implicit NaN`);
        }
        return parseFloat(value14);
      };
      strictParseInt32 = (value14) => {
        if (typeof value14 === "string") {
          return expectInt32(parseNumber(value14));
        }
        return expectInt32(value14);
      };
      strictParseShort = (value14) => {
        if (typeof value14 === "string") {
          return expectShort(parseNumber(value14));
        }
        return expectShort(value14);
      };
      strictParseByte = (value14) => {
        if (typeof value14 === "string") {
          return expectByte(parseNumber(value14));
        }
        return expectByte(value14);
      };
      stackTraceWarning = (message2) => {
        return String(new TypeError(message2).stack || message2).split("\n").slice(0, 5).filter((s3) => !s3.includes("stackTraceWarning")).join("\n");
      };
      logger = {
        warn: console.warn
      };
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/date-utils.js
  var MONTHS, RFC3339, parseRfc3339DateTime, RFC3339_WITH_OFFSET, parseRfc3339DateTimeWithOffset, IMF_FIXDATE, RFC_850_DATE, ASC_TIME, parseEpochTimestamp, buildDate, FIFTY_YEARS_IN_MILLIS, DAYS_IN_MONTH, validateDayOfMonth, isLeapYear, parseDateValue, parseMilliseconds, parseOffsetToMilliseconds, stripLeadingZeroes;
  var init_date_utils = __esm({
    "node_modules/@smithy/smithy-client/dist-es/date-utils.js"() {
      init_parse_utils();
      MONTHS = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
      RFC3339 = new RegExp(/^(\d{4})-(\d{2})-(\d{2})[tT](\d{2}):(\d{2}):(\d{2})(?:\.(\d+))?[zZ]$/);
      parseRfc3339DateTime = (value14) => {
        if (value14 === null || value14 === void 0) {
          return void 0;
        }
        if (typeof value14 !== "string") {
          throw new TypeError("RFC-3339 date-times must be expressed as strings");
        }
        const match4 = RFC3339.exec(value14);
        if (!match4) {
          throw new TypeError("Invalid RFC-3339 date-time value");
        }
        const [_2, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match4;
        const year = strictParseShort(stripLeadingZeroes(yearStr));
        const month = parseDateValue(monthStr, "month", 1, 12);
        const day = parseDateValue(dayStr, "day", 1, 31);
        return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });
      };
      RFC3339_WITH_OFFSET = new RegExp(/^(\d{4})-(\d{2})-(\d{2})[tT](\d{2}):(\d{2}):(\d{2})(?:\.(\d+))?(([-+]\d{2}\:\d{2})|[zZ])$/);
      parseRfc3339DateTimeWithOffset = (value14) => {
        if (value14 === null || value14 === void 0) {
          return void 0;
        }
        if (typeof value14 !== "string") {
          throw new TypeError("RFC-3339 date-times must be expressed as strings");
        }
        const match4 = RFC3339_WITH_OFFSET.exec(value14);
        if (!match4) {
          throw new TypeError("Invalid RFC-3339 date-time value");
        }
        const [_2, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match4;
        const year = strictParseShort(stripLeadingZeroes(yearStr));
        const month = parseDateValue(monthStr, "month", 1, 12);
        const day = parseDateValue(dayStr, "day", 1, 31);
        const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });
        if (offsetStr.toUpperCase() != "Z") {
          date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));
        }
        return date;
      };
      IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d{1,2}):(\d{2}):(\d{2})(?:\.(\d+))? GMT$/);
      RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d{2}) (\d{1,2}):(\d{2}):(\d{2})(?:\.(\d+))? GMT$/);
      ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\d{2}) (\d{1,2}):(\d{2}):(\d{2})(?:\.(\d+))? (\d{4})$/);
      parseEpochTimestamp = (value14) => {
        if (value14 === null || value14 === void 0) {
          return void 0;
        }
        let valueAsDouble;
        if (typeof value14 === "number") {
          valueAsDouble = value14;
        } else if (typeof value14 === "string") {
          valueAsDouble = strictParseDouble(value14);
        } else {
          throw new TypeError("Epoch timestamps must be expressed as floating point numbers or their string representation");
        }
        if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {
          throw new TypeError("Epoch timestamps must be valid, non-Infinite, non-NaN numerics");
        }
        return new Date(Math.round(valueAsDouble * 1e3));
      };
      buildDate = (year, month, day, time3) => {
        const adjustedMonth = month - 1;
        validateDayOfMonth(year, adjustedMonth, day);
        return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time3.hours, "hour", 0, 23), parseDateValue(time3.minutes, "minute", 0, 59), parseDateValue(time3.seconds, "seconds", 0, 60), parseMilliseconds(time3.fractionalMilliseconds)));
      };
      FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1e3;
      DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
      validateDayOfMonth = (year, month, day) => {
        let maxDays = DAYS_IN_MONTH[month];
        if (month === 1 && isLeapYear(year)) {
          maxDays = 29;
        }
        if (day > maxDays) {
          throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);
        }
      };
      isLeapYear = (year) => {
        return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
      };
      parseDateValue = (value14, type, lower, upper) => {
        const dateVal = strictParseByte(stripLeadingZeroes(value14));
        if (dateVal < lower || dateVal > upper) {
          throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);
        }
        return dateVal;
      };
      parseMilliseconds = (value14) => {
        if (value14 === null || value14 === void 0) {
          return 0;
        }
        return strictParseFloat32("0." + value14) * 1e3;
      };
      parseOffsetToMilliseconds = (value14) => {
        const directionStr = value14[0];
        let direction = 1;
        if (directionStr == "+") {
          direction = 1;
        } else if (directionStr == "-") {
          direction = -1;
        } else {
          throw new TypeError(`Offset direction, ${directionStr}, must be "+" or "-"`);
        }
        const hour = Number(value14.substring(1, 3));
        const minute = Number(value14.substring(4, 6));
        return direction * (hour * 60 + minute) * 60 * 1e3;
      };
      stripLeadingZeroes = (value14) => {
        let idx = 0;
        while (idx < value14.length - 1 && value14.charAt(idx) === "0") {
          idx++;
        }
        if (idx === 0) {
          return value14;
        }
        return value14.slice(idx);
      };
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/exceptions.js
  var ServiceException, decorateServiceException;
  var init_exceptions = __esm({
    "node_modules/@smithy/smithy-client/dist-es/exceptions.js"() {
      ServiceException = class _ServiceException extends Error {
        constructor(options2) {
          super(options2.message);
          Object.setPrototypeOf(this, _ServiceException.prototype);
          this.name = options2.name;
          this.$fault = options2.$fault;
          this.$metadata = options2.$metadata;
        }
      };
      decorateServiceException = (exception, additions = {}) => {
        Object.entries(additions).filter(([, v3]) => v3 !== void 0).forEach(([k3, v3]) => {
          if (exception[k3] == void 0 || exception[k3] === "") {
            exception[k3] = v3;
          }
        });
        const message2 = exception.message || exception.Message || "UnknownError";
        exception.message = message2;
        delete exception.Message;
        return exception;
      };
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/default-error-handler.js
  var throwDefaultError, withBaseException, deserializeMetadata;
  var init_default_error_handler = __esm({
    "node_modules/@smithy/smithy-client/dist-es/default-error-handler.js"() {
      init_exceptions();
      throwDefaultError = ({ output: output2, parsedBody, exceptionCtor, errorCode }) => {
        const $metadata = deserializeMetadata(output2);
        const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : void 0;
        const response = new exceptionCtor({
          name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || "UnknownError",
          $fault: "client",
          $metadata
        });
        throw decorateServiceException(response, parsedBody);
      };
      withBaseException = (ExceptionCtor) => {
        return ({ output: output2, parsedBody, errorCode }) => {
          throwDefaultError({ output: output2, parsedBody, exceptionCtor: ExceptionCtor, errorCode });
        };
      };
      deserializeMetadata = (output2) => ({
        httpStatusCode: output2.statusCode,
        requestId: output2.headers["x-amzn-requestid"] ?? output2.headers["x-amzn-request-id"] ?? output2.headers["x-amz-request-id"],
        extendedRequestId: output2.headers["x-amz-id-2"],
        cfId: output2.headers["x-amz-cf-id"]
      });
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/defaults-mode.js
  var loadConfigsForDefaultMode;
  var init_defaults_mode = __esm({
    "node_modules/@smithy/smithy-client/dist-es/defaults-mode.js"() {
      loadConfigsForDefaultMode = (mode) => {
        switch (mode) {
          case "standard":
            return {
              retryMode: "standard",
              connectionTimeout: 3100
            };
          case "in-region":
            return {
              retryMode: "standard",
              connectionTimeout: 1100
            };
          case "cross-region":
            return {
              retryMode: "standard",
              connectionTimeout: 3100
            };
          case "mobile":
            return {
              retryMode: "standard",
              connectionTimeout: 3e4
            };
          default:
            return {};
        }
      };
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/emitWarningIfUnsupportedVersion.js
  var init_emitWarningIfUnsupportedVersion = __esm({
    "node_modules/@smithy/smithy-client/dist-es/emitWarningIfUnsupportedVersion.js"() {
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/extensions/checksum.js
  var getChecksumConfiguration2, resolveChecksumRuntimeConfig2;
  var init_checksum3 = __esm({
    "node_modules/@smithy/smithy-client/dist-es/extensions/checksum.js"() {
      init_dist_es2();
      getChecksumConfiguration2 = (runtimeConfig) => {
        const checksumAlgorithms = [];
        for (const id3 in AlgorithmId) {
          const algorithmId = AlgorithmId[id3];
          if (runtimeConfig[algorithmId] === void 0) {
            continue;
          }
          checksumAlgorithms.push({
            algorithmId: () => algorithmId,
            checksumConstructor: () => runtimeConfig[algorithmId]
          });
        }
        return {
          _checksumAlgorithms: checksumAlgorithms,
          addChecksumAlgorithm(algo) {
            this._checksumAlgorithms.push(algo);
          },
          checksumAlgorithms() {
            return this._checksumAlgorithms;
          }
        };
      };
      resolveChecksumRuntimeConfig2 = (clientConfig) => {
        const runtimeConfig = {};
        clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {
          runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();
        });
        return runtimeConfig;
      };
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/extensions/retry.js
  var getRetryConfiguration, resolveRetryRuntimeConfig;
  var init_retry2 = __esm({
    "node_modules/@smithy/smithy-client/dist-es/extensions/retry.js"() {
      getRetryConfiguration = (runtimeConfig) => {
        let _retryStrategy = runtimeConfig.retryStrategy;
        return {
          setRetryStrategy(retryStrategy) {
            _retryStrategy = retryStrategy;
          },
          retryStrategy() {
            return _retryStrategy;
          }
        };
      };
      resolveRetryRuntimeConfig = (retryStrategyConfiguration) => {
        const runtimeConfig = {};
        runtimeConfig.retryStrategy = retryStrategyConfiguration.retryStrategy();
        return runtimeConfig;
      };
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/extensions/defaultExtensionConfiguration.js
  var getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig;
  var init_defaultExtensionConfiguration2 = __esm({
    "node_modules/@smithy/smithy-client/dist-es/extensions/defaultExtensionConfiguration.js"() {
      init_checksum3();
      init_retry2();
      getDefaultExtensionConfiguration = (runtimeConfig) => {
        return {
          ...getChecksumConfiguration2(runtimeConfig),
          ...getRetryConfiguration(runtimeConfig)
        };
      };
      resolveDefaultRuntimeConfig = (config) => {
        return {
          ...resolveChecksumRuntimeConfig2(config),
          ...resolveRetryRuntimeConfig(config)
        };
      };
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/extensions/index.js
  var init_extensions3 = __esm({
    "node_modules/@smithy/smithy-client/dist-es/extensions/index.js"() {
      init_defaultExtensionConfiguration2();
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/extended-encode-uri-component.js
  function extendedEncodeURIComponent(str) {
    return encodeURIComponent(str).replace(/[!'()*]/g, function(c3) {
      return "%" + c3.charCodeAt(0).toString(16).toUpperCase();
    });
  }
  var init_extended_encode_uri_component = __esm({
    "node_modules/@smithy/smithy-client/dist-es/extended-encode-uri-component.js"() {
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/get-array-if-single-item.js
  var init_get_array_if_single_item = __esm({
    "node_modules/@smithy/smithy-client/dist-es/get-array-if-single-item.js"() {
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/get-value-from-text-node.js
  var getValueFromTextNode;
  var init_get_value_from_text_node = __esm({
    "node_modules/@smithy/smithy-client/dist-es/get-value-from-text-node.js"() {
      getValueFromTextNode = (obj) => {
        const textNodeName = "#text";
        for (const key2 in obj) {
          if (obj.hasOwnProperty(key2) && obj[key2][textNodeName] !== void 0) {
            obj[key2] = obj[key2][textNodeName];
          } else if (typeof obj[key2] === "object" && obj[key2] !== null) {
            obj[key2] = getValueFromTextNode(obj[key2]);
          }
        }
        return obj;
      };
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/lazy-json.js
  var StringWrapper;
  var init_lazy_json = __esm({
    "node_modules/@smithy/smithy-client/dist-es/lazy-json.js"() {
      StringWrapper = function() {
        const Class = Object.getPrototypeOf(this).constructor;
        const Constructor = Function.bind.apply(String, [null, ...arguments]);
        const instance = new Constructor();
        Object.setPrototypeOf(instance, Class.prototype);
        return instance;
      };
      StringWrapper.prototype = Object.create(String.prototype, {
        constructor: {
          value: StringWrapper,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      Object.setPrototypeOf(StringWrapper, String);
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/object-mapping.js
  var take, applyInstruction, nonNullish, pass;
  var init_object_mapping = __esm({
    "node_modules/@smithy/smithy-client/dist-es/object-mapping.js"() {
      take = (source2, instructions) => {
        const out = {};
        for (const key2 in instructions) {
          applyInstruction(out, source2, instructions, key2);
        }
        return out;
      };
      applyInstruction = (target6, source2, instructions, targetKey) => {
        if (source2 !== null) {
          let instruction = instructions[targetKey];
          if (typeof instruction === "function") {
            instruction = [, instruction];
          }
          const [filter4 = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;
          if (typeof filter4 === "function" && filter4(source2[sourceKey]) || typeof filter4 !== "function" && !!filter4) {
            target6[targetKey] = valueFn(source2[sourceKey]);
          }
          return;
        }
        let [filter3, value14] = instructions[targetKey];
        if (typeof value14 === "function") {
          let _value;
          const defaultFilterPassed = filter3 === void 0 && (_value = value14()) != null;
          const customFilterPassed = typeof filter3 === "function" && !!filter3(void 0) || typeof filter3 !== "function" && !!filter3;
          if (defaultFilterPassed) {
            target6[targetKey] = _value;
          } else if (customFilterPassed) {
            target6[targetKey] = value14();
          }
        } else {
          const defaultFilterPassed = filter3 === void 0 && value14 != null;
          const customFilterPassed = typeof filter3 === "function" && !!filter3(value14) || typeof filter3 !== "function" && !!filter3;
          if (defaultFilterPassed || customFilterPassed) {
            target6[targetKey] = value14;
          }
        }
      };
      nonNullish = (_2) => _2 != null;
      pass = (_2) => _2;
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/resolve-path.js
  var init_resolve_path = __esm({
    "node_modules/@smithy/smithy-client/dist-es/resolve-path.js"() {
      init_extended_encode_uri_component();
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/ser-utils.js
  var init_ser_utils = __esm({
    "node_modules/@smithy/smithy-client/dist-es/ser-utils.js"() {
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/serde-json.js
  var _json;
  var init_serde_json = __esm({
    "node_modules/@smithy/smithy-client/dist-es/serde-json.js"() {
      _json = (obj) => {
        if (obj == null) {
          return {};
        }
        if (Array.isArray(obj)) {
          return obj.filter((_2) => _2 != null).map(_json);
        }
        if (typeof obj === "object") {
          const target6 = {};
          for (const key2 of Object.keys(obj)) {
            if (obj[key2] == null) {
              continue;
            }
            target6[key2] = _json(obj[key2]);
          }
          return target6;
        }
        return obj;
      };
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/split-every.js
  var init_split_every = __esm({
    "node_modules/@smithy/smithy-client/dist-es/split-every.js"() {
    }
  });

  // node_modules/@smithy/smithy-client/dist-es/index.js
  var init_dist_es27 = __esm({
    "node_modules/@smithy/smithy-client/dist-es/index.js"() {
      init_NoOpLogger();
      init_client2();
      init_collect_stream_body();
      init_command2();
      init_constants4();
      init_create_aggregated_client();
      init_date_utils();
      init_default_error_handler();
      init_defaults_mode();
      init_emitWarningIfUnsupportedVersion();
      init_extensions3();
      init_exceptions();
      init_extended_encode_uri_component();
      init_get_array_if_single_item();
      init_get_value_from_text_node();
      init_lazy_json();
      init_object_mapping();
      init_parse_utils();
      init_resolve_path();
      init_ser_utils();
      init_serde_json();
      init_split_every();
    }
  });

  // node_modules/@smithy/middleware-retry/dist-es/isStreamingPayload/isStreamingPayload.browser.js
  var isStreamingPayload;
  var init_isStreamingPayload_browser = __esm({
    "node_modules/@smithy/middleware-retry/dist-es/isStreamingPayload/isStreamingPayload.browser.js"() {
      isStreamingPayload = (request3) => request3?.body instanceof ReadableStream;
    }
  });

  // node_modules/@smithy/middleware-retry/dist-es/retryMiddleware.js
  var retryMiddleware, isRetryStrategyV2, getRetryErrorInfo, getRetryErrorType, retryMiddlewareOptions, getRetryPlugin, getRetryAfterHint;
  var init_retryMiddleware = __esm({
    "node_modules/@smithy/middleware-retry/dist-es/retryMiddleware.js"() {
      init_dist_es3();
      init_dist_es17();
      init_dist_es27();
      init_dist_es18();
      init_esm_browser();
      init_isStreamingPayload_browser();
      init_util2();
      retryMiddleware = (options2) => (next, context) => async (args) => {
        let retryStrategy = await options2.retryStrategy();
        const maxAttempts = await options2.maxAttempts();
        if (isRetryStrategyV2(retryStrategy)) {
          retryStrategy = retryStrategy;
          let retryToken = await retryStrategy.acquireInitialRetryToken(context["partition_id"]);
          let lastError = new Error();
          let attempts = 0;
          let totalRetryDelay = 0;
          const { request: request3 } = args;
          const isRequest = HttpRequest.isInstance(request3);
          if (isRequest) {
            request3.headers[INVOCATION_ID_HEADER] = v4_default();
          }
          while (true) {
            try {
              if (isRequest) {
                request3.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;
              }
              const { response, output: output2 } = await next(args);
              retryStrategy.recordSuccess(retryToken);
              output2.$metadata.attempts = attempts + 1;
              output2.$metadata.totalRetryDelay = totalRetryDelay;
              return { response, output: output2 };
            } catch (e3) {
              const retryErrorInfo = getRetryErrorInfo(e3);
              lastError = asSdkError(e3);
              if (isRequest && isStreamingPayload(request3)) {
                (context.logger instanceof NoOpLogger ? console : context.logger)?.warn("An error was encountered in a non-retryable streaming request.");
                throw lastError;
              }
              try {
                retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);
              } catch (refreshError) {
                if (!lastError.$metadata) {
                  lastError.$metadata = {};
                }
                lastError.$metadata.attempts = attempts + 1;
                lastError.$metadata.totalRetryDelay = totalRetryDelay;
                throw lastError;
              }
              attempts = retryToken.getRetryCount();
              const delay = retryToken.getRetryDelay();
              totalRetryDelay += delay;
              await new Promise((resolve) => setTimeout(resolve, delay));
            }
          }
        } else {
          retryStrategy = retryStrategy;
          if (retryStrategy?.mode)
            context.userAgent = [...context.userAgent || [], ["cfg/retry-mode", retryStrategy.mode]];
          return retryStrategy.retry(next, args);
        }
      };
      isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== "undefined" && typeof retryStrategy.refreshRetryTokenForRetry !== "undefined" && typeof retryStrategy.recordSuccess !== "undefined";
      getRetryErrorInfo = (error4) => {
        const errorInfo = {
          error: error4,
          errorType: getRetryErrorType(error4)
        };
        const retryAfterHint = getRetryAfterHint(error4.$response);
        if (retryAfterHint) {
          errorInfo.retryAfterHint = retryAfterHint;
        }
        return errorInfo;
      };
      getRetryErrorType = (error4) => {
        if (isThrottlingError(error4))
          return "THROTTLING";
        if (isTransientError(error4))
          return "TRANSIENT";
        if (isServerError(error4))
          return "SERVER_ERROR";
        return "CLIENT_ERROR";
      };
      retryMiddlewareOptions = {
        name: "retryMiddleware",
        tags: ["RETRY"],
        step: "finalizeRequest",
        priority: "high",
        override: true
      };
      getRetryPlugin = (options2) => ({
        applyToStack: (clientStack) => {
          clientStack.add(retryMiddleware(options2), retryMiddlewareOptions);
        }
      });
      getRetryAfterHint = (response) => {
        if (!HttpResponse.isInstance(response))
          return;
        const retryAfterHeaderName = Object.keys(response.headers).find((key2) => key2.toLowerCase() === "retry-after");
        if (!retryAfterHeaderName)
          return;
        const retryAfter = response.headers[retryAfterHeaderName];
        const retryAfterSeconds = Number(retryAfter);
        if (!Number.isNaN(retryAfterSeconds))
          return new Date(retryAfterSeconds * 1e3);
        const retryAfterDate = new Date(retryAfter);
        return retryAfterDate;
      };
    }
  });

  // node_modules/@smithy/middleware-retry/dist-es/index.js
  var init_dist_es28 = __esm({
    "node_modules/@smithy/middleware-retry/dist-es/index.js"() {
      init_AdaptiveRetryStrategy2();
      init_StandardRetryStrategy2();
      init_configurations2();
      init_delayDecider();
      init_omitRetryHeadersMiddleware();
      init_retryDecider();
      init_retryMiddleware();
    }
  });

  // node_modules/@smithy/core/dist-es/middleware-http-signing/getHttpSigningMiddleware.js
  var httpSigningMiddlewareOptions, getHttpSigningPlugin;
  var init_getHttpSigningMiddleware = __esm({
    "node_modules/@smithy/core/dist-es/middleware-http-signing/getHttpSigningMiddleware.js"() {
      init_dist_es28();
      init_httpSigningMiddleware();
      httpSigningMiddlewareOptions = {
        step: "finalizeRequest",
        tags: ["HTTP_SIGNING"],
        name: "httpSigningMiddleware",
        aliases: ["apiKeyMiddleware", "tokenMiddleware", "awsAuthMiddleware"],
        override: true,
        relation: "after",
        toMiddleware: retryMiddlewareOptions.name
      };
      getHttpSigningPlugin = (config) => ({
        applyToStack: (clientStack) => {
          clientStack.addRelativeTo(httpSigningMiddleware(config), httpSigningMiddlewareOptions);
        }
      });
    }
  });

  // node_modules/@smithy/core/dist-es/middleware-http-signing/index.js
  var init_middleware_http_signing = __esm({
    "node_modules/@smithy/core/dist-es/middleware-http-signing/index.js"() {
      init_httpSigningMiddleware();
      init_getHttpSigningMiddleware();
    }
  });

  // node_modules/@smithy/core/dist-es/util-identity-and-auth/DefaultIdentityProviderConfig.js
  var DefaultIdentityProviderConfig;
  var init_DefaultIdentityProviderConfig = __esm({
    "node_modules/@smithy/core/dist-es/util-identity-and-auth/DefaultIdentityProviderConfig.js"() {
      DefaultIdentityProviderConfig = class {
        constructor(config) {
          this.authSchemes = /* @__PURE__ */ new Map();
          for (const [key2, value14] of Object.entries(config)) {
            if (value14 !== void 0) {
              this.authSchemes.set(key2, value14);
            }
          }
        }
        getIdentityProvider(schemeId) {
          return this.authSchemes.get(schemeId);
        }
      };
    }
  });

  // node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/httpApiKeyAuth.js
  var init_httpApiKeyAuth = __esm({
    "node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/httpApiKeyAuth.js"() {
      init_dist_es2();
    }
  });

  // node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/httpBearerAuth.js
  var init_httpBearerAuth = __esm({
    "node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/httpBearerAuth.js"() {
    }
  });

  // node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/noAuth.js
  var NoAuthSigner;
  var init_noAuth = __esm({
    "node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/noAuth.js"() {
      NoAuthSigner = class {
        async sign(httpRequest, identity13, signingProperties) {
          return httpRequest;
        }
      };
    }
  });

  // node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/index.js
  var init_httpAuthSchemes = __esm({
    "node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/index.js"() {
      init_httpApiKeyAuth();
      init_httpBearerAuth();
      init_noAuth();
    }
  });

  // node_modules/@smithy/core/dist-es/util-identity-and-auth/memoizeIdentityProvider.js
  var createIsIdentityExpiredFunction, EXPIRATION_MS, isIdentityExpired, doesIdentityRequireRefresh, memoizeIdentityProvider;
  var init_memoizeIdentityProvider = __esm({
    "node_modules/@smithy/core/dist-es/util-identity-and-auth/memoizeIdentityProvider.js"() {
      createIsIdentityExpiredFunction = (expirationMs) => (identity13) => doesIdentityRequireRefresh(identity13) && identity13.expiration.getTime() - Date.now() < expirationMs;
      EXPIRATION_MS = 3e5;
      isIdentityExpired = createIsIdentityExpiredFunction(EXPIRATION_MS);
      doesIdentityRequireRefresh = (identity13) => identity13.expiration !== void 0;
      memoizeIdentityProvider = (provider, isExpired, requiresRefresh) => {
        if (provider === void 0) {
          return void 0;
        }
        const normalizedProvider = typeof provider !== "function" ? async () => Promise.resolve(provider) : provider;
        let resolved;
        let pending;
        let hasResult;
        let isConstant = false;
        const coalesceProvider = async (options2) => {
          if (!pending) {
            pending = normalizedProvider(options2);
          }
          try {
            resolved = await pending;
            hasResult = true;
            isConstant = false;
          } finally {
            pending = void 0;
          }
          return resolved;
        };
        if (isExpired === void 0) {
          return async (options2) => {
            if (!hasResult || options2?.forceRefresh) {
              resolved = await coalesceProvider(options2);
            }
            return resolved;
          };
        }
        return async (options2) => {
          if (!hasResult || options2?.forceRefresh) {
            resolved = await coalesceProvider(options2);
          }
          if (isConstant) {
            return resolved;
          }
          if (!requiresRefresh(resolved)) {
            isConstant = true;
            return resolved;
          }
          if (isExpired(resolved)) {
            await coalesceProvider(options2);
            return resolved;
          }
          return resolved;
        };
      };
    }
  });

  // node_modules/@smithy/core/dist-es/util-identity-and-auth/index.js
  var init_util_identity_and_auth = __esm({
    "node_modules/@smithy/core/dist-es/util-identity-and-auth/index.js"() {
      init_DefaultIdentityProviderConfig();
      init_httpAuthSchemes();
      init_memoizeIdentityProvider();
    }
  });

  // node_modules/@smithy/core/dist-es/getSmithyContext.js
  var init_getSmithyContext2 = __esm({
    "node_modules/@smithy/core/dist-es/getSmithyContext.js"() {
      init_dist_es2();
    }
  });

  // node_modules/@smithy/core/dist-es/normalizeProvider.js
  var normalizeProvider2;
  var init_normalizeProvider2 = __esm({
    "node_modules/@smithy/core/dist-es/normalizeProvider.js"() {
      normalizeProvider2 = (input3) => {
        if (typeof input3 === "function")
          return input3;
        const promisified = Promise.resolve(input3);
        return () => promisified;
      };
    }
  });

  // node_modules/@smithy/core/dist-es/protocols/requestBuilder.js
  var init_requestBuilder = __esm({
    "node_modules/@smithy/core/dist-es/protocols/requestBuilder.js"() {
      init_dist_es3();
      init_dist_es27();
    }
  });

  // node_modules/@smithy/core/dist-es/pagination/createPaginator.js
  function createPaginator(ClientCtor, CommandCtor, inputTokenName, outputTokenName, pageSizeTokenName) {
    return async function* paginateOperation(config, input3, ...additionalArguments) {
      let token = config.startingToken || void 0;
      let hasNext = true;
      let page;
      while (hasNext) {
        input3[inputTokenName] = token;
        if (pageSizeTokenName) {
          input3[pageSizeTokenName] = input3[pageSizeTokenName] ?? config.pageSize;
        }
        if (config.client instanceof ClientCtor) {
          page = await makePagedClientRequest(CommandCtor, config.client, input3, ...additionalArguments);
        } else {
          throw new Error(`Invalid client, expected instance of ${ClientCtor.name}`);
        }
        yield page;
        const prevToken = token;
        token = get(page, outputTokenName);
        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));
      }
      return void 0;
    };
  }
  var makePagedClientRequest, get;
  var init_createPaginator = __esm({
    "node_modules/@smithy/core/dist-es/pagination/createPaginator.js"() {
      makePagedClientRequest = async (CommandCtor, client, input3, ...args) => {
        return await client.send(new CommandCtor(input3), ...args);
      };
      get = (fromObject, path) => {
        let cursor = fromObject;
        const pathComponents = path.split(".");
        for (const step3 of pathComponents) {
          if (!cursor || typeof cursor !== "object") {
            return void 0;
          }
          cursor = cursor[step3];
        }
        return cursor;
      };
    }
  });

  // node_modules/@smithy/core/dist-es/index.js
  var init_dist_es29 = __esm({
    "node_modules/@smithy/core/dist-es/index.js"() {
      init_middleware_http_auth_scheme();
      init_middleware_http_signing();
      init_util_identity_and_auth();
      init_getSmithyContext2();
      init_normalizeProvider2();
      init_requestBuilder();
      init_createPaginator();
    }
  });

  // node_modules/@smithy/middleware-content-length/dist-es/index.js
  function contentLengthMiddleware(bodyLengthChecker) {
    return (next) => async (args) => {
      const request3 = args.request;
      if (HttpRequest.isInstance(request3)) {
        const { body: body2, headers } = request3;
        if (body2 && Object.keys(headers).map((str) => str.toLowerCase()).indexOf(CONTENT_LENGTH_HEADER) === -1) {
          try {
            const length8 = bodyLengthChecker(body2);
            request3.headers = {
              ...request3.headers,
              [CONTENT_LENGTH_HEADER]: String(length8)
            };
          } catch (error4) {
          }
        }
      }
      return next({
        ...args,
        request: request3
      });
    };
  }
  var CONTENT_LENGTH_HEADER, contentLengthMiddlewareOptions, getContentLengthPlugin;
  var init_dist_es30 = __esm({
    "node_modules/@smithy/middleware-content-length/dist-es/index.js"() {
      init_dist_es3();
      CONTENT_LENGTH_HEADER = "content-length";
      contentLengthMiddlewareOptions = {
        step: "build",
        tags: ["SET_CONTENT_LENGTH", "CONTENT_LENGTH"],
        name: "contentLengthMiddleware",
        override: true
      };
      getContentLengthPlugin = (options2) => ({
        applyToStack: (clientStack) => {
          clientStack.add(contentLengthMiddleware(options2.bodyLengthChecker), contentLengthMiddlewareOptions);
        }
      });
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js
  var init_emitWarningIfUnsupportedVersion2 = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js"() {
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/client/index.js
  var init_client3 = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/client/index.js"() {
      init_emitWarningIfUnsupportedVersion2();
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js
  var getDateHeader;
  var init_getDateHeader = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js"() {
      init_dist_es3();
      getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : void 0;
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js
  var getSkewCorrectedDate;
  var init_getSkewCorrectedDate = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js"() {
      getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js
  var isClockSkewed;
  var init_isClockSkewed = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js"() {
      init_getSkewCorrectedDate();
      isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 3e5;
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js
  var getUpdatedSystemClockOffset;
  var init_getUpdatedSystemClockOffset = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js"() {
      init_isClockSkewed();
      getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {
        const clockTimeInMs = Date.parse(clockTime);
        if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {
          return clockTimeInMs - Date.now();
        }
        return currentSystemClockOffset;
      };
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/index.js
  var init_utils2 = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/index.js"() {
      init_getDateHeader();
      init_getSkewCorrectedDate();
      init_getUpdatedSystemClockOffset();
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js
  var throwSigningPropertyError, validateSigningProperties, AwsSdkSigV4Signer;
  var init_AwsSdkSigV4Signer = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js"() {
      init_dist_es3();
      init_utils2();
      throwSigningPropertyError = (name15, property) => {
        if (!property) {
          throw new Error(`Property \`${name15}\` is not resolved for AWS SDK SigV4Auth`);
        }
        return property;
      };
      validateSigningProperties = async (signingProperties) => {
        const context = throwSigningPropertyError("context", signingProperties.context);
        const config = throwSigningPropertyError("config", signingProperties.config);
        const authScheme = context.endpointV2?.properties?.authSchemes?.[0];
        const signerFunction = throwSigningPropertyError("signer", config.signer);
        const signer = await signerFunction(authScheme);
        const signingRegion = signingProperties?.signingRegion;
        const signingName = signingProperties?.signingName;
        return {
          config,
          signer,
          signingRegion,
          signingName
        };
      };
      AwsSdkSigV4Signer = class {
        async sign(httpRequest, identity13, signingProperties) {
          if (!HttpRequest.isInstance(httpRequest)) {
            throw new Error("The request is not an instance of `HttpRequest` and cannot be signed");
          }
          const { config, signer, signingRegion, signingName } = await validateSigningProperties(signingProperties);
          const signedRequest = await signer.sign(httpRequest, {
            signingDate: getSkewCorrectedDate(config.systemClockOffset),
            signingRegion,
            signingService: signingName
          });
          return signedRequest;
        }
        errorHandler(signingProperties) {
          return (error4) => {
            const serverTime = error4.ServerTime ?? getDateHeader(error4.$response);
            if (serverTime) {
              const config = throwSigningPropertyError("config", signingProperties.config);
              const initialSystemClockOffset = config.systemClockOffset;
              config.systemClockOffset = getUpdatedSystemClockOffset(serverTime, config.systemClockOffset);
              const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;
              if (clockSkewCorrected && error4.$metadata) {
                error4.$metadata.clockSkewCorrected = true;
              }
            }
            throw error4;
          };
        }
        successHandler(httpResponse, signingProperties) {
          const dateHeader = getDateHeader(httpResponse);
          if (dateHeader) {
            const config = throwSigningPropertyError("config", signingProperties.config);
            config.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, config.systemClockOffset);
          }
        }
      };
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/node_modules/@smithy/util-hex-encoding/dist-es/index.js
  function fromHex(encoded) {
    if (encoded.length % 2 !== 0) {
      throw new Error("Hex encoded strings must have an even number length");
    }
    const out = new Uint8Array(encoded.length / 2);
    for (let i4 = 0; i4 < encoded.length; i4 += 2) {
      const encodedByte = encoded.slice(i4, i4 + 2).toLowerCase();
      if (encodedByte in HEX_TO_SHORT2) {
        out[i4 / 2] = HEX_TO_SHORT2[encodedByte];
      } else {
        throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);
      }
    }
    return out;
  }
  function toHex2(bytes) {
    let out = "";
    for (let i4 = 0; i4 < bytes.byteLength; i4++) {
      out += SHORT_TO_HEX2[bytes[i4]];
    }
    return out;
  }
  var SHORT_TO_HEX2, HEX_TO_SHORT2;
  var init_dist_es31 = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/node_modules/@smithy/util-hex-encoding/dist-es/index.js"() {
      SHORT_TO_HEX2 = {};
      HEX_TO_SHORT2 = {};
      for (let i4 = 0; i4 < 256; i4++) {
        let encodedByte = i4.toString(16).toLowerCase();
        if (encodedByte.length === 1) {
          encodedByte = `0${encodedByte}`;
        }
        SHORT_TO_HEX2[i4] = encodedByte;
        HEX_TO_SHORT2[encodedByte] = i4;
      }
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js
  var escapeUri2, hexEncode2;
  var init_escape_uri2 = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js"() {
      escapeUri2 = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode2);
      hexEncode2 = (c3) => `%${c3.charCodeAt(0).toString(16).toUpperCase()}`;
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/node_modules/@smithy/util-uri-escape/dist-es/escape-uri-path.js
  var init_escape_uri_path2 = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/node_modules/@smithy/util-uri-escape/dist-es/escape-uri-path.js"() {
      init_escape_uri2();
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/node_modules/@smithy/util-uri-escape/dist-es/index.js
  var init_dist_es32 = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/node_modules/@smithy/util-uri-escape/dist-es/index.js"() {
      init_escape_uri2();
      init_escape_uri_path2();
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/constants.js
  var ALGORITHM_QUERY_PARAM, CREDENTIAL_QUERY_PARAM, AMZ_DATE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, EXPIRES_QUERY_PARAM, SIGNATURE_QUERY_PARAM, TOKEN_QUERY_PARAM, AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER, GENERATED_HEADERS, SIGNATURE_HEADER, SHA256_HEADER, TOKEN_HEADER, ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN, ALGORITHM_IDENTIFIER, EVENT_ALGORITHM_IDENTIFIER, UNSIGNED_PAYLOAD, MAX_CACHE_SIZE, KEY_TYPE_IDENTIFIER, MAX_PRESIGNED_TTL;
  var init_constants5 = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/constants.js"() {
      ALGORITHM_QUERY_PARAM = "X-Amz-Algorithm";
      CREDENTIAL_QUERY_PARAM = "X-Amz-Credential";
      AMZ_DATE_QUERY_PARAM = "X-Amz-Date";
      SIGNED_HEADERS_QUERY_PARAM = "X-Amz-SignedHeaders";
      EXPIRES_QUERY_PARAM = "X-Amz-Expires";
      SIGNATURE_QUERY_PARAM = "X-Amz-Signature";
      TOKEN_QUERY_PARAM = "X-Amz-Security-Token";
      AUTH_HEADER = "authorization";
      AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();
      DATE_HEADER = "date";
      GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];
      SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();
      SHA256_HEADER = "x-amz-content-sha256";
      TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();
      ALWAYS_UNSIGNABLE_HEADERS = {
        authorization: true,
        "cache-control": true,
        connection: true,
        expect: true,
        from: true,
        "keep-alive": true,
        "max-forwards": true,
        pragma: true,
        referer: true,
        te: true,
        trailer: true,
        "transfer-encoding": true,
        upgrade: true,
        "user-agent": true,
        "x-amzn-trace-id": true
      };
      PROXY_HEADER_PATTERN = /^proxy-/;
      SEC_HEADER_PATTERN = /^sec-/;
      ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256";
      EVENT_ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256-PAYLOAD";
      UNSIGNED_PAYLOAD = "UNSIGNED-PAYLOAD";
      MAX_CACHE_SIZE = 50;
      KEY_TYPE_IDENTIFIER = "aws4_request";
      MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/credentialDerivation.js
  var signingKeyCache, cacheQueue, createScope, getSigningKey, hmac;
  var init_credentialDerivation = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/credentialDerivation.js"() {
      init_dist_es31();
      init_dist_es20();
      init_constants5();
      signingKeyCache = {};
      cacheQueue = [];
      createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;
      getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {
        const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);
        const cacheKey = `${shortDate}:${region}:${service}:${toHex2(credsHash)}:${credentials.sessionToken}`;
        if (cacheKey in signingKeyCache) {
          return signingKeyCache[cacheKey];
        }
        cacheQueue.push(cacheKey);
        while (cacheQueue.length > MAX_CACHE_SIZE) {
          delete signingKeyCache[cacheQueue.shift()];
        }
        let key2 = `AWS4${credentials.secretAccessKey}`;
        for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {
          key2 = await hmac(sha256Constructor, key2, signable);
        }
        return signingKeyCache[cacheKey] = key2;
      };
      hmac = (ctor, secret, data) => {
        const hash2 = new ctor(secret);
        hash2.update(toUint8Array(data));
        return hash2.digest();
      };
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/getCanonicalHeaders.js
  var getCanonicalHeaders;
  var init_getCanonicalHeaders = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/getCanonicalHeaders.js"() {
      init_constants5();
      getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {
        const canonical = {};
        for (const headerName of Object.keys(headers).sort()) {
          if (headers[headerName] == void 0) {
            continue;
          }
          const canonicalHeaderName = headerName.toLowerCase();
          if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS || unsignableHeaders?.has(canonicalHeaderName) || PROXY_HEADER_PATTERN.test(canonicalHeaderName) || SEC_HEADER_PATTERN.test(canonicalHeaderName)) {
            if (!signableHeaders || signableHeaders && !signableHeaders.has(canonicalHeaderName)) {
              continue;
            }
          }
          canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\s+/g, " ");
        }
        return canonical;
      };
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/getCanonicalQuery.js
  var getCanonicalQuery;
  var init_getCanonicalQuery = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/getCanonicalQuery.js"() {
      init_dist_es32();
      init_constants5();
      getCanonicalQuery = ({ query: query3 = {} }) => {
        const keys3 = [];
        const serialized = {};
        for (const key2 of Object.keys(query3).sort()) {
          if (key2.toLowerCase() === SIGNATURE_HEADER) {
            continue;
          }
          keys3.push(key2);
          const value14 = query3[key2];
          if (typeof value14 === "string") {
            serialized[key2] = `${escapeUri2(key2)}=${escapeUri2(value14)}`;
          } else if (Array.isArray(value14)) {
            serialized[key2] = value14.slice(0).reduce((encoded, value15) => encoded.concat([`${escapeUri2(key2)}=${escapeUri2(value15)}`]), []).sort().join("&");
          }
        }
        return keys3.map((key2) => serialized[key2]).filter((serialized2) => serialized2).join("&");
      };
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/node_modules/@smithy/is-array-buffer/dist-es/index.js
  var isArrayBuffer;
  var init_dist_es33 = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/node_modules/@smithy/is-array-buffer/dist-es/index.js"() {
      isArrayBuffer = (arg) => typeof ArrayBuffer === "function" && arg instanceof ArrayBuffer || Object.prototype.toString.call(arg) === "[object ArrayBuffer]";
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/getPayloadHash.js
  var getPayloadHash;
  var init_getPayloadHash = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/getPayloadHash.js"() {
      init_dist_es33();
      init_dist_es31();
      init_dist_es20();
      init_constants5();
      getPayloadHash = async ({ headers, body: body2 }, hashConstructor) => {
        for (const headerName of Object.keys(headers)) {
          if (headerName.toLowerCase() === SHA256_HEADER) {
            return headers[headerName];
          }
        }
        if (body2 == void 0) {
          return "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855";
        } else if (typeof body2 === "string" || ArrayBuffer.isView(body2) || isArrayBuffer(body2)) {
          const hashCtor = new hashConstructor();
          hashCtor.update(toUint8Array(body2));
          return toHex2(await hashCtor.digest());
        }
        return UNSIGNED_PAYLOAD;
      };
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/HeaderFormatter.js
  function negate(bytes) {
    for (let i4 = 0; i4 < 8; i4++) {
      bytes[i4] ^= 255;
    }
    for (let i4 = 7; i4 > -1; i4--) {
      bytes[i4]++;
      if (bytes[i4] !== 0)
        break;
    }
  }
  var HeaderFormatter, HEADER_VALUE_TYPE, UUID_PATTERN, Int64;
  var init_HeaderFormatter = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/HeaderFormatter.js"() {
      init_dist_es31();
      init_dist_es20();
      HeaderFormatter = class {
        format(headers) {
          const chunks = [];
          for (const headerName of Object.keys(headers)) {
            const bytes = fromUtf8(headerName);
            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));
          }
          const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));
          let position2 = 0;
          for (const chunk of chunks) {
            out.set(chunk, position2);
            position2 += chunk.byteLength;
          }
          return out;
        }
        formatHeaderValue(header2) {
          switch (header2.type) {
            case "boolean":
              return Uint8Array.from([header2.value ? 0 : 1]);
            case "byte":
              return Uint8Array.from([2, header2.value]);
            case "short":
              const shortView = new DataView(new ArrayBuffer(3));
              shortView.setUint8(0, 3);
              shortView.setInt16(1, header2.value, false);
              return new Uint8Array(shortView.buffer);
            case "integer":
              const intView = new DataView(new ArrayBuffer(5));
              intView.setUint8(0, 4);
              intView.setInt32(1, header2.value, false);
              return new Uint8Array(intView.buffer);
            case "long":
              const longBytes = new Uint8Array(9);
              longBytes[0] = 5;
              longBytes.set(header2.value.bytes, 1);
              return longBytes;
            case "binary":
              const binView = new DataView(new ArrayBuffer(3 + header2.value.byteLength));
              binView.setUint8(0, 6);
              binView.setUint16(1, header2.value.byteLength, false);
              const binBytes = new Uint8Array(binView.buffer);
              binBytes.set(header2.value, 3);
              return binBytes;
            case "string":
              const utf8Bytes = fromUtf8(header2.value);
              const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));
              strView.setUint8(0, 7);
              strView.setUint16(1, utf8Bytes.byteLength, false);
              const strBytes = new Uint8Array(strView.buffer);
              strBytes.set(utf8Bytes, 3);
              return strBytes;
            case "timestamp":
              const tsBytes = new Uint8Array(9);
              tsBytes[0] = 8;
              tsBytes.set(Int64.fromNumber(header2.value.valueOf()).bytes, 1);
              return tsBytes;
            case "uuid":
              if (!UUID_PATTERN.test(header2.value)) {
                throw new Error(`Invalid UUID received: ${header2.value}`);
              }
              const uuidBytes = new Uint8Array(17);
              uuidBytes[0] = 9;
              uuidBytes.set(fromHex(header2.value.replace(/\-/g, "")), 1);
              return uuidBytes;
          }
        }
      };
      (function(HEADER_VALUE_TYPE2) {
        HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["boolTrue"] = 0] = "boolTrue";
        HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["boolFalse"] = 1] = "boolFalse";
        HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["byte"] = 2] = "byte";
        HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["short"] = 3] = "short";
        HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["integer"] = 4] = "integer";
        HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["long"] = 5] = "long";
        HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["byteArray"] = 6] = "byteArray";
        HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["string"] = 7] = "string";
        HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["timestamp"] = 8] = "timestamp";
        HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["uuid"] = 9] = "uuid";
      })(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));
      UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
      Int64 = class _Int64 {
        constructor(bytes) {
          this.bytes = bytes;
          if (bytes.byteLength !== 8) {
            throw new Error("Int64 buffers must be exactly 8 bytes");
          }
        }
        static fromNumber(number) {
          if (number > 9223372036854776e3 || number < -9223372036854776e3) {
            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);
          }
          const bytes = new Uint8Array(8);
          for (let i4 = 7, remaining = Math.abs(Math.round(number)); i4 > -1 && remaining > 0; i4--, remaining /= 256) {
            bytes[i4] = remaining;
          }
          if (number < 0) {
            negate(bytes);
          }
          return new _Int64(bytes);
        }
        valueOf() {
          const bytes = this.bytes.slice(0);
          const negative = bytes[0] & 128;
          if (negative) {
            negate(bytes);
          }
          return parseInt(toHex2(bytes), 16) * (negative ? -1 : 1);
        }
        toString() {
          return String(this.valueOf());
        }
      };
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/headerUtil.js
  var hasHeader;
  var init_headerUtil = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/headerUtil.js"() {
      hasHeader = (soughtHeader, headers) => {
        soughtHeader = soughtHeader.toLowerCase();
        for (const headerName of Object.keys(headers)) {
          if (soughtHeader === headerName.toLowerCase()) {
            return true;
          }
        }
        return false;
      };
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/cloneRequest.js
  var cloneRequest, cloneQuery2;
  var init_cloneRequest = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/cloneRequest.js"() {
      cloneRequest = ({ headers, query: query3, ...rest }) => ({
        ...rest,
        headers: { ...headers },
        query: query3 ? cloneQuery2(query3) : void 0
      });
      cloneQuery2 = (query3) => Object.keys(query3).reduce((carry, paramName) => {
        const param2 = query3[paramName];
        return {
          ...carry,
          [paramName]: Array.isArray(param2) ? [...param2] : param2
        };
      }, {});
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/moveHeadersToQuery.js
  var moveHeadersToQuery;
  var init_moveHeadersToQuery = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/moveHeadersToQuery.js"() {
      init_cloneRequest();
      moveHeadersToQuery = (request3, options2 = {}) => {
        const { headers, query: query3 = {} } = typeof request3.clone === "function" ? request3.clone() : cloneRequest(request3);
        for (const name15 of Object.keys(headers)) {
          const lname = name15.toLowerCase();
          if (lname.slice(0, 6) === "x-amz-" && !options2.unhoistableHeaders?.has(lname)) {
            query3[name15] = headers[name15];
            delete headers[name15];
          }
        }
        return {
          ...request3,
          headers,
          query: query3
        };
      };
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/prepareRequest.js
  var prepareRequest;
  var init_prepareRequest = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/prepareRequest.js"() {
      init_cloneRequest();
      init_constants5();
      prepareRequest = (request3) => {
        request3 = typeof request3.clone === "function" ? request3.clone() : cloneRequest(request3);
        for (const headerName of Object.keys(request3.headers)) {
          if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {
            delete request3.headers[headerName];
          }
        }
        return request3;
      };
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/utilDate.js
  var iso8601, toDate;
  var init_utilDate = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/utilDate.js"() {
      iso8601 = (time3) => toDate(time3).toISOString().replace(/\.\d{3}Z$/, "Z");
      toDate = (time3) => {
        if (typeof time3 === "number") {
          return new Date(time3 * 1e3);
        }
        if (typeof time3 === "string") {
          if (Number(time3)) {
            return new Date(Number(time3) * 1e3);
          }
          return new Date(time3);
        }
        return time3;
      };
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/SignatureV4.js
  var SignatureV4, formatDate, getCanonicalHeaderList;
  var init_SignatureV4 = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/SignatureV4.js"() {
      init_dist_es31();
      init_dist_es11();
      init_dist_es32();
      init_dist_es20();
      init_constants5();
      init_credentialDerivation();
      init_getCanonicalHeaders();
      init_getCanonicalQuery();
      init_getPayloadHash();
      init_HeaderFormatter();
      init_headerUtil();
      init_moveHeadersToQuery();
      init_prepareRequest();
      init_utilDate();
      SignatureV4 = class {
        constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true }) {
          this.headerFormatter = new HeaderFormatter();
          this.service = service;
          this.sha256 = sha256;
          this.uriEscapePath = uriEscapePath;
          this.applyChecksum = typeof applyChecksum === "boolean" ? applyChecksum : true;
          this.regionProvider = normalizeProvider(region);
          this.credentialProvider = normalizeProvider(credentials);
        }
        async presign(originalRequest, options2 = {}) {
          const { signingDate = /* @__PURE__ */ new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService } = options2;
          const credentials = await this.credentialProvider();
          this.validateResolvedCredentials(credentials);
          const region = signingRegion ?? await this.regionProvider();
          const { longDate, shortDate } = formatDate(signingDate);
          if (expiresIn > MAX_PRESIGNED_TTL) {
            return Promise.reject("Signature version 4 presigned URLs must have an expiration date less than one week in the future");
          }
          const scope2 = createScope(shortDate, region, signingService ?? this.service);
          const request3 = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders });
          if (credentials.sessionToken) {
            request3.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;
          }
          request3.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;
          request3.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope2}`;
          request3.query[AMZ_DATE_QUERY_PARAM] = longDate;
          request3.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);
          const canonicalHeaders = getCanonicalHeaders(request3, unsignableHeaders, signableHeaders);
          request3.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);
          request3.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope2, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request3, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));
          return request3;
        }
        async sign(toSign, options2) {
          if (typeof toSign === "string") {
            return this.signString(toSign, options2);
          } else if (toSign.headers && toSign.payload) {
            return this.signEvent(toSign, options2);
          } else if (toSign.message) {
            return this.signMessage(toSign, options2);
          } else {
            return this.signRequest(toSign, options2);
          }
        }
        async signEvent({ headers, payload }, { signingDate = /* @__PURE__ */ new Date(), priorSignature, signingRegion, signingService }) {
          const region = signingRegion ?? await this.regionProvider();
          const { shortDate, longDate } = formatDate(signingDate);
          const scope2 = createScope(shortDate, region, signingService ?? this.service);
          const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);
          const hash2 = new this.sha256();
          hash2.update(headers);
          const hashedHeaders = toHex2(await hash2.digest());
          const stringToSign = [
            EVENT_ALGORITHM_IDENTIFIER,
            longDate,
            scope2,
            priorSignature,
            hashedHeaders,
            hashedPayload
          ].join("\n");
          return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });
        }
        async signMessage(signableMessage, { signingDate = /* @__PURE__ */ new Date(), signingRegion, signingService }) {
          const promise2 = this.signEvent({
            headers: this.headerFormatter.format(signableMessage.message.headers),
            payload: signableMessage.message.body
          }, {
            signingDate,
            signingRegion,
            signingService,
            priorSignature: signableMessage.priorSignature
          });
          return promise2.then((signature) => {
            return { message: signableMessage.message, signature };
          });
        }
        async signString(stringToSign, { signingDate = /* @__PURE__ */ new Date(), signingRegion, signingService } = {}) {
          const credentials = await this.credentialProvider();
          this.validateResolvedCredentials(credentials);
          const region = signingRegion ?? await this.regionProvider();
          const { shortDate } = formatDate(signingDate);
          const hash2 = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));
          hash2.update(toUint8Array(stringToSign));
          return toHex2(await hash2.digest());
        }
        async signRequest(requestToSign, { signingDate = /* @__PURE__ */ new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService } = {}) {
          const credentials = await this.credentialProvider();
          this.validateResolvedCredentials(credentials);
          const region = signingRegion ?? await this.regionProvider();
          const request3 = prepareRequest(requestToSign);
          const { longDate, shortDate } = formatDate(signingDate);
          const scope2 = createScope(shortDate, region, signingService ?? this.service);
          request3.headers[AMZ_DATE_HEADER] = longDate;
          if (credentials.sessionToken) {
            request3.headers[TOKEN_HEADER] = credentials.sessionToken;
          }
          const payloadHash = await getPayloadHash(request3, this.sha256);
          if (!hasHeader(SHA256_HEADER, request3.headers) && this.applyChecksum) {
            request3.headers[SHA256_HEADER] = payloadHash;
          }
          const canonicalHeaders = getCanonicalHeaders(request3, unsignableHeaders, signableHeaders);
          const signature = await this.getSignature(longDate, scope2, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request3, canonicalHeaders, payloadHash));
          request3.headers[AUTH_HEADER] = `${ALGORITHM_IDENTIFIER} Credential=${credentials.accessKeyId}/${scope2}, SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, Signature=${signature}`;
          return request3;
        }
        createCanonicalRequest(request3, canonicalHeaders, payloadHash) {
          const sortedHeaders = Object.keys(canonicalHeaders).sort();
          return `${request3.method}
${this.getCanonicalPath(request3)}
${getCanonicalQuery(request3)}
${sortedHeaders.map((name15) => `${name15}:${canonicalHeaders[name15]}`).join("\n")}

${sortedHeaders.join(";")}
${payloadHash}`;
        }
        async createStringToSign(longDate, credentialScope, canonicalRequest) {
          const hash2 = new this.sha256();
          hash2.update(toUint8Array(canonicalRequest));
          const hashedRequest = await hash2.digest();
          return `${ALGORITHM_IDENTIFIER}
${longDate}
${credentialScope}
${toHex2(hashedRequest)}`;
        }
        getCanonicalPath({ path }) {
          if (this.uriEscapePath) {
            const normalizedPathSegments = [];
            for (const pathSegment of path.split("/")) {
              if (pathSegment?.length === 0)
                continue;
              if (pathSegment === ".")
                continue;
              if (pathSegment === "..") {
                normalizedPathSegments.pop();
              } else {
                normalizedPathSegments.push(pathSegment);
              }
            }
            const normalizedPath = `${path?.startsWith("/") ? "/" : ""}${normalizedPathSegments.join("/")}${normalizedPathSegments.length > 0 && path?.endsWith("/") ? "/" : ""}`;
            const doubleEncoded = escapeUri2(normalizedPath);
            return doubleEncoded.replace(/%2F/g, "/");
          }
          return path;
        }
        async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {
          const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);
          const hash2 = new this.sha256(await keyPromise);
          hash2.update(toUint8Array(stringToSign));
          return toHex2(await hash2.digest());
        }
        getSigningKey(credentials, region, shortDate, service) {
          return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);
        }
        validateResolvedCredentials(credentials) {
          if (typeof credentials !== "object" || typeof credentials.accessKeyId !== "string" || typeof credentials.secretAccessKey !== "string") {
            throw new Error("Resolved credential object is not valid");
          }
        }
      };
      formatDate = (now) => {
        const longDate = iso8601(now).replace(/[\-:]/g, "");
        return {
          longDate,
          shortDate: longDate.slice(0, 8)
        };
      };
      getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(";");
    }
  });

  // node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/index.js
  var init_dist_es34 = __esm({
    "node_modules/@aws-sdk/core/node_modules/@smithy/signature-v4/dist-es/index.js"() {
      init_SignatureV4();
      init_getCanonicalHeaders();
      init_getCanonicalQuery();
      init_getPayloadHash();
      init_moveHeadersToQuery();
      init_prepareRequest();
      init_credentialDerivation();
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js
  var resolveAwsSdkSigV4Config;
  var init_resolveAwsSdkSigV4Config = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js"() {
      init_dist_es29();
      init_dist_es34();
      resolveAwsSdkSigV4Config = (config) => {
        let normalizedCreds;
        if (config.credentials) {
          normalizedCreds = memoizeIdentityProvider(config.credentials, isIdentityExpired, doesIdentityRequireRefresh);
        }
        if (!normalizedCreds) {
          if (config.credentialDefaultProvider) {
            normalizedCreds = normalizeProvider2(config.credentialDefaultProvider(Object.assign({}, config, {
              parentClientConfig: config
            })));
          } else {
            normalizedCreds = async () => {
              throw new Error("`credentials` is missing");
            };
          }
        }
        const { signingEscapePath = true, systemClockOffset = config.systemClockOffset || 0, sha256 } = config;
        let signer;
        if (config.signer) {
          signer = normalizeProvider2(config.signer);
        } else if (config.regionInfoProvider) {
          signer = () => normalizeProvider2(config.region)().then(async (region) => [
            await config.regionInfoProvider(region, {
              useFipsEndpoint: await config.useFipsEndpoint(),
              useDualstackEndpoint: await config.useDualstackEndpoint()
            }) || {},
            region
          ]).then(([regionInfo, region]) => {
            const { signingRegion, signingService } = regionInfo;
            config.signingRegion = config.signingRegion || signingRegion || region;
            config.signingName = config.signingName || signingService || config.serviceId;
            const params = {
              ...config,
              credentials: normalizedCreds,
              region: config.signingRegion,
              service: config.signingName,
              sha256,
              uriEscapePath: signingEscapePath
            };
            const SignerCtor = config.signerConstructor || SignatureV4;
            return new SignerCtor(params);
          });
        } else {
          signer = async (authScheme) => {
            authScheme = Object.assign({}, {
              name: "sigv4",
              signingName: config.signingName || config.defaultSigningName,
              signingRegion: await normalizeProvider2(config.region)(),
              properties: {}
            }, authScheme);
            const signingRegion = authScheme.signingRegion;
            const signingService = authScheme.signingName;
            config.signingRegion = config.signingRegion || signingRegion;
            config.signingName = config.signingName || signingService || config.serviceId;
            const params = {
              ...config,
              credentials: normalizedCreds,
              region: config.signingRegion,
              service: config.signingName,
              sha256,
              uriEscapePath: signingEscapePath
            };
            const SignerCtor = config.signerConstructor || SignatureV4;
            return new SignerCtor(params);
          };
        }
        return {
          ...config,
          systemClockOffset,
          signingEscapePath,
          credentials: normalizedCreds,
          signer
        };
      };
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/index.js
  var init_aws_sdk = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/index.js"() {
      init_AwsSdkSigV4Signer();
      init_resolveAwsSdkSigV4Config();
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/index.js
  var init_httpAuthSchemes2 = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/index.js"() {
      init_aws_sdk();
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/protocols/coercing-serializers.js
  var init_coercing_serializers = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/protocols/coercing-serializers.js"() {
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/awsExpectUnion.js
  var init_awsExpectUnion = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/awsExpectUnion.js"() {
      init_dist_es27();
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js
  var collectBodyString;
  var init_common = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js"() {
      init_dist_es27();
      collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body2) => context.utf8Encoder(body2));
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js
  var parseJsonBody, parseJsonErrorBody, loadRestJsonErrorCode;
  var init_parseJsonBody = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js"() {
      init_common();
      parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
        if (encoded.length) {
          try {
            return JSON.parse(encoded);
          } catch (e3) {
            if (e3?.name === "SyntaxError") {
              Object.defineProperty(e3, "$responseBodyText", {
                value: encoded
              });
            }
            throw e3;
          }
        }
        return {};
      });
      parseJsonErrorBody = async (errorBody, context) => {
        const value14 = await parseJsonBody(errorBody, context);
        value14.message = value14.message ?? value14.Message;
        return value14;
      };
      loadRestJsonErrorCode = (output2, data) => {
        const findKey = (object2, key2) => Object.keys(object2).find((k3) => k3.toLowerCase() === key2.toLowerCase());
        const sanitizeErrorCode = (rawValue) => {
          let cleanValue = rawValue;
          if (typeof cleanValue === "number") {
            cleanValue = cleanValue.toString();
          }
          if (cleanValue.indexOf(",") >= 0) {
            cleanValue = cleanValue.split(",")[0];
          }
          if (cleanValue.indexOf(":") >= 0) {
            cleanValue = cleanValue.split(":")[0];
          }
          if (cleanValue.indexOf("#") >= 0) {
            cleanValue = cleanValue.split("#")[1];
          }
          return cleanValue;
        };
        const headerKey = findKey(output2.headers, "x-amzn-errortype");
        if (headerKey !== void 0) {
          return sanitizeErrorCode(output2.headers[headerKey]);
        }
        if (data.code !== void 0) {
          return sanitizeErrorCode(data.code);
        }
        if (data["__type"] !== void 0) {
          return sanitizeErrorCode(data["__type"]);
        }
      };
    }
  });

  // node_modules/fast-xml-parser/src/util.js
  var require_util = __commonJS({
    "node_modules/fast-xml-parser/src/util.js"(exports) {
      "use strict";
      var nameStartChar = ":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
      var nameChar = nameStartChar + "\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
      var nameRegexp = "[" + nameStartChar + "][" + nameChar + "]*";
      var regexName = new RegExp("^" + nameRegexp + "$");
      var getAllMatches = function(string, regex) {
        const matches2 = [];
        let match4 = regex.exec(string);
        while (match4) {
          const allmatches = [];
          allmatches.startIndex = regex.lastIndex - match4[0].length;
          const len = match4.length;
          for (let index4 = 0; index4 < len; index4++) {
            allmatches.push(match4[index4]);
          }
          matches2.push(allmatches);
          match4 = regex.exec(string);
        }
        return matches2;
      };
      var isName = function(string) {
        const match4 = regexName.exec(string);
        return !(match4 === null || typeof match4 === "undefined");
      };
      exports.isExist = function(v3) {
        return typeof v3 !== "undefined";
      };
      exports.isEmptyObject = function(obj) {
        return Object.keys(obj).length === 0;
      };
      exports.merge = function(target6, a4, arrayMode) {
        if (a4) {
          const keys3 = Object.keys(a4);
          const len = keys3.length;
          for (let i4 = 0; i4 < len; i4++) {
            if (arrayMode === "strict") {
              target6[keys3[i4]] = [a4[keys3[i4]]];
            } else {
              target6[keys3[i4]] = a4[keys3[i4]];
            }
          }
        }
      };
      exports.getValue = function(v3) {
        if (exports.isExist(v3)) {
          return v3;
        } else {
          return "";
        }
      };
      exports.isName = isName;
      exports.getAllMatches = getAllMatches;
      exports.nameRegexp = nameRegexp;
    }
  });

  // node_modules/fast-xml-parser/src/validator.js
  var require_validator = __commonJS({
    "node_modules/fast-xml-parser/src/validator.js"(exports) {
      "use strict";
      var util = require_util();
      var defaultOptions = {
        allowBooleanAttributes: false,
        //A tag can have attributes without any value
        unpairedTags: []
      };
      exports.validate = function(xmlData, options2) {
        options2 = Object.assign({}, defaultOptions, options2);
        const tags = [];
        let tagFound = false;
        let reachedRoot = false;
        if (xmlData[0] === "\uFEFF") {
          xmlData = xmlData.substr(1);
        }
        for (let i4 = 0; i4 < xmlData.length; i4++) {
          if (xmlData[i4] === "<" && xmlData[i4 + 1] === "?") {
            i4 += 2;
            i4 = readPI(xmlData, i4);
            if (i4.err) return i4;
          } else if (xmlData[i4] === "<") {
            let tagStartPos = i4;
            i4++;
            if (xmlData[i4] === "!") {
              i4 = readCommentAndCDATA(xmlData, i4);
              continue;
            } else {
              let closingTag = false;
              if (xmlData[i4] === "/") {
                closingTag = true;
                i4++;
              }
              let tagName2 = "";
              for (; i4 < xmlData.length && xmlData[i4] !== ">" && xmlData[i4] !== " " && xmlData[i4] !== "	" && xmlData[i4] !== "\n" && xmlData[i4] !== "\r"; i4++) {
                tagName2 += xmlData[i4];
              }
              tagName2 = tagName2.trim();
              if (tagName2[tagName2.length - 1] === "/") {
                tagName2 = tagName2.substring(0, tagName2.length - 1);
                i4--;
              }
              if (!validateTagName(tagName2)) {
                let msg;
                if (tagName2.trim().length === 0) {
                  msg = "Invalid space after '<'.";
                } else {
                  msg = "Tag '" + tagName2 + "' is an invalid name.";
                }
                return getErrorObject("InvalidTag", msg, getLineNumberForPosition(xmlData, i4));
              }
              const result = readAttributeStr(xmlData, i4);
              if (result === false) {
                return getErrorObject("InvalidAttr", "Attributes for '" + tagName2 + "' have open quote.", getLineNumberForPosition(xmlData, i4));
              }
              let attrStr = result.value;
              i4 = result.index;
              if (attrStr[attrStr.length - 1] === "/") {
                const attrStrStart = i4 - attrStr.length;
                attrStr = attrStr.substring(0, attrStr.length - 1);
                const isValid = validateAttributeString(attrStr, options2);
                if (isValid === true) {
                  tagFound = true;
                } else {
                  return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));
                }
              } else if (closingTag) {
                if (!result.tagClosed) {
                  return getErrorObject("InvalidTag", "Closing tag '" + tagName2 + "' doesn't have proper closing.", getLineNumberForPosition(xmlData, i4));
                } else if (attrStr.trim().length > 0) {
                  return getErrorObject("InvalidTag", "Closing tag '" + tagName2 + "' can't have attributes or invalid starting.", getLineNumberForPosition(xmlData, tagStartPos));
                } else {
                  const otg = tags.pop();
                  if (tagName2 !== otg.tagName) {
                    let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);
                    return getErrorObject(
                      "InvalidTag",
                      "Expected closing tag '" + otg.tagName + "' (opened in line " + openPos.line + ", col " + openPos.col + ") instead of closing tag '" + tagName2 + "'.",
                      getLineNumberForPosition(xmlData, tagStartPos)
                    );
                  }
                  if (tags.length == 0) {
                    reachedRoot = true;
                  }
                }
              } else {
                const isValid = validateAttributeString(attrStr, options2);
                if (isValid !== true) {
                  return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i4 - attrStr.length + isValid.err.line));
                }
                if (reachedRoot === true) {
                  return getErrorObject("InvalidXml", "Multiple possible root nodes found.", getLineNumberForPosition(xmlData, i4));
                } else if (options2.unpairedTags.indexOf(tagName2) !== -1) {
                } else {
                  tags.push({ tagName: tagName2, tagStartPos });
                }
                tagFound = true;
              }
              for (i4++; i4 < xmlData.length; i4++) {
                if (xmlData[i4] === "<") {
                  if (xmlData[i4 + 1] === "!") {
                    i4++;
                    i4 = readCommentAndCDATA(xmlData, i4);
                    continue;
                  } else if (xmlData[i4 + 1] === "?") {
                    i4 = readPI(xmlData, ++i4);
                    if (i4.err) return i4;
                  } else {
                    break;
                  }
                } else if (xmlData[i4] === "&") {
                  const afterAmp = validateAmpersand(xmlData, i4);
                  if (afterAmp == -1)
                    return getErrorObject("InvalidChar", "char '&' is not expected.", getLineNumberForPosition(xmlData, i4));
                  i4 = afterAmp;
                } else {
                  if (reachedRoot === true && !isWhiteSpace(xmlData[i4])) {
                    return getErrorObject("InvalidXml", "Extra text at the end", getLineNumberForPosition(xmlData, i4));
                  }
                }
              }
              if (xmlData[i4] === "<") {
                i4--;
              }
            }
          } else {
            if (isWhiteSpace(xmlData[i4])) {
              continue;
            }
            return getErrorObject("InvalidChar", "char '" + xmlData[i4] + "' is not expected.", getLineNumberForPosition(xmlData, i4));
          }
        }
        if (!tagFound) {
          return getErrorObject("InvalidXml", "Start tag expected.", 1);
        } else if (tags.length == 1) {
          return getErrorObject("InvalidTag", "Unclosed tag '" + tags[0].tagName + "'.", getLineNumberForPosition(xmlData, tags[0].tagStartPos));
        } else if (tags.length > 0) {
          return getErrorObject("InvalidXml", "Invalid '" + JSON.stringify(tags.map((t3) => t3.tagName), null, 4).replace(/\r?\n/g, "") + "' found.", { line: 1, col: 1 });
        }
        return true;
      };
      function isWhiteSpace(char2) {
        return char2 === " " || char2 === "	" || char2 === "\n" || char2 === "\r";
      }
      function readPI(xmlData, i4) {
        const start2 = i4;
        for (; i4 < xmlData.length; i4++) {
          if (xmlData[i4] == "?" || xmlData[i4] == " ") {
            const tagname = xmlData.substr(start2, i4 - start2);
            if (i4 > 5 && tagname === "xml") {
              return getErrorObject("InvalidXml", "XML declaration allowed only at the start of the document.", getLineNumberForPosition(xmlData, i4));
            } else if (xmlData[i4] == "?" && xmlData[i4 + 1] == ">") {
              i4++;
              break;
            } else {
              continue;
            }
          }
        }
        return i4;
      }
      function readCommentAndCDATA(xmlData, i4) {
        if (xmlData.length > i4 + 5 && xmlData[i4 + 1] === "-" && xmlData[i4 + 2] === "-") {
          for (i4 += 3; i4 < xmlData.length; i4++) {
            if (xmlData[i4] === "-" && xmlData[i4 + 1] === "-" && xmlData[i4 + 2] === ">") {
              i4 += 2;
              break;
            }
          }
        } else if (xmlData.length > i4 + 8 && xmlData[i4 + 1] === "D" && xmlData[i4 + 2] === "O" && xmlData[i4 + 3] === "C" && xmlData[i4 + 4] === "T" && xmlData[i4 + 5] === "Y" && xmlData[i4 + 6] === "P" && xmlData[i4 + 7] === "E") {
          let angleBracketsCount = 1;
          for (i4 += 8; i4 < xmlData.length; i4++) {
            if (xmlData[i4] === "<") {
              angleBracketsCount++;
            } else if (xmlData[i4] === ">") {
              angleBracketsCount--;
              if (angleBracketsCount === 0) {
                break;
              }
            }
          }
        } else if (xmlData.length > i4 + 9 && xmlData[i4 + 1] === "[" && xmlData[i4 + 2] === "C" && xmlData[i4 + 3] === "D" && xmlData[i4 + 4] === "A" && xmlData[i4 + 5] === "T" && xmlData[i4 + 6] === "A" && xmlData[i4 + 7] === "[") {
          for (i4 += 8; i4 < xmlData.length; i4++) {
            if (xmlData[i4] === "]" && xmlData[i4 + 1] === "]" && xmlData[i4 + 2] === ">") {
              i4 += 2;
              break;
            }
          }
        }
        return i4;
      }
      var doubleQuote = '"';
      var singleQuote = "'";
      function readAttributeStr(xmlData, i4) {
        let attrStr = "";
        let startChar = "";
        let tagClosed = false;
        for (; i4 < xmlData.length; i4++) {
          if (xmlData[i4] === doubleQuote || xmlData[i4] === singleQuote) {
            if (startChar === "") {
              startChar = xmlData[i4];
            } else if (startChar !== xmlData[i4]) {
            } else {
              startChar = "";
            }
          } else if (xmlData[i4] === ">") {
            if (startChar === "") {
              tagClosed = true;
              break;
            }
          }
          attrStr += xmlData[i4];
        }
        if (startChar !== "") {
          return false;
        }
        return {
          value: attrStr,
          index: i4,
          tagClosed
        };
      }
      var validAttrStrRegxp = new RegExp(`(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['"])(([\\s\\S])*?)\\5)?`, "g");
      function validateAttributeString(attrStr, options2) {
        const matches2 = util.getAllMatches(attrStr, validAttrStrRegxp);
        const attrNames = {};
        for (let i4 = 0; i4 < matches2.length; i4++) {
          if (matches2[i4][1].length === 0) {
            return getErrorObject("InvalidAttr", "Attribute '" + matches2[i4][2] + "' has no space in starting.", getPositionFromMatch(matches2[i4]));
          } else if (matches2[i4][3] !== void 0 && matches2[i4][4] === void 0) {
            return getErrorObject("InvalidAttr", "Attribute '" + matches2[i4][2] + "' is without value.", getPositionFromMatch(matches2[i4]));
          } else if (matches2[i4][3] === void 0 && !options2.allowBooleanAttributes) {
            return getErrorObject("InvalidAttr", "boolean attribute '" + matches2[i4][2] + "' is not allowed.", getPositionFromMatch(matches2[i4]));
          }
          const attrName = matches2[i4][2];
          if (!validateAttrName(attrName)) {
            return getErrorObject("InvalidAttr", "Attribute '" + attrName + "' is an invalid name.", getPositionFromMatch(matches2[i4]));
          }
          if (!attrNames.hasOwnProperty(attrName)) {
            attrNames[attrName] = 1;
          } else {
            return getErrorObject("InvalidAttr", "Attribute '" + attrName + "' is repeated.", getPositionFromMatch(matches2[i4]));
          }
        }
        return true;
      }
      function validateNumberAmpersand(xmlData, i4) {
        let re = /\d/;
        if (xmlData[i4] === "x") {
          i4++;
          re = /[\da-fA-F]/;
        }
        for (; i4 < xmlData.length; i4++) {
          if (xmlData[i4] === ";")
            return i4;
          if (!xmlData[i4].match(re))
            break;
        }
        return -1;
      }
      function validateAmpersand(xmlData, i4) {
        i4++;
        if (xmlData[i4] === ";")
          return -1;
        if (xmlData[i4] === "#") {
          i4++;
          return validateNumberAmpersand(xmlData, i4);
        }
        let count = 0;
        for (; i4 < xmlData.length; i4++, count++) {
          if (xmlData[i4].match(/\w/) && count < 20)
            continue;
          if (xmlData[i4] === ";")
            break;
          return -1;
        }
        return i4;
      }
      function getErrorObject(code3, message2, lineNumber) {
        return {
          err: {
            code: code3,
            msg: message2,
            line: lineNumber.line || lineNumber,
            col: lineNumber.col
          }
        };
      }
      function validateAttrName(attrName) {
        return util.isName(attrName);
      }
      function validateTagName(tagname) {
        return util.isName(tagname);
      }
      function getLineNumberForPosition(xmlData, index4) {
        const lines = xmlData.substring(0, index4).split(/\r?\n/);
        return {
          line: lines.length,
          // column number is last line's length + 1, because column numbering starts at 1:
          col: lines[lines.length - 1].length + 1
        };
      }
      function getPositionFromMatch(match4) {
        return match4.startIndex + match4[1].length;
      }
    }
  });

  // node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js
  var require_OptionsBuilder = __commonJS({
    "node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js"(exports) {
      var defaultOptions = {
        preserveOrder: false,
        attributeNamePrefix: "@_",
        attributesGroupName: false,
        textNodeName: "#text",
        ignoreAttributes: true,
        removeNSPrefix: false,
        // remove NS from tag name or attribute name if true
        allowBooleanAttributes: false,
        //a tag can have attributes without any value
        //ignoreRootElement : false,
        parseTagValue: true,
        parseAttributeValue: false,
        trimValues: true,
        //Trim string values of tag and attributes
        cdataPropName: false,
        numberParseOptions: {
          hex: true,
          leadingZeros: true,
          eNotation: true
        },
        tagValueProcessor: function(tagName2, val2) {
          return val2;
        },
        attributeValueProcessor: function(attrName, val2) {
          return val2;
        },
        stopNodes: [],
        //nested tags will not be parsed even for errors
        alwaysCreateTextNode: false,
        isArray: () => false,
        commentPropName: false,
        unpairedTags: [],
        processEntities: true,
        htmlEntities: false,
        ignoreDeclaration: false,
        ignorePiTags: false,
        transformTagName: false,
        transformAttributeName: false,
        updateTag: function(tagName2, jPath, attrs) {
          return tagName2;
        }
        // skipEmptyListItem: false
      };
      var buildOptions = function(options2) {
        return Object.assign({}, defaultOptions, options2);
      };
      exports.buildOptions = buildOptions;
      exports.defaultOptions = defaultOptions;
    }
  });

  // node_modules/fast-xml-parser/src/xmlparser/xmlNode.js
  var require_xmlNode = __commonJS({
    "node_modules/fast-xml-parser/src/xmlparser/xmlNode.js"(exports, module) {
      "use strict";
      var XmlNode = class {
        constructor(tagname) {
          this.tagname = tagname;
          this.child = [];
          this[":@"] = {};
        }
        add(key2, val2) {
          if (key2 === "__proto__") key2 = "#__proto__";
          this.child.push({ [key2]: val2 });
        }
        addChild(node) {
          if (node.tagname === "__proto__") node.tagname = "#__proto__";
          if (node[":@"] && Object.keys(node[":@"]).length > 0) {
            this.child.push({ [node.tagname]: node.child, [":@"]: node[":@"] });
          } else {
            this.child.push({ [node.tagname]: node.child });
          }
        }
      };
      module.exports = XmlNode;
    }
  });

  // node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js
  var require_DocTypeReader = __commonJS({
    "node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js"(exports, module) {
      var util = require_util();
      function readDocType(xmlData, i4) {
        const entities = {};
        if (xmlData[i4 + 3] === "O" && xmlData[i4 + 4] === "C" && xmlData[i4 + 5] === "T" && xmlData[i4 + 6] === "Y" && xmlData[i4 + 7] === "P" && xmlData[i4 + 8] === "E") {
          i4 = i4 + 9;
          let angleBracketsCount = 1;
          let hasBody = false, comment = false;
          let exp2 = "";
          for (; i4 < xmlData.length; i4++) {
            if (xmlData[i4] === "<" && !comment) {
              if (hasBody && isEntity(xmlData, i4)) {
                i4 += 7;
                [entityName, val, i4] = readEntityExp(xmlData, i4 + 1);
                if (val.indexOf("&") === -1)
                  entities[validateEntityName(entityName)] = {
                    regx: RegExp(`&${entityName};`, "g"),
                    val
                  };
              } else if (hasBody && isElement(xmlData, i4)) i4 += 8;
              else if (hasBody && isAttlist(xmlData, i4)) i4 += 8;
              else if (hasBody && isNotation(xmlData, i4)) i4 += 9;
              else if (isComment) comment = true;
              else throw new Error("Invalid DOCTYPE");
              angleBracketsCount++;
              exp2 = "";
            } else if (xmlData[i4] === ">") {
              if (comment) {
                if (xmlData[i4 - 1] === "-" && xmlData[i4 - 2] === "-") {
                  comment = false;
                  angleBracketsCount--;
                }
              } else {
                angleBracketsCount--;
              }
              if (angleBracketsCount === 0) {
                break;
              }
            } else if (xmlData[i4] === "[") {
              hasBody = true;
            } else {
              exp2 += xmlData[i4];
            }
          }
          if (angleBracketsCount !== 0) {
            throw new Error(`Unclosed DOCTYPE`);
          }
        } else {
          throw new Error(`Invalid Tag instead of DOCTYPE`);
        }
        return { entities, i: i4 };
      }
      function readEntityExp(xmlData, i4) {
        let entityName2 = "";
        for (; i4 < xmlData.length && (xmlData[i4] !== "'" && xmlData[i4] !== '"'); i4++) {
          entityName2 += xmlData[i4];
        }
        entityName2 = entityName2.trim();
        if (entityName2.indexOf(" ") !== -1) throw new Error("External entites are not supported");
        const startChar = xmlData[i4++];
        let val2 = "";
        for (; i4 < xmlData.length && xmlData[i4] !== startChar; i4++) {
          val2 += xmlData[i4];
        }
        return [entityName2, val2, i4];
      }
      function isComment(xmlData, i4) {
        if (xmlData[i4 + 1] === "!" && xmlData[i4 + 2] === "-" && xmlData[i4 + 3] === "-") return true;
        return false;
      }
      function isEntity(xmlData, i4) {
        if (xmlData[i4 + 1] === "!" && xmlData[i4 + 2] === "E" && xmlData[i4 + 3] === "N" && xmlData[i4 + 4] === "T" && xmlData[i4 + 5] === "I" && xmlData[i4 + 6] === "T" && xmlData[i4 + 7] === "Y") return true;
        return false;
      }
      function isElement(xmlData, i4) {
        if (xmlData[i4 + 1] === "!" && xmlData[i4 + 2] === "E" && xmlData[i4 + 3] === "L" && xmlData[i4 + 4] === "E" && xmlData[i4 + 5] === "M" && xmlData[i4 + 6] === "E" && xmlData[i4 + 7] === "N" && xmlData[i4 + 8] === "T") return true;
        return false;
      }
      function isAttlist(xmlData, i4) {
        if (xmlData[i4 + 1] === "!" && xmlData[i4 + 2] === "A" && xmlData[i4 + 3] === "T" && xmlData[i4 + 4] === "T" && xmlData[i4 + 5] === "L" && xmlData[i4 + 6] === "I" && xmlData[i4 + 7] === "S" && xmlData[i4 + 8] === "T") return true;
        return false;
      }
      function isNotation(xmlData, i4) {
        if (xmlData[i4 + 1] === "!" && xmlData[i4 + 2] === "N" && xmlData[i4 + 3] === "O" && xmlData[i4 + 4] === "T" && xmlData[i4 + 5] === "A" && xmlData[i4 + 6] === "T" && xmlData[i4 + 7] === "I" && xmlData[i4 + 8] === "O" && xmlData[i4 + 9] === "N") return true;
        return false;
      }
      function validateEntityName(name15) {
        if (util.isName(name15))
          return name15;
        else
          throw new Error(`Invalid entity name ${name15}`);
      }
      module.exports = readDocType;
    }
  });

  // node_modules/strnum/strnum.js
  var require_strnum = __commonJS({
    "node_modules/strnum/strnum.js"(exports, module) {
      var hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;
      var numRegex = /^([\-\+])?(0*)(\.[0-9]+([eE]\-?[0-9]+)?|[0-9]+(\.[0-9]+([eE]\-?[0-9]+)?)?)$/;
      if (!Number.parseInt && window.parseInt) {
        Number.parseInt = window.parseInt;
      }
      if (!Number.parseFloat && window.parseFloat) {
        Number.parseFloat = window.parseFloat;
      }
      var consider = {
        hex: true,
        leadingZeros: true,
        decimalPoint: ".",
        eNotation: true
        //skipLike: /regex/
      };
      function toNumber2(str, options2 = {}) {
        options2 = Object.assign({}, consider, options2);
        if (!str || typeof str !== "string") return str;
        let trimmedStr = str.trim();
        if (options2.skipLike !== void 0 && options2.skipLike.test(trimmedStr)) return str;
        else if (options2.hex && hexRegex.test(trimmedStr)) {
          return Number.parseInt(trimmedStr, 16);
        } else {
          const match4 = numRegex.exec(trimmedStr);
          if (match4) {
            const sign2 = match4[1];
            const leadingZeros = match4[2];
            let numTrimmedByZeros = trimZeros(match4[3]);
            const eNotation = match4[4] || match4[6];
            if (!options2.leadingZeros && leadingZeros.length > 0 && sign2 && trimmedStr[2] !== ".") return str;
            else if (!options2.leadingZeros && leadingZeros.length > 0 && !sign2 && trimmedStr[1] !== ".") return str;
            else {
              const num = Number(trimmedStr);
              const numStr = "" + num;
              if (numStr.search(/[eE]/) !== -1) {
                if (options2.eNotation) return num;
                else return str;
              } else if (eNotation) {
                if (options2.eNotation) return num;
                else return str;
              } else if (trimmedStr.indexOf(".") !== -1) {
                if (numStr === "0" && numTrimmedByZeros === "") return num;
                else if (numStr === numTrimmedByZeros) return num;
                else if (sign2 && numStr === "-" + numTrimmedByZeros) return num;
                else return str;
              }
              if (leadingZeros) {
                if (numTrimmedByZeros === numStr) return num;
                else if (sign2 + numTrimmedByZeros === numStr) return num;
                else return str;
              }
              if (trimmedStr === numStr) return num;
              else if (trimmedStr === sign2 + numStr) return num;
              return str;
            }
          } else {
            return str;
          }
        }
      }
      function trimZeros(numStr) {
        if (numStr && numStr.indexOf(".") !== -1) {
          numStr = numStr.replace(/0+$/, "");
          if (numStr === ".") numStr = "0";
          else if (numStr[0] === ".") numStr = "0" + numStr;
          else if (numStr[numStr.length - 1] === ".") numStr = numStr.substr(0, numStr.length - 1);
          return numStr;
        }
        return numStr;
      }
      module.exports = toNumber2;
    }
  });

  // node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js
  var require_OrderedObjParser = __commonJS({
    "node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js"(exports, module) {
      "use strict";
      var util = require_util();
      var xmlNode = require_xmlNode();
      var readDocType = require_DocTypeReader();
      var toNumber2 = require_strnum();
      var regx = "<((!\\[CDATA\\[([\\s\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\/)(NAME)\\s*>))([^<]*)".replace(/NAME/g, util.nameRegexp);
      var OrderedObjParser = class {
        constructor(options2) {
          this.options = options2;
          this.currentNode = null;
          this.tagsNodeStack = [];
          this.docTypeEntities = {};
          this.lastEntities = {
            "apos": { regex: /&(apos|#39|#x27);/g, val: "'" },
            "gt": { regex: /&(gt|#62|#x3E);/g, val: ">" },
            "lt": { regex: /&(lt|#60|#x3C);/g, val: "<" },
            "quot": { regex: /&(quot|#34|#x22);/g, val: '"' }
          };
          this.ampEntity = { regex: /&(amp|#38|#x26);/g, val: "&" };
          this.htmlEntities = {
            "space": { regex: /&(nbsp|#160);/g, val: " " },
            // "lt" : { regex: /&(lt|#60);/g, val: "<" },
            // "gt" : { regex: /&(gt|#62);/g, val: ">" },
            // "amp" : { regex: /&(amp|#38);/g, val: "&" },
            // "quot" : { regex: /&(quot|#34);/g, val: "\"" },
            // "apos" : { regex: /&(apos|#39);/g, val: "'" },
            "cent": { regex: /&(cent|#162);/g, val: "\xA2" },
            "pound": { regex: /&(pound|#163);/g, val: "\xA3" },
            "yen": { regex: /&(yen|#165);/g, val: "\xA5" },
            "euro": { regex: /&(euro|#8364);/g, val: "\u20AC" },
            "copyright": { regex: /&(copy|#169);/g, val: "\xA9" },
            "reg": { regex: /&(reg|#174);/g, val: "\xAE" },
            "inr": { regex: /&(inr|#8377);/g, val: "\u20B9" }
          };
          this.addExternalEntities = addExternalEntities;
          this.parseXml = parseXml;
          this.parseTextData = parseTextData;
          this.resolveNameSpace = resolveNameSpace;
          this.buildAttributesMap = buildAttributesMap;
          this.isItStopNode = isItStopNode;
          this.replaceEntitiesValue = replaceEntitiesValue;
          this.readStopNodeData = readStopNodeData;
          this.saveTextToParentTag = saveTextToParentTag;
          this.addChild = addChild;
        }
      };
      function addExternalEntities(externalEntities) {
        const entKeys = Object.keys(externalEntities);
        for (let i4 = 0; i4 < entKeys.length; i4++) {
          const ent = entKeys[i4];
          this.lastEntities[ent] = {
            regex: new RegExp("&" + ent + ";", "g"),
            val: externalEntities[ent]
          };
        }
      }
      function parseTextData(val2, tagName2, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {
        if (val2 !== void 0) {
          if (this.options.trimValues && !dontTrim) {
            val2 = val2.trim();
          }
          if (val2.length > 0) {
            if (!escapeEntities) val2 = this.replaceEntitiesValue(val2);
            const newval = this.options.tagValueProcessor(tagName2, val2, jPath, hasAttributes, isLeafNode);
            if (newval === null || newval === void 0) {
              return val2;
            } else if (typeof newval !== typeof val2 || newval !== val2) {
              return newval;
            } else if (this.options.trimValues) {
              return parseValue(val2, this.options.parseTagValue, this.options.numberParseOptions);
            } else {
              const trimmedVal = val2.trim();
              if (trimmedVal === val2) {
                return parseValue(val2, this.options.parseTagValue, this.options.numberParseOptions);
              } else {
                return val2;
              }
            }
          }
        }
      }
      function resolveNameSpace(tagname) {
        if (this.options.removeNSPrefix) {
          const tags = tagname.split(":");
          const prefix = tagname.charAt(0) === "/" ? "/" : "";
          if (tags[0] === "xmlns") {
            return "";
          }
          if (tags.length === 2) {
            tagname = prefix + tags[1];
          }
        }
        return tagname;
      }
      var attrsRegx = new RegExp(`([^\\s=]+)\\s*(=\\s*(['"])([\\s\\S]*?)\\3)?`, "gm");
      function buildAttributesMap(attrStr, jPath, tagName2) {
        if (!this.options.ignoreAttributes && typeof attrStr === "string") {
          const matches2 = util.getAllMatches(attrStr, attrsRegx);
          const len = matches2.length;
          const attrs = {};
          for (let i4 = 0; i4 < len; i4++) {
            const attrName = this.resolveNameSpace(matches2[i4][1]);
            let oldVal = matches2[i4][4];
            let aName = this.options.attributeNamePrefix + attrName;
            if (attrName.length) {
              if (this.options.transformAttributeName) {
                aName = this.options.transformAttributeName(aName);
              }
              if (aName === "__proto__") aName = "#__proto__";
              if (oldVal !== void 0) {
                if (this.options.trimValues) {
                  oldVal = oldVal.trim();
                }
                oldVal = this.replaceEntitiesValue(oldVal);
                const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);
                if (newVal === null || newVal === void 0) {
                  attrs[aName] = oldVal;
                } else if (typeof newVal !== typeof oldVal || newVal !== oldVal) {
                  attrs[aName] = newVal;
                } else {
                  attrs[aName] = parseValue(
                    oldVal,
                    this.options.parseAttributeValue,
                    this.options.numberParseOptions
                  );
                }
              } else if (this.options.allowBooleanAttributes) {
                attrs[aName] = true;
              }
            }
          }
          if (!Object.keys(attrs).length) {
            return;
          }
          if (this.options.attributesGroupName) {
            const attrCollection = {};
            attrCollection[this.options.attributesGroupName] = attrs;
            return attrCollection;
          }
          return attrs;
        }
      }
      var parseXml = function(xmlData) {
        xmlData = xmlData.replace(/\r\n?/g, "\n");
        const xmlObj = new xmlNode("!xml");
        let currentNode = xmlObj;
        let textData = "";
        let jPath = "";
        for (let i4 = 0; i4 < xmlData.length; i4++) {
          const ch = xmlData[i4];
          if (ch === "<") {
            if (xmlData[i4 + 1] === "/") {
              const closeIndex = findClosingIndex(xmlData, ">", i4, "Closing Tag is not closed.");
              let tagName2 = xmlData.substring(i4 + 2, closeIndex).trim();
              if (this.options.removeNSPrefix) {
                const colonIndex = tagName2.indexOf(":");
                if (colonIndex !== -1) {
                  tagName2 = tagName2.substr(colonIndex + 1);
                }
              }
              if (this.options.transformTagName) {
                tagName2 = this.options.transformTagName(tagName2);
              }
              if (currentNode) {
                textData = this.saveTextToParentTag(textData, currentNode, jPath);
              }
              const lastTagName = jPath.substring(jPath.lastIndexOf(".") + 1);
              if (tagName2 && this.options.unpairedTags.indexOf(tagName2) !== -1) {
                throw new Error(`Unpaired tag can not be used as closing tag: </${tagName2}>`);
              }
              let propIndex = 0;
              if (lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1) {
                propIndex = jPath.lastIndexOf(".", jPath.lastIndexOf(".") - 1);
                this.tagsNodeStack.pop();
              } else {
                propIndex = jPath.lastIndexOf(".");
              }
              jPath = jPath.substring(0, propIndex);
              currentNode = this.tagsNodeStack.pop();
              textData = "";
              i4 = closeIndex;
            } else if (xmlData[i4 + 1] === "?") {
              let tagData = readTagExp(xmlData, i4, false, "?>");
              if (!tagData) throw new Error("Pi Tag is not closed.");
              textData = this.saveTextToParentTag(textData, currentNode, jPath);
              if (this.options.ignoreDeclaration && tagData.tagName === "?xml" || this.options.ignorePiTags) {
              } else {
                const childNode = new xmlNode(tagData.tagName);
                childNode.add(this.options.textNodeName, "");
                if (tagData.tagName !== tagData.tagExp && tagData.attrExpPresent) {
                  childNode[":@"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);
                }
                this.addChild(currentNode, childNode, jPath);
              }
              i4 = tagData.closeIndex + 1;
            } else if (xmlData.substr(i4 + 1, 3) === "!--") {
              const endIndex = findClosingIndex(xmlData, "-->", i4 + 4, "Comment is not closed.");
              if (this.options.commentPropName) {
                const comment = xmlData.substring(i4 + 4, endIndex - 2);
                textData = this.saveTextToParentTag(textData, currentNode, jPath);
                currentNode.add(this.options.commentPropName, [{ [this.options.textNodeName]: comment }]);
              }
              i4 = endIndex;
            } else if (xmlData.substr(i4 + 1, 2) === "!D") {
              const result = readDocType(xmlData, i4);
              this.docTypeEntities = result.entities;
              i4 = result.i;
            } else if (xmlData.substr(i4 + 1, 2) === "![") {
              const closeIndex = findClosingIndex(xmlData, "]]>", i4, "CDATA is not closed.") - 2;
              const tagExp = xmlData.substring(i4 + 9, closeIndex);
              textData = this.saveTextToParentTag(textData, currentNode, jPath);
              if (this.options.cdataPropName) {
                currentNode.add(this.options.cdataPropName, [{ [this.options.textNodeName]: tagExp }]);
              } else {
                let val2 = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);
                if (val2 == void 0) val2 = "";
                currentNode.add(this.options.textNodeName, val2);
              }
              i4 = closeIndex + 2;
            } else {
              let result = readTagExp(xmlData, i4, this.options.removeNSPrefix);
              let tagName2 = result.tagName;
              let tagExp = result.tagExp;
              let attrExpPresent = result.attrExpPresent;
              let closeIndex = result.closeIndex;
              if (this.options.transformTagName) {
                tagName2 = this.options.transformTagName(tagName2);
              }
              if (currentNode && textData) {
                if (currentNode.tagname !== "!xml") {
                  textData = this.saveTextToParentTag(textData, currentNode, jPath, false);
                }
              }
              const lastTag = currentNode;
              if (lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1) {
                currentNode = this.tagsNodeStack.pop();
                jPath = jPath.substring(0, jPath.lastIndexOf("."));
              }
              if (tagName2 !== xmlObj.tagname) {
                jPath += jPath ? "." + tagName2 : tagName2;
              }
              if (this.isItStopNode(this.options.stopNodes, jPath, tagName2)) {
                let tagContent = "";
                if (tagExp.length > 0 && tagExp.lastIndexOf("/") === tagExp.length - 1) {
                  i4 = result.closeIndex;
                } else if (this.options.unpairedTags.indexOf(tagName2) !== -1) {
                  i4 = result.closeIndex;
                } else {
                  const result2 = this.readStopNodeData(xmlData, tagName2, closeIndex + 1);
                  if (!result2) throw new Error(`Unexpected end of ${tagName2}`);
                  i4 = result2.i;
                  tagContent = result2.tagContent;
                }
                const childNode = new xmlNode(tagName2);
                if (tagName2 !== tagExp && attrExpPresent) {
                  childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName2);
                }
                if (tagContent) {
                  tagContent = this.parseTextData(tagContent, tagName2, jPath, true, attrExpPresent, true, true);
                }
                jPath = jPath.substr(0, jPath.lastIndexOf("."));
                childNode.add(this.options.textNodeName, tagContent);
                this.addChild(currentNode, childNode, jPath);
              } else {
                if (tagExp.length > 0 && tagExp.lastIndexOf("/") === tagExp.length - 1) {
                  if (tagName2[tagName2.length - 1] === "/") {
                    tagName2 = tagName2.substr(0, tagName2.length - 1);
                    tagExp = tagName2;
                  } else {
                    tagExp = tagExp.substr(0, tagExp.length - 1);
                  }
                  if (this.options.transformTagName) {
                    tagName2 = this.options.transformTagName(tagName2);
                  }
                  const childNode = new xmlNode(tagName2);
                  if (tagName2 !== tagExp && attrExpPresent) {
                    childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName2);
                  }
                  this.addChild(currentNode, childNode, jPath);
                  jPath = jPath.substr(0, jPath.lastIndexOf("."));
                } else {
                  const childNode = new xmlNode(tagName2);
                  this.tagsNodeStack.push(currentNode);
                  if (tagName2 !== tagExp && attrExpPresent) {
                    childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName2);
                  }
                  this.addChild(currentNode, childNode, jPath);
                  currentNode = childNode;
                }
                textData = "";
                i4 = closeIndex;
              }
            }
          } else {
            textData += xmlData[i4];
          }
        }
        return xmlObj.child;
      };
      function addChild(currentNode, childNode, jPath) {
        const result = this.options.updateTag(childNode.tagname, jPath, childNode[":@"]);
        if (result === false) {
        } else if (typeof result === "string") {
          childNode.tagname = result;
          currentNode.addChild(childNode);
        } else {
          currentNode.addChild(childNode);
        }
      }
      var replaceEntitiesValue = function(val2) {
        if (this.options.processEntities) {
          for (let entityName2 in this.docTypeEntities) {
            const entity = this.docTypeEntities[entityName2];
            val2 = val2.replace(entity.regx, entity.val);
          }
          for (let entityName2 in this.lastEntities) {
            const entity = this.lastEntities[entityName2];
            val2 = val2.replace(entity.regex, entity.val);
          }
          if (this.options.htmlEntities) {
            for (let entityName2 in this.htmlEntities) {
              const entity = this.htmlEntities[entityName2];
              val2 = val2.replace(entity.regex, entity.val);
            }
          }
          val2 = val2.replace(this.ampEntity.regex, this.ampEntity.val);
        }
        return val2;
      };
      function saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {
        if (textData) {
          if (isLeafNode === void 0) isLeafNode = Object.keys(currentNode.child).length === 0;
          textData = this.parseTextData(
            textData,
            currentNode.tagname,
            jPath,
            false,
            currentNode[":@"] ? Object.keys(currentNode[":@"]).length !== 0 : false,
            isLeafNode
          );
          if (textData !== void 0 && textData !== "")
            currentNode.add(this.options.textNodeName, textData);
          textData = "";
        }
        return textData;
      }
      function isItStopNode(stopNodes, jPath, currentTagName) {
        const allNodesExp = "*." + currentTagName;
        for (const stopNodePath in stopNodes) {
          const stopNodeExp = stopNodes[stopNodePath];
          if (allNodesExp === stopNodeExp || jPath === stopNodeExp) return true;
        }
        return false;
      }
      function tagExpWithClosingIndex(xmlData, i4, closingChar = ">") {
        let attrBoundary;
        let tagExp = "";
        for (let index4 = i4; index4 < xmlData.length; index4++) {
          let ch = xmlData[index4];
          if (attrBoundary) {
            if (ch === attrBoundary) attrBoundary = "";
          } else if (ch === '"' || ch === "'") {
            attrBoundary = ch;
          } else if (ch === closingChar[0]) {
            if (closingChar[1]) {
              if (xmlData[index4 + 1] === closingChar[1]) {
                return {
                  data: tagExp,
                  index: index4
                };
              }
            } else {
              return {
                data: tagExp,
                index: index4
              };
            }
          } else if (ch === "	") {
            ch = " ";
          }
          tagExp += ch;
        }
      }
      function findClosingIndex(xmlData, str, i4, errMsg) {
        const closingIndex = xmlData.indexOf(str, i4);
        if (closingIndex === -1) {
          throw new Error(errMsg);
        } else {
          return closingIndex + str.length - 1;
        }
      }
      function readTagExp(xmlData, i4, removeNSPrefix, closingChar = ">") {
        const result = tagExpWithClosingIndex(xmlData, i4 + 1, closingChar);
        if (!result) return;
        let tagExp = result.data;
        const closeIndex = result.index;
        const separatorIndex = tagExp.search(/\s/);
        let tagName2 = tagExp;
        let attrExpPresent = true;
        if (separatorIndex !== -1) {
          tagName2 = tagExp.substr(0, separatorIndex).replace(/\s\s*$/, "");
          tagExp = tagExp.substr(separatorIndex + 1);
        }
        if (removeNSPrefix) {
          const colonIndex = tagName2.indexOf(":");
          if (colonIndex !== -1) {
            tagName2 = tagName2.substr(colonIndex + 1);
            attrExpPresent = tagName2 !== result.data.substr(colonIndex + 1);
          }
        }
        return {
          tagName: tagName2,
          tagExp,
          closeIndex,
          attrExpPresent
        };
      }
      function readStopNodeData(xmlData, tagName2, i4) {
        const startIndex = i4;
        let openTagCount = 1;
        for (; i4 < xmlData.length; i4++) {
          if (xmlData[i4] === "<") {
            if (xmlData[i4 + 1] === "/") {
              const closeIndex = findClosingIndex(xmlData, ">", i4, `${tagName2} is not closed`);
              let closeTagName = xmlData.substring(i4 + 2, closeIndex).trim();
              if (closeTagName === tagName2) {
                openTagCount--;
                if (openTagCount === 0) {
                  return {
                    tagContent: xmlData.substring(startIndex, i4),
                    i: closeIndex
                  };
                }
              }
              i4 = closeIndex;
            } else if (xmlData[i4 + 1] === "?") {
              const closeIndex = findClosingIndex(xmlData, "?>", i4 + 1, "StopNode is not closed.");
              i4 = closeIndex;
            } else if (xmlData.substr(i4 + 1, 3) === "!--") {
              const closeIndex = findClosingIndex(xmlData, "-->", i4 + 3, "StopNode is not closed.");
              i4 = closeIndex;
            } else if (xmlData.substr(i4 + 1, 2) === "![") {
              const closeIndex = findClosingIndex(xmlData, "]]>", i4, "StopNode is not closed.") - 2;
              i4 = closeIndex;
            } else {
              const tagData = readTagExp(xmlData, i4, ">");
              if (tagData) {
                const openTagName = tagData && tagData.tagName;
                if (openTagName === tagName2 && tagData.tagExp[tagData.tagExp.length - 1] !== "/") {
                  openTagCount++;
                }
                i4 = tagData.closeIndex;
              }
            }
          }
        }
      }
      function parseValue(val2, shouldParse, options2) {
        if (shouldParse && typeof val2 === "string") {
          const newval = val2.trim();
          if (newval === "true") return true;
          else if (newval === "false") return false;
          else return toNumber2(val2, options2);
        } else {
          if (util.isExist(val2)) {
            return val2;
          } else {
            return "";
          }
        }
      }
      module.exports = OrderedObjParser;
    }
  });

  // node_modules/fast-xml-parser/src/xmlparser/node2json.js
  var require_node2json = __commonJS({
    "node_modules/fast-xml-parser/src/xmlparser/node2json.js"(exports) {
      "use strict";
      function prettify(node, options2) {
        return compress(node, options2);
      }
      function compress(arr, options2, jPath) {
        let text6;
        const compressedObj = {};
        for (let i4 = 0; i4 < arr.length; i4++) {
          const tagObj = arr[i4];
          const property = propName(tagObj);
          let newJpath = "";
          if (jPath === void 0) newJpath = property;
          else newJpath = jPath + "." + property;
          if (property === options2.textNodeName) {
            if (text6 === void 0) text6 = tagObj[property];
            else text6 += "" + tagObj[property];
          } else if (property === void 0) {
            continue;
          } else if (tagObj[property]) {
            let val2 = compress(tagObj[property], options2, newJpath);
            const isLeaf = isLeafTag(val2, options2);
            if (tagObj[":@"]) {
              assignAttributes(val2, tagObj[":@"], newJpath, options2);
            } else if (Object.keys(val2).length === 1 && val2[options2.textNodeName] !== void 0 && !options2.alwaysCreateTextNode) {
              val2 = val2[options2.textNodeName];
            } else if (Object.keys(val2).length === 0) {
              if (options2.alwaysCreateTextNode) val2[options2.textNodeName] = "";
              else val2 = "";
            }
            if (compressedObj[property] !== void 0 && compressedObj.hasOwnProperty(property)) {
              if (!Array.isArray(compressedObj[property])) {
                compressedObj[property] = [compressedObj[property]];
              }
              compressedObj[property].push(val2);
            } else {
              if (options2.isArray(property, newJpath, isLeaf)) {
                compressedObj[property] = [val2];
              } else {
                compressedObj[property] = val2;
              }
            }
          }
        }
        if (typeof text6 === "string") {
          if (text6.length > 0) compressedObj[options2.textNodeName] = text6;
        } else if (text6 !== void 0) compressedObj[options2.textNodeName] = text6;
        return compressedObj;
      }
      function propName(obj) {
        const keys3 = Object.keys(obj);
        for (let i4 = 0; i4 < keys3.length; i4++) {
          const key2 = keys3[i4];
          if (key2 !== ":@") return key2;
        }
      }
      function assignAttributes(obj, attrMap, jpath, options2) {
        if (attrMap) {
          const keys3 = Object.keys(attrMap);
          const len = keys3.length;
          for (let i4 = 0; i4 < len; i4++) {
            const atrrName = keys3[i4];
            if (options2.isArray(atrrName, jpath + "." + atrrName, true, true)) {
              obj[atrrName] = [attrMap[atrrName]];
            } else {
              obj[atrrName] = attrMap[atrrName];
            }
          }
        }
      }
      function isLeafTag(obj, options2) {
        const { textNodeName } = options2;
        const propCount = Object.keys(obj).length;
        if (propCount === 0) {
          return true;
        }
        if (propCount === 1 && (obj[textNodeName] || typeof obj[textNodeName] === "boolean" || obj[textNodeName] === 0)) {
          return true;
        }
        return false;
      }
      exports.prettify = prettify;
    }
  });

  // node_modules/fast-xml-parser/src/xmlparser/XMLParser.js
  var require_XMLParser = __commonJS({
    "node_modules/fast-xml-parser/src/xmlparser/XMLParser.js"(exports, module) {
      var { buildOptions } = require_OptionsBuilder();
      var OrderedObjParser = require_OrderedObjParser();
      var { prettify } = require_node2json();
      var validator = require_validator();
      var XMLParser2 = class {
        constructor(options2) {
          this.externalEntities = {};
          this.options = buildOptions(options2);
        }
        /**
         * Parse XML dats to JS object 
         * @param {string|Buffer} xmlData 
         * @param {boolean|Object} validationOption 
         */
        parse(xmlData, validationOption) {
          if (typeof xmlData === "string") {
          } else if (xmlData.toString) {
            xmlData = xmlData.toString();
          } else {
            throw new Error("XML data is accepted in String or Bytes[] form.");
          }
          if (validationOption) {
            if (validationOption === true) validationOption = {};
            const result = validator.validate(xmlData, validationOption);
            if (result !== true) {
              throw Error(`${result.err.msg}:${result.err.line}:${result.err.col}`);
            }
          }
          const orderedObjParser = new OrderedObjParser(this.options);
          orderedObjParser.addExternalEntities(this.externalEntities);
          const orderedResult = orderedObjParser.parseXml(xmlData);
          if (this.options.preserveOrder || orderedResult === void 0) return orderedResult;
          else return prettify(orderedResult, this.options);
        }
        /**
         * Add Entity which is not by default supported by this library
         * @param {string} key 
         * @param {string} value 
         */
        addEntity(key2, value14) {
          if (value14.indexOf("&") !== -1) {
            throw new Error("Entity value can't have '&'");
          } else if (key2.indexOf("&") !== -1 || key2.indexOf(";") !== -1) {
            throw new Error("An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'");
          } else if (value14 === "&") {
            throw new Error("An entity with value '&' is not permitted");
          } else {
            this.externalEntities[key2] = value14;
          }
        }
      };
      module.exports = XMLParser2;
    }
  });

  // node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js
  var require_orderedJs2Xml = __commonJS({
    "node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js"(exports, module) {
      var EOL = "\n";
      function toXml(jArray, options2) {
        let indentation = "";
        if (options2.format && options2.indentBy.length > 0) {
          indentation = EOL;
        }
        return arrToStr(jArray, options2, "", indentation);
      }
      function arrToStr(arr, options2, jPath, indentation) {
        let xmlStr = "";
        let isPreviousElementTag = false;
        for (let i4 = 0; i4 < arr.length; i4++) {
          const tagObj = arr[i4];
          const tagName2 = propName(tagObj);
          let newJPath = "";
          if (jPath.length === 0) newJPath = tagName2;
          else newJPath = `${jPath}.${tagName2}`;
          if (tagName2 === options2.textNodeName) {
            let tagText = tagObj[tagName2];
            if (!isStopNode(newJPath, options2)) {
              tagText = options2.tagValueProcessor(tagName2, tagText);
              tagText = replaceEntitiesValue(tagText, options2);
            }
            if (isPreviousElementTag) {
              xmlStr += indentation;
            }
            xmlStr += tagText;
            isPreviousElementTag = false;
            continue;
          } else if (tagName2 === options2.cdataPropName) {
            if (isPreviousElementTag) {
              xmlStr += indentation;
            }
            xmlStr += `<![CDATA[${tagObj[tagName2][0][options2.textNodeName]}]]>`;
            isPreviousElementTag = false;
            continue;
          } else if (tagName2 === options2.commentPropName) {
            xmlStr += indentation + `<!--${tagObj[tagName2][0][options2.textNodeName]}-->`;
            isPreviousElementTag = true;
            continue;
          } else if (tagName2[0] === "?") {
            const attStr2 = attr_to_str(tagObj[":@"], options2);
            const tempInd = tagName2 === "?xml" ? "" : indentation;
            let piTextNodeName = tagObj[tagName2][0][options2.textNodeName];
            piTextNodeName = piTextNodeName.length !== 0 ? " " + piTextNodeName : "";
            xmlStr += tempInd + `<${tagName2}${piTextNodeName}${attStr2}?>`;
            isPreviousElementTag = true;
            continue;
          }
          let newIdentation = indentation;
          if (newIdentation !== "") {
            newIdentation += options2.indentBy;
          }
          const attStr = attr_to_str(tagObj[":@"], options2);
          const tagStart = indentation + `<${tagName2}${attStr}`;
          const tagValue = arrToStr(tagObj[tagName2], options2, newJPath, newIdentation);
          if (options2.unpairedTags.indexOf(tagName2) !== -1) {
            if (options2.suppressUnpairedNode) xmlStr += tagStart + ">";
            else xmlStr += tagStart + "/>";
          } else if ((!tagValue || tagValue.length === 0) && options2.suppressEmptyNode) {
            xmlStr += tagStart + "/>";
          } else if (tagValue && tagValue.endsWith(">")) {
            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName2}>`;
          } else {
            xmlStr += tagStart + ">";
            if (tagValue && indentation !== "" && (tagValue.includes("/>") || tagValue.includes("</"))) {
              xmlStr += indentation + options2.indentBy + tagValue + indentation;
            } else {
              xmlStr += tagValue;
            }
            xmlStr += `</${tagName2}>`;
          }
          isPreviousElementTag = true;
        }
        return xmlStr;
      }
      function propName(obj) {
        const keys3 = Object.keys(obj);
        for (let i4 = 0; i4 < keys3.length; i4++) {
          const key2 = keys3[i4];
          if (key2 !== ":@") return key2;
        }
      }
      function attr_to_str(attrMap, options2) {
        let attrStr = "";
        if (attrMap && !options2.ignoreAttributes) {
          for (let attr3 in attrMap) {
            let attrVal = options2.attributeValueProcessor(attr3, attrMap[attr3]);
            attrVal = replaceEntitiesValue(attrVal, options2);
            if (attrVal === true && options2.suppressBooleanAttributes) {
              attrStr += ` ${attr3.substr(options2.attributeNamePrefix.length)}`;
            } else {
              attrStr += ` ${attr3.substr(options2.attributeNamePrefix.length)}="${attrVal}"`;
            }
          }
        }
        return attrStr;
      }
      function isStopNode(jPath, options2) {
        jPath = jPath.substr(0, jPath.length - options2.textNodeName.length - 1);
        let tagName2 = jPath.substr(jPath.lastIndexOf(".") + 1);
        for (let index4 in options2.stopNodes) {
          if (options2.stopNodes[index4] === jPath || options2.stopNodes[index4] === "*." + tagName2) return true;
        }
        return false;
      }
      function replaceEntitiesValue(textValue, options2) {
        if (textValue && textValue.length > 0 && options2.processEntities) {
          for (let i4 = 0; i4 < options2.entities.length; i4++) {
            const entity = options2.entities[i4];
            textValue = textValue.replace(entity.regex, entity.val);
          }
        }
        return textValue;
      }
      module.exports = toXml;
    }
  });

  // node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js
  var require_json2xml = __commonJS({
    "node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js"(exports, module) {
      "use strict";
      var buildFromOrderedJs = require_orderedJs2Xml();
      var defaultOptions = {
        attributeNamePrefix: "@_",
        attributesGroupName: false,
        textNodeName: "#text",
        ignoreAttributes: true,
        cdataPropName: false,
        format: false,
        indentBy: "  ",
        suppressEmptyNode: false,
        suppressUnpairedNode: true,
        suppressBooleanAttributes: true,
        tagValueProcessor: function(key2, a4) {
          return a4;
        },
        attributeValueProcessor: function(attrName, a4) {
          return a4;
        },
        preserveOrder: false,
        commentPropName: false,
        unpairedTags: [],
        entities: [
          { regex: new RegExp("&", "g"), val: "&amp;" },
          //it must be on top
          { regex: new RegExp(">", "g"), val: "&gt;" },
          { regex: new RegExp("<", "g"), val: "&lt;" },
          { regex: new RegExp("'", "g"), val: "&apos;" },
          { regex: new RegExp('"', "g"), val: "&quot;" }
        ],
        processEntities: true,
        stopNodes: [],
        // transformTagName: false,
        // transformAttributeName: false,
        oneListGroup: false
      };
      function Builder(options2) {
        this.options = Object.assign({}, defaultOptions, options2);
        if (this.options.ignoreAttributes || this.options.attributesGroupName) {
          this.isAttribute = function() {
            return false;
          };
        } else {
          this.attrPrefixLen = this.options.attributeNamePrefix.length;
          this.isAttribute = isAttribute;
        }
        this.processTextOrObjNode = processTextOrObjNode;
        if (this.options.format) {
          this.indentate = indentate;
          this.tagEndChar = ">\n";
          this.newLine = "\n";
        } else {
          this.indentate = function() {
            return "";
          };
          this.tagEndChar = ">";
          this.newLine = "";
        }
      }
      Builder.prototype.build = function(jObj) {
        if (this.options.preserveOrder) {
          return buildFromOrderedJs(jObj, this.options);
        } else {
          if (Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1) {
            jObj = {
              [this.options.arrayNodeName]: jObj
            };
          }
          return this.j2x(jObj, 0).val;
        }
      };
      Builder.prototype.j2x = function(jObj, level) {
        let attrStr = "";
        let val2 = "";
        for (let key2 in jObj) {
          if (typeof jObj[key2] === "undefined") {
          } else if (jObj[key2] === null) {
            if (key2[0] === "?") val2 += this.indentate(level) + "<" + key2 + "?" + this.tagEndChar;
            else val2 += this.indentate(level) + "<" + key2 + "/" + this.tagEndChar;
          } else if (jObj[key2] instanceof Date) {
            val2 += this.buildTextValNode(jObj[key2], key2, "", level);
          } else if (typeof jObj[key2] !== "object") {
            const attr3 = this.isAttribute(key2);
            if (attr3) {
              attrStr += this.buildAttrPairStr(attr3, "" + jObj[key2]);
            } else {
              if (key2 === this.options.textNodeName) {
                let newval = this.options.tagValueProcessor(key2, "" + jObj[key2]);
                val2 += this.replaceEntitiesValue(newval);
              } else {
                val2 += this.buildTextValNode(jObj[key2], key2, "", level);
              }
            }
          } else if (Array.isArray(jObj[key2])) {
            const arrLen = jObj[key2].length;
            let listTagVal = "";
            for (let j3 = 0; j3 < arrLen; j3++) {
              const item = jObj[key2][j3];
              if (typeof item === "undefined") {
              } else if (item === null) {
                if (key2[0] === "?") val2 += this.indentate(level) + "<" + key2 + "?" + this.tagEndChar;
                else val2 += this.indentate(level) + "<" + key2 + "/" + this.tagEndChar;
              } else if (typeof item === "object") {
                if (this.options.oneListGroup) {
                  listTagVal += this.j2x(item, level + 1).val;
                } else {
                  listTagVal += this.processTextOrObjNode(item, key2, level);
                }
              } else {
                listTagVal += this.buildTextValNode(item, key2, "", level);
              }
            }
            if (this.options.oneListGroup) {
              listTagVal = this.buildObjectNode(listTagVal, key2, "", level);
            }
            val2 += listTagVal;
          } else {
            if (this.options.attributesGroupName && key2 === this.options.attributesGroupName) {
              const Ks = Object.keys(jObj[key2]);
              const L = Ks.length;
              for (let j3 = 0; j3 < L; j3++) {
                attrStr += this.buildAttrPairStr(Ks[j3], "" + jObj[key2][Ks[j3]]);
              }
            } else {
              val2 += this.processTextOrObjNode(jObj[key2], key2, level);
            }
          }
        }
        return { attrStr, val: val2 };
      };
      Builder.prototype.buildAttrPairStr = function(attrName, val2) {
        val2 = this.options.attributeValueProcessor(attrName, "" + val2);
        val2 = this.replaceEntitiesValue(val2);
        if (this.options.suppressBooleanAttributes && val2 === "true") {
          return " " + attrName;
        } else return " " + attrName + '="' + val2 + '"';
      };
      function processTextOrObjNode(object2, key2, level) {
        const result = this.j2x(object2, level + 1);
        if (object2[this.options.textNodeName] !== void 0 && Object.keys(object2).length === 1) {
          return this.buildTextValNode(object2[this.options.textNodeName], key2, result.attrStr, level);
        } else {
          return this.buildObjectNode(result.val, key2, result.attrStr, level);
        }
      }
      Builder.prototype.buildObjectNode = function(val2, key2, attrStr, level) {
        if (val2 === "") {
          if (key2[0] === "?") return this.indentate(level) + "<" + key2 + attrStr + "?" + this.tagEndChar;
          else {
            return this.indentate(level) + "<" + key2 + attrStr + this.closeTag(key2) + this.tagEndChar;
          }
        } else {
          let tagEndExp = "</" + key2 + this.tagEndChar;
          let piClosingChar = "";
          if (key2[0] === "?") {
            piClosingChar = "?";
            tagEndExp = "";
          }
          if (attrStr && val2.indexOf("<") === -1) {
            return this.indentate(level) + "<" + key2 + attrStr + piClosingChar + ">" + val2 + tagEndExp;
          } else if (this.options.commentPropName !== false && key2 === this.options.commentPropName && piClosingChar.length === 0) {
            return this.indentate(level) + `<!--${val2}-->` + this.newLine;
          } else {
            return this.indentate(level) + "<" + key2 + attrStr + piClosingChar + this.tagEndChar + val2 + this.indentate(level) + tagEndExp;
          }
        }
      };
      Builder.prototype.closeTag = function(key2) {
        let closeTag = "";
        if (this.options.unpairedTags.indexOf(key2) !== -1) {
          if (!this.options.suppressUnpairedNode) closeTag = "/";
        } else if (this.options.suppressEmptyNode) {
          closeTag = "/";
        } else {
          closeTag = `></${key2}`;
        }
        return closeTag;
      };
      Builder.prototype.buildTextValNode = function(val2, key2, attrStr, level) {
        if (this.options.cdataPropName !== false && key2 === this.options.cdataPropName) {
          return this.indentate(level) + `<![CDATA[${val2}]]>` + this.newLine;
        } else if (this.options.commentPropName !== false && key2 === this.options.commentPropName) {
          return this.indentate(level) + `<!--${val2}-->` + this.newLine;
        } else if (key2[0] === "?") {
          return this.indentate(level) + "<" + key2 + attrStr + "?" + this.tagEndChar;
        } else {
          let textValue = this.options.tagValueProcessor(key2, val2);
          textValue = this.replaceEntitiesValue(textValue);
          if (textValue === "") {
            return this.indentate(level) + "<" + key2 + attrStr + this.closeTag(key2) + this.tagEndChar;
          } else {
            return this.indentate(level) + "<" + key2 + attrStr + ">" + textValue + "</" + key2 + this.tagEndChar;
          }
        }
      };
      Builder.prototype.replaceEntitiesValue = function(textValue) {
        if (textValue && textValue.length > 0 && this.options.processEntities) {
          for (let i4 = 0; i4 < this.options.entities.length; i4++) {
            const entity = this.options.entities[i4];
            textValue = textValue.replace(entity.regex, entity.val);
          }
        }
        return textValue;
      };
      function indentate(level) {
        return this.options.indentBy.repeat(level);
      }
      function isAttribute(name15) {
        if (name15.startsWith(this.options.attributeNamePrefix)) {
          return name15.substr(this.attrPrefixLen);
        } else {
          return false;
        }
      }
      module.exports = Builder;
    }
  });

  // node_modules/fast-xml-parser/src/fxp.js
  var require_fxp = __commonJS({
    "node_modules/fast-xml-parser/src/fxp.js"(exports, module) {
      "use strict";
      var validator = require_validator();
      var XMLParser2 = require_XMLParser();
      var XMLBuilder = require_json2xml();
      module.exports = {
        XMLParser: XMLParser2,
        XMLValidator: validator,
        XMLBuilder
      };
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js
  var import_fast_xml_parser, parseXmlBody, parseXmlErrorBody;
  var init_parseXmlBody = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js"() {
      init_dist_es27();
      import_fast_xml_parser = __toESM(require_fxp());
      init_common();
      parseXmlBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
        if (encoded.length) {
          const parser = new import_fast_xml_parser.XMLParser({
            attributeNamePrefix: "",
            htmlEntities: true,
            ignoreAttributes: false,
            ignoreDeclaration: true,
            parseTagValue: false,
            trimValues: false,
            tagValueProcessor: (_2, val2) => val2.trim() === "" && val2.includes("\n") ? "" : void 0
          });
          parser.addEntity("#xD", "\r");
          parser.addEntity("#10", "\n");
          let parsedObj;
          try {
            parsedObj = parser.parse(encoded, true);
          } catch (e3) {
            if (e3 && typeof e3 === "object") {
              Object.defineProperty(e3, "$responseBodyText", {
                value: encoded
              });
            }
            throw e3;
          }
          const textNodeName = "#text";
          const key2 = Object.keys(parsedObj)[0];
          const parsedObjToReturn = parsedObj[key2];
          if (parsedObjToReturn[textNodeName]) {
            parsedObjToReturn[key2] = parsedObjToReturn[textNodeName];
            delete parsedObjToReturn[textNodeName];
          }
          return getValueFromTextNode(parsedObjToReturn);
        }
        return {};
      });
      parseXmlErrorBody = async (errorBody, context) => {
        const value14 = await parseXmlBody(errorBody, context);
        if (value14.Error) {
          value14.Error.message = value14.Error.message ?? value14.Error.Message;
        }
        return value14;
      };
    }
  });

  // node_modules/@aws-sdk/core/dist-es/submodules/protocols/index.js
  var init_protocols = __esm({
    "node_modules/@aws-sdk/core/dist-es/submodules/protocols/index.js"() {
      init_coercing_serializers();
      init_awsExpectUnion();
      init_parseJsonBody();
      init_parseXmlBody();
    }
  });

  // node_modules/@aws-sdk/core/dist-es/index.js
  var init_dist_es35 = __esm({
    "node_modules/@aws-sdk/core/dist-es/index.js"() {
      init_client3();
      init_httpAuthSchemes2();
      init_protocols();
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/auth/httpAuthSchemeProvider.js
  function createAwsAuthSigv4HttpAuthOption(authParameters) {
    return {
      schemeId: "aws.auth#sigv4",
      signingProperties: {
        name: "cognito-identity",
        region: authParameters.region
      },
      propertiesExtractor: (config, context) => ({
        signingProperties: {
          config,
          context
        }
      })
    };
  }
  function createSmithyApiNoAuthHttpAuthOption(authParameters) {
    return {
      schemeId: "smithy.api#noAuth"
    };
  }
  var defaultCognitoIdentityHttpAuthSchemeParametersProvider, defaultCognitoIdentityHttpAuthSchemeProvider, resolveHttpAuthSchemeConfig;
  var init_httpAuthSchemeProvider = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/auth/httpAuthSchemeProvider.js"() {
      init_dist_es35();
      init_dist_es11();
      defaultCognitoIdentityHttpAuthSchemeParametersProvider = async (config, context, input3) => {
        return {
          operation: getSmithyContext(context).operation,
          region: await normalizeProvider(config.region)() || (() => {
            throw new Error("expected `region` to be configured for `aws.auth#sigv4`");
          })()
        };
      };
      defaultCognitoIdentityHttpAuthSchemeProvider = (authParameters) => {
        const options2 = [];
        switch (authParameters.operation) {
          case "GetCredentialsForIdentity": {
            options2.push(createSmithyApiNoAuthHttpAuthOption(authParameters));
            break;
          }
          case "GetId": {
            options2.push(createSmithyApiNoAuthHttpAuthOption(authParameters));
            break;
          }
          case "GetOpenIdToken": {
            options2.push(createSmithyApiNoAuthHttpAuthOption(authParameters));
            break;
          }
          case "UnlinkIdentity": {
            options2.push(createSmithyApiNoAuthHttpAuthOption(authParameters));
            break;
          }
          default: {
            options2.push(createAwsAuthSigv4HttpAuthOption(authParameters));
          }
        }
        return options2;
      };
      resolveHttpAuthSchemeConfig = (config) => {
        const config_0 = resolveAwsSdkSigV4Config(config);
        return {
          ...config_0
        };
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/EndpointParameters.js
  var resolveClientEndpointParameters, commonParams;
  var init_EndpointParameters = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/EndpointParameters.js"() {
      resolveClientEndpointParameters = (options2) => {
        return {
          ...options2,
          useDualstackEndpoint: options2.useDualstackEndpoint ?? false,
          useFipsEndpoint: options2.useFipsEndpoint ?? false,
          defaultSigningName: "cognito-identity"
        };
      };
      commonParams = {
        UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
        Endpoint: { type: "builtInParams", name: "endpoint" },
        Region: { type: "builtInParams", name: "region" },
        UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/package.json
  var package_default;
  var init_package = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/package.json"() {
      package_default = {
        name: "@aws-sdk/client-cognito-identity",
        description: "AWS SDK for JavaScript Cognito Identity Client for Node.js, Browser and React Native",
        version: "3.616.0",
        scripts: {
          build: "concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'",
          "build:cjs": "node ../../scripts/compilation/inline client-cognito-identity",
          "build:es": "tsc -p tsconfig.es.json",
          "build:include:deps": "lerna run --scope $npm_package_name --include-dependencies build",
          "build:types": "tsc -p tsconfig.types.json",
          "build:types:downlevel": "downlevel-dts dist-types dist-types/ts3.4",
          clean: "rimraf ./dist-* && rimraf *.tsbuildinfo",
          "extract:docs": "api-extractor run --local",
          "generate:client": "node ../../scripts/generate-clients/single-service --solo cognito-identity",
          "test:e2e": "ts-mocha test/**/*.ispec.ts && karma start karma.conf.js"
        },
        main: "./dist-cjs/index.js",
        types: "./dist-types/index.d.ts",
        module: "./dist-es/index.js",
        sideEffects: false,
        dependencies: {
          "@aws-crypto/sha256-browser": "5.2.0",
          "@aws-crypto/sha256-js": "5.2.0",
          "@aws-sdk/client-sso-oidc": "3.616.0",
          "@aws-sdk/client-sts": "3.616.0",
          "@aws-sdk/core": "3.616.0",
          "@aws-sdk/credential-provider-node": "3.616.0",
          "@aws-sdk/middleware-host-header": "3.616.0",
          "@aws-sdk/middleware-logger": "3.609.0",
          "@aws-sdk/middleware-recursion-detection": "3.616.0",
          "@aws-sdk/middleware-user-agent": "3.616.0",
          "@aws-sdk/region-config-resolver": "3.614.0",
          "@aws-sdk/types": "3.609.0",
          "@aws-sdk/util-endpoints": "3.614.0",
          "@aws-sdk/util-user-agent-browser": "3.609.0",
          "@aws-sdk/util-user-agent-node": "3.614.0",
          "@smithy/config-resolver": "^3.0.5",
          "@smithy/core": "^2.2.7",
          "@smithy/fetch-http-handler": "^3.2.2",
          "@smithy/hash-node": "^3.0.3",
          "@smithy/invalid-dependency": "^3.0.3",
          "@smithy/middleware-content-length": "^3.0.4",
          "@smithy/middleware-endpoint": "^3.0.5",
          "@smithy/middleware-retry": "^3.0.10",
          "@smithy/middleware-serde": "^3.0.3",
          "@smithy/middleware-stack": "^3.0.3",
          "@smithy/node-config-provider": "^3.1.4",
          "@smithy/node-http-handler": "^3.1.3",
          "@smithy/protocol-http": "^4.0.4",
          "@smithy/smithy-client": "^3.1.8",
          "@smithy/types": "^3.3.0",
          "@smithy/url-parser": "^3.0.3",
          "@smithy/util-base64": "^3.0.0",
          "@smithy/util-body-length-browser": "^3.0.0",
          "@smithy/util-body-length-node": "^3.0.0",
          "@smithy/util-defaults-mode-browser": "^3.0.10",
          "@smithy/util-defaults-mode-node": "^3.0.10",
          "@smithy/util-endpoints": "^2.0.5",
          "@smithy/util-middleware": "^3.0.3",
          "@smithy/util-retry": "^3.0.3",
          "@smithy/util-utf8": "^3.0.0",
          tslib: "^2.6.2"
        },
        devDependencies: {
          "@aws-sdk/client-iam": "3.616.0",
          "@tsconfig/node16": "16.1.3",
          "@types/chai": "^4.2.11",
          "@types/mocha": "^8.0.4",
          "@types/node": "^16.18.96",
          concurrently: "7.0.0",
          "downlevel-dts": "0.10.1",
          rimraf: "3.0.2",
          typescript: "~4.9.5"
        },
        engines: {
          node: ">=16.0.0"
        },
        typesVersions: {
          "<4.0": {
            "dist-types/*": [
              "dist-types/ts3.4/*"
            ]
          }
        },
        files: [
          "dist-*/**"
        ],
        author: {
          name: "AWS SDK for JavaScript Team",
          url: "https://aws.amazon.com/javascript/"
        },
        license: "Apache-2.0",
        browser: {
          "./dist-es/runtimeConfig": "./dist-es/runtimeConfig.browser"
        },
        "react-native": {
          "./dist-es/runtimeConfig": "./dist-es/runtimeConfig.native"
        },
        homepage: "https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-cognito-identity",
        repository: {
          type: "git",
          url: "https://github.com/aws/aws-sdk-js-v3.git",
          directory: "clients/client-cognito-identity"
        }
      };
    }
  });

  // node_modules/@aws-crypto/sha256-browser/build/module/constants.js
  var SHA_256_HASH, SHA_256_HMAC_ALGO, EMPTY_DATA_SHA_256;
  var init_constants6 = __esm({
    "node_modules/@aws-crypto/sha256-browser/build/module/constants.js"() {
      SHA_256_HASH = { name: "SHA-256" };
      SHA_256_HMAC_ALGO = {
        name: "HMAC",
        hash: SHA_256_HASH
      };
      EMPTY_DATA_SHA_256 = new Uint8Array([
        227,
        176,
        196,
        66,
        152,
        252,
        28,
        20,
        154,
        251,
        244,
        200,
        153,
        111,
        185,
        36,
        39,
        174,
        65,
        228,
        100,
        155,
        147,
        76,
        164,
        149,
        153,
        27,
        120,
        82,
        184,
        85
      ]);
    }
  });

  // node_modules/@aws-sdk/util-locate-window/dist-es/index.js
  function locateWindow() {
    if (typeof window !== "undefined") {
      return window;
    } else if (typeof self !== "undefined") {
      return self;
    }
    return fallbackWindow;
  }
  var fallbackWindow;
  var init_dist_es36 = __esm({
    "node_modules/@aws-sdk/util-locate-window/dist-es/index.js"() {
      fallbackWindow = {};
    }
  });

  // node_modules/@aws-crypto/sha256-browser/build/module/webCryptoSha256.js
  var import_util3, Sha256;
  var init_webCryptoSha256 = __esm({
    "node_modules/@aws-crypto/sha256-browser/build/module/webCryptoSha256.js"() {
      import_util3 = __toESM(require_main());
      init_constants6();
      init_dist_es36();
      Sha256 = /** @class */
      function() {
        function Sha2563(secret) {
          this.toHash = new Uint8Array(0);
          this.secret = secret;
          this.reset();
        }
        Sha2563.prototype.update = function(data) {
          if ((0, import_util3.isEmptyData)(data)) {
            return;
          }
          var update = (0, import_util3.convertToBuffer)(data);
          var typedArray = new Uint8Array(this.toHash.byteLength + update.byteLength);
          typedArray.set(this.toHash, 0);
          typedArray.set(update, this.toHash.byteLength);
          this.toHash = typedArray;
        };
        Sha2563.prototype.digest = function() {
          var _this = this;
          if (this.key) {
            return this.key.then(function(key2) {
              return locateWindow().crypto.subtle.sign(SHA_256_HMAC_ALGO, key2, _this.toHash).then(function(data) {
                return new Uint8Array(data);
              });
            });
          }
          if ((0, import_util3.isEmptyData)(this.toHash)) {
            return Promise.resolve(EMPTY_DATA_SHA_256);
          }
          return Promise.resolve().then(function() {
            return locateWindow().crypto.subtle.digest(SHA_256_HASH, _this.toHash);
          }).then(function(data) {
            return Promise.resolve(new Uint8Array(data));
          });
        };
        Sha2563.prototype.reset = function() {
          var _this = this;
          this.toHash = new Uint8Array(0);
          if (this.secret && this.secret !== void 0) {
            this.key = new Promise(function(resolve, reject) {
              locateWindow().crypto.subtle.importKey("raw", (0, import_util3.convertToBuffer)(_this.secret), SHA_256_HMAC_ALGO, false, ["sign"]).then(resolve, reject);
            });
            this.key.catch(function() {
            });
          }
        };
        return Sha2563;
      }();
    }
  });

  // node_modules/@aws-crypto/supports-web-crypto/build/module/supportsWebCrypto.js
  function supportsWebCrypto(window2) {
    if (supportsSecureRandom(window2) && typeof window2.crypto.subtle === "object") {
      var subtle = window2.crypto.subtle;
      return supportsSubtleCrypto(subtle);
    }
    return false;
  }
  function supportsSecureRandom(window2) {
    if (typeof window2 === "object" && typeof window2.crypto === "object") {
      var getRandomValues2 = window2.crypto.getRandomValues;
      return typeof getRandomValues2 === "function";
    }
    return false;
  }
  function supportsSubtleCrypto(subtle) {
    return subtle && subtleCryptoMethods.every(function(methodName) {
      return typeof subtle[methodName] === "function";
    });
  }
  var subtleCryptoMethods;
  var init_supportsWebCrypto = __esm({
    "node_modules/@aws-crypto/supports-web-crypto/build/module/supportsWebCrypto.js"() {
      subtleCryptoMethods = [
        "decrypt",
        "digest",
        "encrypt",
        "exportKey",
        "generateKey",
        "importKey",
        "sign",
        "verify"
      ];
    }
  });

  // node_modules/@aws-crypto/supports-web-crypto/build/module/index.js
  var init_module = __esm({
    "node_modules/@aws-crypto/supports-web-crypto/build/module/index.js"() {
      init_supportsWebCrypto();
    }
  });

  // node_modules/@aws-crypto/sha256-browser/build/module/crossPlatformSha256.js
  var import_sha256_js, import_util4, Sha2562;
  var init_crossPlatformSha256 = __esm({
    "node_modules/@aws-crypto/sha256-browser/build/module/crossPlatformSha256.js"() {
      init_webCryptoSha256();
      import_sha256_js = __toESM(require_main2());
      init_module();
      init_dist_es36();
      import_util4 = __toESM(require_main());
      Sha2562 = /** @class */
      function() {
        function Sha2563(secret) {
          if (supportsWebCrypto(locateWindow())) {
            this.hash = new Sha256(secret);
          } else {
            this.hash = new import_sha256_js.Sha256(secret);
          }
        }
        Sha2563.prototype.update = function(data, encoding2) {
          this.hash.update((0, import_util4.convertToBuffer)(data));
        };
        Sha2563.prototype.digest = function() {
          return this.hash.digest();
        };
        Sha2563.prototype.reset = function() {
          this.hash.reset();
        };
        return Sha2563;
      }();
    }
  });

  // node_modules/@aws-crypto/sha256-browser/build/module/index.js
  var init_module2 = __esm({
    "node_modules/@aws-crypto/sha256-browser/build/module/index.js"() {
      init_crossPlatformSha256();
      init_webCryptoSha256();
    }
  });

  // node_modules/bowser/es5.js
  var require_es5 = __commonJS({
    "node_modules/bowser/es5.js"(exports, module) {
      !function(e3, t3) {
        "object" == typeof exports && "object" == typeof module ? module.exports = t3() : "function" == typeof define && define.amd ? define([], t3) : "object" == typeof exports ? exports.bowser = t3() : e3.bowser = t3();
      }(exports, function() {
        return function(e3) {
          var t3 = {};
          function r3(n3) {
            if (t3[n3]) return t3[n3].exports;
            var i4 = t3[n3] = { i: n3, l: false, exports: {} };
            return e3[n3].call(i4.exports, i4, i4.exports, r3), i4.l = true, i4.exports;
          }
          return r3.m = e3, r3.c = t3, r3.d = function(e4, t4, n3) {
            r3.o(e4, t4) || Object.defineProperty(e4, t4, { enumerable: true, get: n3 });
          }, r3.r = function(e4) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e4, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e4, "__esModule", { value: true });
          }, r3.t = function(e4, t4) {
            if (1 & t4 && (e4 = r3(e4)), 8 & t4) return e4;
            if (4 & t4 && "object" == typeof e4 && e4 && e4.__esModule) return e4;
            var n3 = /* @__PURE__ */ Object.create(null);
            if (r3.r(n3), Object.defineProperty(n3, "default", { enumerable: true, value: e4 }), 2 & t4 && "string" != typeof e4) for (var i4 in e4) r3.d(n3, i4, function(t5) {
              return e4[t5];
            }.bind(null, i4));
            return n3;
          }, r3.n = function(e4) {
            var t4 = e4 && e4.__esModule ? function() {
              return e4.default;
            } : function() {
              return e4;
            };
            return r3.d(t4, "a", t4), t4;
          }, r3.o = function(e4, t4) {
            return Object.prototype.hasOwnProperty.call(e4, t4);
          }, r3.p = "", r3(r3.s = 90);
        }({ 17: function(e3, t3, r3) {
          "use strict";
          t3.__esModule = true, t3.default = void 0;
          var n3 = r3(18), i4 = function() {
            function e4() {
            }
            return e4.getFirstMatch = function(e5, t4) {
              var r4 = t4.match(e5);
              return r4 && r4.length > 0 && r4[1] || "";
            }, e4.getSecondMatch = function(e5, t4) {
              var r4 = t4.match(e5);
              return r4 && r4.length > 1 && r4[2] || "";
            }, e4.matchAndReturnConst = function(e5, t4, r4) {
              if (e5.test(t4)) return r4;
            }, e4.getWindowsVersionName = function(e5) {
              switch (e5) {
                case "NT":
                  return "NT";
                case "XP":
                  return "XP";
                case "NT 5.0":
                  return "2000";
                case "NT 5.1":
                  return "XP";
                case "NT 5.2":
                  return "2003";
                case "NT 6.0":
                  return "Vista";
                case "NT 6.1":
                  return "7";
                case "NT 6.2":
                  return "8";
                case "NT 6.3":
                  return "8.1";
                case "NT 10.0":
                  return "10";
                default:
                  return;
              }
            }, e4.getMacOSVersionName = function(e5) {
              var t4 = e5.split(".").splice(0, 2).map(function(e6) {
                return parseInt(e6, 10) || 0;
              });
              if (t4.push(0), 10 === t4[0]) switch (t4[1]) {
                case 5:
                  return "Leopard";
                case 6:
                  return "Snow Leopard";
                case 7:
                  return "Lion";
                case 8:
                  return "Mountain Lion";
                case 9:
                  return "Mavericks";
                case 10:
                  return "Yosemite";
                case 11:
                  return "El Capitan";
                case 12:
                  return "Sierra";
                case 13:
                  return "High Sierra";
                case 14:
                  return "Mojave";
                case 15:
                  return "Catalina";
                default:
                  return;
              }
            }, e4.getAndroidVersionName = function(e5) {
              var t4 = e5.split(".").splice(0, 2).map(function(e6) {
                return parseInt(e6, 10) || 0;
              });
              if (t4.push(0), !(1 === t4[0] && t4[1] < 5)) return 1 === t4[0] && t4[1] < 6 ? "Cupcake" : 1 === t4[0] && t4[1] >= 6 ? "Donut" : 2 === t4[0] && t4[1] < 2 ? "Eclair" : 2 === t4[0] && 2 === t4[1] ? "Froyo" : 2 === t4[0] && t4[1] > 2 ? "Gingerbread" : 3 === t4[0] ? "Honeycomb" : 4 === t4[0] && t4[1] < 1 ? "Ice Cream Sandwich" : 4 === t4[0] && t4[1] < 4 ? "Jelly Bean" : 4 === t4[0] && t4[1] >= 4 ? "KitKat" : 5 === t4[0] ? "Lollipop" : 6 === t4[0] ? "Marshmallow" : 7 === t4[0] ? "Nougat" : 8 === t4[0] ? "Oreo" : 9 === t4[0] ? "Pie" : void 0;
            }, e4.getVersionPrecision = function(e5) {
              return e5.split(".").length;
            }, e4.compareVersions = function(t4, r4, n4) {
              void 0 === n4 && (n4 = false);
              var i5 = e4.getVersionPrecision(t4), s3 = e4.getVersionPrecision(r4), a4 = Math.max(i5, s3), o3 = 0, u4 = e4.map([t4, r4], function(t5) {
                var r5 = a4 - e4.getVersionPrecision(t5), n5 = t5 + new Array(r5 + 1).join(".0");
                return e4.map(n5.split("."), function(e5) {
                  return new Array(20 - e5.length).join("0") + e5;
                }).reverse();
              });
              for (n4 && (o3 = a4 - Math.min(i5, s3)), a4 -= 1; a4 >= o3; ) {
                if (u4[0][a4] > u4[1][a4]) return 1;
                if (u4[0][a4] === u4[1][a4]) {
                  if (a4 === o3) return 0;
                  a4 -= 1;
                } else if (u4[0][a4] < u4[1][a4]) return -1;
              }
            }, e4.map = function(e5, t4) {
              var r4, n4 = [];
              if (Array.prototype.map) return Array.prototype.map.call(e5, t4);
              for (r4 = 0; r4 < e5.length; r4 += 1) n4.push(t4(e5[r4]));
              return n4;
            }, e4.find = function(e5, t4) {
              var r4, n4;
              if (Array.prototype.find) return Array.prototype.find.call(e5, t4);
              for (r4 = 0, n4 = e5.length; r4 < n4; r4 += 1) {
                var i5 = e5[r4];
                if (t4(i5, r4)) return i5;
              }
            }, e4.assign = function(e5) {
              for (var t4, r4, n4 = e5, i5 = arguments.length, s3 = new Array(i5 > 1 ? i5 - 1 : 0), a4 = 1; a4 < i5; a4++) s3[a4 - 1] = arguments[a4];
              if (Object.assign) return Object.assign.apply(Object, [e5].concat(s3));
              var o3 = function() {
                var e6 = s3[t4];
                "object" == typeof e6 && null !== e6 && Object.keys(e6).forEach(function(t5) {
                  n4[t5] = e6[t5];
                });
              };
              for (t4 = 0, r4 = s3.length; t4 < r4; t4 += 1) o3();
              return e5;
            }, e4.getBrowserAlias = function(e5) {
              return n3.BROWSER_ALIASES_MAP[e5];
            }, e4.getBrowserTypeByAlias = function(e5) {
              return n3.BROWSER_MAP[e5] || "";
            }, e4;
          }();
          t3.default = i4, e3.exports = t3.default;
        }, 18: function(e3, t3, r3) {
          "use strict";
          t3.__esModule = true, t3.ENGINE_MAP = t3.OS_MAP = t3.PLATFORMS_MAP = t3.BROWSER_MAP = t3.BROWSER_ALIASES_MAP = void 0;
          t3.BROWSER_ALIASES_MAP = { "Amazon Silk": "amazon_silk", "Android Browser": "android", Bada: "bada", BlackBerry: "blackberry", Chrome: "chrome", Chromium: "chromium", Electron: "electron", Epiphany: "epiphany", Firefox: "firefox", Focus: "focus", Generic: "generic", "Google Search": "google_search", Googlebot: "googlebot", "Internet Explorer": "ie", "K-Meleon": "k_meleon", Maxthon: "maxthon", "Microsoft Edge": "edge", "MZ Browser": "mz", "NAVER Whale Browser": "naver", Opera: "opera", "Opera Coast": "opera_coast", PhantomJS: "phantomjs", Puffin: "puffin", QupZilla: "qupzilla", QQ: "qq", QQLite: "qqlite", Safari: "safari", Sailfish: "sailfish", "Samsung Internet for Android": "samsung_internet", SeaMonkey: "seamonkey", Sleipnir: "sleipnir", Swing: "swing", Tizen: "tizen", "UC Browser": "uc", Vivaldi: "vivaldi", "WebOS Browser": "webos", WeChat: "wechat", "Yandex Browser": "yandex", Roku: "roku" };
          t3.BROWSER_MAP = { amazon_silk: "Amazon Silk", android: "Android Browser", bada: "Bada", blackberry: "BlackBerry", chrome: "Chrome", chromium: "Chromium", electron: "Electron", epiphany: "Epiphany", firefox: "Firefox", focus: "Focus", generic: "Generic", googlebot: "Googlebot", google_search: "Google Search", ie: "Internet Explorer", k_meleon: "K-Meleon", maxthon: "Maxthon", edge: "Microsoft Edge", mz: "MZ Browser", naver: "NAVER Whale Browser", opera: "Opera", opera_coast: "Opera Coast", phantomjs: "PhantomJS", puffin: "Puffin", qupzilla: "QupZilla", qq: "QQ Browser", qqlite: "QQ Browser Lite", safari: "Safari", sailfish: "Sailfish", samsung_internet: "Samsung Internet for Android", seamonkey: "SeaMonkey", sleipnir: "Sleipnir", swing: "Swing", tizen: "Tizen", uc: "UC Browser", vivaldi: "Vivaldi", webos: "WebOS Browser", wechat: "WeChat", yandex: "Yandex Browser" };
          t3.PLATFORMS_MAP = { tablet: "tablet", mobile: "mobile", desktop: "desktop", tv: "tv" };
          t3.OS_MAP = { WindowsPhone: "Windows Phone", Windows: "Windows", MacOS: "macOS", iOS: "iOS", Android: "Android", WebOS: "WebOS", BlackBerry: "BlackBerry", Bada: "Bada", Tizen: "Tizen", Linux: "Linux", ChromeOS: "Chrome OS", PlayStation4: "PlayStation 4", Roku: "Roku" };
          t3.ENGINE_MAP = { EdgeHTML: "EdgeHTML", Blink: "Blink", Trident: "Trident", Presto: "Presto", Gecko: "Gecko", WebKit: "WebKit" };
        }, 90: function(e3, t3, r3) {
          "use strict";
          t3.__esModule = true, t3.default = void 0;
          var n3, i4 = (n3 = r3(91)) && n3.__esModule ? n3 : { default: n3 }, s3 = r3(18);
          function a4(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var n4 = t4[r4];
              n4.enumerable = n4.enumerable || false, n4.configurable = true, "value" in n4 && (n4.writable = true), Object.defineProperty(e4, n4.key, n4);
            }
          }
          var o3 = function() {
            function e4() {
            }
            var t4, r4, n4;
            return e4.getParser = function(e5, t5) {
              if (void 0 === t5 && (t5 = false), "string" != typeof e5) throw new Error("UserAgent should be a string");
              return new i4.default(e5, t5);
            }, e4.parse = function(e5) {
              return new i4.default(e5).getResult();
            }, t4 = e4, n4 = [{ key: "BROWSER_MAP", get: function() {
              return s3.BROWSER_MAP;
            } }, { key: "ENGINE_MAP", get: function() {
              return s3.ENGINE_MAP;
            } }, { key: "OS_MAP", get: function() {
              return s3.OS_MAP;
            } }, { key: "PLATFORMS_MAP", get: function() {
              return s3.PLATFORMS_MAP;
            } }], (r4 = null) && a4(t4.prototype, r4), n4 && a4(t4, n4), e4;
          }();
          t3.default = o3, e3.exports = t3.default;
        }, 91: function(e3, t3, r3) {
          "use strict";
          t3.__esModule = true, t3.default = void 0;
          var n3 = u4(r3(92)), i4 = u4(r3(93)), s3 = u4(r3(94)), a4 = u4(r3(95)), o3 = u4(r3(17));
          function u4(e4) {
            return e4 && e4.__esModule ? e4 : { default: e4 };
          }
          var d3 = function() {
            function e4(e5, t5) {
              if (void 0 === t5 && (t5 = false), null == e5 || "" === e5) throw new Error("UserAgent parameter can't be empty");
              this._ua = e5, this.parsedResult = {}, true !== t5 && this.parse();
            }
            var t4 = e4.prototype;
            return t4.getUA = function() {
              return this._ua;
            }, t4.test = function(e5) {
              return e5.test(this._ua);
            }, t4.parseBrowser = function() {
              var e5 = this;
              this.parsedResult.browser = {};
              var t5 = o3.default.find(n3.default, function(t6) {
                if ("function" == typeof t6.test) return t6.test(e5);
                if (t6.test instanceof Array) return t6.test.some(function(t7) {
                  return e5.test(t7);
                });
                throw new Error("Browser's test function is not valid");
              });
              return t5 && (this.parsedResult.browser = t5.describe(this.getUA())), this.parsedResult.browser;
            }, t4.getBrowser = function() {
              return this.parsedResult.browser ? this.parsedResult.browser : this.parseBrowser();
            }, t4.getBrowserName = function(e5) {
              return e5 ? String(this.getBrowser().name).toLowerCase() || "" : this.getBrowser().name || "";
            }, t4.getBrowserVersion = function() {
              return this.getBrowser().version;
            }, t4.getOS = function() {
              return this.parsedResult.os ? this.parsedResult.os : this.parseOS();
            }, t4.parseOS = function() {
              var e5 = this;
              this.parsedResult.os = {};
              var t5 = o3.default.find(i4.default, function(t6) {
                if ("function" == typeof t6.test) return t6.test(e5);
                if (t6.test instanceof Array) return t6.test.some(function(t7) {
                  return e5.test(t7);
                });
                throw new Error("Browser's test function is not valid");
              });
              return t5 && (this.parsedResult.os = t5.describe(this.getUA())), this.parsedResult.os;
            }, t4.getOSName = function(e5) {
              var t5 = this.getOS().name;
              return e5 ? String(t5).toLowerCase() || "" : t5 || "";
            }, t4.getOSVersion = function() {
              return this.getOS().version;
            }, t4.getPlatform = function() {
              return this.parsedResult.platform ? this.parsedResult.platform : this.parsePlatform();
            }, t4.getPlatformType = function(e5) {
              void 0 === e5 && (e5 = false);
              var t5 = this.getPlatform().type;
              return e5 ? String(t5).toLowerCase() || "" : t5 || "";
            }, t4.parsePlatform = function() {
              var e5 = this;
              this.parsedResult.platform = {};
              var t5 = o3.default.find(s3.default, function(t6) {
                if ("function" == typeof t6.test) return t6.test(e5);
                if (t6.test instanceof Array) return t6.test.some(function(t7) {
                  return e5.test(t7);
                });
                throw new Error("Browser's test function is not valid");
              });
              return t5 && (this.parsedResult.platform = t5.describe(this.getUA())), this.parsedResult.platform;
            }, t4.getEngine = function() {
              return this.parsedResult.engine ? this.parsedResult.engine : this.parseEngine();
            }, t4.getEngineName = function(e5) {
              return e5 ? String(this.getEngine().name).toLowerCase() || "" : this.getEngine().name || "";
            }, t4.parseEngine = function() {
              var e5 = this;
              this.parsedResult.engine = {};
              var t5 = o3.default.find(a4.default, function(t6) {
                if ("function" == typeof t6.test) return t6.test(e5);
                if (t6.test instanceof Array) return t6.test.some(function(t7) {
                  return e5.test(t7);
                });
                throw new Error("Browser's test function is not valid");
              });
              return t5 && (this.parsedResult.engine = t5.describe(this.getUA())), this.parsedResult.engine;
            }, t4.parse = function() {
              return this.parseBrowser(), this.parseOS(), this.parsePlatform(), this.parseEngine(), this;
            }, t4.getResult = function() {
              return o3.default.assign({}, this.parsedResult);
            }, t4.satisfies = function(e5) {
              var t5 = this, r4 = {}, n4 = 0, i5 = {}, s4 = 0;
              if (Object.keys(e5).forEach(function(t6) {
                var a6 = e5[t6];
                "string" == typeof a6 ? (i5[t6] = a6, s4 += 1) : "object" == typeof a6 && (r4[t6] = a6, n4 += 1);
              }), n4 > 0) {
                var a5 = Object.keys(r4), u5 = o3.default.find(a5, function(e6) {
                  return t5.isOS(e6);
                });
                if (u5) {
                  var d4 = this.satisfies(r4[u5]);
                  if (void 0 !== d4) return d4;
                }
                var c3 = o3.default.find(a5, function(e6) {
                  return t5.isPlatform(e6);
                });
                if (c3) {
                  var f3 = this.satisfies(r4[c3]);
                  if (void 0 !== f3) return f3;
                }
              }
              if (s4 > 0) {
                var l3 = Object.keys(i5), h7 = o3.default.find(l3, function(e6) {
                  return t5.isBrowser(e6, true);
                });
                if (void 0 !== h7) return this.compareVersion(i5[h7]);
              }
            }, t4.isBrowser = function(e5, t5) {
              void 0 === t5 && (t5 = false);
              var r4 = this.getBrowserName().toLowerCase(), n4 = e5.toLowerCase(), i5 = o3.default.getBrowserTypeByAlias(n4);
              return t5 && i5 && (n4 = i5.toLowerCase()), n4 === r4;
            }, t4.compareVersion = function(e5) {
              var t5 = [0], r4 = e5, n4 = false, i5 = this.getBrowserVersion();
              if ("string" == typeof i5) return ">" === e5[0] || "<" === e5[0] ? (r4 = e5.substr(1), "=" === e5[1] ? (n4 = true, r4 = e5.substr(2)) : t5 = [], ">" === e5[0] ? t5.push(1) : t5.push(-1)) : "=" === e5[0] ? r4 = e5.substr(1) : "~" === e5[0] && (n4 = true, r4 = e5.substr(1)), t5.indexOf(o3.default.compareVersions(i5, r4, n4)) > -1;
            }, t4.isOS = function(e5) {
              return this.getOSName(true) === String(e5).toLowerCase();
            }, t4.isPlatform = function(e5) {
              return this.getPlatformType(true) === String(e5).toLowerCase();
            }, t4.isEngine = function(e5) {
              return this.getEngineName(true) === String(e5).toLowerCase();
            }, t4.is = function(e5, t5) {
              return void 0 === t5 && (t5 = false), this.isBrowser(e5, t5) || this.isOS(e5) || this.isPlatform(e5);
            }, t4.some = function(e5) {
              var t5 = this;
              return void 0 === e5 && (e5 = []), e5.some(function(e6) {
                return t5.is(e6);
              });
            }, e4;
          }();
          t3.default = d3, e3.exports = t3.default;
        }, 92: function(e3, t3, r3) {
          "use strict";
          t3.__esModule = true, t3.default = void 0;
          var n3, i4 = (n3 = r3(17)) && n3.__esModule ? n3 : { default: n3 };
          var s3 = /version\/(\d+(\.?_?\d+)+)/i, a4 = [{ test: [/googlebot/i], describe: function(e4) {
            var t4 = { name: "Googlebot" }, r4 = i4.default.getFirstMatch(/googlebot\/(\d+(\.\d+))/i, e4) || i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/opera/i], describe: function(e4) {
            var t4 = { name: "Opera" }, r4 = i4.default.getFirstMatch(s3, e4) || i4.default.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/opr\/|opios/i], describe: function(e4) {
            var t4 = { name: "Opera" }, r4 = i4.default.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i, e4) || i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/SamsungBrowser/i], describe: function(e4) {
            var t4 = { name: "Samsung Internet for Android" }, r4 = i4.default.getFirstMatch(s3, e4) || i4.default.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/Whale/i], describe: function(e4) {
            var t4 = { name: "NAVER Whale Browser" }, r4 = i4.default.getFirstMatch(s3, e4) || i4.default.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/MZBrowser/i], describe: function(e4) {
            var t4 = { name: "MZ Browser" }, r4 = i4.default.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i, e4) || i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/focus/i], describe: function(e4) {
            var t4 = { name: "Focus" }, r4 = i4.default.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i, e4) || i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/swing/i], describe: function(e4) {
            var t4 = { name: "Swing" }, r4 = i4.default.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i, e4) || i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/coast/i], describe: function(e4) {
            var t4 = { name: "Opera Coast" }, r4 = i4.default.getFirstMatch(s3, e4) || i4.default.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/opt\/\d+(?:.?_?\d+)+/i], describe: function(e4) {
            var t4 = { name: "Opera Touch" }, r4 = i4.default.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i, e4) || i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/yabrowser/i], describe: function(e4) {
            var t4 = { name: "Yandex Browser" }, r4 = i4.default.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i, e4) || i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/ucbrowser/i], describe: function(e4) {
            var t4 = { name: "UC Browser" }, r4 = i4.default.getFirstMatch(s3, e4) || i4.default.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/Maxthon|mxios/i], describe: function(e4) {
            var t4 = { name: "Maxthon" }, r4 = i4.default.getFirstMatch(s3, e4) || i4.default.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/epiphany/i], describe: function(e4) {
            var t4 = { name: "Epiphany" }, r4 = i4.default.getFirstMatch(s3, e4) || i4.default.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/puffin/i], describe: function(e4) {
            var t4 = { name: "Puffin" }, r4 = i4.default.getFirstMatch(s3, e4) || i4.default.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/sleipnir/i], describe: function(e4) {
            var t4 = { name: "Sleipnir" }, r4 = i4.default.getFirstMatch(s3, e4) || i4.default.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/k-meleon/i], describe: function(e4) {
            var t4 = { name: "K-Meleon" }, r4 = i4.default.getFirstMatch(s3, e4) || i4.default.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/micromessenger/i], describe: function(e4) {
            var t4 = { name: "WeChat" }, r4 = i4.default.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i, e4) || i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/qqbrowser/i], describe: function(e4) {
            var t4 = { name: /qqbrowserlite/i.test(e4) ? "QQ Browser Lite" : "QQ Browser" }, r4 = i4.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i, e4) || i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/msie|trident/i], describe: function(e4) {
            var t4 = { name: "Internet Explorer" }, r4 = i4.default.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/\sedg\//i], describe: function(e4) {
            var t4 = { name: "Microsoft Edge" }, r4 = i4.default.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/edg([ea]|ios)/i], describe: function(e4) {
            var t4 = { name: "Microsoft Edge" }, r4 = i4.default.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/vivaldi/i], describe: function(e4) {
            var t4 = { name: "Vivaldi" }, r4 = i4.default.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/seamonkey/i], describe: function(e4) {
            var t4 = { name: "SeaMonkey" }, r4 = i4.default.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/sailfish/i], describe: function(e4) {
            var t4 = { name: "Sailfish" }, r4 = i4.default.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/silk/i], describe: function(e4) {
            var t4 = { name: "Amazon Silk" }, r4 = i4.default.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/phantom/i], describe: function(e4) {
            var t4 = { name: "PhantomJS" }, r4 = i4.default.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/slimerjs/i], describe: function(e4) {
            var t4 = { name: "SlimerJS" }, r4 = i4.default.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/blackberry|\bbb\d+/i, /rim\stablet/i], describe: function(e4) {
            var t4 = { name: "BlackBerry" }, r4 = i4.default.getFirstMatch(s3, e4) || i4.default.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/(web|hpw)[o0]s/i], describe: function(e4) {
            var t4 = { name: "WebOS Browser" }, r4 = i4.default.getFirstMatch(s3, e4) || i4.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/bada/i], describe: function(e4) {
            var t4 = { name: "Bada" }, r4 = i4.default.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/tizen/i], describe: function(e4) {
            var t4 = { name: "Tizen" }, r4 = i4.default.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i, e4) || i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/qupzilla/i], describe: function(e4) {
            var t4 = { name: "QupZilla" }, r4 = i4.default.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i, e4) || i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/firefox|iceweasel|fxios/i], describe: function(e4) {
            var t4 = { name: "Firefox" }, r4 = i4.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/electron/i], describe: function(e4) {
            var t4 = { name: "Electron" }, r4 = i4.default.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/MiuiBrowser/i], describe: function(e4) {
            var t4 = { name: "Miui" }, r4 = i4.default.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/chromium/i], describe: function(e4) {
            var t4 = { name: "Chromium" }, r4 = i4.default.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i, e4) || i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/chrome|crios|crmo/i], describe: function(e4) {
            var t4 = { name: "Chrome" }, r4 = i4.default.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/GSA/i], describe: function(e4) {
            var t4 = { name: "Google Search" }, r4 = i4.default.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: function(e4) {
            var t4 = !e4.test(/like android/i), r4 = e4.test(/android/i);
            return t4 && r4;
          }, describe: function(e4) {
            var t4 = { name: "Android Browser" }, r4 = i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/playstation 4/i], describe: function(e4) {
            var t4 = { name: "PlayStation 4" }, r4 = i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/safari|applewebkit/i], describe: function(e4) {
            var t4 = { name: "Safari" }, r4 = i4.default.getFirstMatch(s3, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/.*/i], describe: function(e4) {
            var t4 = -1 !== e4.search("\\(") ? /^(.*)\/(.*)[ \t]\((.*)/ : /^(.*)\/(.*) /;
            return { name: i4.default.getFirstMatch(t4, e4), version: i4.default.getSecondMatch(t4, e4) };
          } }];
          t3.default = a4, e3.exports = t3.default;
        }, 93: function(e3, t3, r3) {
          "use strict";
          t3.__esModule = true, t3.default = void 0;
          var n3, i4 = (n3 = r3(17)) && n3.__esModule ? n3 : { default: n3 }, s3 = r3(18);
          var a4 = [{ test: [/Roku\/DVP/], describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i, e4);
            return { name: s3.OS_MAP.Roku, version: t4 };
          } }, { test: [/windows phone/i], describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i, e4);
            return { name: s3.OS_MAP.WindowsPhone, version: t4 };
          } }, { test: [/windows /i], describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i, e4), r4 = i4.default.getWindowsVersionName(t4);
            return { name: s3.OS_MAP.Windows, version: t4, versionName: r4 };
          } }, { test: [/Macintosh(.*?) FxiOS(.*?)\//], describe: function(e4) {
            var t4 = { name: s3.OS_MAP.iOS }, r4 = i4.default.getSecondMatch(/(Version\/)(\d[\d.]+)/, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/macintosh/i], describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i, e4).replace(/[_\s]/g, "."), r4 = i4.default.getMacOSVersionName(t4), n4 = { name: s3.OS_MAP.MacOS, version: t4 };
            return r4 && (n4.versionName = r4), n4;
          } }, { test: [/(ipod|iphone|ipad)/i], describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i, e4).replace(/[_\s]/g, ".");
            return { name: s3.OS_MAP.iOS, version: t4 };
          } }, { test: function(e4) {
            var t4 = !e4.test(/like android/i), r4 = e4.test(/android/i);
            return t4 && r4;
          }, describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i, e4), r4 = i4.default.getAndroidVersionName(t4), n4 = { name: s3.OS_MAP.Android, version: t4 };
            return r4 && (n4.versionName = r4), n4;
          } }, { test: [/(web|hpw)[o0]s/i], describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i, e4), r4 = { name: s3.OS_MAP.WebOS };
            return t4 && t4.length && (r4.version = t4), r4;
          } }, { test: [/blackberry|\bbb\d+/i, /rim\stablet/i], describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i, e4) || i4.default.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i, e4) || i4.default.getFirstMatch(/\bbb(\d+)/i, e4);
            return { name: s3.OS_MAP.BlackBerry, version: t4 };
          } }, { test: [/bada/i], describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/bada\/(\d+(\.\d+)*)/i, e4);
            return { name: s3.OS_MAP.Bada, version: t4 };
          } }, { test: [/tizen/i], describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i, e4);
            return { name: s3.OS_MAP.Tizen, version: t4 };
          } }, { test: [/linux/i], describe: function() {
            return { name: s3.OS_MAP.Linux };
          } }, { test: [/CrOS/], describe: function() {
            return { name: s3.OS_MAP.ChromeOS };
          } }, { test: [/PlayStation 4/], describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i, e4);
            return { name: s3.OS_MAP.PlayStation4, version: t4 };
          } }];
          t3.default = a4, e3.exports = t3.default;
        }, 94: function(e3, t3, r3) {
          "use strict";
          t3.__esModule = true, t3.default = void 0;
          var n3, i4 = (n3 = r3(17)) && n3.__esModule ? n3 : { default: n3 }, s3 = r3(18);
          var a4 = [{ test: [/googlebot/i], describe: function() {
            return { type: "bot", vendor: "Google" };
          } }, { test: [/huawei/i], describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/(can-l01)/i, e4) && "Nova", r4 = { type: s3.PLATFORMS_MAP.mobile, vendor: "Huawei" };
            return t4 && (r4.model = t4), r4;
          } }, { test: [/nexus\s*(?:7|8|9|10).*/i], describe: function() {
            return { type: s3.PLATFORMS_MAP.tablet, vendor: "Nexus" };
          } }, { test: [/ipad/i], describe: function() {
            return { type: s3.PLATFORMS_MAP.tablet, vendor: "Apple", model: "iPad" };
          } }, { test: [/Macintosh(.*?) FxiOS(.*?)\//], describe: function() {
            return { type: s3.PLATFORMS_MAP.tablet, vendor: "Apple", model: "iPad" };
          } }, { test: [/kftt build/i], describe: function() {
            return { type: s3.PLATFORMS_MAP.tablet, vendor: "Amazon", model: "Kindle Fire HD 7" };
          } }, { test: [/silk/i], describe: function() {
            return { type: s3.PLATFORMS_MAP.tablet, vendor: "Amazon" };
          } }, { test: [/tablet(?! pc)/i], describe: function() {
            return { type: s3.PLATFORMS_MAP.tablet };
          } }, { test: function(e4) {
            var t4 = e4.test(/ipod|iphone/i), r4 = e4.test(/like (ipod|iphone)/i);
            return t4 && !r4;
          }, describe: function(e4) {
            var t4 = i4.default.getFirstMatch(/(ipod|iphone)/i, e4);
            return { type: s3.PLATFORMS_MAP.mobile, vendor: "Apple", model: t4 };
          } }, { test: [/nexus\s*[0-6].*/i, /galaxy nexus/i], describe: function() {
            return { type: s3.PLATFORMS_MAP.mobile, vendor: "Nexus" };
          } }, { test: [/[^-]mobi/i], describe: function() {
            return { type: s3.PLATFORMS_MAP.mobile };
          } }, { test: function(e4) {
            return "blackberry" === e4.getBrowserName(true);
          }, describe: function() {
            return { type: s3.PLATFORMS_MAP.mobile, vendor: "BlackBerry" };
          } }, { test: function(e4) {
            return "bada" === e4.getBrowserName(true);
          }, describe: function() {
            return { type: s3.PLATFORMS_MAP.mobile };
          } }, { test: function(e4) {
            return "windows phone" === e4.getBrowserName();
          }, describe: function() {
            return { type: s3.PLATFORMS_MAP.mobile, vendor: "Microsoft" };
          } }, { test: function(e4) {
            var t4 = Number(String(e4.getOSVersion()).split(".")[0]);
            return "android" === e4.getOSName(true) && t4 >= 3;
          }, describe: function() {
            return { type: s3.PLATFORMS_MAP.tablet };
          } }, { test: function(e4) {
            return "android" === e4.getOSName(true);
          }, describe: function() {
            return { type: s3.PLATFORMS_MAP.mobile };
          } }, { test: function(e4) {
            return "macos" === e4.getOSName(true);
          }, describe: function() {
            return { type: s3.PLATFORMS_MAP.desktop, vendor: "Apple" };
          } }, { test: function(e4) {
            return "windows" === e4.getOSName(true);
          }, describe: function() {
            return { type: s3.PLATFORMS_MAP.desktop };
          } }, { test: function(e4) {
            return "linux" === e4.getOSName(true);
          }, describe: function() {
            return { type: s3.PLATFORMS_MAP.desktop };
          } }, { test: function(e4) {
            return "playstation 4" === e4.getOSName(true);
          }, describe: function() {
            return { type: s3.PLATFORMS_MAP.tv };
          } }, { test: function(e4) {
            return "roku" === e4.getOSName(true);
          }, describe: function() {
            return { type: s3.PLATFORMS_MAP.tv };
          } }];
          t3.default = a4, e3.exports = t3.default;
        }, 95: function(e3, t3, r3) {
          "use strict";
          t3.__esModule = true, t3.default = void 0;
          var n3, i4 = (n3 = r3(17)) && n3.__esModule ? n3 : { default: n3 }, s3 = r3(18);
          var a4 = [{ test: function(e4) {
            return "microsoft edge" === e4.getBrowserName(true);
          }, describe: function(e4) {
            if (/\sedg\//i.test(e4)) return { name: s3.ENGINE_MAP.Blink };
            var t4 = i4.default.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i, e4);
            return { name: s3.ENGINE_MAP.EdgeHTML, version: t4 };
          } }, { test: [/trident/i], describe: function(e4) {
            var t4 = { name: s3.ENGINE_MAP.Trident }, r4 = i4.default.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: function(e4) {
            return e4.test(/presto/i);
          }, describe: function(e4) {
            var t4 = { name: s3.ENGINE_MAP.Presto }, r4 = i4.default.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: function(e4) {
            var t4 = e4.test(/gecko/i), r4 = e4.test(/like gecko/i);
            return t4 && !r4;
          }, describe: function(e4) {
            var t4 = { name: s3.ENGINE_MAP.Gecko }, r4 = i4.default.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }, { test: [/(apple)?webkit\/537\.36/i], describe: function() {
            return { name: s3.ENGINE_MAP.Blink };
          } }, { test: [/(apple)?webkit/i], describe: function(e4) {
            var t4 = { name: s3.ENGINE_MAP.WebKit }, r4 = i4.default.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i, e4);
            return r4 && (t4.version = r4), t4;
          } }];
          t3.default = a4, e3.exports = t3.default;
        } });
      });
    }
  });

  // node_modules/@aws-sdk/util-user-agent-browser/dist-es/index.js
  var import_bowser, defaultUserAgent;
  var init_dist_es37 = __esm({
    "node_modules/@aws-sdk/util-user-agent-browser/dist-es/index.js"() {
      import_bowser = __toESM(require_es5());
      defaultUserAgent = ({ serviceId, clientVersion }) => async () => {
        const parsedUA = typeof window !== "undefined" && window?.navigator?.userAgent ? import_bowser.default.parse(window.navigator.userAgent) : void 0;
        const sections = [
          ["aws-sdk-js", clientVersion],
          ["ua", "2.0"],
          [`os/${parsedUA?.os?.name || "other"}`, parsedUA?.os?.version],
          ["lang/js"],
          ["md/browser", `${parsedUA?.browser?.name ?? "unknown"}_${parsedUA?.browser?.version ?? "unknown"}`]
        ];
        if (serviceId) {
          sections.push([`api/${serviceId}`, clientVersion]);
        }
        return sections;
      };
    }
  });

  // node_modules/@smithy/invalid-dependency/dist-es/invalidFunction.js
  var init_invalidFunction = __esm({
    "node_modules/@smithy/invalid-dependency/dist-es/invalidFunction.js"() {
    }
  });

  // node_modules/@smithy/invalid-dependency/dist-es/invalidProvider.js
  var invalidProvider;
  var init_invalidProvider = __esm({
    "node_modules/@smithy/invalid-dependency/dist-es/invalidProvider.js"() {
      invalidProvider = (message2) => () => Promise.reject(message2);
    }
  });

  // node_modules/@smithy/invalid-dependency/dist-es/index.js
  var init_dist_es38 = __esm({
    "node_modules/@smithy/invalid-dependency/dist-es/index.js"() {
      init_invalidFunction();
      init_invalidProvider();
    }
  });

  // node_modules/@smithy/util-body-length-browser/dist-es/calculateBodyLength.js
  var TEXT_ENCODER, calculateBodyLength;
  var init_calculateBodyLength = __esm({
    "node_modules/@smithy/util-body-length-browser/dist-es/calculateBodyLength.js"() {
      TEXT_ENCODER = typeof TextEncoder == "function" ? new TextEncoder() : null;
      calculateBodyLength = (body2) => {
        if (typeof body2 === "string") {
          if (TEXT_ENCODER) {
            return TEXT_ENCODER.encode(body2).byteLength;
          }
          let len = body2.length;
          for (let i4 = len - 1; i4 >= 0; i4--) {
            const code3 = body2.charCodeAt(i4);
            if (code3 > 127 && code3 <= 2047)
              len++;
            else if (code3 > 2047 && code3 <= 65535)
              len += 2;
            if (code3 >= 56320 && code3 <= 57343)
              i4--;
          }
          return len;
        } else if (typeof body2.byteLength === "number") {
          return body2.byteLength;
        } else if (typeof body2.size === "number") {
          return body2.size;
        }
        throw new Error(`Body Length computation failed for ${body2}`);
      };
    }
  });

  // node_modules/@smithy/util-body-length-browser/dist-es/index.js
  var init_dist_es39 = __esm({
    "node_modules/@smithy/util-body-length-browser/dist-es/index.js"() {
      init_calculateBodyLength();
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/ruleset.js
  var s, t, u, v, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, _data, ruleSet;
  var init_ruleset = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/ruleset.js"() {
      s = "required";
      t = "fn";
      u = "argv";
      v = "ref";
      a = true;
      b = "isSet";
      c = "booleanEquals";
      d = "error";
      e = "endpoint";
      f = "tree";
      g = "PartitionResult";
      h = { [s]: false, "type": "String" };
      i = { [s]: true, "default": false, "type": "Boolean" };
      j = { [v]: "Endpoint" };
      k = { [t]: c, [u]: [{ [v]: "UseFIPS" }, true] };
      l = { [t]: c, [u]: [{ [v]: "UseDualStack" }, true] };
      m = {};
      n = { [t]: "getAttr", [u]: [{ [v]: g }, "supportsFIPS"] };
      o = { [t]: c, [u]: [true, { [t]: "getAttr", [u]: [{ [v]: g }, "supportsDualStack"] }] };
      p = [k];
      q = [l];
      r = [{ [v]: "Region" }];
      _data = { version: "1.0", parameters: { Region: h, UseDualStack: i, UseFIPS: i, Endpoint: h }, rules: [{ conditions: [{ [t]: b, [u]: [j] }], rules: [{ conditions: p, error: "Invalid Configuration: FIPS and custom endpoint are not supported", type: d }, { conditions: q, error: "Invalid Configuration: Dualstack and custom endpoint are not supported", type: d }, { endpoint: { url: j, properties: m, headers: m }, type: e }], type: f }, { conditions: [{ [t]: b, [u]: r }], rules: [{ conditions: [{ [t]: "aws.partition", [u]: r, assign: g }], rules: [{ conditions: [k, l], rules: [{ conditions: [{ [t]: c, [u]: [a, n] }, o], rules: [{ endpoint: { url: "https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: m, headers: m }, type: e }], type: f }, { error: "FIPS and DualStack are enabled, but this partition does not support one or both", type: d }], type: f }, { conditions: p, rules: [{ conditions: [{ [t]: c, [u]: [n, a] }], rules: [{ endpoint: { url: "https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}", properties: m, headers: m }, type: e }], type: f }, { error: "FIPS is enabled but this partition does not support FIPS", type: d }], type: f }, { conditions: q, rules: [{ conditions: [o], rules: [{ endpoint: { url: "https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: m, headers: m }, type: e }], type: f }, { error: "DualStack is enabled but this partition does not support DualStack", type: d }], type: f }, { endpoint: { url: "https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}", properties: m, headers: m }, type: e }], type: f }], type: f }, { error: "Invalid Configuration: Missing Region", type: d }] };
      ruleSet = _data;
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/endpointResolver.js
  var defaultEndpointResolver;
  var init_endpointResolver = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/endpointResolver.js"() {
      init_dist_es8();
      init_dist_es7();
      init_ruleset();
      defaultEndpointResolver = (endpointParams, context = {}) => {
        return resolveEndpoint(ruleSet, {
          endpointParams,
          logger: context.logger
        });
      };
      customEndpointFunctions.aws = awsEndpointFunctions;
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeConfig.shared.js
  var getRuntimeConfig;
  var init_runtimeConfig_shared = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeConfig.shared.js"() {
      init_dist_es35();
      init_dist_es29();
      init_dist_es27();
      init_dist_es14();
      init_dist_es21();
      init_dist_es20();
      init_httpAuthSchemeProvider();
      init_endpointResolver();
      getRuntimeConfig = (config) => {
        return {
          apiVersion: "2014-06-30",
          base64Decoder: config?.base64Decoder ?? fromBase64,
          base64Encoder: config?.base64Encoder ?? toBase64,
          disableHostPrefix: config?.disableHostPrefix ?? false,
          endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,
          extensions: config?.extensions ?? [],
          httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultCognitoIdentityHttpAuthSchemeProvider,
          httpAuthSchemes: config?.httpAuthSchemes ?? [
            {
              schemeId: "aws.auth#sigv4",
              identityProvider: (ipc) => ipc.getIdentityProvider("aws.auth#sigv4"),
              signer: new AwsSdkSigV4Signer()
            },
            {
              schemeId: "smithy.api#noAuth",
              identityProvider: (ipc) => ipc.getIdentityProvider("smithy.api#noAuth") || (async () => ({})),
              signer: new NoAuthSigner()
            }
          ],
          logger: config?.logger ?? new NoOpLogger(),
          serviceId: config?.serviceId ?? "Cognito Identity",
          urlParser: config?.urlParser ?? parseUrl,
          utf8Decoder: config?.utf8Decoder ?? fromUtf8,
          utf8Encoder: config?.utf8Encoder ?? toUtf8
        };
      };
    }
  });

  // node_modules/@smithy/util-defaults-mode-browser/dist-es/constants.js
  var DEFAULTS_MODE_OPTIONS;
  var init_constants7 = __esm({
    "node_modules/@smithy/util-defaults-mode-browser/dist-es/constants.js"() {
      DEFAULTS_MODE_OPTIONS = ["in-region", "cross-region", "mobile", "standard", "legacy"];
    }
  });

  // node_modules/@smithy/util-defaults-mode-browser/dist-es/resolveDefaultsModeConfig.js
  var import_bowser2, resolveDefaultsModeConfig, isMobileBrowser;
  var init_resolveDefaultsModeConfig = __esm({
    "node_modules/@smithy/util-defaults-mode-browser/dist-es/resolveDefaultsModeConfig.js"() {
      init_dist_es();
      import_bowser2 = __toESM(require_es5());
      init_constants7();
      resolveDefaultsModeConfig = ({ defaultsMode } = {}) => memoize(async () => {
        const mode = typeof defaultsMode === "function" ? await defaultsMode() : defaultsMode;
        switch (mode?.toLowerCase()) {
          case "auto":
            return Promise.resolve(isMobileBrowser() ? "mobile" : "standard");
          case "mobile":
          case "in-region":
          case "cross-region":
          case "standard":
          case "legacy":
            return Promise.resolve(mode?.toLocaleLowerCase());
          case void 0:
            return Promise.resolve("legacy");
          default:
            throw new Error(`Invalid parameter for "defaultsMode", expect ${DEFAULTS_MODE_OPTIONS.join(", ")}, got ${mode}`);
        }
      });
      isMobileBrowser = () => {
        const parsedUA = typeof window !== "undefined" && window?.navigator?.userAgent ? import_bowser2.default.parse(window.navigator.userAgent) : void 0;
        const platform2 = parsedUA?.platform?.type;
        return platform2 === "tablet" || platform2 === "mobile";
      };
    }
  });

  // node_modules/@smithy/util-defaults-mode-browser/dist-es/index.js
  var init_dist_es40 = __esm({
    "node_modules/@smithy/util-defaults-mode-browser/dist-es/index.js"() {
      init_resolveDefaultsModeConfig();
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeConfig.browser.js
  var getRuntimeConfig2;
  var init_runtimeConfig_browser = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeConfig.browser.js"() {
      init_package();
      init_module2();
      init_dist_es37();
      init_dist_es12();
      init_dist_es24();
      init_dist_es38();
      init_dist_es39();
      init_dist_es18();
      init_runtimeConfig_shared();
      init_dist_es27();
      init_dist_es40();
      getRuntimeConfig2 = (config) => {
        const defaultsMode = resolveDefaultsModeConfig(config);
        const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);
        const clientSharedValues = getRuntimeConfig(config);
        return {
          ...clientSharedValues,
          ...config,
          runtime: "browser",
          defaultsMode,
          bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,
          credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_2) => () => Promise.reject(new Error("Credential is missing"))),
          defaultUserAgentProvider: config?.defaultUserAgentProvider ?? defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: package_default.version }),
          maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,
          region: config?.region ?? invalidProvider("Region is missing"),
          requestHandler: FetchHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),
          retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),
          sha256: config?.sha256 ?? Sha2562,
          streamCollector: config?.streamCollector ?? streamCollector,
          useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),
          useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT))
        };
      };
    }
  });

  // node_modules/@aws-sdk/region-config-resolver/dist-es/extensions/index.js
  var getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration;
  var init_extensions4 = __esm({
    "node_modules/@aws-sdk/region-config-resolver/dist-es/extensions/index.js"() {
      getAwsRegionExtensionConfiguration = (runtimeConfig) => {
        let runtimeConfigRegion = async () => {
          if (runtimeConfig.region === void 0) {
            throw new Error("Region is missing from runtimeConfig");
          }
          const region = runtimeConfig.region;
          if (typeof region === "string") {
            return region;
          }
          return region();
        };
        return {
          setRegion(region) {
            runtimeConfigRegion = region;
          },
          region() {
            return runtimeConfigRegion;
          }
        };
      };
      resolveAwsRegionExtensionConfiguration = (awsRegionExtensionConfiguration) => {
        return {
          region: awsRegionExtensionConfiguration.region()
        };
      };
    }
  });

  // node_modules/@aws-sdk/region-config-resolver/dist-es/regionConfig/config.js
  var init_config4 = __esm({
    "node_modules/@aws-sdk/region-config-resolver/dist-es/regionConfig/config.js"() {
    }
  });

  // node_modules/@aws-sdk/region-config-resolver/dist-es/regionConfig/isFipsRegion.js
  var init_isFipsRegion2 = __esm({
    "node_modules/@aws-sdk/region-config-resolver/dist-es/regionConfig/isFipsRegion.js"() {
    }
  });

  // node_modules/@aws-sdk/region-config-resolver/dist-es/regionConfig/getRealRegion.js
  var init_getRealRegion2 = __esm({
    "node_modules/@aws-sdk/region-config-resolver/dist-es/regionConfig/getRealRegion.js"() {
      init_isFipsRegion2();
    }
  });

  // node_modules/@aws-sdk/region-config-resolver/dist-es/regionConfig/resolveRegionConfig.js
  var init_resolveRegionConfig2 = __esm({
    "node_modules/@aws-sdk/region-config-resolver/dist-es/regionConfig/resolveRegionConfig.js"() {
      init_getRealRegion2();
      init_isFipsRegion2();
    }
  });

  // node_modules/@aws-sdk/region-config-resolver/dist-es/regionConfig/index.js
  var init_regionConfig2 = __esm({
    "node_modules/@aws-sdk/region-config-resolver/dist-es/regionConfig/index.js"() {
      init_config4();
      init_resolveRegionConfig2();
    }
  });

  // node_modules/@aws-sdk/region-config-resolver/dist-es/index.js
  var init_dist_es41 = __esm({
    "node_modules/@aws-sdk/region-config-resolver/dist-es/index.js"() {
      init_extensions4();
      init_regionConfig2();
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/auth/httpAuthExtensionConfiguration.js
  var getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig;
  var init_httpAuthExtensionConfiguration = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/auth/httpAuthExtensionConfiguration.js"() {
      getHttpAuthExtensionConfiguration = (runtimeConfig) => {
        const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
        let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
        let _credentials = runtimeConfig.credentials;
        return {
          setHttpAuthScheme(httpAuthScheme) {
            const index4 = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
            if (index4 === -1) {
              _httpAuthSchemes.push(httpAuthScheme);
            } else {
              _httpAuthSchemes.splice(index4, 1, httpAuthScheme);
            }
          },
          httpAuthSchemes() {
            return _httpAuthSchemes;
          },
          setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
            _httpAuthSchemeProvider = httpAuthSchemeProvider;
          },
          httpAuthSchemeProvider() {
            return _httpAuthSchemeProvider;
          },
          setCredentials(credentials) {
            _credentials = credentials;
          },
          credentials() {
            return _credentials;
          }
        };
      };
      resolveHttpAuthRuntimeConfig = (config) => {
        return {
          httpAuthSchemes: config.httpAuthSchemes(),
          httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
          credentials: config.credentials()
        };
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeExtensions.js
  var asPartial, resolveRuntimeExtensions;
  var init_runtimeExtensions = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeExtensions.js"() {
      init_dist_es41();
      init_dist_es3();
      init_dist_es27();
      init_httpAuthExtensionConfiguration();
      asPartial = (t3) => t3;
      resolveRuntimeExtensions = (runtimeConfig, extensions) => {
        const extensionConfiguration = {
          ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),
          ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),
          ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),
          ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
        };
        extensions.forEach((extension) => extension.configure(extensionConfiguration));
        return {
          ...runtimeConfig,
          ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),
          ...resolveDefaultRuntimeConfig(extensionConfiguration),
          ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),
          ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
        };
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/CognitoIdentityClient.js
  var CognitoIdentityClient;
  var init_CognitoIdentityClient = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/CognitoIdentityClient.js"() {
      init_dist_es4();
      init_dist_es5();
      init_dist_es6();
      init_dist_es9();
      init_dist_es12();
      init_dist_es29();
      init_dist_es30();
      init_dist_es16();
      init_dist_es28();
      init_dist_es27();
      init_httpAuthSchemeProvider();
      init_EndpointParameters();
      init_runtimeConfig_browser();
      init_runtimeExtensions();
      CognitoIdentityClient = class extends Client {
        constructor(...[configuration]) {
          const _config_0 = getRuntimeConfig2(configuration || {});
          const _config_1 = resolveClientEndpointParameters(_config_0);
          const _config_2 = resolveRegionConfig(_config_1);
          const _config_3 = resolveEndpointConfig(_config_2);
          const _config_4 = resolveHostHeaderConfig(_config_3);
          const _config_5 = resolveUserAgentConfig(_config_4);
          const _config_6 = resolveRetryConfig(_config_5);
          const _config_7 = resolveHttpAuthSchemeConfig(_config_6);
          const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
          super(_config_8);
          this.config = _config_8;
          this.middlewareStack.use(getHostHeaderPlugin(this.config));
          this.middlewareStack.use(getLoggerPlugin(this.config));
          this.middlewareStack.use(getRecursionDetectionPlugin(this.config));
          this.middlewareStack.use(getUserAgentPlugin(this.config));
          this.middlewareStack.use(getRetryPlugin(this.config));
          this.middlewareStack.use(getContentLengthPlugin(this.config));
          this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {
            httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
            identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
          }));
          this.middlewareStack.use(getHttpSigningPlugin(this.config));
        }
        destroy() {
          super.destroy();
        }
        getDefaultHttpAuthSchemeParametersProvider() {
          return defaultCognitoIdentityHttpAuthSchemeParametersProvider;
        }
        getIdentityProviderConfigProvider() {
          return async (config) => new DefaultIdentityProviderConfig({
            "aws.auth#sigv4": config.credentials
          });
        }
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/models/CognitoIdentityServiceException.js
  var CognitoIdentityServiceException;
  var init_CognitoIdentityServiceException = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/models/CognitoIdentityServiceException.js"() {
      init_dist_es27();
      CognitoIdentityServiceException = class _CognitoIdentityServiceException extends ServiceException {
        constructor(options2) {
          super(options2);
          Object.setPrototypeOf(this, _CognitoIdentityServiceException.prototype);
        }
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/models/models_0.js
  var InternalErrorException, InvalidParameterException, LimitExceededException, NotAuthorizedException, ResourceConflictException, TooManyRequestsException, ResourceNotFoundException, ExternalServiceException, InvalidIdentityPoolConfigurationException, DeveloperUserAlreadyRegisteredException, ConcurrentModificationException;
  var init_models_0 = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/models/models_0.js"() {
      init_CognitoIdentityServiceException();
      InternalErrorException = class _InternalErrorException extends CognitoIdentityServiceException {
        constructor(opts) {
          super({
            name: "InternalErrorException",
            $fault: "server",
            ...opts
          });
          this.name = "InternalErrorException";
          this.$fault = "server";
          Object.setPrototypeOf(this, _InternalErrorException.prototype);
        }
      };
      InvalidParameterException = class _InvalidParameterException extends CognitoIdentityServiceException {
        constructor(opts) {
          super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts
          });
          this.name = "InvalidParameterException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _InvalidParameterException.prototype);
        }
      };
      LimitExceededException = class _LimitExceededException extends CognitoIdentityServiceException {
        constructor(opts) {
          super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts
          });
          this.name = "LimitExceededException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _LimitExceededException.prototype);
        }
      };
      NotAuthorizedException = class _NotAuthorizedException extends CognitoIdentityServiceException {
        constructor(opts) {
          super({
            name: "NotAuthorizedException",
            $fault: "client",
            ...opts
          });
          this.name = "NotAuthorizedException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _NotAuthorizedException.prototype);
        }
      };
      ResourceConflictException = class _ResourceConflictException extends CognitoIdentityServiceException {
        constructor(opts) {
          super({
            name: "ResourceConflictException",
            $fault: "client",
            ...opts
          });
          this.name = "ResourceConflictException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _ResourceConflictException.prototype);
        }
      };
      TooManyRequestsException = class _TooManyRequestsException extends CognitoIdentityServiceException {
        constructor(opts) {
          super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts
          });
          this.name = "TooManyRequestsException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _TooManyRequestsException.prototype);
        }
      };
      ResourceNotFoundException = class _ResourceNotFoundException extends CognitoIdentityServiceException {
        constructor(opts) {
          super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts
          });
          this.name = "ResourceNotFoundException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
        }
      };
      ExternalServiceException = class _ExternalServiceException extends CognitoIdentityServiceException {
        constructor(opts) {
          super({
            name: "ExternalServiceException",
            $fault: "client",
            ...opts
          });
          this.name = "ExternalServiceException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _ExternalServiceException.prototype);
        }
      };
      InvalidIdentityPoolConfigurationException = class _InvalidIdentityPoolConfigurationException extends CognitoIdentityServiceException {
        constructor(opts) {
          super({
            name: "InvalidIdentityPoolConfigurationException",
            $fault: "client",
            ...opts
          });
          this.name = "InvalidIdentityPoolConfigurationException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _InvalidIdentityPoolConfigurationException.prototype);
        }
      };
      DeveloperUserAlreadyRegisteredException = class _DeveloperUserAlreadyRegisteredException extends CognitoIdentityServiceException {
        constructor(opts) {
          super({
            name: "DeveloperUserAlreadyRegisteredException",
            $fault: "client",
            ...opts
          });
          this.name = "DeveloperUserAlreadyRegisteredException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _DeveloperUserAlreadyRegisteredException.prototype);
        }
      };
      ConcurrentModificationException = class _ConcurrentModificationException extends CognitoIdentityServiceException {
        constructor(opts) {
          super({
            name: "ConcurrentModificationException",
            $fault: "client",
            ...opts
          });
          this.name = "ConcurrentModificationException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _ConcurrentModificationException.prototype);
        }
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/protocols/Aws_json1_1.js
  function sharedHeaders(operation) {
    return {
      "content-type": "application/x-amz-json-1.1",
      "x-amz-target": `AWSCognitoIdentityService.${operation}`
    };
  }
  var se_CreateIdentityPoolCommand, se_DeleteIdentitiesCommand, se_DeleteIdentityPoolCommand, se_DescribeIdentityCommand, se_DescribeIdentityPoolCommand, se_GetCredentialsForIdentityCommand, se_GetIdCommand, se_GetIdentityPoolRolesCommand, se_GetOpenIdTokenCommand, se_GetOpenIdTokenForDeveloperIdentityCommand, se_GetPrincipalTagAttributeMapCommand, se_ListIdentitiesCommand, se_ListIdentityPoolsCommand, se_ListTagsForResourceCommand, se_LookupDeveloperIdentityCommand, se_MergeDeveloperIdentitiesCommand, se_SetIdentityPoolRolesCommand, se_SetPrincipalTagAttributeMapCommand, se_TagResourceCommand, se_UnlinkDeveloperIdentityCommand, se_UnlinkIdentityCommand, se_UntagResourceCommand, se_UpdateIdentityPoolCommand, de_CreateIdentityPoolCommand, de_DeleteIdentitiesCommand, de_DeleteIdentityPoolCommand, de_DescribeIdentityCommand, de_DescribeIdentityPoolCommand, de_GetCredentialsForIdentityCommand, de_GetIdCommand, de_GetIdentityPoolRolesCommand, de_GetOpenIdTokenCommand, de_GetOpenIdTokenForDeveloperIdentityCommand, de_GetPrincipalTagAttributeMapCommand, de_ListIdentitiesCommand, de_ListIdentityPoolsCommand, de_ListTagsForResourceCommand, de_LookupDeveloperIdentityCommand, de_MergeDeveloperIdentitiesCommand, de_SetIdentityPoolRolesCommand, de_SetPrincipalTagAttributeMapCommand, de_TagResourceCommand, de_UnlinkDeveloperIdentityCommand, de_UnlinkIdentityCommand, de_UntagResourceCommand, de_UpdateIdentityPoolCommand, de_CommandError, de_ConcurrentModificationExceptionRes, de_DeveloperUserAlreadyRegisteredExceptionRes, de_ExternalServiceExceptionRes, de_InternalErrorExceptionRes, de_InvalidIdentityPoolConfigurationExceptionRes, de_InvalidParameterExceptionRes, de_LimitExceededExceptionRes, de_NotAuthorizedExceptionRes, de_ResourceConflictExceptionRes, de_ResourceNotFoundExceptionRes, de_TooManyRequestsExceptionRes, de_Credentials, de_GetCredentialsForIdentityResponse, de_IdentitiesList, de_IdentityDescription, de_ListIdentitiesResponse, deserializeMetadata2, throwDefaultError2, buildHttpRpcRequest;
  var init_Aws_json1_1 = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/protocols/Aws_json1_1.js"() {
      init_dist_es35();
      init_dist_es3();
      init_dist_es27();
      init_CognitoIdentityServiceException();
      init_models_0();
      se_CreateIdentityPoolCommand = async (input3, context) => {
        const headers = sharedHeaders("CreateIdentityPool");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_DeleteIdentitiesCommand = async (input3, context) => {
        const headers = sharedHeaders("DeleteIdentities");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_DeleteIdentityPoolCommand = async (input3, context) => {
        const headers = sharedHeaders("DeleteIdentityPool");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_DescribeIdentityCommand = async (input3, context) => {
        const headers = sharedHeaders("DescribeIdentity");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_DescribeIdentityPoolCommand = async (input3, context) => {
        const headers = sharedHeaders("DescribeIdentityPool");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_GetCredentialsForIdentityCommand = async (input3, context) => {
        const headers = sharedHeaders("GetCredentialsForIdentity");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_GetIdCommand = async (input3, context) => {
        const headers = sharedHeaders("GetId");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_GetIdentityPoolRolesCommand = async (input3, context) => {
        const headers = sharedHeaders("GetIdentityPoolRoles");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_GetOpenIdTokenCommand = async (input3, context) => {
        const headers = sharedHeaders("GetOpenIdToken");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_GetOpenIdTokenForDeveloperIdentityCommand = async (input3, context) => {
        const headers = sharedHeaders("GetOpenIdTokenForDeveloperIdentity");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_GetPrincipalTagAttributeMapCommand = async (input3, context) => {
        const headers = sharedHeaders("GetPrincipalTagAttributeMap");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_ListIdentitiesCommand = async (input3, context) => {
        const headers = sharedHeaders("ListIdentities");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_ListIdentityPoolsCommand = async (input3, context) => {
        const headers = sharedHeaders("ListIdentityPools");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_ListTagsForResourceCommand = async (input3, context) => {
        const headers = sharedHeaders("ListTagsForResource");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_LookupDeveloperIdentityCommand = async (input3, context) => {
        const headers = sharedHeaders("LookupDeveloperIdentity");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_MergeDeveloperIdentitiesCommand = async (input3, context) => {
        const headers = sharedHeaders("MergeDeveloperIdentities");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_SetIdentityPoolRolesCommand = async (input3, context) => {
        const headers = sharedHeaders("SetIdentityPoolRoles");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_SetPrincipalTagAttributeMapCommand = async (input3, context) => {
        const headers = sharedHeaders("SetPrincipalTagAttributeMap");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_TagResourceCommand = async (input3, context) => {
        const headers = sharedHeaders("TagResource");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_UnlinkDeveloperIdentityCommand = async (input3, context) => {
        const headers = sharedHeaders("UnlinkDeveloperIdentity");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_UnlinkIdentityCommand = async (input3, context) => {
        const headers = sharedHeaders("UnlinkIdentity");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_UntagResourceCommand = async (input3, context) => {
        const headers = sharedHeaders("UntagResource");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      se_UpdateIdentityPoolCommand = async (input3, context) => {
        const headers = sharedHeaders("UpdateIdentityPool");
        let body2;
        body2 = JSON.stringify(_json(input3));
        return buildHttpRpcRequest(context, headers, "/", void 0, body2);
      };
      de_CreateIdentityPoolCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_DeleteIdentitiesCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_DeleteIdentityPoolCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        await collectBody(output2.body, context);
        const response = {
          $metadata: deserializeMetadata2(output2)
        };
        return response;
      };
      de_DescribeIdentityCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = de_IdentityDescription(data, context);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_DescribeIdentityPoolCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_GetCredentialsForIdentityCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = de_GetCredentialsForIdentityResponse(data, context);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_GetIdCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_GetIdentityPoolRolesCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_GetOpenIdTokenCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_GetOpenIdTokenForDeveloperIdentityCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_GetPrincipalTagAttributeMapCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_ListIdentitiesCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = de_ListIdentitiesResponse(data, context);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_ListIdentityPoolsCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_ListTagsForResourceCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_LookupDeveloperIdentityCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_MergeDeveloperIdentitiesCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_SetIdentityPoolRolesCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        await collectBody(output2.body, context);
        const response = {
          $metadata: deserializeMetadata2(output2)
        };
        return response;
      };
      de_SetPrincipalTagAttributeMapCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_TagResourceCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_UnlinkDeveloperIdentityCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        await collectBody(output2.body, context);
        const response = {
          $metadata: deserializeMetadata2(output2)
        };
        return response;
      };
      de_UnlinkIdentityCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        await collectBody(output2.body, context);
        const response = {
          $metadata: deserializeMetadata2(output2)
        };
        return response;
      };
      de_UntagResourceCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_UpdateIdentityPoolCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError(output2, context);
        }
        const data = await parseJsonBody(output2.body, context);
        let contents = {};
        contents = _json(data);
        const response = {
          $metadata: deserializeMetadata2(output2),
          ...contents
        };
        return response;
      };
      de_CommandError = async (output2, context) => {
        const parsedOutput = {
          ...output2,
          body: await parseJsonErrorBody(output2.body, context)
        };
        const errorCode = loadRestJsonErrorCode(output2, parsedOutput.body);
        switch (errorCode) {
          case "InternalErrorException":
          case "com.amazonaws.cognitoidentity#InternalErrorException":
            throw await de_InternalErrorExceptionRes(parsedOutput, context);
          case "InvalidParameterException":
          case "com.amazonaws.cognitoidentity#InvalidParameterException":
            throw await de_InvalidParameterExceptionRes(parsedOutput, context);
          case "LimitExceededException":
          case "com.amazonaws.cognitoidentity#LimitExceededException":
            throw await de_LimitExceededExceptionRes(parsedOutput, context);
          case "NotAuthorizedException":
          case "com.amazonaws.cognitoidentity#NotAuthorizedException":
            throw await de_NotAuthorizedExceptionRes(parsedOutput, context);
          case "ResourceConflictException":
          case "com.amazonaws.cognitoidentity#ResourceConflictException":
            throw await de_ResourceConflictExceptionRes(parsedOutput, context);
          case "TooManyRequestsException":
          case "com.amazonaws.cognitoidentity#TooManyRequestsException":
            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);
          case "ResourceNotFoundException":
          case "com.amazonaws.cognitoidentity#ResourceNotFoundException":
            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
          case "ExternalServiceException":
          case "com.amazonaws.cognitoidentity#ExternalServiceException":
            throw await de_ExternalServiceExceptionRes(parsedOutput, context);
          case "InvalidIdentityPoolConfigurationException":
          case "com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException":
            throw await de_InvalidIdentityPoolConfigurationExceptionRes(parsedOutput, context);
          case "DeveloperUserAlreadyRegisteredException":
          case "com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException":
            throw await de_DeveloperUserAlreadyRegisteredExceptionRes(parsedOutput, context);
          case "ConcurrentModificationException":
          case "com.amazonaws.cognitoidentity#ConcurrentModificationException":
            throw await de_ConcurrentModificationExceptionRes(parsedOutput, context);
          default:
            const parsedBody = parsedOutput.body;
            return throwDefaultError2({
              output: output2,
              parsedBody,
              errorCode
            });
        }
      };
      de_ConcurrentModificationExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = _json(body2);
        const exception = new ConcurrentModificationException({
          $metadata: deserializeMetadata2(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_DeveloperUserAlreadyRegisteredExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = _json(body2);
        const exception = new DeveloperUserAlreadyRegisteredException({
          $metadata: deserializeMetadata2(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_ExternalServiceExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = _json(body2);
        const exception = new ExternalServiceException({
          $metadata: deserializeMetadata2(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_InternalErrorExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = _json(body2);
        const exception = new InternalErrorException({
          $metadata: deserializeMetadata2(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_InvalidIdentityPoolConfigurationExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = _json(body2);
        const exception = new InvalidIdentityPoolConfigurationException({
          $metadata: deserializeMetadata2(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_InvalidParameterExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = _json(body2);
        const exception = new InvalidParameterException({
          $metadata: deserializeMetadata2(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_LimitExceededExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = _json(body2);
        const exception = new LimitExceededException({
          $metadata: deserializeMetadata2(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_NotAuthorizedExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = _json(body2);
        const exception = new NotAuthorizedException({
          $metadata: deserializeMetadata2(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_ResourceConflictExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = _json(body2);
        const exception = new ResourceConflictException({
          $metadata: deserializeMetadata2(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = _json(body2);
        const exception = new ResourceNotFoundException({
          $metadata: deserializeMetadata2(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_TooManyRequestsExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = _json(body2);
        const exception = new TooManyRequestsException({
          $metadata: deserializeMetadata2(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_Credentials = (output2, context) => {
        return take(output2, {
          AccessKeyId: expectString,
          Expiration: (_2) => expectNonNull(parseEpochTimestamp(expectNumber(_2))),
          SecretKey: expectString,
          SessionToken: expectString
        });
      };
      de_GetCredentialsForIdentityResponse = (output2, context) => {
        return take(output2, {
          Credentials: (_2) => de_Credentials(_2, context),
          IdentityId: expectString
        });
      };
      de_IdentitiesList = (output2, context) => {
        const retVal = (output2 || []).filter((e3) => e3 != null).map((entry) => {
          return de_IdentityDescription(entry, context);
        });
        return retVal;
      };
      de_IdentityDescription = (output2, context) => {
        return take(output2, {
          CreationDate: (_2) => expectNonNull(parseEpochTimestamp(expectNumber(_2))),
          IdentityId: expectString,
          LastModifiedDate: (_2) => expectNonNull(parseEpochTimestamp(expectNumber(_2))),
          Logins: _json
        });
      };
      de_ListIdentitiesResponse = (output2, context) => {
        return take(output2, {
          Identities: (_2) => de_IdentitiesList(_2, context),
          IdentityPoolId: expectString,
          NextToken: expectString
        });
      };
      deserializeMetadata2 = (output2) => ({
        httpStatusCode: output2.statusCode,
        requestId: output2.headers["x-amzn-requestid"] ?? output2.headers["x-amzn-request-id"] ?? output2.headers["x-amz-request-id"],
        extendedRequestId: output2.headers["x-amz-id-2"],
        cfId: output2.headers["x-amz-cf-id"]
      });
      throwDefaultError2 = withBaseException(CognitoIdentityServiceException);
      buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body2) => {
        const { hostname: hostname2, protocol: protocol2 = "https", port: port2, path: basePath } = await context.endpoint();
        const contents = {
          protocol: protocol2,
          hostname: hostname2,
          port: port2,
          method: "POST",
          path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
          headers
        };
        if (resolvedHostname !== void 0) {
          contents.hostname = resolvedHostname;
        }
        if (body2 !== void 0) {
          contents.body = body2;
        }
        return new HttpRequest(contents);
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/CreateIdentityPoolCommand.js
  var CreateIdentityPoolCommand;
  var init_CreateIdentityPoolCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/CreateIdentityPoolCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      CreateIdentityPoolCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "CreateIdentityPool", {}).n("CognitoIdentityClient", "CreateIdentityPoolCommand").f(void 0, void 0).ser(se_CreateIdentityPoolCommand).de(de_CreateIdentityPoolCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/DeleteIdentitiesCommand.js
  var DeleteIdentitiesCommand;
  var init_DeleteIdentitiesCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/DeleteIdentitiesCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      DeleteIdentitiesCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "DeleteIdentities", {}).n("CognitoIdentityClient", "DeleteIdentitiesCommand").f(void 0, void 0).ser(se_DeleteIdentitiesCommand).de(de_DeleteIdentitiesCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/DeleteIdentityPoolCommand.js
  var DeleteIdentityPoolCommand;
  var init_DeleteIdentityPoolCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/DeleteIdentityPoolCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      DeleteIdentityPoolCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "DeleteIdentityPool", {}).n("CognitoIdentityClient", "DeleteIdentityPoolCommand").f(void 0, void 0).ser(se_DeleteIdentityPoolCommand).de(de_DeleteIdentityPoolCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/DescribeIdentityCommand.js
  var DescribeIdentityCommand;
  var init_DescribeIdentityCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/DescribeIdentityCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      DescribeIdentityCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "DescribeIdentity", {}).n("CognitoIdentityClient", "DescribeIdentityCommand").f(void 0, void 0).ser(se_DescribeIdentityCommand).de(de_DescribeIdentityCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/DescribeIdentityPoolCommand.js
  var DescribeIdentityPoolCommand;
  var init_DescribeIdentityPoolCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/DescribeIdentityPoolCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      DescribeIdentityPoolCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "DescribeIdentityPool", {}).n("CognitoIdentityClient", "DescribeIdentityPoolCommand").f(void 0, void 0).ser(se_DescribeIdentityPoolCommand).de(de_DescribeIdentityPoolCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetCredentialsForIdentityCommand.js
  var GetCredentialsForIdentityCommand;
  var init_GetCredentialsForIdentityCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetCredentialsForIdentityCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      GetCredentialsForIdentityCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "GetCredentialsForIdentity", {}).n("CognitoIdentityClient", "GetCredentialsForIdentityCommand").f(void 0, void 0).ser(se_GetCredentialsForIdentityCommand).de(de_GetCredentialsForIdentityCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetIdCommand.js
  var GetIdCommand;
  var init_GetIdCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetIdCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      GetIdCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "GetId", {}).n("CognitoIdentityClient", "GetIdCommand").f(void 0, void 0).ser(se_GetIdCommand).de(de_GetIdCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetIdentityPoolRolesCommand.js
  var GetIdentityPoolRolesCommand;
  var init_GetIdentityPoolRolesCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetIdentityPoolRolesCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      GetIdentityPoolRolesCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "GetIdentityPoolRoles", {}).n("CognitoIdentityClient", "GetIdentityPoolRolesCommand").f(void 0, void 0).ser(se_GetIdentityPoolRolesCommand).de(de_GetIdentityPoolRolesCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetOpenIdTokenCommand.js
  var GetOpenIdTokenCommand;
  var init_GetOpenIdTokenCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetOpenIdTokenCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      GetOpenIdTokenCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "GetOpenIdToken", {}).n("CognitoIdentityClient", "GetOpenIdTokenCommand").f(void 0, void 0).ser(se_GetOpenIdTokenCommand).de(de_GetOpenIdTokenCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetOpenIdTokenForDeveloperIdentityCommand.js
  var GetOpenIdTokenForDeveloperIdentityCommand;
  var init_GetOpenIdTokenForDeveloperIdentityCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetOpenIdTokenForDeveloperIdentityCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      GetOpenIdTokenForDeveloperIdentityCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "GetOpenIdTokenForDeveloperIdentity", {}).n("CognitoIdentityClient", "GetOpenIdTokenForDeveloperIdentityCommand").f(void 0, void 0).ser(se_GetOpenIdTokenForDeveloperIdentityCommand).de(de_GetOpenIdTokenForDeveloperIdentityCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetPrincipalTagAttributeMapCommand.js
  var GetPrincipalTagAttributeMapCommand;
  var init_GetPrincipalTagAttributeMapCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetPrincipalTagAttributeMapCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      GetPrincipalTagAttributeMapCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "GetPrincipalTagAttributeMap", {}).n("CognitoIdentityClient", "GetPrincipalTagAttributeMapCommand").f(void 0, void 0).ser(se_GetPrincipalTagAttributeMapCommand).de(de_GetPrincipalTagAttributeMapCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/ListIdentitiesCommand.js
  var ListIdentitiesCommand;
  var init_ListIdentitiesCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/ListIdentitiesCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      ListIdentitiesCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "ListIdentities", {}).n("CognitoIdentityClient", "ListIdentitiesCommand").f(void 0, void 0).ser(se_ListIdentitiesCommand).de(de_ListIdentitiesCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/ListIdentityPoolsCommand.js
  var ListIdentityPoolsCommand;
  var init_ListIdentityPoolsCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/ListIdentityPoolsCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      ListIdentityPoolsCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "ListIdentityPools", {}).n("CognitoIdentityClient", "ListIdentityPoolsCommand").f(void 0, void 0).ser(se_ListIdentityPoolsCommand).de(de_ListIdentityPoolsCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/ListTagsForResourceCommand.js
  var ListTagsForResourceCommand;
  var init_ListTagsForResourceCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/ListTagsForResourceCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      ListTagsForResourceCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "ListTagsForResource", {}).n("CognitoIdentityClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/LookupDeveloperIdentityCommand.js
  var LookupDeveloperIdentityCommand;
  var init_LookupDeveloperIdentityCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/LookupDeveloperIdentityCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      LookupDeveloperIdentityCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "LookupDeveloperIdentity", {}).n("CognitoIdentityClient", "LookupDeveloperIdentityCommand").f(void 0, void 0).ser(se_LookupDeveloperIdentityCommand).de(de_LookupDeveloperIdentityCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/MergeDeveloperIdentitiesCommand.js
  var MergeDeveloperIdentitiesCommand;
  var init_MergeDeveloperIdentitiesCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/MergeDeveloperIdentitiesCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      MergeDeveloperIdentitiesCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "MergeDeveloperIdentities", {}).n("CognitoIdentityClient", "MergeDeveloperIdentitiesCommand").f(void 0, void 0).ser(se_MergeDeveloperIdentitiesCommand).de(de_MergeDeveloperIdentitiesCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/SetIdentityPoolRolesCommand.js
  var SetIdentityPoolRolesCommand;
  var init_SetIdentityPoolRolesCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/SetIdentityPoolRolesCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      SetIdentityPoolRolesCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "SetIdentityPoolRoles", {}).n("CognitoIdentityClient", "SetIdentityPoolRolesCommand").f(void 0, void 0).ser(se_SetIdentityPoolRolesCommand).de(de_SetIdentityPoolRolesCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/SetPrincipalTagAttributeMapCommand.js
  var SetPrincipalTagAttributeMapCommand;
  var init_SetPrincipalTagAttributeMapCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/SetPrincipalTagAttributeMapCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      SetPrincipalTagAttributeMapCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "SetPrincipalTagAttributeMap", {}).n("CognitoIdentityClient", "SetPrincipalTagAttributeMapCommand").f(void 0, void 0).ser(se_SetPrincipalTagAttributeMapCommand).de(de_SetPrincipalTagAttributeMapCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/TagResourceCommand.js
  var TagResourceCommand;
  var init_TagResourceCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/TagResourceCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      TagResourceCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "TagResource", {}).n("CognitoIdentityClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/UnlinkDeveloperIdentityCommand.js
  var UnlinkDeveloperIdentityCommand;
  var init_UnlinkDeveloperIdentityCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/UnlinkDeveloperIdentityCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      UnlinkDeveloperIdentityCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "UnlinkDeveloperIdentity", {}).n("CognitoIdentityClient", "UnlinkDeveloperIdentityCommand").f(void 0, void 0).ser(se_UnlinkDeveloperIdentityCommand).de(de_UnlinkDeveloperIdentityCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/UnlinkIdentityCommand.js
  var UnlinkIdentityCommand;
  var init_UnlinkIdentityCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/UnlinkIdentityCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      UnlinkIdentityCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "UnlinkIdentity", {}).n("CognitoIdentityClient", "UnlinkIdentityCommand").f(void 0, void 0).ser(se_UnlinkIdentityCommand).de(de_UnlinkIdentityCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/UntagResourceCommand.js
  var UntagResourceCommand;
  var init_UntagResourceCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/UntagResourceCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      UntagResourceCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "UntagResource", {}).n("CognitoIdentityClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/UpdateIdentityPoolCommand.js
  var UpdateIdentityPoolCommand;
  var init_UpdateIdentityPoolCommand = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/UpdateIdentityPoolCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters();
      init_Aws_json1_1();
      UpdateIdentityPoolCommand = class extends Command.classBuilder().ep({
        ...commonParams
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSCognitoIdentityService", "UpdateIdentityPool", {}).n("CognitoIdentityClient", "UpdateIdentityPoolCommand").f(void 0, void 0).ser(se_UpdateIdentityPoolCommand).de(de_UpdateIdentityPoolCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/CognitoIdentity.js
  var commands, CognitoIdentity;
  var init_CognitoIdentity = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/CognitoIdentity.js"() {
      init_dist_es27();
      init_CognitoIdentityClient();
      init_CreateIdentityPoolCommand();
      init_DeleteIdentitiesCommand();
      init_DeleteIdentityPoolCommand();
      init_DescribeIdentityCommand();
      init_DescribeIdentityPoolCommand();
      init_GetCredentialsForIdentityCommand();
      init_GetIdCommand();
      init_GetIdentityPoolRolesCommand();
      init_GetOpenIdTokenCommand();
      init_GetOpenIdTokenForDeveloperIdentityCommand();
      init_GetPrincipalTagAttributeMapCommand();
      init_ListIdentitiesCommand();
      init_ListIdentityPoolsCommand();
      init_ListTagsForResourceCommand();
      init_LookupDeveloperIdentityCommand();
      init_MergeDeveloperIdentitiesCommand();
      init_SetIdentityPoolRolesCommand();
      init_SetPrincipalTagAttributeMapCommand();
      init_TagResourceCommand();
      init_UnlinkDeveloperIdentityCommand();
      init_UnlinkIdentityCommand();
      init_UntagResourceCommand();
      init_UpdateIdentityPoolCommand();
      commands = {
        CreateIdentityPoolCommand,
        DeleteIdentitiesCommand,
        DeleteIdentityPoolCommand,
        DescribeIdentityCommand,
        DescribeIdentityPoolCommand,
        GetCredentialsForIdentityCommand,
        GetIdCommand,
        GetIdentityPoolRolesCommand,
        GetOpenIdTokenCommand,
        GetOpenIdTokenForDeveloperIdentityCommand,
        GetPrincipalTagAttributeMapCommand,
        ListIdentitiesCommand,
        ListIdentityPoolsCommand,
        ListTagsForResourceCommand,
        LookupDeveloperIdentityCommand,
        MergeDeveloperIdentitiesCommand,
        SetIdentityPoolRolesCommand,
        SetPrincipalTagAttributeMapCommand,
        TagResourceCommand,
        UnlinkDeveloperIdentityCommand,
        UnlinkIdentityCommand,
        UntagResourceCommand,
        UpdateIdentityPoolCommand
      };
      CognitoIdentity = class extends CognitoIdentityClient {
      };
      createAggregatedClient(commands, CognitoIdentity);
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/index.js
  var init_commands = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/index.js"() {
      init_CreateIdentityPoolCommand();
      init_DeleteIdentitiesCommand();
      init_DeleteIdentityPoolCommand();
      init_DescribeIdentityCommand();
      init_DescribeIdentityPoolCommand();
      init_GetCredentialsForIdentityCommand();
      init_GetIdCommand();
      init_GetIdentityPoolRolesCommand();
      init_GetOpenIdTokenCommand();
      init_GetOpenIdTokenForDeveloperIdentityCommand();
      init_GetPrincipalTagAttributeMapCommand();
      init_ListIdentitiesCommand();
      init_ListIdentityPoolsCommand();
      init_ListTagsForResourceCommand();
      init_LookupDeveloperIdentityCommand();
      init_MergeDeveloperIdentitiesCommand();
      init_SetIdentityPoolRolesCommand();
      init_SetPrincipalTagAttributeMapCommand();
      init_TagResourceCommand();
      init_UnlinkDeveloperIdentityCommand();
      init_UnlinkIdentityCommand();
      init_UntagResourceCommand();
      init_UpdateIdentityPoolCommand();
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/pagination/Interfaces.js
  var init_Interfaces = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/pagination/Interfaces.js"() {
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/pagination/ListIdentityPoolsPaginator.js
  var paginateListIdentityPools;
  var init_ListIdentityPoolsPaginator = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/pagination/ListIdentityPoolsPaginator.js"() {
      init_dist_es29();
      init_CognitoIdentityClient();
      init_ListIdentityPoolsCommand();
      paginateListIdentityPools = createPaginator(CognitoIdentityClient, ListIdentityPoolsCommand, "NextToken", "NextToken", "MaxResults");
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/pagination/index.js
  var init_pagination2 = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/pagination/index.js"() {
      init_Interfaces();
      init_ListIdentityPoolsPaginator();
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/models/index.js
  var init_models = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/models/index.js"() {
      init_models_0();
    }
  });

  // node_modules/@aws-sdk/client-cognito-identity/dist-es/index.js
  var init_dist_es42 = __esm({
    "node_modules/@aws-sdk/client-cognito-identity/dist-es/index.js"() {
      init_CognitoIdentityClient();
      init_CognitoIdentity();
      init_commands();
      init_pagination2();
      init_models();
    }
  });

  // node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/loadCognitoIdentity.js
  var loadCognitoIdentity_exports = {};
  __export(loadCognitoIdentity_exports, {
    CognitoIdentityClient: () => CognitoIdentityClient,
    GetCredentialsForIdentityCommand: () => GetCredentialsForIdentityCommand,
    GetIdCommand: () => GetIdCommand
  });
  var init_loadCognitoIdentity = __esm({
    "node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/loadCognitoIdentity.js"() {
      init_dist_es42();
    }
  });

  // node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/fromCognitoIdentity.js
  function fromCognitoIdentity(parameters) {
    return async () => {
      parameters.logger?.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");
      const { GetCredentialsForIdentityCommand: GetCredentialsForIdentityCommand2, CognitoIdentityClient: CognitoIdentityClient2 } = await Promise.resolve().then(() => (init_loadCognitoIdentity(), loadCognitoIdentity_exports));
      const { Credentials: { AccessKeyId = throwOnMissingAccessKeyId(parameters.logger), Expiration, SecretKey = throwOnMissingSecretKey(parameters.logger), SessionToken } = throwOnMissingCredentials(parameters.logger) } = await (parameters.client ?? new CognitoIdentityClient2(Object.assign({}, parameters.clientConfig ?? {}, {
        region: parameters.clientConfig?.region ?? parameters.parentClientConfig?.region
      }))).send(new GetCredentialsForIdentityCommand2({
        CustomRoleArn: parameters.customRoleArn,
        IdentityId: parameters.identityId,
        Logins: parameters.logins ? await resolveLogins(parameters.logins) : void 0
      }));
      return {
        identityId: parameters.identityId,
        accessKeyId: AccessKeyId,
        secretAccessKey: SecretKey,
        sessionToken: SessionToken,
        expiration: Expiration
      };
    };
  }
  function throwOnMissingAccessKeyId(logger2) {
    throw new CredentialsProviderError("Response from Amazon Cognito contained no access key ID", { logger: logger2 });
  }
  function throwOnMissingCredentials(logger2) {
    throw new CredentialsProviderError("Response from Amazon Cognito contained no credentials", { logger: logger2 });
  }
  function throwOnMissingSecretKey(logger2) {
    throw new CredentialsProviderError("Response from Amazon Cognito contained no secret key", { logger: logger2 });
  }
  var init_fromCognitoIdentity = __esm({
    "node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/fromCognitoIdentity.js"() {
      init_dist_es();
      init_resolveLogins();
    }
  });

  // node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/IndexedDbStorage.js
  var STORE_NAME, IndexedDbStorage;
  var init_IndexedDbStorage = __esm({
    "node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/IndexedDbStorage.js"() {
      STORE_NAME = "IdentityIds";
      IndexedDbStorage = class {
        constructor(dbName = "aws:cognito-identity-ids") {
          this.dbName = dbName;
        }
        getItem(key2) {
          return this.withObjectStore("readonly", (store) => {
            const req = store.get(key2);
            return new Promise((resolve) => {
              req.onerror = () => resolve(null);
              req.onsuccess = () => resolve(req.result ? req.result.value : null);
            });
          }).catch(() => null);
        }
        removeItem(key2) {
          return this.withObjectStore("readwrite", (store) => {
            const req = store.delete(key2);
            return new Promise((resolve, reject) => {
              req.onerror = () => reject(req.error);
              req.onsuccess = () => resolve();
            });
          });
        }
        setItem(id3, value14) {
          return this.withObjectStore("readwrite", (store) => {
            const req = store.put({ id: id3, value: value14 });
            return new Promise((resolve, reject) => {
              req.onerror = () => reject(req.error);
              req.onsuccess = () => resolve();
            });
          });
        }
        getDb() {
          const openDbRequest = self.indexedDB.open(this.dbName, 1);
          return new Promise((resolve, reject) => {
            openDbRequest.onsuccess = () => {
              resolve(openDbRequest.result);
            };
            openDbRequest.onerror = () => {
              reject(openDbRequest.error);
            };
            openDbRequest.onblocked = () => {
              reject(new Error("Unable to access DB"));
            };
            openDbRequest.onupgradeneeded = () => {
              const db = openDbRequest.result;
              db.onerror = () => {
                reject(new Error("Failed to create object store"));
              };
              db.createObjectStore(STORE_NAME, { keyPath: "id" });
            };
          });
        }
        withObjectStore(mode, action2) {
          return this.getDb().then((db) => {
            const tx = db.transaction(STORE_NAME, mode);
            tx.oncomplete = () => db.close();
            return new Promise((resolve, reject) => {
              tx.onerror = () => reject(tx.error);
              resolve(action2(tx.objectStore(STORE_NAME)));
            }).catch((err) => {
              db.close();
              throw err;
            });
          });
        }
      };
    }
  });

  // node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/InMemoryStorage.js
  var InMemoryStorage;
  var init_InMemoryStorage = __esm({
    "node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/InMemoryStorage.js"() {
      InMemoryStorage = class {
        constructor(store = {}) {
          this.store = store;
        }
        getItem(key2) {
          if (key2 in this.store) {
            return this.store[key2];
          }
          return null;
        }
        removeItem(key2) {
          delete this.store[key2];
        }
        setItem(key2, value14) {
          this.store[key2] = value14;
        }
      };
    }
  });

  // node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/localStorage.js
  function localStorage() {
    if (typeof self === "object" && self.indexedDB) {
      return new IndexedDbStorage();
    }
    if (typeof window === "object" && window.localStorage) {
      return window.localStorage;
    }
    return inMemoryStorage;
  }
  var inMemoryStorage;
  var init_localStorage = __esm({
    "node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/localStorage.js"() {
      init_IndexedDbStorage();
      init_InMemoryStorage();
      inMemoryStorage = new InMemoryStorage();
    }
  });

  // node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/fromCognitoIdentityPool.js
  function fromCognitoIdentityPool({ accountId, cache = localStorage(), client, clientConfig, customRoleArn, identityPoolId, logins, userIdentifier = !logins || Object.keys(logins).length === 0 ? "ANONYMOUS" : void 0, logger: logger2, parentClientConfig }) {
    logger2?.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");
    const cacheKey = userIdentifier ? `aws:cognito-identity-credentials:${identityPoolId}:${userIdentifier}` : void 0;
    let provider = async () => {
      const { GetIdCommand: GetIdCommand2, CognitoIdentityClient: CognitoIdentityClient2 } = await Promise.resolve().then(() => (init_loadCognitoIdentity(), loadCognitoIdentity_exports));
      const _client = client ?? new CognitoIdentityClient2(Object.assign({}, clientConfig ?? {}, { region: clientConfig?.region ?? parentClientConfig?.region }));
      let identityId = cacheKey && await cache.getItem(cacheKey);
      if (!identityId) {
        const { IdentityId = throwOnMissingId(logger2) } = await _client.send(new GetIdCommand2({
          AccountId: accountId,
          IdentityPoolId: identityPoolId,
          Logins: logins ? await resolveLogins(logins) : void 0
        }));
        identityId = IdentityId;
        if (cacheKey) {
          Promise.resolve(cache.setItem(cacheKey, identityId)).catch(() => {
          });
        }
      }
      provider = fromCognitoIdentity({
        client: _client,
        customRoleArn,
        logins,
        identityId
      });
      return provider();
    };
    return () => provider().catch(async (err) => {
      if (cacheKey) {
        Promise.resolve(cache.removeItem(cacheKey)).catch(() => {
        });
      }
      throw err;
    });
  }
  function throwOnMissingId(logger2) {
    throw new CredentialsProviderError("Response from Amazon Cognito contained no identity ID", { logger: logger2 });
  }
  var init_fromCognitoIdentityPool = __esm({
    "node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/fromCognitoIdentityPool.js"() {
      init_dist_es();
      init_fromCognitoIdentity();
      init_localStorage();
      init_resolveLogins();
    }
  });

  // node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/index.js
  var init_dist_es43 = __esm({
    "node_modules/@aws-sdk/credential-provider-cognito-identity/dist-es/index.js"() {
      init_CognitoProviderParameters();
      init_Logins();
      init_Storage();
      init_fromCognitoIdentity();
      init_fromCognitoIdentityPool();
    }
  });

  // node_modules/@aws-sdk/credential-providers/dist-es/fromCognitoIdentity.js
  var fromCognitoIdentity2;
  var init_fromCognitoIdentity2 = __esm({
    "node_modules/@aws-sdk/credential-providers/dist-es/fromCognitoIdentity.js"() {
      init_dist_es43();
      fromCognitoIdentity2 = (options2) => fromCognitoIdentity({
        ...options2
      });
    }
  });

  // node_modules/@aws-sdk/credential-providers/dist-es/fromCognitoIdentityPool.js
  var fromCognitoIdentityPool2;
  var init_fromCognitoIdentityPool2 = __esm({
    "node_modules/@aws-sdk/credential-providers/dist-es/fromCognitoIdentityPool.js"() {
      init_dist_es43();
      fromCognitoIdentityPool2 = (options2) => fromCognitoIdentityPool({
        ...options2
      });
    }
  });

  // node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/checkUrl.js
  var ECS_CONTAINER_HOST, EKS_CONTAINER_HOST_IPv4, EKS_CONTAINER_HOST_IPv6, checkUrl;
  var init_checkUrl = __esm({
    "node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/checkUrl.js"() {
      init_dist_es();
      ECS_CONTAINER_HOST = "169.254.170.2";
      EKS_CONTAINER_HOST_IPv4 = "169.254.170.23";
      EKS_CONTAINER_HOST_IPv6 = "[fd00:ec2::23]";
      checkUrl = (url, logger2) => {
        if (url.protocol === "https:") {
          return;
        }
        if (url.hostname === ECS_CONTAINER_HOST || url.hostname === EKS_CONTAINER_HOST_IPv4 || url.hostname === EKS_CONTAINER_HOST_IPv6) {
          return;
        }
        if (url.hostname.includes("[")) {
          if (url.hostname === "[::1]" || url.hostname === "[0000:0000:0000:0000:0000:0000:0000:0001]") {
            return;
          }
        } else {
          if (url.hostname === "localhost") {
            return;
          }
          const ipComponents = url.hostname.split(".");
          const inRange = (component) => {
            const num = parseInt(component, 10);
            return 0 <= num && num <= 255;
          };
          if (ipComponents[0] === "127" && inRange(ipComponents[1]) && inRange(ipComponents[2]) && inRange(ipComponents[3]) && ipComponents.length === 4) {
            return;
          }
        }
        throw new CredentialsProviderError(`URL not accepted. It must either be HTTPS or match one of the following:
  - loopback CIDR 127.0.0.0/8 or [::1/128]
  - ECS container host 169.254.170.2
  - EKS container host 169.254.170.23 or [fd00:ec2::23]`, { logger: logger2 });
      };
    }
  });

  // node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/requestHelpers.js
  function createGetRequest(url) {
    return new HttpRequest({
      protocol: url.protocol,
      hostname: url.hostname,
      port: Number(url.port),
      path: url.pathname,
      query: Array.from(url.searchParams.entries()).reduce((acc, [k3, v3]) => {
        acc[k3] = v3;
        return acc;
      }, {}),
      fragment: url.hash
    });
  }
  async function getCredentials(response, logger2) {
    const stream = sdkStreamMixin(response.body);
    const str = await stream.transformToString();
    if (response.statusCode === 200) {
      const parsed = JSON.parse(str);
      if (typeof parsed.AccessKeyId !== "string" || typeof parsed.SecretAccessKey !== "string" || typeof parsed.Token !== "string" || typeof parsed.Expiration !== "string") {
        throw new CredentialsProviderError("HTTP credential provider response not of the required format, an object matching: { AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }", { logger: logger2 });
      }
      return {
        accessKeyId: parsed.AccessKeyId,
        secretAccessKey: parsed.SecretAccessKey,
        sessionToken: parsed.Token,
        expiration: parseRfc3339DateTime(parsed.Expiration)
      };
    }
    if (response.statusCode >= 400 && response.statusCode < 500) {
      let parsedBody = {};
      try {
        parsedBody = JSON.parse(str);
      } catch (e3) {
      }
      throw Object.assign(new CredentialsProviderError(`Server responded with status: ${response.statusCode}`, { logger: logger2 }), {
        Code: parsedBody.Code,
        Message: parsedBody.Message
      });
    }
    throw new CredentialsProviderError(`Server responded with status: ${response.statusCode}`, { logger: logger2 });
  }
  var init_requestHelpers = __esm({
    "node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/requestHelpers.js"() {
      init_dist_es();
      init_dist_es3();
      init_dist_es27();
      init_dist_es26();
    }
  });

  // node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/retry-wrapper.js
  var retryWrapper;
  var init_retry_wrapper = __esm({
    "node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/retry-wrapper.js"() {
      retryWrapper = (toRetry, maxRetries, delayMs) => {
        return async () => {
          for (let i4 = 0; i4 < maxRetries; ++i4) {
            try {
              return await toRetry();
            } catch (e3) {
              await new Promise((resolve) => setTimeout(resolve, delayMs));
            }
          }
          return await toRetry();
        };
      };
    }
  });

  // node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/fromHttp.browser.js
  var fromHttp;
  var init_fromHttp_browser = __esm({
    "node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/fromHttp.browser.js"() {
      init_dist_es24();
      init_dist_es();
      init_checkUrl();
      init_requestHelpers();
      init_retry_wrapper();
      fromHttp = (options2 = {}) => {
        options2.logger?.debug("@aws-sdk/credential-provider-http - fromHttp");
        let host3;
        const full = options2.credentialsFullUri;
        if (full) {
          host3 = full;
        } else {
          throw new CredentialsProviderError("No HTTP credential provider host provided.", { logger: options2.logger });
        }
        const url = new URL(host3);
        checkUrl(url, options2.logger);
        const requestHandler = new FetchHttpHandler();
        return retryWrapper(async () => {
          const request3 = createGetRequest(url);
          if (options2.authorizationToken) {
            request3.headers.Authorization = options2.authorizationToken;
          }
          const result = await requestHandler.handle(request3);
          return getCredentials(result.response);
        }, options2.maxRetries ?? 3, options2.timeout ?? 1e3);
      };
    }
  });

  // node_modules/@aws-sdk/credential-provider-http/dist-es/index.browser.js
  var init_index_browser = __esm({
    "node_modules/@aws-sdk/credential-provider-http/dist-es/index.browser.js"() {
      init_fromHttp_browser();
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/auth/httpAuthSchemeProvider.js
  function createAwsAuthSigv4HttpAuthOption2(authParameters) {
    return {
      schemeId: "aws.auth#sigv4",
      signingProperties: {
        name: "sts",
        region: authParameters.region
      },
      propertiesExtractor: (config, context) => ({
        signingProperties: {
          config,
          context
        }
      })
    };
  }
  function createSmithyApiNoAuthHttpAuthOption2(authParameters) {
    return {
      schemeId: "smithy.api#noAuth"
    };
  }
  var defaultSTSHttpAuthSchemeParametersProvider, defaultSTSHttpAuthSchemeProvider, resolveStsAuthConfig, resolveHttpAuthSchemeConfig2;
  var init_httpAuthSchemeProvider2 = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/auth/httpAuthSchemeProvider.js"() {
      init_dist_es35();
      init_dist_es11();
      init_STSClient();
      defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input3) => {
        return {
          operation: getSmithyContext(context).operation,
          region: await normalizeProvider(config.region)() || (() => {
            throw new Error("expected `region` to be configured for `aws.auth#sigv4`");
          })()
        };
      };
      defaultSTSHttpAuthSchemeProvider = (authParameters) => {
        const options2 = [];
        switch (authParameters.operation) {
          case "AssumeRoleWithSAML": {
            options2.push(createSmithyApiNoAuthHttpAuthOption2(authParameters));
            break;
          }
          case "AssumeRoleWithWebIdentity": {
            options2.push(createSmithyApiNoAuthHttpAuthOption2(authParameters));
            break;
          }
          default: {
            options2.push(createAwsAuthSigv4HttpAuthOption2(authParameters));
          }
        }
        return options2;
      };
      resolveStsAuthConfig = (input3) => ({
        ...input3,
        stsClientCtor: STSClient
      });
      resolveHttpAuthSchemeConfig2 = (config) => {
        const config_0 = resolveStsAuthConfig(config);
        const config_1 = resolveAwsSdkSigV4Config(config_0);
        return {
          ...config_1
        };
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/endpoint/EndpointParameters.js
  var resolveClientEndpointParameters2, commonParams2;
  var init_EndpointParameters2 = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/endpoint/EndpointParameters.js"() {
      resolveClientEndpointParameters2 = (options2) => {
        return {
          ...options2,
          useDualstackEndpoint: options2.useDualstackEndpoint ?? false,
          useFipsEndpoint: options2.useFipsEndpoint ?? false,
          useGlobalEndpoint: options2.useGlobalEndpoint ?? false,
          defaultSigningName: "sts"
        };
      };
      commonParams2 = {
        UseGlobalEndpoint: { type: "builtInParams", name: "useGlobalEndpoint" },
        UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
        Endpoint: { type: "builtInParams", name: "endpoint" },
        Region: { type: "builtInParams", name: "region" },
        UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/package.json
  var package_default2;
  var init_package2 = __esm({
    "node_modules/@aws-sdk/client-sts/package.json"() {
      package_default2 = {
        name: "@aws-sdk/client-sts",
        description: "AWS SDK for JavaScript Sts Client for Node.js, Browser and React Native",
        version: "3.616.0",
        scripts: {
          build: "concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'",
          "build:cjs": "node ../../scripts/compilation/inline client-sts",
          "build:es": "tsc -p tsconfig.es.json",
          "build:include:deps": "lerna run --scope $npm_package_name --include-dependencies build",
          "build:types": "rimraf ./dist-types tsconfig.types.tsbuildinfo && tsc -p tsconfig.types.json",
          "build:types:downlevel": "downlevel-dts dist-types dist-types/ts3.4",
          clean: "rimraf ./dist-* && rimraf *.tsbuildinfo",
          "extract:docs": "api-extractor run --local",
          "generate:client": "node ../../scripts/generate-clients/single-service --solo sts",
          test: "yarn test:unit",
          "test:unit": "jest"
        },
        main: "./dist-cjs/index.js",
        types: "./dist-types/index.d.ts",
        module: "./dist-es/index.js",
        sideEffects: false,
        dependencies: {
          "@aws-crypto/sha256-browser": "5.2.0",
          "@aws-crypto/sha256-js": "5.2.0",
          "@aws-sdk/client-sso-oidc": "3.616.0",
          "@aws-sdk/core": "3.616.0",
          "@aws-sdk/credential-provider-node": "3.616.0",
          "@aws-sdk/middleware-host-header": "3.616.0",
          "@aws-sdk/middleware-logger": "3.609.0",
          "@aws-sdk/middleware-recursion-detection": "3.616.0",
          "@aws-sdk/middleware-user-agent": "3.616.0",
          "@aws-sdk/region-config-resolver": "3.614.0",
          "@aws-sdk/types": "3.609.0",
          "@aws-sdk/util-endpoints": "3.614.0",
          "@aws-sdk/util-user-agent-browser": "3.609.0",
          "@aws-sdk/util-user-agent-node": "3.614.0",
          "@smithy/config-resolver": "^3.0.5",
          "@smithy/core": "^2.2.7",
          "@smithy/fetch-http-handler": "^3.2.2",
          "@smithy/hash-node": "^3.0.3",
          "@smithy/invalid-dependency": "^3.0.3",
          "@smithy/middleware-content-length": "^3.0.4",
          "@smithy/middleware-endpoint": "^3.0.5",
          "@smithy/middleware-retry": "^3.0.10",
          "@smithy/middleware-serde": "^3.0.3",
          "@smithy/middleware-stack": "^3.0.3",
          "@smithy/node-config-provider": "^3.1.4",
          "@smithy/node-http-handler": "^3.1.3",
          "@smithy/protocol-http": "^4.0.4",
          "@smithy/smithy-client": "^3.1.8",
          "@smithy/types": "^3.3.0",
          "@smithy/url-parser": "^3.0.3",
          "@smithy/util-base64": "^3.0.0",
          "@smithy/util-body-length-browser": "^3.0.0",
          "@smithy/util-body-length-node": "^3.0.0",
          "@smithy/util-defaults-mode-browser": "^3.0.10",
          "@smithy/util-defaults-mode-node": "^3.0.10",
          "@smithy/util-endpoints": "^2.0.5",
          "@smithy/util-middleware": "^3.0.3",
          "@smithy/util-retry": "^3.0.3",
          "@smithy/util-utf8": "^3.0.0",
          tslib: "^2.6.2"
        },
        devDependencies: {
          "@tsconfig/node16": "16.1.3",
          "@types/node": "^16.18.96",
          concurrently: "7.0.0",
          "downlevel-dts": "0.10.1",
          rimraf: "3.0.2",
          typescript: "~4.9.5"
        },
        engines: {
          node: ">=16.0.0"
        },
        typesVersions: {
          "<4.0": {
            "dist-types/*": [
              "dist-types/ts3.4/*"
            ]
          }
        },
        files: [
          "dist-*/**"
        ],
        author: {
          name: "AWS SDK for JavaScript Team",
          url: "https://aws.amazon.com/javascript/"
        },
        license: "Apache-2.0",
        browser: {
          "./dist-es/runtimeConfig": "./dist-es/runtimeConfig.browser"
        },
        "react-native": {
          "./dist-es/runtimeConfig": "./dist-es/runtimeConfig.native"
        },
        homepage: "https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sts",
        repository: {
          type: "git",
          url: "https://github.com/aws/aws-sdk-js-v3.git",
          directory: "clients/client-sts"
        }
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/endpoint/ruleset.js
  var F, G, H, I, J, a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2, q2, r2, s2, t2, u2, v2, w, x, y, z, A, B, C, D, E, _data2, ruleSet2;
  var init_ruleset2 = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/endpoint/ruleset.js"() {
      F = "required";
      G = "type";
      H = "fn";
      I = "argv";
      J = "ref";
      a2 = false;
      b2 = true;
      c2 = "booleanEquals";
      d2 = "stringEquals";
      e2 = "sigv4";
      f2 = "sts";
      g2 = "us-east-1";
      h2 = "endpoint";
      i2 = "https://sts.{Region}.{PartitionResult#dnsSuffix}";
      j2 = "tree";
      k2 = "error";
      l2 = "getAttr";
      m2 = { [F]: false, [G]: "String" };
      n2 = { [F]: true, "default": false, [G]: "Boolean" };
      o2 = { [J]: "Endpoint" };
      p2 = { [H]: "isSet", [I]: [{ [J]: "Region" }] };
      q2 = { [J]: "Region" };
      r2 = { [H]: "aws.partition", [I]: [q2], "assign": "PartitionResult" };
      s2 = { [J]: "UseFIPS" };
      t2 = { [J]: "UseDualStack" };
      u2 = { "url": "https://sts.amazonaws.com", "properties": { "authSchemes": [{ "name": e2, "signingName": f2, "signingRegion": g2 }] }, "headers": {} };
      v2 = {};
      w = { "conditions": [{ [H]: d2, [I]: [q2, "aws-global"] }], [h2]: u2, [G]: h2 };
      x = { [H]: c2, [I]: [s2, true] };
      y = { [H]: c2, [I]: [t2, true] };
      z = { [H]: l2, [I]: [{ [J]: "PartitionResult" }, "supportsFIPS"] };
      A = { [J]: "PartitionResult" };
      B = { [H]: c2, [I]: [true, { [H]: l2, [I]: [A, "supportsDualStack"] }] };
      C = [{ [H]: "isSet", [I]: [o2] }];
      D = [x];
      E = [y];
      _data2 = { version: "1.0", parameters: { Region: m2, UseDualStack: n2, UseFIPS: n2, Endpoint: m2, UseGlobalEndpoint: n2 }, rules: [{ conditions: [{ [H]: c2, [I]: [{ [J]: "UseGlobalEndpoint" }, b2] }, { [H]: "not", [I]: C }, p2, r2, { [H]: c2, [I]: [s2, a2] }, { [H]: c2, [I]: [t2, a2] }], rules: [{ conditions: [{ [H]: d2, [I]: [q2, "ap-northeast-1"] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, "ap-south-1"] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, "ap-southeast-1"] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, "ap-southeast-2"] }], endpoint: u2, [G]: h2 }, w, { conditions: [{ [H]: d2, [I]: [q2, "ca-central-1"] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, "eu-central-1"] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, "eu-north-1"] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, "eu-west-1"] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, "eu-west-2"] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, "eu-west-3"] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, "sa-east-1"] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, g2] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, "us-east-2"] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, "us-west-1"] }], endpoint: u2, [G]: h2 }, { conditions: [{ [H]: d2, [I]: [q2, "us-west-2"] }], endpoint: u2, [G]: h2 }, { endpoint: { url: i2, properties: { authSchemes: [{ name: e2, signingName: f2, signingRegion: "{Region}" }] }, headers: v2 }, [G]: h2 }], [G]: j2 }, { conditions: C, rules: [{ conditions: D, error: "Invalid Configuration: FIPS and custom endpoint are not supported", [G]: k2 }, { conditions: E, error: "Invalid Configuration: Dualstack and custom endpoint are not supported", [G]: k2 }, { endpoint: { url: o2, properties: v2, headers: v2 }, [G]: h2 }], [G]: j2 }, { conditions: [p2], rules: [{ conditions: [r2], rules: [{ conditions: [x, y], rules: [{ conditions: [{ [H]: c2, [I]: [b2, z] }, B], rules: [{ endpoint: { url: "https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: v2, headers: v2 }, [G]: h2 }], [G]: j2 }, { error: "FIPS and DualStack are enabled, but this partition does not support one or both", [G]: k2 }], [G]: j2 }, { conditions: D, rules: [{ conditions: [{ [H]: c2, [I]: [z, b2] }], rules: [{ conditions: [{ [H]: d2, [I]: [{ [H]: l2, [I]: [A, "name"] }, "aws-us-gov"] }], endpoint: { url: "https://sts.{Region}.amazonaws.com", properties: v2, headers: v2 }, [G]: h2 }, { endpoint: { url: "https://sts-fips.{Region}.{PartitionResult#dnsSuffix}", properties: v2, headers: v2 }, [G]: h2 }], [G]: j2 }, { error: "FIPS is enabled but this partition does not support FIPS", [G]: k2 }], [G]: j2 }, { conditions: E, rules: [{ conditions: [B], rules: [{ endpoint: { url: "https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: v2, headers: v2 }, [G]: h2 }], [G]: j2 }, { error: "DualStack is enabled but this partition does not support DualStack", [G]: k2 }], [G]: j2 }, w, { endpoint: { url: i2, properties: v2, headers: v2 }, [G]: h2 }], [G]: j2 }], [G]: j2 }, { error: "Invalid Configuration: Missing Region", [G]: k2 }] };
      ruleSet2 = _data2;
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/endpoint/endpointResolver.js
  var defaultEndpointResolver2;
  var init_endpointResolver2 = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/endpoint/endpointResolver.js"() {
      init_dist_es8();
      init_dist_es7();
      init_ruleset2();
      defaultEndpointResolver2 = (endpointParams, context = {}) => {
        return resolveEndpoint(ruleSet2, {
          endpointParams,
          logger: context.logger
        });
      };
      customEndpointFunctions.aws = awsEndpointFunctions;
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.shared.js
  var getRuntimeConfig3;
  var init_runtimeConfig_shared2 = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.shared.js"() {
      init_dist_es35();
      init_dist_es29();
      init_dist_es27();
      init_dist_es14();
      init_dist_es21();
      init_dist_es20();
      init_httpAuthSchemeProvider2();
      init_endpointResolver2();
      getRuntimeConfig3 = (config) => {
        return {
          apiVersion: "2011-06-15",
          base64Decoder: config?.base64Decoder ?? fromBase64,
          base64Encoder: config?.base64Encoder ?? toBase64,
          disableHostPrefix: config?.disableHostPrefix ?? false,
          endpointProvider: config?.endpointProvider ?? defaultEndpointResolver2,
          extensions: config?.extensions ?? [],
          httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSTSHttpAuthSchemeProvider,
          httpAuthSchemes: config?.httpAuthSchemes ?? [
            {
              schemeId: "aws.auth#sigv4",
              identityProvider: (ipc) => ipc.getIdentityProvider("aws.auth#sigv4"),
              signer: new AwsSdkSigV4Signer()
            },
            {
              schemeId: "smithy.api#noAuth",
              identityProvider: (ipc) => ipc.getIdentityProvider("smithy.api#noAuth") || (async () => ({})),
              signer: new NoAuthSigner()
            }
          ],
          logger: config?.logger ?? new NoOpLogger(),
          serviceId: config?.serviceId ?? "STS",
          urlParser: config?.urlParser ?? parseUrl,
          utf8Decoder: config?.utf8Decoder ?? fromUtf8,
          utf8Encoder: config?.utf8Encoder ?? toUtf8
        };
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.browser.js
  var getRuntimeConfig4;
  var init_runtimeConfig_browser2 = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.browser.js"() {
      init_package2();
      init_module2();
      init_dist_es37();
      init_dist_es12();
      init_dist_es24();
      init_dist_es38();
      init_dist_es39();
      init_dist_es18();
      init_runtimeConfig_shared2();
      init_dist_es27();
      init_dist_es40();
      getRuntimeConfig4 = (config) => {
        const defaultsMode = resolveDefaultsModeConfig(config);
        const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);
        const clientSharedValues = getRuntimeConfig3(config);
        return {
          ...clientSharedValues,
          ...config,
          runtime: "browser",
          defaultsMode,
          bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,
          credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_2) => () => Promise.reject(new Error("Credential is missing"))),
          defaultUserAgentProvider: config?.defaultUserAgentProvider ?? defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: package_default2.version }),
          maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,
          region: config?.region ?? invalidProvider("Region is missing"),
          requestHandler: FetchHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),
          retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),
          sha256: config?.sha256 ?? Sha2562,
          streamCollector: config?.streamCollector ?? streamCollector,
          useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),
          useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT))
        };
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/auth/httpAuthExtensionConfiguration.js
  var getHttpAuthExtensionConfiguration2, resolveHttpAuthRuntimeConfig2;
  var init_httpAuthExtensionConfiguration2 = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/auth/httpAuthExtensionConfiguration.js"() {
      getHttpAuthExtensionConfiguration2 = (runtimeConfig) => {
        const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
        let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
        let _credentials = runtimeConfig.credentials;
        return {
          setHttpAuthScheme(httpAuthScheme) {
            const index4 = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
            if (index4 === -1) {
              _httpAuthSchemes.push(httpAuthScheme);
            } else {
              _httpAuthSchemes.splice(index4, 1, httpAuthScheme);
            }
          },
          httpAuthSchemes() {
            return _httpAuthSchemes;
          },
          setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
            _httpAuthSchemeProvider = httpAuthSchemeProvider;
          },
          httpAuthSchemeProvider() {
            return _httpAuthSchemeProvider;
          },
          setCredentials(credentials) {
            _credentials = credentials;
          },
          credentials() {
            return _credentials;
          }
        };
      };
      resolveHttpAuthRuntimeConfig2 = (config) => {
        return {
          httpAuthSchemes: config.httpAuthSchemes(),
          httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
          credentials: config.credentials()
        };
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/runtimeExtensions.js
  var asPartial2, resolveRuntimeExtensions2;
  var init_runtimeExtensions2 = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/runtimeExtensions.js"() {
      init_dist_es41();
      init_dist_es3();
      init_dist_es27();
      init_httpAuthExtensionConfiguration2();
      asPartial2 = (t3) => t3;
      resolveRuntimeExtensions2 = (runtimeConfig, extensions) => {
        const extensionConfiguration = {
          ...asPartial2(getAwsRegionExtensionConfiguration(runtimeConfig)),
          ...asPartial2(getDefaultExtensionConfiguration(runtimeConfig)),
          ...asPartial2(getHttpHandlerExtensionConfiguration(runtimeConfig)),
          ...asPartial2(getHttpAuthExtensionConfiguration2(runtimeConfig))
        };
        extensions.forEach((extension) => extension.configure(extensionConfiguration));
        return {
          ...runtimeConfig,
          ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),
          ...resolveDefaultRuntimeConfig(extensionConfiguration),
          ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),
          ...resolveHttpAuthRuntimeConfig2(extensionConfiguration)
        };
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/STSClient.js
  var STSClient;
  var init_STSClient = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/STSClient.js"() {
      init_dist_es4();
      init_dist_es5();
      init_dist_es6();
      init_dist_es9();
      init_dist_es12();
      init_dist_es29();
      init_dist_es30();
      init_dist_es16();
      init_dist_es28();
      init_dist_es27();
      init_httpAuthSchemeProvider2();
      init_EndpointParameters2();
      init_runtimeConfig_browser2();
      init_runtimeExtensions2();
      STSClient = class extends Client {
        constructor(...[configuration]) {
          const _config_0 = getRuntimeConfig4(configuration || {});
          const _config_1 = resolveClientEndpointParameters2(_config_0);
          const _config_2 = resolveRegionConfig(_config_1);
          const _config_3 = resolveEndpointConfig(_config_2);
          const _config_4 = resolveHostHeaderConfig(_config_3);
          const _config_5 = resolveUserAgentConfig(_config_4);
          const _config_6 = resolveRetryConfig(_config_5);
          const _config_7 = resolveHttpAuthSchemeConfig2(_config_6);
          const _config_8 = resolveRuntimeExtensions2(_config_7, configuration?.extensions || []);
          super(_config_8);
          this.config = _config_8;
          this.middlewareStack.use(getHostHeaderPlugin(this.config));
          this.middlewareStack.use(getLoggerPlugin(this.config));
          this.middlewareStack.use(getRecursionDetectionPlugin(this.config));
          this.middlewareStack.use(getUserAgentPlugin(this.config));
          this.middlewareStack.use(getRetryPlugin(this.config));
          this.middlewareStack.use(getContentLengthPlugin(this.config));
          this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {
            httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
            identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
          }));
          this.middlewareStack.use(getHttpSigningPlugin(this.config));
        }
        destroy() {
          super.destroy();
        }
        getDefaultHttpAuthSchemeParametersProvider() {
          return defaultSTSHttpAuthSchemeParametersProvider;
        }
        getIdentityProviderConfigProvider() {
          return async (config) => new DefaultIdentityProviderConfig({
            "aws.auth#sigv4": config.credentials
          });
        }
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/models/STSServiceException.js
  var STSServiceException;
  var init_STSServiceException = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/models/STSServiceException.js"() {
      init_dist_es27();
      STSServiceException = class _STSServiceException extends ServiceException {
        constructor(options2) {
          super(options2);
          Object.setPrototypeOf(this, _STSServiceException.prototype);
        }
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/models/models_0.js
  var ExpiredTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, IDPRejectedClaimException, InvalidIdentityTokenException, IDPCommunicationErrorException, InvalidAuthorizationMessageException, CredentialsFilterSensitiveLog, AssumeRoleResponseFilterSensitiveLog, AssumeRoleWithSAMLRequestFilterSensitiveLog, AssumeRoleWithSAMLResponseFilterSensitiveLog, AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog, GetFederationTokenResponseFilterSensitiveLog, GetSessionTokenResponseFilterSensitiveLog;
  var init_models_02 = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/models/models_0.js"() {
      init_dist_es27();
      init_STSServiceException();
      ExpiredTokenException = class _ExpiredTokenException extends STSServiceException {
        constructor(opts) {
          super({
            name: "ExpiredTokenException",
            $fault: "client",
            ...opts
          });
          this.name = "ExpiredTokenException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _ExpiredTokenException.prototype);
        }
      };
      MalformedPolicyDocumentException = class _MalformedPolicyDocumentException extends STSServiceException {
        constructor(opts) {
          super({
            name: "MalformedPolicyDocumentException",
            $fault: "client",
            ...opts
          });
          this.name = "MalformedPolicyDocumentException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _MalformedPolicyDocumentException.prototype);
        }
      };
      PackedPolicyTooLargeException = class _PackedPolicyTooLargeException extends STSServiceException {
        constructor(opts) {
          super({
            name: "PackedPolicyTooLargeException",
            $fault: "client",
            ...opts
          });
          this.name = "PackedPolicyTooLargeException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _PackedPolicyTooLargeException.prototype);
        }
      };
      RegionDisabledException = class _RegionDisabledException extends STSServiceException {
        constructor(opts) {
          super({
            name: "RegionDisabledException",
            $fault: "client",
            ...opts
          });
          this.name = "RegionDisabledException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _RegionDisabledException.prototype);
        }
      };
      IDPRejectedClaimException = class _IDPRejectedClaimException extends STSServiceException {
        constructor(opts) {
          super({
            name: "IDPRejectedClaimException",
            $fault: "client",
            ...opts
          });
          this.name = "IDPRejectedClaimException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _IDPRejectedClaimException.prototype);
        }
      };
      InvalidIdentityTokenException = class _InvalidIdentityTokenException extends STSServiceException {
        constructor(opts) {
          super({
            name: "InvalidIdentityTokenException",
            $fault: "client",
            ...opts
          });
          this.name = "InvalidIdentityTokenException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _InvalidIdentityTokenException.prototype);
        }
      };
      IDPCommunicationErrorException = class _IDPCommunicationErrorException extends STSServiceException {
        constructor(opts) {
          super({
            name: "IDPCommunicationErrorException",
            $fault: "client",
            ...opts
          });
          this.name = "IDPCommunicationErrorException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _IDPCommunicationErrorException.prototype);
        }
      };
      InvalidAuthorizationMessageException = class _InvalidAuthorizationMessageException extends STSServiceException {
        constructor(opts) {
          super({
            name: "InvalidAuthorizationMessageException",
            $fault: "client",
            ...opts
          });
          this.name = "InvalidAuthorizationMessageException";
          this.$fault = "client";
          Object.setPrototypeOf(this, _InvalidAuthorizationMessageException.prototype);
        }
      };
      CredentialsFilterSensitiveLog = (obj) => ({
        ...obj,
        ...obj.SecretAccessKey && { SecretAccessKey: SENSITIVE_STRING }
      });
      AssumeRoleResponseFilterSensitiveLog = (obj) => ({
        ...obj,
        ...obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }
      });
      AssumeRoleWithSAMLRequestFilterSensitiveLog = (obj) => ({
        ...obj,
        ...obj.SAMLAssertion && { SAMLAssertion: SENSITIVE_STRING }
      });
      AssumeRoleWithSAMLResponseFilterSensitiveLog = (obj) => ({
        ...obj,
        ...obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }
      });
      AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({
        ...obj,
        ...obj.WebIdentityToken && { WebIdentityToken: SENSITIVE_STRING }
      });
      AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({
        ...obj,
        ...obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }
      });
      GetFederationTokenResponseFilterSensitiveLog = (obj) => ({
        ...obj,
        ...obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }
      });
      GetSessionTokenResponseFilterSensitiveLog = (obj) => ({
        ...obj,
        ...obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }
      });
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/protocols/Aws_query.js
  var se_AssumeRoleCommand, se_AssumeRoleWithSAMLCommand, se_AssumeRoleWithWebIdentityCommand, se_DecodeAuthorizationMessageCommand, se_GetAccessKeyInfoCommand, se_GetCallerIdentityCommand, se_GetFederationTokenCommand, se_GetSessionTokenCommand, de_AssumeRoleCommand, de_AssumeRoleWithSAMLCommand, de_AssumeRoleWithWebIdentityCommand, de_DecodeAuthorizationMessageCommand, de_GetAccessKeyInfoCommand, de_GetCallerIdentityCommand, de_GetFederationTokenCommand, de_GetSessionTokenCommand, de_CommandError2, de_ExpiredTokenExceptionRes, de_IDPCommunicationErrorExceptionRes, de_IDPRejectedClaimExceptionRes, de_InvalidAuthorizationMessageExceptionRes, de_InvalidIdentityTokenExceptionRes, de_MalformedPolicyDocumentExceptionRes, de_PackedPolicyTooLargeExceptionRes, de_RegionDisabledExceptionRes, se_AssumeRoleRequest, se_AssumeRoleWithSAMLRequest, se_AssumeRoleWithWebIdentityRequest, se_DecodeAuthorizationMessageRequest, se_GetAccessKeyInfoRequest, se_GetCallerIdentityRequest, se_GetFederationTokenRequest, se_GetSessionTokenRequest, se_policyDescriptorListType, se_PolicyDescriptorType, se_ProvidedContext, se_ProvidedContextsListType, se_Tag, se_tagKeyListType, se_tagListType, de_AssumedRoleUser, de_AssumeRoleResponse, de_AssumeRoleWithSAMLResponse, de_AssumeRoleWithWebIdentityResponse, de_Credentials2, de_DecodeAuthorizationMessageResponse, de_ExpiredTokenException, de_FederatedUser, de_GetAccessKeyInfoResponse, de_GetCallerIdentityResponse, de_GetFederationTokenResponse, de_GetSessionTokenResponse, de_IDPCommunicationErrorException, de_IDPRejectedClaimException, de_InvalidAuthorizationMessageException, de_InvalidIdentityTokenException, de_MalformedPolicyDocumentException, de_PackedPolicyTooLargeException, de_RegionDisabledException, deserializeMetadata3, throwDefaultError3, buildHttpRpcRequest2, SHARED_HEADERS, _, _A, _AKI, _AR, _ARI, _ARU, _ARWSAML, _ARWWI, _Ac, _Ar, _Au, _C, _CA, _DAM, _DM, _DS, _E, _EI, _EM, _FU, _FUI, _GAKI, _GCI, _GFT, _GST, _I, _K, _N, _NQ, _P, _PA, _PAr, _PAro, _PC, _PI, _PPS, _Pr, _RA, _RSN, _S, _SAK, _SAMLA, _SFWIT, _SI, _SN, _ST, _STe, _T, _TC, _TTK, _UI, _V, _Va, _WIT, _a, _m, buildFormUrlencodedString, loadQueryErrorCode;
  var init_Aws_query = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/protocols/Aws_query.js"() {
      init_dist_es35();
      init_dist_es3();
      init_dist_es27();
      init_models_02();
      init_STSServiceException();
      se_AssumeRoleCommand = async (input3, context) => {
        const headers = SHARED_HEADERS;
        let body2;
        body2 = buildFormUrlencodedString({
          ...se_AssumeRoleRequest(input3, context),
          [_A]: _AR,
          [_V]: _
        });
        return buildHttpRpcRequest2(context, headers, "/", void 0, body2);
      };
      se_AssumeRoleWithSAMLCommand = async (input3, context) => {
        const headers = SHARED_HEADERS;
        let body2;
        body2 = buildFormUrlencodedString({
          ...se_AssumeRoleWithSAMLRequest(input3, context),
          [_A]: _ARWSAML,
          [_V]: _
        });
        return buildHttpRpcRequest2(context, headers, "/", void 0, body2);
      };
      se_AssumeRoleWithWebIdentityCommand = async (input3, context) => {
        const headers = SHARED_HEADERS;
        let body2;
        body2 = buildFormUrlencodedString({
          ...se_AssumeRoleWithWebIdentityRequest(input3, context),
          [_A]: _ARWWI,
          [_V]: _
        });
        return buildHttpRpcRequest2(context, headers, "/", void 0, body2);
      };
      se_DecodeAuthorizationMessageCommand = async (input3, context) => {
        const headers = SHARED_HEADERS;
        let body2;
        body2 = buildFormUrlencodedString({
          ...se_DecodeAuthorizationMessageRequest(input3, context),
          [_A]: _DAM,
          [_V]: _
        });
        return buildHttpRpcRequest2(context, headers, "/", void 0, body2);
      };
      se_GetAccessKeyInfoCommand = async (input3, context) => {
        const headers = SHARED_HEADERS;
        let body2;
        body2 = buildFormUrlencodedString({
          ...se_GetAccessKeyInfoRequest(input3, context),
          [_A]: _GAKI,
          [_V]: _
        });
        return buildHttpRpcRequest2(context, headers, "/", void 0, body2);
      };
      se_GetCallerIdentityCommand = async (input3, context) => {
        const headers = SHARED_HEADERS;
        let body2;
        body2 = buildFormUrlencodedString({
          ...se_GetCallerIdentityRequest(input3, context),
          [_A]: _GCI,
          [_V]: _
        });
        return buildHttpRpcRequest2(context, headers, "/", void 0, body2);
      };
      se_GetFederationTokenCommand = async (input3, context) => {
        const headers = SHARED_HEADERS;
        let body2;
        body2 = buildFormUrlencodedString({
          ...se_GetFederationTokenRequest(input3, context),
          [_A]: _GFT,
          [_V]: _
        });
        return buildHttpRpcRequest2(context, headers, "/", void 0, body2);
      };
      se_GetSessionTokenCommand = async (input3, context) => {
        const headers = SHARED_HEADERS;
        let body2;
        body2 = buildFormUrlencodedString({
          ...se_GetSessionTokenRequest(input3, context),
          [_A]: _GST,
          [_V]: _
        });
        return buildHttpRpcRequest2(context, headers, "/", void 0, body2);
      };
      de_AssumeRoleCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError2(output2, context);
        }
        const data = await parseXmlBody(output2.body, context);
        let contents = {};
        contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);
        const response = {
          $metadata: deserializeMetadata3(output2),
          ...contents
        };
        return response;
      };
      de_AssumeRoleWithSAMLCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError2(output2, context);
        }
        const data = await parseXmlBody(output2.body, context);
        let contents = {};
        contents = de_AssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);
        const response = {
          $metadata: deserializeMetadata3(output2),
          ...contents
        };
        return response;
      };
      de_AssumeRoleWithWebIdentityCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError2(output2, context);
        }
        const data = await parseXmlBody(output2.body, context);
        let contents = {};
        contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);
        const response = {
          $metadata: deserializeMetadata3(output2),
          ...contents
        };
        return response;
      };
      de_DecodeAuthorizationMessageCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError2(output2, context);
        }
        const data = await parseXmlBody(output2.body, context);
        let contents = {};
        contents = de_DecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);
        const response = {
          $metadata: deserializeMetadata3(output2),
          ...contents
        };
        return response;
      };
      de_GetAccessKeyInfoCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError2(output2, context);
        }
        const data = await parseXmlBody(output2.body, context);
        let contents = {};
        contents = de_GetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);
        const response = {
          $metadata: deserializeMetadata3(output2),
          ...contents
        };
        return response;
      };
      de_GetCallerIdentityCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError2(output2, context);
        }
        const data = await parseXmlBody(output2.body, context);
        let contents = {};
        contents = de_GetCallerIdentityResponse(data.GetCallerIdentityResult, context);
        const response = {
          $metadata: deserializeMetadata3(output2),
          ...contents
        };
        return response;
      };
      de_GetFederationTokenCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError2(output2, context);
        }
        const data = await parseXmlBody(output2.body, context);
        let contents = {};
        contents = de_GetFederationTokenResponse(data.GetFederationTokenResult, context);
        const response = {
          $metadata: deserializeMetadata3(output2),
          ...contents
        };
        return response;
      };
      de_GetSessionTokenCommand = async (output2, context) => {
        if (output2.statusCode >= 300) {
          return de_CommandError2(output2, context);
        }
        const data = await parseXmlBody(output2.body, context);
        let contents = {};
        contents = de_GetSessionTokenResponse(data.GetSessionTokenResult, context);
        const response = {
          $metadata: deserializeMetadata3(output2),
          ...contents
        };
        return response;
      };
      de_CommandError2 = async (output2, context) => {
        const parsedOutput = {
          ...output2,
          body: await parseXmlErrorBody(output2.body, context)
        };
        const errorCode = loadQueryErrorCode(output2, parsedOutput.body);
        switch (errorCode) {
          case "ExpiredTokenException":
          case "com.amazonaws.sts#ExpiredTokenException":
            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);
          case "MalformedPolicyDocument":
          case "com.amazonaws.sts#MalformedPolicyDocumentException":
            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);
          case "PackedPolicyTooLarge":
          case "com.amazonaws.sts#PackedPolicyTooLargeException":
            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);
          case "RegionDisabledException":
          case "com.amazonaws.sts#RegionDisabledException":
            throw await de_RegionDisabledExceptionRes(parsedOutput, context);
          case "IDPRejectedClaim":
          case "com.amazonaws.sts#IDPRejectedClaimException":
            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);
          case "InvalidIdentityToken":
          case "com.amazonaws.sts#InvalidIdentityTokenException":
            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);
          case "IDPCommunicationError":
          case "com.amazonaws.sts#IDPCommunicationErrorException":
            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);
          case "InvalidAuthorizationMessageException":
          case "com.amazonaws.sts#InvalidAuthorizationMessageException":
            throw await de_InvalidAuthorizationMessageExceptionRes(parsedOutput, context);
          default:
            const parsedBody = parsedOutput.body;
            return throwDefaultError3({
              output: output2,
              parsedBody: parsedBody.Error,
              errorCode
            });
        }
      };
      de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = de_ExpiredTokenException(body2.Error, context);
        const exception = new ExpiredTokenException({
          $metadata: deserializeMetadata3(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = de_IDPCommunicationErrorException(body2.Error, context);
        const exception = new IDPCommunicationErrorException({
          $metadata: deserializeMetadata3(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = de_IDPRejectedClaimException(body2.Error, context);
        const exception = new IDPRejectedClaimException({
          $metadata: deserializeMetadata3(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_InvalidAuthorizationMessageExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = de_InvalidAuthorizationMessageException(body2.Error, context);
        const exception = new InvalidAuthorizationMessageException({
          $metadata: deserializeMetadata3(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = de_InvalidIdentityTokenException(body2.Error, context);
        const exception = new InvalidIdentityTokenException({
          $metadata: deserializeMetadata3(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = de_MalformedPolicyDocumentException(body2.Error, context);
        const exception = new MalformedPolicyDocumentException({
          $metadata: deserializeMetadata3(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = de_PackedPolicyTooLargeException(body2.Error, context);
        const exception = new PackedPolicyTooLargeException({
          $metadata: deserializeMetadata3(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      de_RegionDisabledExceptionRes = async (parsedOutput, context) => {
        const body2 = parsedOutput.body;
        const deserialized = de_RegionDisabledException(body2.Error, context);
        const exception = new RegionDisabledException({
          $metadata: deserializeMetadata3(parsedOutput),
          ...deserialized
        });
        return decorateServiceException(exception, body2);
      };
      se_AssumeRoleRequest = (input3, context) => {
        const entries = {};
        if (input3[_RA] != null) {
          entries[_RA] = input3[_RA];
        }
        if (input3[_RSN] != null) {
          entries[_RSN] = input3[_RSN];
        }
        if (input3[_PA] != null) {
          const memberEntries = se_policyDescriptorListType(input3[_PA], context);
          if (input3[_PA]?.length === 0) {
            entries.PolicyArns = [];
          }
          Object.entries(memberEntries).forEach(([key2, value14]) => {
            const loc = `PolicyArns.${key2}`;
            entries[loc] = value14;
          });
        }
        if (input3[_P] != null) {
          entries[_P] = input3[_P];
        }
        if (input3[_DS] != null) {
          entries[_DS] = input3[_DS];
        }
        if (input3[_T] != null) {
          const memberEntries = se_tagListType(input3[_T], context);
          if (input3[_T]?.length === 0) {
            entries.Tags = [];
          }
          Object.entries(memberEntries).forEach(([key2, value14]) => {
            const loc = `Tags.${key2}`;
            entries[loc] = value14;
          });
        }
        if (input3[_TTK] != null) {
          const memberEntries = se_tagKeyListType(input3[_TTK], context);
          if (input3[_TTK]?.length === 0) {
            entries.TransitiveTagKeys = [];
          }
          Object.entries(memberEntries).forEach(([key2, value14]) => {
            const loc = `TransitiveTagKeys.${key2}`;
            entries[loc] = value14;
          });
        }
        if (input3[_EI] != null) {
          entries[_EI] = input3[_EI];
        }
        if (input3[_SN] != null) {
          entries[_SN] = input3[_SN];
        }
        if (input3[_TC] != null) {
          entries[_TC] = input3[_TC];
        }
        if (input3[_SI] != null) {
          entries[_SI] = input3[_SI];
        }
        if (input3[_PC] != null) {
          const memberEntries = se_ProvidedContextsListType(input3[_PC], context);
          if (input3[_PC]?.length === 0) {
            entries.ProvidedContexts = [];
          }
          Object.entries(memberEntries).forEach(([key2, value14]) => {
            const loc = `ProvidedContexts.${key2}`;
            entries[loc] = value14;
          });
        }
        return entries;
      };
      se_AssumeRoleWithSAMLRequest = (input3, context) => {
        const entries = {};
        if (input3[_RA] != null) {
          entries[_RA] = input3[_RA];
        }
        if (input3[_PAr] != null) {
          entries[_PAr] = input3[_PAr];
        }
        if (input3[_SAMLA] != null) {
          entries[_SAMLA] = input3[_SAMLA];
        }
        if (input3[_PA] != null) {
          const memberEntries = se_policyDescriptorListType(input3[_PA], context);
          if (input3[_PA]?.length === 0) {
            entries.PolicyArns = [];
          }
          Object.entries(memberEntries).forEach(([key2, value14]) => {
            const loc = `PolicyArns.${key2}`;
            entries[loc] = value14;
          });
        }
        if (input3[_P] != null) {
          entries[_P] = input3[_P];
        }
        if (input3[_DS] != null) {
          entries[_DS] = input3[_DS];
        }
        return entries;
      };
      se_AssumeRoleWithWebIdentityRequest = (input3, context) => {
        const entries = {};
        if (input3[_RA] != null) {
          entries[_RA] = input3[_RA];
        }
        if (input3[_RSN] != null) {
          entries[_RSN] = input3[_RSN];
        }
        if (input3[_WIT] != null) {
          entries[_WIT] = input3[_WIT];
        }
        if (input3[_PI] != null) {
          entries[_PI] = input3[_PI];
        }
        if (input3[_PA] != null) {
          const memberEntries = se_policyDescriptorListType(input3[_PA], context);
          if (input3[_PA]?.length === 0) {
            entries.PolicyArns = [];
          }
          Object.entries(memberEntries).forEach(([key2, value14]) => {
            const loc = `PolicyArns.${key2}`;
            entries[loc] = value14;
          });
        }
        if (input3[_P] != null) {
          entries[_P] = input3[_P];
        }
        if (input3[_DS] != null) {
          entries[_DS] = input3[_DS];
        }
        return entries;
      };
      se_DecodeAuthorizationMessageRequest = (input3, context) => {
        const entries = {};
        if (input3[_EM] != null) {
          entries[_EM] = input3[_EM];
        }
        return entries;
      };
      se_GetAccessKeyInfoRequest = (input3, context) => {
        const entries = {};
        if (input3[_AKI] != null) {
          entries[_AKI] = input3[_AKI];
        }
        return entries;
      };
      se_GetCallerIdentityRequest = (input3, context) => {
        const entries = {};
        return entries;
      };
      se_GetFederationTokenRequest = (input3, context) => {
        const entries = {};
        if (input3[_N] != null) {
          entries[_N] = input3[_N];
        }
        if (input3[_P] != null) {
          entries[_P] = input3[_P];
        }
        if (input3[_PA] != null) {
          const memberEntries = se_policyDescriptorListType(input3[_PA], context);
          if (input3[_PA]?.length === 0) {
            entries.PolicyArns = [];
          }
          Object.entries(memberEntries).forEach(([key2, value14]) => {
            const loc = `PolicyArns.${key2}`;
            entries[loc] = value14;
          });
        }
        if (input3[_DS] != null) {
          entries[_DS] = input3[_DS];
        }
        if (input3[_T] != null) {
          const memberEntries = se_tagListType(input3[_T], context);
          if (input3[_T]?.length === 0) {
            entries.Tags = [];
          }
          Object.entries(memberEntries).forEach(([key2, value14]) => {
            const loc = `Tags.${key2}`;
            entries[loc] = value14;
          });
        }
        return entries;
      };
      se_GetSessionTokenRequest = (input3, context) => {
        const entries = {};
        if (input3[_DS] != null) {
          entries[_DS] = input3[_DS];
        }
        if (input3[_SN] != null) {
          entries[_SN] = input3[_SN];
        }
        if (input3[_TC] != null) {
          entries[_TC] = input3[_TC];
        }
        return entries;
      };
      se_policyDescriptorListType = (input3, context) => {
        const entries = {};
        let counter = 1;
        for (const entry of input3) {
          if (entry === null) {
            continue;
          }
          const memberEntries = se_PolicyDescriptorType(entry, context);
          Object.entries(memberEntries).forEach(([key2, value14]) => {
            entries[`member.${counter}.${key2}`] = value14;
          });
          counter++;
        }
        return entries;
      };
      se_PolicyDescriptorType = (input3, context) => {
        const entries = {};
        if (input3[_a] != null) {
          entries[_a] = input3[_a];
        }
        return entries;
      };
      se_ProvidedContext = (input3, context) => {
        const entries = {};
        if (input3[_PAro] != null) {
          entries[_PAro] = input3[_PAro];
        }
        if (input3[_CA] != null) {
          entries[_CA] = input3[_CA];
        }
        return entries;
      };
      se_ProvidedContextsListType = (input3, context) => {
        const entries = {};
        let counter = 1;
        for (const entry of input3) {
          if (entry === null) {
            continue;
          }
          const memberEntries = se_ProvidedContext(entry, context);
          Object.entries(memberEntries).forEach(([key2, value14]) => {
            entries[`member.${counter}.${key2}`] = value14;
          });
          counter++;
        }
        return entries;
      };
      se_Tag = (input3, context) => {
        const entries = {};
        if (input3[_K] != null) {
          entries[_K] = input3[_K];
        }
        if (input3[_Va] != null) {
          entries[_Va] = input3[_Va];
        }
        return entries;
      };
      se_tagKeyListType = (input3, context) => {
        const entries = {};
        let counter = 1;
        for (const entry of input3) {
          if (entry === null) {
            continue;
          }
          entries[`member.${counter}`] = entry;
          counter++;
        }
        return entries;
      };
      se_tagListType = (input3, context) => {
        const entries = {};
        let counter = 1;
        for (const entry of input3) {
          if (entry === null) {
            continue;
          }
          const memberEntries = se_Tag(entry, context);
          Object.entries(memberEntries).forEach(([key2, value14]) => {
            entries[`member.${counter}.${key2}`] = value14;
          });
          counter++;
        }
        return entries;
      };
      de_AssumedRoleUser = (output2, context) => {
        const contents = {};
        if (output2[_ARI] != null) {
          contents[_ARI] = expectString(output2[_ARI]);
        }
        if (output2[_Ar] != null) {
          contents[_Ar] = expectString(output2[_Ar]);
        }
        return contents;
      };
      de_AssumeRoleResponse = (output2, context) => {
        const contents = {};
        if (output2[_C] != null) {
          contents[_C] = de_Credentials2(output2[_C], context);
        }
        if (output2[_ARU] != null) {
          contents[_ARU] = de_AssumedRoleUser(output2[_ARU], context);
        }
        if (output2[_PPS] != null) {
          contents[_PPS] = strictParseInt32(output2[_PPS]);
        }
        if (output2[_SI] != null) {
          contents[_SI] = expectString(output2[_SI]);
        }
        return contents;
      };
      de_AssumeRoleWithSAMLResponse = (output2, context) => {
        const contents = {};
        if (output2[_C] != null) {
          contents[_C] = de_Credentials2(output2[_C], context);
        }
        if (output2[_ARU] != null) {
          contents[_ARU] = de_AssumedRoleUser(output2[_ARU], context);
        }
        if (output2[_PPS] != null) {
          contents[_PPS] = strictParseInt32(output2[_PPS]);
        }
        if (output2[_S] != null) {
          contents[_S] = expectString(output2[_S]);
        }
        if (output2[_ST] != null) {
          contents[_ST] = expectString(output2[_ST]);
        }
        if (output2[_I] != null) {
          contents[_I] = expectString(output2[_I]);
        }
        if (output2[_Au] != null) {
          contents[_Au] = expectString(output2[_Au]);
        }
        if (output2[_NQ] != null) {
          contents[_NQ] = expectString(output2[_NQ]);
        }
        if (output2[_SI] != null) {
          contents[_SI] = expectString(output2[_SI]);
        }
        return contents;
      };
      de_AssumeRoleWithWebIdentityResponse = (output2, context) => {
        const contents = {};
        if (output2[_C] != null) {
          contents[_C] = de_Credentials2(output2[_C], context);
        }
        if (output2[_SFWIT] != null) {
          contents[_SFWIT] = expectString(output2[_SFWIT]);
        }
        if (output2[_ARU] != null) {
          contents[_ARU] = de_AssumedRoleUser(output2[_ARU], context);
        }
        if (output2[_PPS] != null) {
          contents[_PPS] = strictParseInt32(output2[_PPS]);
        }
        if (output2[_Pr] != null) {
          contents[_Pr] = expectString(output2[_Pr]);
        }
        if (output2[_Au] != null) {
          contents[_Au] = expectString(output2[_Au]);
        }
        if (output2[_SI] != null) {
          contents[_SI] = expectString(output2[_SI]);
        }
        return contents;
      };
      de_Credentials2 = (output2, context) => {
        const contents = {};
        if (output2[_AKI] != null) {
          contents[_AKI] = expectString(output2[_AKI]);
        }
        if (output2[_SAK] != null) {
          contents[_SAK] = expectString(output2[_SAK]);
        }
        if (output2[_STe] != null) {
          contents[_STe] = expectString(output2[_STe]);
        }
        if (output2[_E] != null) {
          contents[_E] = expectNonNull(parseRfc3339DateTimeWithOffset(output2[_E]));
        }
        return contents;
      };
      de_DecodeAuthorizationMessageResponse = (output2, context) => {
        const contents = {};
        if (output2[_DM] != null) {
          contents[_DM] = expectString(output2[_DM]);
        }
        return contents;
      };
      de_ExpiredTokenException = (output2, context) => {
        const contents = {};
        if (output2[_m] != null) {
          contents[_m] = expectString(output2[_m]);
        }
        return contents;
      };
      de_FederatedUser = (output2, context) => {
        const contents = {};
        if (output2[_FUI] != null) {
          contents[_FUI] = expectString(output2[_FUI]);
        }
        if (output2[_Ar] != null) {
          contents[_Ar] = expectString(output2[_Ar]);
        }
        return contents;
      };
      de_GetAccessKeyInfoResponse = (output2, context) => {
        const contents = {};
        if (output2[_Ac] != null) {
          contents[_Ac] = expectString(output2[_Ac]);
        }
        return contents;
      };
      de_GetCallerIdentityResponse = (output2, context) => {
        const contents = {};
        if (output2[_UI] != null) {
          contents[_UI] = expectString(output2[_UI]);
        }
        if (output2[_Ac] != null) {
          contents[_Ac] = expectString(output2[_Ac]);
        }
        if (output2[_Ar] != null) {
          contents[_Ar] = expectString(output2[_Ar]);
        }
        return contents;
      };
      de_GetFederationTokenResponse = (output2, context) => {
        const contents = {};
        if (output2[_C] != null) {
          contents[_C] = de_Credentials2(output2[_C], context);
        }
        if (output2[_FU] != null) {
          contents[_FU] = de_FederatedUser(output2[_FU], context);
        }
        if (output2[_PPS] != null) {
          contents[_PPS] = strictParseInt32(output2[_PPS]);
        }
        return contents;
      };
      de_GetSessionTokenResponse = (output2, context) => {
        const contents = {};
        if (output2[_C] != null) {
          contents[_C] = de_Credentials2(output2[_C], context);
        }
        return contents;
      };
      de_IDPCommunicationErrorException = (output2, context) => {
        const contents = {};
        if (output2[_m] != null) {
          contents[_m] = expectString(output2[_m]);
        }
        return contents;
      };
      de_IDPRejectedClaimException = (output2, context) => {
        const contents = {};
        if (output2[_m] != null) {
          contents[_m] = expectString(output2[_m]);
        }
        return contents;
      };
      de_InvalidAuthorizationMessageException = (output2, context) => {
        const contents = {};
        if (output2[_m] != null) {
          contents[_m] = expectString(output2[_m]);
        }
        return contents;
      };
      de_InvalidIdentityTokenException = (output2, context) => {
        const contents = {};
        if (output2[_m] != null) {
          contents[_m] = expectString(output2[_m]);
        }
        return contents;
      };
      de_MalformedPolicyDocumentException = (output2, context) => {
        const contents = {};
        if (output2[_m] != null) {
          contents[_m] = expectString(output2[_m]);
        }
        return contents;
      };
      de_PackedPolicyTooLargeException = (output2, context) => {
        const contents = {};
        if (output2[_m] != null) {
          contents[_m] = expectString(output2[_m]);
        }
        return contents;
      };
      de_RegionDisabledException = (output2, context) => {
        const contents = {};
        if (output2[_m] != null) {
          contents[_m] = expectString(output2[_m]);
        }
        return contents;
      };
      deserializeMetadata3 = (output2) => ({
        httpStatusCode: output2.statusCode,
        requestId: output2.headers["x-amzn-requestid"] ?? output2.headers["x-amzn-request-id"] ?? output2.headers["x-amz-request-id"],
        extendedRequestId: output2.headers["x-amz-id-2"],
        cfId: output2.headers["x-amz-cf-id"]
      });
      throwDefaultError3 = withBaseException(STSServiceException);
      buildHttpRpcRequest2 = async (context, headers, path, resolvedHostname, body2) => {
        const { hostname: hostname2, protocol: protocol2 = "https", port: port2, path: basePath } = await context.endpoint();
        const contents = {
          protocol: protocol2,
          hostname: hostname2,
          port: port2,
          method: "POST",
          path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
          headers
        };
        if (resolvedHostname !== void 0) {
          contents.hostname = resolvedHostname;
        }
        if (body2 !== void 0) {
          contents.body = body2;
        }
        return new HttpRequest(contents);
      };
      SHARED_HEADERS = {
        "content-type": "application/x-www-form-urlencoded"
      };
      _ = "2011-06-15";
      _A = "Action";
      _AKI = "AccessKeyId";
      _AR = "AssumeRole";
      _ARI = "AssumedRoleId";
      _ARU = "AssumedRoleUser";
      _ARWSAML = "AssumeRoleWithSAML";
      _ARWWI = "AssumeRoleWithWebIdentity";
      _Ac = "Account";
      _Ar = "Arn";
      _Au = "Audience";
      _C = "Credentials";
      _CA = "ContextAssertion";
      _DAM = "DecodeAuthorizationMessage";
      _DM = "DecodedMessage";
      _DS = "DurationSeconds";
      _E = "Expiration";
      _EI = "ExternalId";
      _EM = "EncodedMessage";
      _FU = "FederatedUser";
      _FUI = "FederatedUserId";
      _GAKI = "GetAccessKeyInfo";
      _GCI = "GetCallerIdentity";
      _GFT = "GetFederationToken";
      _GST = "GetSessionToken";
      _I = "Issuer";
      _K = "Key";
      _N = "Name";
      _NQ = "NameQualifier";
      _P = "Policy";
      _PA = "PolicyArns";
      _PAr = "PrincipalArn";
      _PAro = "ProviderArn";
      _PC = "ProvidedContexts";
      _PI = "ProviderId";
      _PPS = "PackedPolicySize";
      _Pr = "Provider";
      _RA = "RoleArn";
      _RSN = "RoleSessionName";
      _S = "Subject";
      _SAK = "SecretAccessKey";
      _SAMLA = "SAMLAssertion";
      _SFWIT = "SubjectFromWebIdentityToken";
      _SI = "SourceIdentity";
      _SN = "SerialNumber";
      _ST = "SubjectType";
      _STe = "SessionToken";
      _T = "Tags";
      _TC = "TokenCode";
      _TTK = "TransitiveTagKeys";
      _UI = "UserId";
      _V = "Version";
      _Va = "Value";
      _WIT = "WebIdentityToken";
      _a = "arn";
      _m = "message";
      buildFormUrlencodedString = (formEntries) => Object.entries(formEntries).map(([key2, value14]) => extendedEncodeURIComponent(key2) + "=" + extendedEncodeURIComponent(value14)).join("&");
      loadQueryErrorCode = (output2, data) => {
        if (data.Error?.Code !== void 0) {
          return data.Error.Code;
        }
        if (output2.statusCode == 404) {
          return "NotFound";
        }
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleCommand.js
  var AssumeRoleCommand;
  var init_AssumeRoleCommand = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters2();
      init_models_02();
      init_Aws_query();
      AssumeRoleCommand = class extends Command.classBuilder().ep({
        ...commonParams2
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSSecurityTokenServiceV20110615", "AssumeRole", {}).n("STSClient", "AssumeRoleCommand").f(void 0, AssumeRoleResponseFilterSensitiveLog).ser(se_AssumeRoleCommand).de(de_AssumeRoleCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleWithSAMLCommand.js
  var AssumeRoleWithSAMLCommand;
  var init_AssumeRoleWithSAMLCommand = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleWithSAMLCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters2();
      init_models_02();
      init_Aws_query();
      AssumeRoleWithSAMLCommand = class extends Command.classBuilder().ep({
        ...commonParams2
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSSecurityTokenServiceV20110615", "AssumeRoleWithSAML", {}).n("STSClient", "AssumeRoleWithSAMLCommand").f(AssumeRoleWithSAMLRequestFilterSensitiveLog, AssumeRoleWithSAMLResponseFilterSensitiveLog).ser(se_AssumeRoleWithSAMLCommand).de(de_AssumeRoleWithSAMLCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleWithWebIdentityCommand.js
  var AssumeRoleWithWebIdentityCommand;
  var init_AssumeRoleWithWebIdentityCommand = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleWithWebIdentityCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters2();
      init_models_02();
      init_Aws_query();
      AssumeRoleWithWebIdentityCommand = class extends Command.classBuilder().ep({
        ...commonParams2
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSSecurityTokenServiceV20110615", "AssumeRoleWithWebIdentity", {}).n("STSClient", "AssumeRoleWithWebIdentityCommand").f(AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog).ser(se_AssumeRoleWithWebIdentityCommand).de(de_AssumeRoleWithWebIdentityCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/commands/DecodeAuthorizationMessageCommand.js
  var DecodeAuthorizationMessageCommand;
  var init_DecodeAuthorizationMessageCommand = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/commands/DecodeAuthorizationMessageCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters2();
      init_Aws_query();
      DecodeAuthorizationMessageCommand = class extends Command.classBuilder().ep({
        ...commonParams2
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSSecurityTokenServiceV20110615", "DecodeAuthorizationMessage", {}).n("STSClient", "DecodeAuthorizationMessageCommand").f(void 0, void 0).ser(se_DecodeAuthorizationMessageCommand).de(de_DecodeAuthorizationMessageCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/commands/GetAccessKeyInfoCommand.js
  var GetAccessKeyInfoCommand;
  var init_GetAccessKeyInfoCommand = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/commands/GetAccessKeyInfoCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters2();
      init_Aws_query();
      GetAccessKeyInfoCommand = class extends Command.classBuilder().ep({
        ...commonParams2
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSSecurityTokenServiceV20110615", "GetAccessKeyInfo", {}).n("STSClient", "GetAccessKeyInfoCommand").f(void 0, void 0).ser(se_GetAccessKeyInfoCommand).de(de_GetAccessKeyInfoCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/commands/GetCallerIdentityCommand.js
  var GetCallerIdentityCommand;
  var init_GetCallerIdentityCommand = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/commands/GetCallerIdentityCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters2();
      init_Aws_query();
      GetCallerIdentityCommand = class extends Command.classBuilder().ep({
        ...commonParams2
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSSecurityTokenServiceV20110615", "GetCallerIdentity", {}).n("STSClient", "GetCallerIdentityCommand").f(void 0, void 0).ser(se_GetCallerIdentityCommand).de(de_GetCallerIdentityCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/commands/GetFederationTokenCommand.js
  var GetFederationTokenCommand;
  var init_GetFederationTokenCommand = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/commands/GetFederationTokenCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters2();
      init_models_02();
      init_Aws_query();
      GetFederationTokenCommand = class extends Command.classBuilder().ep({
        ...commonParams2
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSSecurityTokenServiceV20110615", "GetFederationToken", {}).n("STSClient", "GetFederationTokenCommand").f(void 0, GetFederationTokenResponseFilterSensitiveLog).ser(se_GetFederationTokenCommand).de(de_GetFederationTokenCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/commands/GetSessionTokenCommand.js
  var GetSessionTokenCommand;
  var init_GetSessionTokenCommand = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/commands/GetSessionTokenCommand.js"() {
      init_dist_es16();
      init_dist_es15();
      init_dist_es27();
      init_EndpointParameters2();
      init_models_02();
      init_Aws_query();
      GetSessionTokenCommand = class extends Command.classBuilder().ep({
        ...commonParams2
      }).m(function(Command2, cs, config, o3) {
        return [
          getSerdePlugin(config, this.serialize, this.deserialize),
          getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
        ];
      }).s("AWSSecurityTokenServiceV20110615", "GetSessionToken", {}).n("STSClient", "GetSessionTokenCommand").f(void 0, GetSessionTokenResponseFilterSensitiveLog).ser(se_GetSessionTokenCommand).de(de_GetSessionTokenCommand).build() {
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/STS.js
  var commands2, STS;
  var init_STS = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/STS.js"() {
      init_dist_es27();
      init_AssumeRoleCommand();
      init_AssumeRoleWithSAMLCommand();
      init_AssumeRoleWithWebIdentityCommand();
      init_DecodeAuthorizationMessageCommand();
      init_GetAccessKeyInfoCommand();
      init_GetCallerIdentityCommand();
      init_GetFederationTokenCommand();
      init_GetSessionTokenCommand();
      init_STSClient();
      commands2 = {
        AssumeRoleCommand,
        AssumeRoleWithSAMLCommand,
        AssumeRoleWithWebIdentityCommand,
        DecodeAuthorizationMessageCommand,
        GetAccessKeyInfoCommand,
        GetCallerIdentityCommand,
        GetFederationTokenCommand,
        GetSessionTokenCommand
      };
      STS = class extends STSClient {
      };
      createAggregatedClient(commands2, STS);
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/commands/index.js
  var init_commands2 = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/commands/index.js"() {
      init_AssumeRoleCommand();
      init_AssumeRoleWithSAMLCommand();
      init_AssumeRoleWithWebIdentityCommand();
      init_DecodeAuthorizationMessageCommand();
      init_GetAccessKeyInfoCommand();
      init_GetCallerIdentityCommand();
      init_GetFederationTokenCommand();
      init_GetSessionTokenCommand();
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/models/index.js
  var init_models2 = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/models/index.js"() {
      init_models_02();
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/defaultStsRoleAssumers.js
  var ASSUME_ROLE_DEFAULT_REGION, resolveRegion, getDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity;
  var init_defaultStsRoleAssumers = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/defaultStsRoleAssumers.js"() {
      init_AssumeRoleCommand();
      init_AssumeRoleWithWebIdentityCommand();
      ASSUME_ROLE_DEFAULT_REGION = "us-east-1";
      resolveRegion = async (_region, _parentRegion, credentialProviderLogger) => {
        const region = typeof _region === "function" ? await _region() : _region;
        const parentRegion = typeof _parentRegion === "function" ? await _parentRegion() : _parentRegion;
        credentialProviderLogger?.debug?.("@aws-sdk/client-sts::resolveRegion", "accepting first of:", `${region} (provider)`, `${parentRegion} (parent client)`, `${ASSUME_ROLE_DEFAULT_REGION} (STS default)`);
        return region ?? parentRegion ?? ASSUME_ROLE_DEFAULT_REGION;
      };
      getDefaultRoleAssumer = (stsOptions, stsClientCtor) => {
        let stsClient;
        let closureSourceCreds;
        return async (sourceCreds, params) => {
          closureSourceCreds = sourceCreds;
          if (!stsClient) {
            const { logger: logger2 = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger } = stsOptions;
            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);
            stsClient = new stsClientCtor({
              credentialDefaultProvider: () => async () => closureSourceCreds,
              region: resolvedRegion,
              requestHandler,
              logger: logger2
            });
          }
          const { Credentials } = await stsClient.send(new AssumeRoleCommand(params));
          if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {
            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);
          }
          return {
            accessKeyId: Credentials.AccessKeyId,
            secretAccessKey: Credentials.SecretAccessKey,
            sessionToken: Credentials.SessionToken,
            expiration: Credentials.Expiration,
            credentialScope: Credentials.CredentialScope
          };
        };
      };
      getDefaultRoleAssumerWithWebIdentity = (stsOptions, stsClientCtor) => {
        let stsClient;
        return async (params) => {
          if (!stsClient) {
            const { logger: logger2 = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger } = stsOptions;
            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);
            stsClient = new stsClientCtor({
              region: resolvedRegion,
              requestHandler,
              logger: logger2
            });
          }
          const { Credentials } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));
          if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {
            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);
          }
          return {
            accessKeyId: Credentials.AccessKeyId,
            secretAccessKey: Credentials.SecretAccessKey,
            sessionToken: Credentials.SessionToken,
            expiration: Credentials.Expiration,
            credentialScope: Credentials.CredentialScope
          };
        };
      };
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/defaultRoleAssumers.js
  var getCustomizableStsClientCtor, getDefaultRoleAssumer2, getDefaultRoleAssumerWithWebIdentity2, decorateDefaultCredentialProvider;
  var init_defaultRoleAssumers = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/defaultRoleAssumers.js"() {
      init_defaultStsRoleAssumers();
      init_STSClient();
      getCustomizableStsClientCtor = (baseCtor, customizations) => {
        if (!customizations)
          return baseCtor;
        else
          return class CustomizableSTSClient extends baseCtor {
            constructor(config) {
              super(config);
              for (const customization of customizations) {
                this.middlewareStack.use(customization);
              }
            }
          };
      };
      getDefaultRoleAssumer2 = (stsOptions = {}, stsPlugins) => getDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));
      getDefaultRoleAssumerWithWebIdentity2 = (stsOptions = {}, stsPlugins) => getDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));
      decorateDefaultCredentialProvider = (provider) => (input3) => provider({
        roleAssumer: getDefaultRoleAssumer2(input3),
        roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity2(input3),
        ...input3
      });
    }
  });

  // node_modules/@aws-sdk/client-sts/dist-es/index.js
  var dist_es_exports = {};
  __export(dist_es_exports, {
    $Command: () => Command,
    AssumeRoleCommand: () => AssumeRoleCommand,
    AssumeRoleResponseFilterSensitiveLog: () => AssumeRoleResponseFilterSensitiveLog,
    AssumeRoleWithSAMLCommand: () => AssumeRoleWithSAMLCommand,
    AssumeRoleWithSAMLRequestFilterSensitiveLog: () => AssumeRoleWithSAMLRequestFilterSensitiveLog,
    AssumeRoleWithSAMLResponseFilterSensitiveLog: () => AssumeRoleWithSAMLResponseFilterSensitiveLog,
    AssumeRoleWithWebIdentityCommand: () => AssumeRoleWithWebIdentityCommand,
    AssumeRoleWithWebIdentityRequestFilterSensitiveLog: () => AssumeRoleWithWebIdentityRequestFilterSensitiveLog,
    AssumeRoleWithWebIdentityResponseFilterSensitiveLog: () => AssumeRoleWithWebIdentityResponseFilterSensitiveLog,
    CredentialsFilterSensitiveLog: () => CredentialsFilterSensitiveLog,
    DecodeAuthorizationMessageCommand: () => DecodeAuthorizationMessageCommand,
    ExpiredTokenException: () => ExpiredTokenException,
    GetAccessKeyInfoCommand: () => GetAccessKeyInfoCommand,
    GetCallerIdentityCommand: () => GetCallerIdentityCommand,
    GetFederationTokenCommand: () => GetFederationTokenCommand,
    GetFederationTokenResponseFilterSensitiveLog: () => GetFederationTokenResponseFilterSensitiveLog,
    GetSessionTokenCommand: () => GetSessionTokenCommand,
    GetSessionTokenResponseFilterSensitiveLog: () => GetSessionTokenResponseFilterSensitiveLog,
    IDPCommunicationErrorException: () => IDPCommunicationErrorException,
    IDPRejectedClaimException: () => IDPRejectedClaimException,
    InvalidAuthorizationMessageException: () => InvalidAuthorizationMessageException,
    InvalidIdentityTokenException: () => InvalidIdentityTokenException,
    MalformedPolicyDocumentException: () => MalformedPolicyDocumentException,
    PackedPolicyTooLargeException: () => PackedPolicyTooLargeException,
    RegionDisabledException: () => RegionDisabledException,
    STS: () => STS,
    STSClient: () => STSClient,
    STSServiceException: () => STSServiceException,
    __Client: () => Client,
    decorateDefaultCredentialProvider: () => decorateDefaultCredentialProvider,
    getDefaultRoleAssumer: () => getDefaultRoleAssumer2,
    getDefaultRoleAssumerWithWebIdentity: () => getDefaultRoleAssumerWithWebIdentity2
  });
  var init_dist_es44 = __esm({
    "node_modules/@aws-sdk/client-sts/dist-es/index.js"() {
      init_STSClient();
      init_STS();
      init_commands2();
      init_models2();
      init_defaultRoleAssumers();
      init_STSServiceException();
    }
  });

  // node_modules/@aws-sdk/credential-providers/dist-es/loadSts.js
  var loadSts_exports = {};
  __export(loadSts_exports, {
    AssumeRoleCommand: () => AssumeRoleCommand,
    STSClient: () => STSClient
  });
  var init_loadSts = __esm({
    "node_modules/@aws-sdk/credential-providers/dist-es/loadSts.js"() {
      init_dist_es44();
    }
  });

  // node_modules/@aws-sdk/credential-providers/dist-es/fromTemporaryCredentials.js
  var fromTemporaryCredentials;
  var init_fromTemporaryCredentials = __esm({
    "node_modules/@aws-sdk/credential-providers/dist-es/fromTemporaryCredentials.js"() {
      init_dist_es();
      fromTemporaryCredentials = (options2) => {
        let stsClient;
        return async () => {
          options2.logger?.debug("@aws-sdk/credential-providers - fromTemporaryCredentials (STS)");
          const params = { ...options2.params, RoleSessionName: options2.params.RoleSessionName ?? "aws-sdk-js-" + Date.now() };
          if (params?.SerialNumber) {
            if (!options2.mfaCodeProvider) {
              throw new CredentialsProviderError(`Temporary credential requires multi-factor authentication, but no MFA code callback was provided.`, {
                tryNextLink: false,
                logger: options2.logger
              });
            }
            params.TokenCode = await options2.mfaCodeProvider(params?.SerialNumber);
          }
          const { AssumeRoleCommand: AssumeRoleCommand2, STSClient: STSClient2 } = await Promise.resolve().then(() => (init_loadSts(), loadSts_exports));
          if (!stsClient)
            stsClient = new STSClient2({ ...options2.clientConfig, credentials: options2.masterCredentials });
          if (options2.clientPlugins) {
            for (const plugin of options2.clientPlugins) {
              stsClient.middlewareStack.use(plugin);
            }
          }
          const { Credentials } = await stsClient.send(new AssumeRoleCommand2(params));
          if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {
            throw new CredentialsProviderError(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`, {
              logger: options2.logger
            });
          }
          return {
            accessKeyId: Credentials.AccessKeyId,
            secretAccessKey: Credentials.SecretAccessKey,
            sessionToken: Credentials.SessionToken,
            expiration: Credentials.Expiration,
            credentialScope: Credentials.CredentialScope
          };
        };
      };
    }
  });

  // (disabled):node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromTokenFile
  var init_fromTokenFile = __esm({
    "(disabled):node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromTokenFile"() {
    }
  });

  // node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromWebToken.js
  var fromWebToken;
  var init_fromWebToken = __esm({
    "node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromWebToken.js"() {
      fromWebToken = (init3) => async () => {
        init3.logger?.debug("@aws-sdk/credential-provider-web-identity - fromWebToken");
        const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds } = init3;
        let { roleAssumerWithWebIdentity } = init3;
        if (!roleAssumerWithWebIdentity) {
          const { getDefaultRoleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity3 } = await Promise.resolve().then(() => (init_dist_es44(), dist_es_exports));
          roleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity3({
            ...init3.clientConfig,
            credentialProviderLogger: init3.logger,
            parentClientConfig: init3.parentClientConfig
          }, init3.clientPlugins);
        }
        return roleAssumerWithWebIdentity({
          RoleArn: roleArn,
          RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,
          WebIdentityToken: webIdentityToken,
          ProviderId: providerId,
          PolicyArns: policyArns,
          Policy: policy,
          DurationSeconds: durationSeconds
        });
      };
    }
  });

  // node_modules/@aws-sdk/credential-provider-web-identity/dist-es/index.js
  var init_dist_es45 = __esm({
    "node_modules/@aws-sdk/credential-provider-web-identity/dist-es/index.js"() {
      init_fromTokenFile();
      init_fromWebToken();
    }
  });

  // node_modules/@aws-sdk/credential-providers/dist-es/fromWebToken.js
  var fromWebToken2;
  var init_fromWebToken2 = __esm({
    "node_modules/@aws-sdk/credential-providers/dist-es/fromWebToken.js"() {
      init_dist_es45();
      fromWebToken2 = (init3) => fromWebToken({
        ...init3
      });
    }
  });

  // node_modules/@aws-sdk/credential-providers/dist-es/index.browser.js
  var index_browser_exports = {};
  __export(index_browser_exports, {
    fromCognitoIdentity: () => fromCognitoIdentity2,
    fromCognitoIdentityPool: () => fromCognitoIdentityPool2,
    fromHttp: () => fromHttp,
    fromTemporaryCredentials: () => fromTemporaryCredentials,
    fromWebToken: () => fromWebToken2
  });
  var init_index_browser2 = __esm({
    "node_modules/@aws-sdk/credential-providers/dist-es/index.browser.js"() {
      init_fromCognitoIdentity2();
      init_fromCognitoIdentityPool2();
      init_index_browser();
      init_fromTemporaryCredentials();
      init_fromWebToken2();
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/abort.js
  var require_abort = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/abort.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/auth.js
  var require_auth = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/auth.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.HttpAuthLocation = void 0;
      var HttpAuthLocation2;
      (function(HttpAuthLocation3) {
        HttpAuthLocation3["HEADER"] = "header";
        HttpAuthLocation3["QUERY"] = "query";
      })(HttpAuthLocation2 = exports.HttpAuthLocation || (exports.HttpAuthLocation = {}));
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/blob/blob-payload-input-types.js
  var require_blob_payload_input_types = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/blob/blob-payload-input-types.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/checksum.js
  var require_checksum = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/checksum.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/client.js
  var require_client = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/client.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/command.js
  var require_command = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/command.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/connection/config.js
  var require_config = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/connection/config.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/connection/manager.js
  var require_manager = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/connection/manager.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/connection/pool.js
  var require_pool = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/connection/pool.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/connection/index.js
  var require_connection = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/connection/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_config(), exports);
      tslib_1.__exportStar(require_manager(), exports);
      tslib_1.__exportStar(require_pool(), exports);
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/crypto.js
  var require_crypto = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/crypto.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/encode.js
  var require_encode = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/encode.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoint.js
  var require_endpoint = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoint.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EndpointURLScheme = void 0;
      var EndpointURLScheme2;
      (function(EndpointURLScheme3) {
        EndpointURLScheme3["HTTP"] = "http";
        EndpointURLScheme3["HTTPS"] = "https";
      })(EndpointURLScheme2 = exports.EndpointURLScheme || (exports.EndpointURLScheme = {}));
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoints/EndpointRuleObject.js
  var require_EndpointRuleObject = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoints/EndpointRuleObject.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoints/ErrorRuleObject.js
  var require_ErrorRuleObject = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoints/ErrorRuleObject.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoints/RuleSetObject.js
  var require_RuleSetObject = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoints/RuleSetObject.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoints/shared.js
  var require_shared = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoints/shared.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoints/TreeRuleObject.js
  var require_TreeRuleObject = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoints/TreeRuleObject.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoints/index.js
  var require_endpoints = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/endpoints/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_EndpointRuleObject(), exports);
      tslib_1.__exportStar(require_ErrorRuleObject(), exports);
      tslib_1.__exportStar(require_RuleSetObject(), exports);
      tslib_1.__exportStar(require_shared(), exports);
      tslib_1.__exportStar(require_TreeRuleObject(), exports);
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/eventStream.js
  var require_eventStream = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/eventStream.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/http.js
  var require_http = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/http.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.FieldPosition = void 0;
      var FieldPosition2;
      (function(FieldPosition3) {
        FieldPosition3[FieldPosition3["HEADER"] = 0] = "HEADER";
        FieldPosition3[FieldPosition3["TRAILER"] = 1] = "TRAILER";
      })(FieldPosition2 = exports.FieldPosition || (exports.FieldPosition = {}));
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/identity/awsCredentialIdentity.js
  var require_awsCredentialIdentity = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/identity/awsCredentialIdentity.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/identity/identity.js
  var require_identity = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/identity/identity.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/identity/index.js
  var require_identity2 = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/identity/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_awsCredentialIdentity(), exports);
      tslib_1.__exportStar(require_identity(), exports);
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/logger.js
  var require_logger = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/logger.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/middleware.js
  var require_middleware = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/middleware.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/pagination.js
  var require_pagination = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/pagination.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/profile.js
  var require_profile = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/profile.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/response.js
  var require_response = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/response.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/retry.js
  var require_retry = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/retry.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/serde.js
  var require_serde = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/serde.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/shapes.js
  var require_shapes = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/shapes.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/signature.js
  var require_signature = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/signature.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/stream.js
  var require_stream = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/stream.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/streaming-payload/streaming-blob-common-types.js
  var require_streaming_blob_common_types = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/streaming-payload/streaming-blob-common-types.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/streaming-payload/streaming-blob-payload-input-types.js
  var require_streaming_blob_payload_input_types = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/streaming-payload/streaming-blob-payload-input-types.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/streaming-payload/streaming-blob-payload-output-types.js
  var require_streaming_blob_payload_output_types = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/streaming-payload/streaming-blob-payload-output-types.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/transfer.js
  var require_transfer = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/transfer.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.RequestHandlerProtocol = void 0;
      var RequestHandlerProtocol2;
      (function(RequestHandlerProtocol3) {
        RequestHandlerProtocol3["HTTP_0_9"] = "http/0.9";
        RequestHandlerProtocol3["HTTP_1_0"] = "http/1.0";
        RequestHandlerProtocol3["TDS_8_0"] = "tds/8.0";
      })(RequestHandlerProtocol2 = exports.RequestHandlerProtocol || (exports.RequestHandlerProtocol = {}));
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/transform/client-payload-blob-type-narrow.js
  var require_client_payload_blob_type_narrow = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/transform/client-payload-blob-type-narrow.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/transform/type-transform.js
  var require_type_transform = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/transform/type-transform.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/uri.js
  var require_uri = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/uri.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/util.js
  var require_util2 = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/util.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/waiter.js
  var require_waiter = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/waiter.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/index.js
  var require_dist_cjs4 = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/node_modules/@smithy/types/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_abort(), exports);
      tslib_1.__exportStar(require_auth(), exports);
      tslib_1.__exportStar(require_blob_payload_input_types(), exports);
      tslib_1.__exportStar(require_checksum(), exports);
      tslib_1.__exportStar(require_client(), exports);
      tslib_1.__exportStar(require_command(), exports);
      tslib_1.__exportStar(require_connection(), exports);
      tslib_1.__exportStar(require_crypto(), exports);
      tslib_1.__exportStar(require_encode(), exports);
      tslib_1.__exportStar(require_endpoint(), exports);
      tslib_1.__exportStar(require_endpoints(), exports);
      tslib_1.__exportStar(require_eventStream(), exports);
      tslib_1.__exportStar(require_http(), exports);
      tslib_1.__exportStar(require_identity2(), exports);
      tslib_1.__exportStar(require_logger(), exports);
      tslib_1.__exportStar(require_middleware(), exports);
      tslib_1.__exportStar(require_pagination(), exports);
      tslib_1.__exportStar(require_profile(), exports);
      tslib_1.__exportStar(require_response(), exports);
      tslib_1.__exportStar(require_retry(), exports);
      tslib_1.__exportStar(require_serde(), exports);
      tslib_1.__exportStar(require_shapes(), exports);
      tslib_1.__exportStar(require_signature(), exports);
      tslib_1.__exportStar(require_stream(), exports);
      tslib_1.__exportStar(require_streaming_blob_common_types(), exports);
      tslib_1.__exportStar(require_streaming_blob_payload_input_types(), exports);
      tslib_1.__exportStar(require_streaming_blob_payload_output_types(), exports);
      tslib_1.__exportStar(require_transfer(), exports);
      tslib_1.__exportStar(require_client_payload_blob_type_narrow(), exports);
      tslib_1.__exportStar(require_type_transform(), exports);
      tslib_1.__exportStar(require_uri(), exports);
      tslib_1.__exportStar(require_util2(), exports);
      tslib_1.__exportStar(require_waiter(), exports);
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/Field.js
  var require_Field = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/Field.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Field = void 0;
      var types_1 = require_dist_cjs4();
      var Field = class {
        constructor({ name: name15, kind: kind2 = types_1.FieldPosition.HEADER, values = [] }) {
          this.name = name15;
          this.kind = kind2;
          this.values = values;
        }
        add(value14) {
          this.values.push(value14);
        }
        set(values) {
          this.values = values;
        }
        remove(value14) {
          this.values = this.values.filter((v3) => v3 !== value14);
        }
        toString() {
          return this.values.map((v3) => v3.includes(",") || v3.includes(" ") ? `"${v3}"` : v3).join(", ");
        }
        get() {
          return this.values;
        }
      };
      exports.Field = Field;
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/Fields.js
  var require_Fields = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/Fields.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Fields = void 0;
      var Fields = class {
        constructor({ fields = [], encoding: encoding2 = "utf-8" }) {
          this.entries = {};
          fields.forEach(this.setField.bind(this));
          this.encoding = encoding2;
        }
        setField(field) {
          this.entries[field.name.toLowerCase()] = field;
        }
        getField(name15) {
          return this.entries[name15.toLowerCase()];
        }
        removeField(name15) {
          delete this.entries[name15.toLowerCase()];
        }
        getByType(kind2) {
          return Object.values(this.entries).filter((field) => field.kind === kind2);
        }
      };
      exports.Fields = Fields;
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/httpHandler.js
  var require_httpHandler = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/httpHandler.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/httpRequest.js
  var require_httpRequest = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/httpRequest.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.HttpRequest = void 0;
      var HttpRequest2 = class _HttpRequest {
        constructor(options2) {
          this.method = options2.method || "GET";
          this.hostname = options2.hostname || "localhost";
          this.port = options2.port;
          this.query = options2.query || {};
          this.headers = options2.headers || {};
          this.body = options2.body;
          this.protocol = options2.protocol ? options2.protocol.slice(-1) !== ":" ? `${options2.protocol}:` : options2.protocol : "https:";
          this.path = options2.path ? options2.path.charAt(0) !== "/" ? `/${options2.path}` : options2.path : "/";
          this.username = options2.username;
          this.password = options2.password;
          this.fragment = options2.fragment;
        }
        static isInstance(request3) {
          if (!request3)
            return false;
          const req = request3;
          return "method" in req && "protocol" in req && "hostname" in req && "path" in req && typeof req["query"] === "object" && typeof req["headers"] === "object";
        }
        clone() {
          const cloned = new _HttpRequest({
            ...this,
            headers: { ...this.headers }
          });
          if (cloned.query)
            cloned.query = cloneQuery3(cloned.query);
          return cloned;
        }
      };
      exports.HttpRequest = HttpRequest2;
      function cloneQuery3(query3) {
        return Object.keys(query3).reduce((carry, paramName) => {
          const param2 = query3[paramName];
          return {
            ...carry,
            [paramName]: Array.isArray(param2) ? [...param2] : param2
          };
        }, {});
      }
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/httpResponse.js
  var require_httpResponse = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/httpResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.HttpResponse = void 0;
      var HttpResponse2 = class {
        constructor(options2) {
          this.statusCode = options2.statusCode;
          this.reason = options2.reason;
          this.headers = options2.headers || {};
          this.body = options2.body;
        }
        static isInstance(response) {
          if (!response)
            return false;
          const resp = response;
          return typeof resp.statusCode === "number" && typeof resp.headers === "object";
        }
      };
      exports.HttpResponse = HttpResponse2;
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/isValidHostname.js
  var require_isValidHostname = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/isValidHostname.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.isValidHostname = void 0;
      function isValidHostname(hostname2) {
        const hostPattern = /^[a-z0-9][a-z0-9\.\-]*[a-z0-9]$/;
        return hostPattern.test(hostname2);
      }
      exports.isValidHostname = isValidHostname;
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/types.js
  var require_types = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/types.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/index.js
  var require_dist_cjs5 = __commonJS({
    "node_modules/@aws-sdk/protocol-http/node_modules/@smithy/protocol-http/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_Field(), exports);
      tslib_1.__exportStar(require_Fields(), exports);
      tslib_1.__exportStar(require_httpHandler(), exports);
      tslib_1.__exportStar(require_httpRequest(), exports);
      tslib_1.__exportStar(require_httpResponse(), exports);
      tslib_1.__exportStar(require_isValidHostname(), exports);
      tslib_1.__exportStar(require_types(), exports);
    }
  });

  // node_modules/@aws-sdk/protocol-http/dist-cjs/index.js
  var require_dist_cjs6 = __commonJS({
    "node_modules/@aws-sdk/protocol-http/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_dist_cjs5(), exports);
    }
  });

  // node_modules/@aws-crypto/crc32/node_modules/tslib/tslib.es6.js
  var tslib_es6_exports2 = {};
  __export(tslib_es6_exports2, {
    __assign: () => __assign2,
    __asyncDelegator: () => __asyncDelegator2,
    __asyncGenerator: () => __asyncGenerator2,
    __asyncValues: () => __asyncValues2,
    __await: () => __await2,
    __awaiter: () => __awaiter2,
    __classPrivateFieldGet: () => __classPrivateFieldGet2,
    __classPrivateFieldSet: () => __classPrivateFieldSet2,
    __createBinding: () => __createBinding2,
    __decorate: () => __decorate2,
    __exportStar: () => __exportStar2,
    __extends: () => __extends2,
    __generator: () => __generator2,
    __importDefault: () => __importDefault2,
    __importStar: () => __importStar2,
    __makeTemplateObject: () => __makeTemplateObject2,
    __metadata: () => __metadata2,
    __param: () => __param2,
    __read: () => __read2,
    __rest: () => __rest2,
    __spread: () => __spread2,
    __spreadArrays: () => __spreadArrays2,
    __values: () => __values3
  });
  function __extends2(d3, b4) {
    extendStatics2(d3, b4);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b4 === null ? Object.create(b4) : (__.prototype = b4.prototype, new __());
  }
  function __rest2(s3, e3) {
    var t3 = {};
    for (var p4 in s3) if (Object.prototype.hasOwnProperty.call(s3, p4) && e3.indexOf(p4) < 0)
      t3[p4] = s3[p4];
    if (s3 != null && typeof Object.getOwnPropertySymbols === "function")
      for (var i4 = 0, p4 = Object.getOwnPropertySymbols(s3); i4 < p4.length; i4++) {
        if (e3.indexOf(p4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s3, p4[i4]))
          t3[p4[i4]] = s3[p4[i4]];
      }
    return t3;
  }
  function __decorate2(decorators, target6, key2, desc) {
    var c3 = arguments.length, r3 = c3 < 3 ? target6 : desc === null ? desc = Object.getOwnPropertyDescriptor(target6, key2) : desc, d3;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target6, key2, desc);
    else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d3 = decorators[i4]) r3 = (c3 < 3 ? d3(r3) : c3 > 3 ? d3(target6, key2, r3) : d3(target6, key2)) || r3;
    return c3 > 3 && r3 && Object.defineProperty(target6, key2, r3), r3;
  }
  function __param2(paramIndex, decorator) {
    return function(target6, key2) {
      decorator(target6, key2, paramIndex);
    };
  }
  function __metadata2(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
  }
  function __awaiter2(thisArg, _arguments, P, generator) {
    function adopt(value14) {
      return value14 instanceof P ? value14 : new P(function(resolve) {
        resolve(value14);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value14) {
        try {
          step3(generator.next(value14));
        } catch (e3) {
          reject(e3);
        }
      }
      function rejected(value14) {
        try {
          step3(generator["throw"](value14));
        } catch (e3) {
          reject(e3);
        }
      }
      function step3(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step3((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  }
  function __generator2(thisArg, body2) {
    var _2 = { label: 0, sent: function() {
      if (t3[0] & 1) throw t3[1];
      return t3[1];
    }, trys: [], ops: [] }, f3, y2, t3, g3;
    return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
      return this;
    }), g3;
    function verb(n3) {
      return function(v3) {
        return step3([n3, v3]);
      };
    }
    function step3(op) {
      if (f3) throw new TypeError("Generator is already executing.");
      while (_2) try {
        if (f3 = 1, y2 && (t3 = op[0] & 2 ? y2["return"] : op[0] ? y2["throw"] || ((t3 = y2["return"]) && t3.call(y2), 0) : y2.next) && !(t3 = t3.call(y2, op[1])).done) return t3;
        if (y2 = 0, t3) op = [op[0] & 2, t3.value];
        switch (op[0]) {
          case 0:
          case 1:
            t3 = op;
            break;
          case 4:
            _2.label++;
            return { value: op[1], done: false };
          case 5:
            _2.label++;
            y2 = op[1];
            op = [0];
            continue;
          case 7:
            op = _2.ops.pop();
            _2.trys.pop();
            continue;
          default:
            if (!(t3 = _2.trys, t3 = t3.length > 0 && t3[t3.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _2 = 0;
              continue;
            }
            if (op[0] === 3 && (!t3 || op[1] > t3[0] && op[1] < t3[3])) {
              _2.label = op[1];
              break;
            }
            if (op[0] === 6 && _2.label < t3[1]) {
              _2.label = t3[1];
              t3 = op;
              break;
            }
            if (t3 && _2.label < t3[2]) {
              _2.label = t3[2];
              _2.ops.push(op);
              break;
            }
            if (t3[2]) _2.ops.pop();
            _2.trys.pop();
            continue;
        }
        op = body2.call(thisArg, _2);
      } catch (e3) {
        op = [6, e3];
        y2 = 0;
      } finally {
        f3 = t3 = 0;
      }
      if (op[0] & 5) throw op[1];
      return { value: op[0] ? op[1] : void 0, done: true };
    }
  }
  function __createBinding2(o3, m3, k3, k22) {
    if (k22 === void 0) k22 = k3;
    o3[k22] = m3[k3];
  }
  function __exportStar2(m3, exports) {
    for (var p4 in m3) if (p4 !== "default" && !exports.hasOwnProperty(p4)) exports[p4] = m3[p4];
  }
  function __values3(o3) {
    var s3 = typeof Symbol === "function" && Symbol.iterator, m3 = s3 && o3[s3], i4 = 0;
    if (m3) return m3.call(o3);
    if (o3 && typeof o3.length === "number") return {
      next: function() {
        if (o3 && i4 >= o3.length) o3 = void 0;
        return { value: o3 && o3[i4++], done: !o3 };
      }
    };
    throw new TypeError(s3 ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }
  function __read2(o3, n3) {
    var m3 = typeof Symbol === "function" && o3[Symbol.iterator];
    if (!m3) return o3;
    var i4 = m3.call(o3), r3, ar = [], e3;
    try {
      while ((n3 === void 0 || n3-- > 0) && !(r3 = i4.next()).done) ar.push(r3.value);
    } catch (error4) {
      e3 = { error: error4 };
    } finally {
      try {
        if (r3 && !r3.done && (m3 = i4["return"])) m3.call(i4);
      } finally {
        if (e3) throw e3.error;
      }
    }
    return ar;
  }
  function __spread2() {
    for (var ar = [], i4 = 0; i4 < arguments.length; i4++)
      ar = ar.concat(__read2(arguments[i4]));
    return ar;
  }
  function __spreadArrays2() {
    for (var s3 = 0, i4 = 0, il = arguments.length; i4 < il; i4++) s3 += arguments[i4].length;
    for (var r3 = Array(s3), k3 = 0, i4 = 0; i4 < il; i4++)
      for (var a4 = arguments[i4], j3 = 0, jl = a4.length; j3 < jl; j3++, k3++)
        r3[k3] = a4[j3];
    return r3;
  }
  function __await2(v3) {
    return this instanceof __await2 ? (this.v = v3, this) : new __await2(v3);
  }
  function __asyncGenerator2(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g3 = generator.apply(thisArg, _arguments || []), i4, q4 = [];
    return i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
      return this;
    }, i4;
    function verb(n3) {
      if (g3[n3]) i4[n3] = function(v3) {
        return new Promise(function(a4, b4) {
          q4.push([n3, v3, a4, b4]) > 1 || resume(n3, v3);
        });
      };
    }
    function resume(n3, v3) {
      try {
        step3(g3[n3](v3));
      } catch (e3) {
        settle(q4[0][3], e3);
      }
    }
    function step3(r3) {
      r3.value instanceof __await2 ? Promise.resolve(r3.value.v).then(fulfill, reject) : settle(q4[0][2], r3);
    }
    function fulfill(value14) {
      resume("next", value14);
    }
    function reject(value14) {
      resume("throw", value14);
    }
    function settle(f3, v3) {
      if (f3(v3), q4.shift(), q4.length) resume(q4[0][0], q4[0][1]);
    }
  }
  function __asyncDelegator2(o3) {
    var i4, p4;
    return i4 = {}, verb("next"), verb("throw", function(e3) {
      throw e3;
    }), verb("return"), i4[Symbol.iterator] = function() {
      return this;
    }, i4;
    function verb(n3, f3) {
      i4[n3] = o3[n3] ? function(v3) {
        return (p4 = !p4) ? { value: __await2(o3[n3](v3)), done: n3 === "return" } : f3 ? f3(v3) : v3;
      } : f3;
    }
  }
  function __asyncValues2(o3) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m3 = o3[Symbol.asyncIterator], i4;
    return m3 ? m3.call(o3) : (o3 = typeof __values3 === "function" ? __values3(o3) : o3[Symbol.iterator](), i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
      return this;
    }, i4);
    function verb(n3) {
      i4[n3] = o3[n3] && function(v3) {
        return new Promise(function(resolve, reject) {
          v3 = o3[n3](v3), settle(resolve, reject, v3.done, v3.value);
        });
      };
    }
    function settle(resolve, reject, d3, v3) {
      Promise.resolve(v3).then(function(v5) {
        resolve({ value: v5, done: d3 });
      }, reject);
    }
  }
  function __makeTemplateObject2(cooked, raw) {
    if (Object.defineProperty) {
      Object.defineProperty(cooked, "raw", { value: raw });
    } else {
      cooked.raw = raw;
    }
    return cooked;
  }
  function __importStar2(mod3) {
    if (mod3 && mod3.__esModule) return mod3;
    var result = {};
    if (mod3 != null) {
      for (var k3 in mod3) if (Object.hasOwnProperty.call(mod3, k3)) result[k3] = mod3[k3];
    }
    result.default = mod3;
    return result;
  }
  function __importDefault2(mod3) {
    return mod3 && mod3.__esModule ? mod3 : { default: mod3 };
  }
  function __classPrivateFieldGet2(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
      throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
  }
  function __classPrivateFieldSet2(receiver, privateMap, value14) {
    if (!privateMap.has(receiver)) {
      throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value14);
    return value14;
  }
  var extendStatics2, __assign2;
  var init_tslib_es62 = __esm({
    "node_modules/@aws-crypto/crc32/node_modules/tslib/tslib.es6.js"() {
      extendStatics2 = function(d3, b4) {
        extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b5) {
          d4.__proto__ = b5;
        } || function(d4, b5) {
          for (var p4 in b5) if (b5.hasOwnProperty(p4)) d4[p4] = b5[p4];
        };
        return extendStatics2(d3, b4);
      };
      __assign2 = function() {
        __assign2 = Object.assign || function __assign3(t3) {
          for (var s3, i4 = 1, n3 = arguments.length; i4 < n3; i4++) {
            s3 = arguments[i4];
            for (var p4 in s3) if (Object.prototype.hasOwnProperty.call(s3, p4)) t3[p4] = s3[p4];
          }
          return t3;
        };
        return __assign2.apply(this, arguments);
      };
    }
  });

  // node_modules/@aws-sdk/util-utf8-browser/dist-cjs/pureJs.js
  var require_pureJs = __commonJS({
    "node_modules/@aws-sdk/util-utf8-browser/dist-cjs/pureJs.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.toUtf8 = exports.fromUtf8 = void 0;
      var fromUtf82 = (input3) => {
        const bytes = [];
        for (let i4 = 0, len = input3.length; i4 < len; i4++) {
          const value14 = input3.charCodeAt(i4);
          if (value14 < 128) {
            bytes.push(value14);
          } else if (value14 < 2048) {
            bytes.push(value14 >> 6 | 192, value14 & 63 | 128);
          } else if (i4 + 1 < input3.length && (value14 & 64512) === 55296 && (input3.charCodeAt(i4 + 1) & 64512) === 56320) {
            const surrogatePair = 65536 + ((value14 & 1023) << 10) + (input3.charCodeAt(++i4) & 1023);
            bytes.push(surrogatePair >> 18 | 240, surrogatePair >> 12 & 63 | 128, surrogatePair >> 6 & 63 | 128, surrogatePair & 63 | 128);
          } else {
            bytes.push(value14 >> 12 | 224, value14 >> 6 & 63 | 128, value14 & 63 | 128);
          }
        }
        return Uint8Array.from(bytes);
      };
      exports.fromUtf8 = fromUtf82;
      var toUtf82 = (input3) => {
        let decoded = "";
        for (let i4 = 0, len = input3.length; i4 < len; i4++) {
          const byte = input3[i4];
          if (byte < 128) {
            decoded += String.fromCharCode(byte);
          } else if (192 <= byte && byte < 224) {
            const nextByte = input3[++i4];
            decoded += String.fromCharCode((byte & 31) << 6 | nextByte & 63);
          } else if (240 <= byte && byte < 365) {
            const surrogatePair = [byte, input3[++i4], input3[++i4], input3[++i4]];
            const encoded = "%" + surrogatePair.map((byteValue) => byteValue.toString(16)).join("%");
            decoded += decodeURIComponent(encoded);
          } else {
            decoded += String.fromCharCode((byte & 15) << 12 | (input3[++i4] & 63) << 6 | input3[++i4] & 63);
          }
        }
        return decoded;
      };
      exports.toUtf8 = toUtf82;
    }
  });

  // node_modules/@aws-sdk/util-utf8-browser/dist-cjs/whatwgEncodingApi.js
  var require_whatwgEncodingApi = __commonJS({
    "node_modules/@aws-sdk/util-utf8-browser/dist-cjs/whatwgEncodingApi.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.toUtf8 = exports.fromUtf8 = void 0;
      function fromUtf82(input3) {
        return new TextEncoder().encode(input3);
      }
      exports.fromUtf8 = fromUtf82;
      function toUtf82(input3) {
        return new TextDecoder("utf-8").decode(input3);
      }
      exports.toUtf8 = toUtf82;
    }
  });

  // node_modules/@aws-sdk/util-utf8-browser/dist-cjs/index.js
  var require_dist_cjs7 = __commonJS({
    "node_modules/@aws-sdk/util-utf8-browser/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.toUtf8 = exports.fromUtf8 = void 0;
      var pureJs_1 = require_pureJs();
      var whatwgEncodingApi_1 = require_whatwgEncodingApi();
      var fromUtf82 = (input3) => typeof TextEncoder === "function" ? (0, whatwgEncodingApi_1.fromUtf8)(input3) : (0, pureJs_1.fromUtf8)(input3);
      exports.fromUtf8 = fromUtf82;
      var toUtf82 = (input3) => typeof TextDecoder === "function" ? (0, whatwgEncodingApi_1.toUtf8)(input3) : (0, pureJs_1.toUtf8)(input3);
      exports.toUtf8 = toUtf82;
    }
  });

  // node_modules/@aws-crypto/crc32/node_modules/@aws-crypto/util/build/convertToBuffer.js
  var require_convertToBuffer2 = __commonJS({
    "node_modules/@aws-crypto/crc32/node_modules/@aws-crypto/util/build/convertToBuffer.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.convertToBuffer = void 0;
      var util_utf8_browser_1 = require_dist_cjs7();
      var fromUtf82 = typeof Buffer !== "undefined" && Buffer.from ? function(input3) {
        return Buffer.from(input3, "utf8");
      } : util_utf8_browser_1.fromUtf8;
      function convertToBuffer3(data) {
        if (data instanceof Uint8Array)
          return data;
        if (typeof data === "string") {
          return fromUtf82(data);
        }
        if (ArrayBuffer.isView(data)) {
          return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
        }
        return new Uint8Array(data);
      }
      exports.convertToBuffer = convertToBuffer3;
    }
  });

  // node_modules/@aws-crypto/crc32/node_modules/@aws-crypto/util/build/isEmptyData.js
  var require_isEmptyData2 = __commonJS({
    "node_modules/@aws-crypto/crc32/node_modules/@aws-crypto/util/build/isEmptyData.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.isEmptyData = void 0;
      function isEmptyData2(data) {
        if (typeof data === "string") {
          return data.length === 0;
        }
        return data.byteLength === 0;
      }
      exports.isEmptyData = isEmptyData2;
    }
  });

  // node_modules/@aws-crypto/crc32/node_modules/@aws-crypto/util/build/numToUint8.js
  var require_numToUint82 = __commonJS({
    "node_modules/@aws-crypto/crc32/node_modules/@aws-crypto/util/build/numToUint8.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.numToUint8 = void 0;
      function numToUint8(num) {
        return new Uint8Array([
          (num & 4278190080) >> 24,
          (num & 16711680) >> 16,
          (num & 65280) >> 8,
          num & 255
        ]);
      }
      exports.numToUint8 = numToUint8;
    }
  });

  // node_modules/@aws-crypto/crc32/node_modules/@aws-crypto/util/build/uint32ArrayFrom.js
  var require_uint32ArrayFrom2 = __commonJS({
    "node_modules/@aws-crypto/crc32/node_modules/@aws-crypto/util/build/uint32ArrayFrom.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.uint32ArrayFrom = void 0;
      function uint32ArrayFrom(a_lookUpTable) {
        if (!Uint32Array.from) {
          var return_array = new Uint32Array(a_lookUpTable.length);
          var a_index = 0;
          while (a_index < a_lookUpTable.length) {
            return_array[a_index] = a_lookUpTable[a_index];
            a_index += 1;
          }
          return return_array;
        }
        return Uint32Array.from(a_lookUpTable);
      }
      exports.uint32ArrayFrom = uint32ArrayFrom;
    }
  });

  // node_modules/@aws-crypto/crc32/node_modules/@aws-crypto/util/build/index.js
  var require_build = __commonJS({
    "node_modules/@aws-crypto/crc32/node_modules/@aws-crypto/util/build/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.uint32ArrayFrom = exports.numToUint8 = exports.isEmptyData = exports.convertToBuffer = void 0;
      var convertToBuffer_1 = require_convertToBuffer2();
      Object.defineProperty(exports, "convertToBuffer", { enumerable: true, get: function() {
        return convertToBuffer_1.convertToBuffer;
      } });
      var isEmptyData_1 = require_isEmptyData2();
      Object.defineProperty(exports, "isEmptyData", { enumerable: true, get: function() {
        return isEmptyData_1.isEmptyData;
      } });
      var numToUint8_1 = require_numToUint82();
      Object.defineProperty(exports, "numToUint8", { enumerable: true, get: function() {
        return numToUint8_1.numToUint8;
      } });
      var uint32ArrayFrom_1 = require_uint32ArrayFrom2();
      Object.defineProperty(exports, "uint32ArrayFrom", { enumerable: true, get: function() {
        return uint32ArrayFrom_1.uint32ArrayFrom;
      } });
    }
  });

  // node_modules/@aws-crypto/crc32/build/aws_crc32.js
  var require_aws_crc32 = __commonJS({
    "node_modules/@aws-crypto/crc32/build/aws_crc32.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.AwsCrc32 = void 0;
      var tslib_1 = (init_tslib_es62(), __toCommonJS(tslib_es6_exports2));
      var util_1 = require_build();
      var index_1 = require_build2();
      var AwsCrc32 = (
        /** @class */
        function() {
          function AwsCrc322() {
            this.crc32 = new index_1.Crc32();
          }
          AwsCrc322.prototype.update = function(toHash) {
            if ((0, util_1.isEmptyData)(toHash))
              return;
            this.crc32.update((0, util_1.convertToBuffer)(toHash));
          };
          AwsCrc322.prototype.digest = function() {
            return tslib_1.__awaiter(this, void 0, void 0, function() {
              return tslib_1.__generator(this, function(_a2) {
                return [2, (0, util_1.numToUint8)(this.crc32.digest())];
              });
            });
          };
          AwsCrc322.prototype.reset = function() {
            this.crc32 = new index_1.Crc32();
          };
          return AwsCrc322;
        }()
      );
      exports.AwsCrc32 = AwsCrc32;
    }
  });

  // node_modules/@aws-crypto/crc32/build/index.js
  var require_build2 = __commonJS({
    "node_modules/@aws-crypto/crc32/build/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.AwsCrc32 = exports.Crc32 = exports.crc32 = void 0;
      var tslib_1 = (init_tslib_es62(), __toCommonJS(tslib_es6_exports2));
      var util_1 = require_build();
      function crc32(data) {
        return new Crc32().update(data).digest();
      }
      exports.crc32 = crc32;
      var Crc32 = (
        /** @class */
        function() {
          function Crc322() {
            this.checksum = 4294967295;
          }
          Crc322.prototype.update = function(data) {
            var e_1, _a2;
            try {
              for (var data_1 = tslib_1.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
                var byte = data_1_1.value;
                this.checksum = this.checksum >>> 8 ^ lookupTable[(this.checksum ^ byte) & 255];
              }
            } catch (e_1_1) {
              e_1 = { error: e_1_1 };
            } finally {
              try {
                if (data_1_1 && !data_1_1.done && (_a2 = data_1.return)) _a2.call(data_1);
              } finally {
                if (e_1) throw e_1.error;
              }
            }
            return this;
          };
          Crc322.prototype.digest = function() {
            return (this.checksum ^ 4294967295) >>> 0;
          };
          return Crc322;
        }()
      );
      exports.Crc32 = Crc32;
      var a_lookUpTable = [
        0,
        1996959894,
        3993919788,
        2567524794,
        124634137,
        1886057615,
        3915621685,
        2657392035,
        249268274,
        2044508324,
        3772115230,
        2547177864,
        162941995,
        2125561021,
        3887607047,
        2428444049,
        498536548,
        1789927666,
        4089016648,
        2227061214,
        450548861,
        1843258603,
        4107580753,
        2211677639,
        325883990,
        1684777152,
        4251122042,
        2321926636,
        335633487,
        1661365465,
        4195302755,
        2366115317,
        997073096,
        1281953886,
        3579855332,
        2724688242,
        1006888145,
        1258607687,
        3524101629,
        2768942443,
        901097722,
        1119000684,
        3686517206,
        2898065728,
        853044451,
        1172266101,
        3705015759,
        2882616665,
        651767980,
        1373503546,
        3369554304,
        3218104598,
        565507253,
        1454621731,
        3485111705,
        3099436303,
        671266974,
        1594198024,
        3322730930,
        2970347812,
        795835527,
        1483230225,
        3244367275,
        3060149565,
        1994146192,
        31158534,
        2563907772,
        4023717930,
        1907459465,
        112637215,
        2680153253,
        3904427059,
        2013776290,
        251722036,
        2517215374,
        3775830040,
        2137656763,
        141376813,
        2439277719,
        3865271297,
        1802195444,
        476864866,
        2238001368,
        4066508878,
        1812370925,
        453092731,
        2181625025,
        4111451223,
        1706088902,
        314042704,
        2344532202,
        4240017532,
        1658658271,
        366619977,
        2362670323,
        4224994405,
        1303535960,
        984961486,
        2747007092,
        3569037538,
        1256170817,
        1037604311,
        2765210733,
        3554079995,
        1131014506,
        879679996,
        2909243462,
        3663771856,
        1141124467,
        855842277,
        2852801631,
        3708648649,
        1342533948,
        654459306,
        3188396048,
        3373015174,
        1466479909,
        544179635,
        3110523913,
        3462522015,
        1591671054,
        702138776,
        2966460450,
        3352799412,
        1504918807,
        783551873,
        3082640443,
        3233442989,
        3988292384,
        2596254646,
        62317068,
        1957810842,
        3939845945,
        2647816111,
        81470997,
        1943803523,
        3814918930,
        2489596804,
        225274430,
        2053790376,
        3826175755,
        2466906013,
        167816743,
        2097651377,
        4027552580,
        2265490386,
        503444072,
        1762050814,
        4150417245,
        2154129355,
        426522225,
        1852507879,
        4275313526,
        2312317920,
        282753626,
        1742555852,
        4189708143,
        2394877945,
        397917763,
        1622183637,
        3604390888,
        2714866558,
        953729732,
        1340076626,
        3518719985,
        2797360999,
        1068828381,
        1219638859,
        3624741850,
        2936675148,
        906185462,
        1090812512,
        3747672003,
        2825379669,
        829329135,
        1181335161,
        3412177804,
        3160834842,
        628085408,
        1382605366,
        3423369109,
        3138078467,
        570562233,
        1426400815,
        3317316542,
        2998733608,
        733239954,
        1555261956,
        3268935591,
        3050360625,
        752459403,
        1541320221,
        2607071920,
        3965973030,
        1969922972,
        40735498,
        2617837225,
        3943577151,
        1913087877,
        83908371,
        2512341634,
        3803740692,
        2075208622,
        213261112,
        2463272603,
        3855990285,
        2094854071,
        198958881,
        2262029012,
        4057260610,
        1759359992,
        534414190,
        2176718541,
        4139329115,
        1873836001,
        414664567,
        2282248934,
        4279200368,
        1711684554,
        285281116,
        2405801727,
        4167216745,
        1634467795,
        376229701,
        2685067896,
        3608007406,
        1308918612,
        956543938,
        2808555105,
        3495958263,
        1231636301,
        1047427035,
        2932959818,
        3654703836,
        1088359270,
        936918e3,
        2847714899,
        3736837829,
        1202900863,
        817233897,
        3183342108,
        3401237130,
        1404277552,
        615818150,
        3134207493,
        3453421203,
        1423857449,
        601450431,
        3009837614,
        3294710456,
        1567103746,
        711928724,
        3020668471,
        3272380065,
        1510334235,
        755167117
      ];
      var lookupTable = (0, util_1.uint32ArrayFrom)(a_lookUpTable);
      var aws_crc32_1 = require_aws_crc32();
      Object.defineProperty(exports, "AwsCrc32", { enumerable: true, get: function() {
        return aws_crc32_1.AwsCrc32;
      } });
    }
  });

  // node_modules/@smithy/util-hex-encoding/dist-cjs/index.js
  var require_dist_cjs8 = __commonJS({
    "node_modules/@smithy/util-hex-encoding/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.toHex = exports.fromHex = void 0;
      var SHORT_TO_HEX3 = {};
      var HEX_TO_SHORT3 = {};
      for (let i4 = 0; i4 < 256; i4++) {
        let encodedByte = i4.toString(16).toLowerCase();
        if (encodedByte.length === 1) {
          encodedByte = `0${encodedByte}`;
        }
        SHORT_TO_HEX3[i4] = encodedByte;
        HEX_TO_SHORT3[encodedByte] = i4;
      }
      function fromHex2(encoded) {
        if (encoded.length % 2 !== 0) {
          throw new Error("Hex encoded strings must have an even number length");
        }
        const out = new Uint8Array(encoded.length / 2);
        for (let i4 = 0; i4 < encoded.length; i4 += 2) {
          const encodedByte = encoded.slice(i4, i4 + 2).toLowerCase();
          if (encodedByte in HEX_TO_SHORT3) {
            out[i4 / 2] = HEX_TO_SHORT3[encodedByte];
          } else {
            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);
          }
        }
        return out;
      }
      exports.fromHex = fromHex2;
      function toHex3(bytes) {
        let out = "";
        for (let i4 = 0; i4 < bytes.byteLength; i4++) {
          out += SHORT_TO_HEX3[bytes[i4]];
        }
        return out;
      }
      exports.toHex = toHex3;
    }
  });

  // node_modules/@smithy/eventstream-codec/dist-cjs/Int64.js
  var require_Int64 = __commonJS({
    "node_modules/@smithy/eventstream-codec/dist-cjs/Int64.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Int64 = void 0;
      var util_hex_encoding_1 = require_dist_cjs8();
      var Int642 = class _Int64 {
        constructor(bytes) {
          this.bytes = bytes;
          if (bytes.byteLength !== 8) {
            throw new Error("Int64 buffers must be exactly 8 bytes");
          }
        }
        static fromNumber(number) {
          if (number > 9223372036854776e3 || number < -9223372036854776e3) {
            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);
          }
          const bytes = new Uint8Array(8);
          for (let i4 = 7, remaining = Math.abs(Math.round(number)); i4 > -1 && remaining > 0; i4--, remaining /= 256) {
            bytes[i4] = remaining;
          }
          if (number < 0) {
            negate3(bytes);
          }
          return new _Int64(bytes);
        }
        valueOf() {
          const bytes = this.bytes.slice(0);
          const negative = bytes[0] & 128;
          if (negative) {
            negate3(bytes);
          }
          return parseInt((0, util_hex_encoding_1.toHex)(bytes), 16) * (negative ? -1 : 1);
        }
        toString() {
          return String(this.valueOf());
        }
      };
      exports.Int64 = Int642;
      function negate3(bytes) {
        for (let i4 = 0; i4 < 8; i4++) {
          bytes[i4] ^= 255;
        }
        for (let i4 = 7; i4 > -1; i4--) {
          bytes[i4]++;
          if (bytes[i4] !== 0)
            break;
        }
      }
    }
  });

  // node_modules/@smithy/eventstream-codec/dist-cjs/HeaderMarshaller.js
  var require_HeaderMarshaller = __commonJS({
    "node_modules/@smithy/eventstream-codec/dist-cjs/HeaderMarshaller.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.HeaderMarshaller = void 0;
      var util_hex_encoding_1 = require_dist_cjs8();
      var Int64_1 = require_Int64();
      var HeaderMarshaller = class {
        constructor(toUtf82, fromUtf82) {
          this.toUtf8 = toUtf82;
          this.fromUtf8 = fromUtf82;
        }
        format(headers) {
          const chunks = [];
          for (const headerName of Object.keys(headers)) {
            const bytes = this.fromUtf8(headerName);
            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));
          }
          const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));
          let position2 = 0;
          for (const chunk of chunks) {
            out.set(chunk, position2);
            position2 += chunk.byteLength;
          }
          return out;
        }
        formatHeaderValue(header2) {
          switch (header2.type) {
            case "boolean":
              return Uint8Array.from([header2.value ? 0 : 1]);
            case "byte":
              return Uint8Array.from([2, header2.value]);
            case "short":
              const shortView = new DataView(new ArrayBuffer(3));
              shortView.setUint8(0, 3);
              shortView.setInt16(1, header2.value, false);
              return new Uint8Array(shortView.buffer);
            case "integer":
              const intView = new DataView(new ArrayBuffer(5));
              intView.setUint8(0, 4);
              intView.setInt32(1, header2.value, false);
              return new Uint8Array(intView.buffer);
            case "long":
              const longBytes = new Uint8Array(9);
              longBytes[0] = 5;
              longBytes.set(header2.value.bytes, 1);
              return longBytes;
            case "binary":
              const binView = new DataView(new ArrayBuffer(3 + header2.value.byteLength));
              binView.setUint8(0, 6);
              binView.setUint16(1, header2.value.byteLength, false);
              const binBytes = new Uint8Array(binView.buffer);
              binBytes.set(header2.value, 3);
              return binBytes;
            case "string":
              const utf8Bytes = this.fromUtf8(header2.value);
              const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));
              strView.setUint8(0, 7);
              strView.setUint16(1, utf8Bytes.byteLength, false);
              const strBytes = new Uint8Array(strView.buffer);
              strBytes.set(utf8Bytes, 3);
              return strBytes;
            case "timestamp":
              const tsBytes = new Uint8Array(9);
              tsBytes[0] = 8;
              tsBytes.set(Int64_1.Int64.fromNumber(header2.value.valueOf()).bytes, 1);
              return tsBytes;
            case "uuid":
              if (!UUID_PATTERN2.test(header2.value)) {
                throw new Error(`Invalid UUID received: ${header2.value}`);
              }
              const uuidBytes = new Uint8Array(17);
              uuidBytes[0] = 9;
              uuidBytes.set((0, util_hex_encoding_1.fromHex)(header2.value.replace(/\-/g, "")), 1);
              return uuidBytes;
          }
        }
        parse(headers) {
          const out = {};
          let position2 = 0;
          while (position2 < headers.byteLength) {
            const nameLength = headers.getUint8(position2++);
            const name15 = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position2, nameLength));
            position2 += nameLength;
            switch (headers.getUint8(position2++)) {
              case 0:
                out[name15] = {
                  type: BOOLEAN_TAG,
                  value: true
                };
                break;
              case 1:
                out[name15] = {
                  type: BOOLEAN_TAG,
                  value: false
                };
                break;
              case 2:
                out[name15] = {
                  type: BYTE_TAG,
                  value: headers.getInt8(position2++)
                };
                break;
              case 3:
                out[name15] = {
                  type: SHORT_TAG,
                  value: headers.getInt16(position2, false)
                };
                position2 += 2;
                break;
              case 4:
                out[name15] = {
                  type: INT_TAG,
                  value: headers.getInt32(position2, false)
                };
                position2 += 4;
                break;
              case 5:
                out[name15] = {
                  type: LONG_TAG,
                  value: new Int64_1.Int64(new Uint8Array(headers.buffer, headers.byteOffset + position2, 8))
                };
                position2 += 8;
                break;
              case 6:
                const binaryLength = headers.getUint16(position2, false);
                position2 += 2;
                out[name15] = {
                  type: BINARY_TAG,
                  value: new Uint8Array(headers.buffer, headers.byteOffset + position2, binaryLength)
                };
                position2 += binaryLength;
                break;
              case 7:
                const stringLength = headers.getUint16(position2, false);
                position2 += 2;
                out[name15] = {
                  type: STRING_TAG,
                  value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position2, stringLength))
                };
                position2 += stringLength;
                break;
              case 8:
                out[name15] = {
                  type: TIMESTAMP_TAG,
                  value: new Date(new Int64_1.Int64(new Uint8Array(headers.buffer, headers.byteOffset + position2, 8)).valueOf())
                };
                position2 += 8;
                break;
              case 9:
                const uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position2, 16);
                position2 += 16;
                out[name15] = {
                  type: UUID_TAG,
                  value: `${(0, util_hex_encoding_1.toHex)(uuidBytes.subarray(0, 4))}-${(0, util_hex_encoding_1.toHex)(uuidBytes.subarray(4, 6))}-${(0, util_hex_encoding_1.toHex)(uuidBytes.subarray(6, 8))}-${(0, util_hex_encoding_1.toHex)(uuidBytes.subarray(8, 10))}-${(0, util_hex_encoding_1.toHex)(uuidBytes.subarray(10))}`
                };
                break;
              default:
                throw new Error(`Unrecognized header type tag`);
            }
          }
          return out;
        }
      };
      exports.HeaderMarshaller = HeaderMarshaller;
      var HEADER_VALUE_TYPE2;
      (function(HEADER_VALUE_TYPE3) {
        HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["boolTrue"] = 0] = "boolTrue";
        HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["boolFalse"] = 1] = "boolFalse";
        HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["byte"] = 2] = "byte";
        HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["short"] = 3] = "short";
        HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["integer"] = 4] = "integer";
        HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["long"] = 5] = "long";
        HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["byteArray"] = 6] = "byteArray";
        HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["string"] = 7] = "string";
        HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["timestamp"] = 8] = "timestamp";
        HEADER_VALUE_TYPE3[HEADER_VALUE_TYPE3["uuid"] = 9] = "uuid";
      })(HEADER_VALUE_TYPE2 || (HEADER_VALUE_TYPE2 = {}));
      var BOOLEAN_TAG = "boolean";
      var BYTE_TAG = "byte";
      var SHORT_TAG = "short";
      var INT_TAG = "integer";
      var LONG_TAG = "long";
      var BINARY_TAG = "binary";
      var STRING_TAG = "string";
      var TIMESTAMP_TAG = "timestamp";
      var UUID_TAG = "uuid";
      var UUID_PATTERN2 = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
    }
  });

  // node_modules/@smithy/eventstream-codec/dist-cjs/splitMessage.js
  var require_splitMessage = __commonJS({
    "node_modules/@smithy/eventstream-codec/dist-cjs/splitMessage.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.splitMessage = void 0;
      var crc32_1 = require_build2();
      var PRELUDE_MEMBER_LENGTH = 4;
      var PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;
      var CHECKSUM_LENGTH = 4;
      var MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;
      function splitMessage({ byteLength, byteOffset, buffer }) {
        if (byteLength < MINIMUM_MESSAGE_LENGTH) {
          throw new Error("Provided message too short to accommodate event stream message overhead");
        }
        const view = new DataView(buffer, byteOffset, byteLength);
        const messageLength = view.getUint32(0, false);
        if (byteLength !== messageLength) {
          throw new Error("Reported message length does not match received message length");
        }
        const headerLength = view.getUint32(PRELUDE_MEMBER_LENGTH, false);
        const expectedPreludeChecksum = view.getUint32(PRELUDE_LENGTH, false);
        const expectedMessageChecksum = view.getUint32(byteLength - CHECKSUM_LENGTH, false);
        const checksummer = new crc32_1.Crc32().update(new Uint8Array(buffer, byteOffset, PRELUDE_LENGTH));
        if (expectedPreludeChecksum !== checksummer.digest()) {
          throw new Error(`The prelude checksum specified in the message (${expectedPreludeChecksum}) does not match the calculated CRC32 checksum (${checksummer.digest()})`);
        }
        checksummer.update(new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH, byteLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH)));
        if (expectedMessageChecksum !== checksummer.digest()) {
          throw new Error(`The message checksum (${checksummer.digest()}) did not match the expected value of ${expectedMessageChecksum}`);
        }
        return {
          headers: new DataView(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH, headerLength),
          body: new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH + headerLength, messageLength - headerLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH + CHECKSUM_LENGTH))
        };
      }
      exports.splitMessage = splitMessage;
    }
  });

  // node_modules/@smithy/eventstream-codec/dist-cjs/EventStreamCodec.js
  var require_EventStreamCodec = __commonJS({
    "node_modules/@smithy/eventstream-codec/dist-cjs/EventStreamCodec.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EventStreamCodec = void 0;
      var crc32_1 = require_build2();
      var HeaderMarshaller_1 = require_HeaderMarshaller();
      var splitMessage_1 = require_splitMessage();
      var EventStreamCodec = class {
        constructor(toUtf82, fromUtf82) {
          this.headerMarshaller = new HeaderMarshaller_1.HeaderMarshaller(toUtf82, fromUtf82);
          this.messageBuffer = [];
          this.isEndOfStream = false;
        }
        feed(message2) {
          this.messageBuffer.push(this.decode(message2));
        }
        endOfStream() {
          this.isEndOfStream = true;
        }
        getMessage() {
          const message2 = this.messageBuffer.pop();
          const isEndOfStream = this.isEndOfStream;
          return {
            getMessage() {
              return message2;
            },
            isEndOfStream() {
              return isEndOfStream;
            }
          };
        }
        getAvailableMessages() {
          const messages = this.messageBuffer;
          this.messageBuffer = [];
          const isEndOfStream = this.isEndOfStream;
          return {
            getMessages() {
              return messages;
            },
            isEndOfStream() {
              return isEndOfStream;
            }
          };
        }
        encode({ headers: rawHeaders, body: body2 }) {
          const headers = this.headerMarshaller.format(rawHeaders);
          const length8 = headers.byteLength + body2.byteLength + 16;
          const out = new Uint8Array(length8);
          const view = new DataView(out.buffer, out.byteOffset, out.byteLength);
          const checksum = new crc32_1.Crc32();
          view.setUint32(0, length8, false);
          view.setUint32(4, headers.byteLength, false);
          view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);
          out.set(headers, 12);
          out.set(body2, headers.byteLength + 12);
          view.setUint32(length8 - 4, checksum.update(out.subarray(8, length8 - 4)).digest(), false);
          return out;
        }
        decode(message2) {
          const { headers, body: body2 } = (0, splitMessage_1.splitMessage)(message2);
          return { headers: this.headerMarshaller.parse(headers), body: body2 };
        }
        formatHeaders(rawHeaders) {
          return this.headerMarshaller.format(rawHeaders);
        }
      };
      exports.EventStreamCodec = EventStreamCodec;
    }
  });

  // node_modules/@smithy/eventstream-codec/dist-cjs/Message.js
  var require_Message = __commonJS({
    "node_modules/@smithy/eventstream-codec/dist-cjs/Message.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/@smithy/eventstream-codec/dist-cjs/MessageDecoderStream.js
  var require_MessageDecoderStream = __commonJS({
    "node_modules/@smithy/eventstream-codec/dist-cjs/MessageDecoderStream.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.MessageDecoderStream = void 0;
      var MessageDecoderStream = class {
        constructor(options2) {
          this.options = options2;
        }
        [Symbol.asyncIterator]() {
          return this.asyncIterator();
        }
        async *asyncIterator() {
          for await (const bytes of this.options.inputStream) {
            const decoded = this.options.decoder.decode(bytes);
            yield decoded;
          }
        }
      };
      exports.MessageDecoderStream = MessageDecoderStream;
    }
  });

  // node_modules/@smithy/eventstream-codec/dist-cjs/MessageEncoderStream.js
  var require_MessageEncoderStream = __commonJS({
    "node_modules/@smithy/eventstream-codec/dist-cjs/MessageEncoderStream.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.MessageEncoderStream = void 0;
      var MessageEncoderStream = class {
        constructor(options2) {
          this.options = options2;
        }
        [Symbol.asyncIterator]() {
          return this.asyncIterator();
        }
        async *asyncIterator() {
          for await (const msg of this.options.messageStream) {
            const encoded = this.options.encoder.encode(msg);
            yield encoded;
          }
          if (this.options.includeEndFrame) {
            yield new Uint8Array(0);
          }
        }
      };
      exports.MessageEncoderStream = MessageEncoderStream;
    }
  });

  // node_modules/@smithy/eventstream-codec/dist-cjs/SmithyMessageDecoderStream.js
  var require_SmithyMessageDecoderStream = __commonJS({
    "node_modules/@smithy/eventstream-codec/dist-cjs/SmithyMessageDecoderStream.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SmithyMessageDecoderStream = void 0;
      var SmithyMessageDecoderStream = class {
        constructor(options2) {
          this.options = options2;
        }
        [Symbol.asyncIterator]() {
          return this.asyncIterator();
        }
        async *asyncIterator() {
          for await (const message2 of this.options.messageStream) {
            const deserialized = await this.options.deserializer(message2);
            if (deserialized === void 0)
              continue;
            yield deserialized;
          }
        }
      };
      exports.SmithyMessageDecoderStream = SmithyMessageDecoderStream;
    }
  });

  // node_modules/@smithy/eventstream-codec/dist-cjs/SmithyMessageEncoderStream.js
  var require_SmithyMessageEncoderStream = __commonJS({
    "node_modules/@smithy/eventstream-codec/dist-cjs/SmithyMessageEncoderStream.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SmithyMessageEncoderStream = void 0;
      var SmithyMessageEncoderStream = class {
        constructor(options2) {
          this.options = options2;
        }
        [Symbol.asyncIterator]() {
          return this.asyncIterator();
        }
        async *asyncIterator() {
          for await (const chunk of this.options.inputStream) {
            const payloadBuf = this.options.serializer(chunk);
            yield payloadBuf;
          }
        }
      };
      exports.SmithyMessageEncoderStream = SmithyMessageEncoderStream;
    }
  });

  // node_modules/@smithy/eventstream-codec/dist-cjs/index.js
  var require_dist_cjs9 = __commonJS({
    "node_modules/@smithy/eventstream-codec/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_EventStreamCodec(), exports);
      tslib_1.__exportStar(require_HeaderMarshaller(), exports);
      tslib_1.__exportStar(require_Int64(), exports);
      tslib_1.__exportStar(require_Message(), exports);
      tslib_1.__exportStar(require_MessageDecoderStream(), exports);
      tslib_1.__exportStar(require_MessageEncoderStream(), exports);
      tslib_1.__exportStar(require_SmithyMessageDecoderStream(), exports);
      tslib_1.__exportStar(require_SmithyMessageEncoderStream(), exports);
    }
  });

  // node_modules/@smithy/signature-v4/node_modules/@smithy/util-middleware/dist-cjs/normalizeProvider.js
  var require_normalizeProvider = __commonJS({
    "node_modules/@smithy/signature-v4/node_modules/@smithy/util-middleware/dist-cjs/normalizeProvider.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.normalizeProvider = void 0;
      var normalizeProvider3 = (input3) => {
        if (typeof input3 === "function")
          return input3;
        const promisified = Promise.resolve(input3);
        return () => promisified;
      };
      exports.normalizeProvider = normalizeProvider3;
    }
  });

  // node_modules/@smithy/signature-v4/node_modules/@smithy/util-middleware/dist-cjs/index.js
  var require_dist_cjs10 = __commonJS({
    "node_modules/@smithy/signature-v4/node_modules/@smithy/util-middleware/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_normalizeProvider(), exports);
    }
  });

  // node_modules/@smithy/is-array-buffer/dist-cjs/index.js
  var require_dist_cjs11 = __commonJS({
    "node_modules/@smithy/is-array-buffer/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.isArrayBuffer = void 0;
      var isArrayBuffer2 = (arg) => typeof ArrayBuffer === "function" && arg instanceof ArrayBuffer || Object.prototype.toString.call(arg) === "[object ArrayBuffer]";
      exports.isArrayBuffer = isArrayBuffer2;
    }
  });

  // node_modules/@smithy/signature-v4/node_modules/@smithy/util-utf8/node_modules/@smithy/util-buffer-from/dist-cjs/index.js
  var require_dist_cjs12 = __commonJS({
    "node_modules/@smithy/signature-v4/node_modules/@smithy/util-utf8/node_modules/@smithy/util-buffer-from/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.fromString = exports.fromArrayBuffer = void 0;
      var is_array_buffer_1 = require_dist_cjs11();
      var buffer_1 = require_buffer();
      var fromArrayBuffer = (input3, offset = 0, length8 = input3.byteLength - offset) => {
        if (!(0, is_array_buffer_1.isArrayBuffer)(input3)) {
          throw new TypeError(`The "input" argument must be ArrayBuffer. Received type ${typeof input3} (${input3})`);
        }
        return buffer_1.Buffer.from(input3, offset, length8);
      };
      exports.fromArrayBuffer = fromArrayBuffer;
      var fromString2 = (input3, encoding2) => {
        if (typeof input3 !== "string") {
          throw new TypeError(`The "input" argument must be of type string. Received type ${typeof input3} (${input3})`);
        }
        return encoding2 ? buffer_1.Buffer.from(input3, encoding2) : buffer_1.Buffer.from(input3);
      };
      exports.fromString = fromString2;
    }
  });

  // node_modules/@smithy/signature-v4/node_modules/@smithy/util-utf8/dist-cjs/fromUtf8.js
  var require_fromUtf8 = __commonJS({
    "node_modules/@smithy/signature-v4/node_modules/@smithy/util-utf8/dist-cjs/fromUtf8.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.fromUtf8 = void 0;
      var util_buffer_from_1 = require_dist_cjs12();
      var fromUtf82 = (input3) => {
        const buf = (0, util_buffer_from_1.fromString)(input3, "utf8");
        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);
      };
      exports.fromUtf8 = fromUtf82;
    }
  });

  // node_modules/@smithy/signature-v4/node_modules/@smithy/util-utf8/dist-cjs/toUint8Array.js
  var require_toUint8Array = __commonJS({
    "node_modules/@smithy/signature-v4/node_modules/@smithy/util-utf8/dist-cjs/toUint8Array.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.toUint8Array = void 0;
      var fromUtf8_1 = require_fromUtf8();
      var toUint8Array2 = (data) => {
        if (typeof data === "string") {
          return (0, fromUtf8_1.fromUtf8)(data);
        }
        if (ArrayBuffer.isView(data)) {
          return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
        }
        return new Uint8Array(data);
      };
      exports.toUint8Array = toUint8Array2;
    }
  });

  // node_modules/@smithy/signature-v4/node_modules/@smithy/util-utf8/dist-cjs/toUtf8.js
  var require_toUtf8 = __commonJS({
    "node_modules/@smithy/signature-v4/node_modules/@smithy/util-utf8/dist-cjs/toUtf8.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.toUtf8 = void 0;
      var util_buffer_from_1 = require_dist_cjs12();
      var toUtf82 = (input3) => (0, util_buffer_from_1.fromArrayBuffer)(input3.buffer, input3.byteOffset, input3.byteLength).toString("utf8");
      exports.toUtf8 = toUtf82;
    }
  });

  // node_modules/@smithy/signature-v4/node_modules/@smithy/util-utf8/dist-cjs/index.js
  var require_dist_cjs13 = __commonJS({
    "node_modules/@smithy/signature-v4/node_modules/@smithy/util-utf8/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_fromUtf8(), exports);
      tslib_1.__exportStar(require_toUint8Array(), exports);
      tslib_1.__exportStar(require_toUtf8(), exports);
    }
  });

  // node_modules/@smithy/signature-v4/dist-cjs/constants.js
  var require_constants2 = __commonJS({
    "node_modules/@smithy/signature-v4/dist-cjs/constants.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.MAX_PRESIGNED_TTL = exports.KEY_TYPE_IDENTIFIER = exports.MAX_CACHE_SIZE = exports.UNSIGNED_PAYLOAD = exports.EVENT_ALGORITHM_IDENTIFIER = exports.ALGORITHM_IDENTIFIER_V4A = exports.ALGORITHM_IDENTIFIER = exports.UNSIGNABLE_PATTERNS = exports.SEC_HEADER_PATTERN = exports.PROXY_HEADER_PATTERN = exports.ALWAYS_UNSIGNABLE_HEADERS = exports.HOST_HEADER = exports.TOKEN_HEADER = exports.SHA256_HEADER = exports.SIGNATURE_HEADER = exports.GENERATED_HEADERS = exports.DATE_HEADER = exports.AMZ_DATE_HEADER = exports.AUTH_HEADER = exports.REGION_SET_PARAM = exports.TOKEN_QUERY_PARAM = exports.SIGNATURE_QUERY_PARAM = exports.EXPIRES_QUERY_PARAM = exports.SIGNED_HEADERS_QUERY_PARAM = exports.AMZ_DATE_QUERY_PARAM = exports.CREDENTIAL_QUERY_PARAM = exports.ALGORITHM_QUERY_PARAM = void 0;
      exports.ALGORITHM_QUERY_PARAM = "X-Amz-Algorithm";
      exports.CREDENTIAL_QUERY_PARAM = "X-Amz-Credential";
      exports.AMZ_DATE_QUERY_PARAM = "X-Amz-Date";
      exports.SIGNED_HEADERS_QUERY_PARAM = "X-Amz-SignedHeaders";
      exports.EXPIRES_QUERY_PARAM = "X-Amz-Expires";
      exports.SIGNATURE_QUERY_PARAM = "X-Amz-Signature";
      exports.TOKEN_QUERY_PARAM = "X-Amz-Security-Token";
      exports.REGION_SET_PARAM = "X-Amz-Region-Set";
      exports.AUTH_HEADER = "authorization";
      exports.AMZ_DATE_HEADER = exports.AMZ_DATE_QUERY_PARAM.toLowerCase();
      exports.DATE_HEADER = "date";
      exports.GENERATED_HEADERS = [exports.AUTH_HEADER, exports.AMZ_DATE_HEADER, exports.DATE_HEADER];
      exports.SIGNATURE_HEADER = exports.SIGNATURE_QUERY_PARAM.toLowerCase();
      exports.SHA256_HEADER = "x-amz-content-sha256";
      exports.TOKEN_HEADER = exports.TOKEN_QUERY_PARAM.toLowerCase();
      exports.HOST_HEADER = "host";
      exports.ALWAYS_UNSIGNABLE_HEADERS = {
        authorization: true,
        "cache-control": true,
        connection: true,
        expect: true,
        from: true,
        "keep-alive": true,
        "max-forwards": true,
        pragma: true,
        referer: true,
        te: true,
        trailer: true,
        "transfer-encoding": true,
        upgrade: true,
        "user-agent": true,
        "x-amzn-trace-id": true
      };
      exports.PROXY_HEADER_PATTERN = /^proxy-/;
      exports.SEC_HEADER_PATTERN = /^sec-/;
      exports.UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];
      exports.ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256";
      exports.ALGORITHM_IDENTIFIER_V4A = "AWS4-ECDSA-P256-SHA256";
      exports.EVENT_ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256-PAYLOAD";
      exports.UNSIGNED_PAYLOAD = "UNSIGNED-PAYLOAD";
      exports.MAX_CACHE_SIZE = 50;
      exports.KEY_TYPE_IDENTIFIER = "aws4_request";
      exports.MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;
    }
  });

  // node_modules/@smithy/signature-v4/dist-cjs/credentialDerivation.js
  var require_credentialDerivation = __commonJS({
    "node_modules/@smithy/signature-v4/dist-cjs/credentialDerivation.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.clearCredentialCache = exports.getSigningKey = exports.createScope = void 0;
      var util_hex_encoding_1 = require_dist_cjs8();
      var util_utf8_1 = require_dist_cjs13();
      var constants_1 = require_constants2();
      var signingKeyCache2 = {};
      var cacheQueue2 = [];
      var createScope2 = (shortDate, region, service) => `${shortDate}/${region}/${service}/${constants_1.KEY_TYPE_IDENTIFIER}`;
      exports.createScope = createScope2;
      var getSigningKey2 = async (sha256Constructor, credentials, shortDate, region, service) => {
        const credsHash = await hmac2(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);
        const cacheKey = `${shortDate}:${region}:${service}:${(0, util_hex_encoding_1.toHex)(credsHash)}:${credentials.sessionToken}`;
        if (cacheKey in signingKeyCache2) {
          return signingKeyCache2[cacheKey];
        }
        cacheQueue2.push(cacheKey);
        while (cacheQueue2.length > constants_1.MAX_CACHE_SIZE) {
          delete signingKeyCache2[cacheQueue2.shift()];
        }
        let key2 = `AWS4${credentials.secretAccessKey}`;
        for (const signable of [shortDate, region, service, constants_1.KEY_TYPE_IDENTIFIER]) {
          key2 = await hmac2(sha256Constructor, key2, signable);
        }
        return signingKeyCache2[cacheKey] = key2;
      };
      exports.getSigningKey = getSigningKey2;
      var clearCredentialCache = () => {
        cacheQueue2.length = 0;
        Object.keys(signingKeyCache2).forEach((cacheKey) => {
          delete signingKeyCache2[cacheKey];
        });
      };
      exports.clearCredentialCache = clearCredentialCache;
      var hmac2 = (ctor, secret, data) => {
        const hash2 = new ctor(secret);
        hash2.update((0, util_utf8_1.toUint8Array)(data));
        return hash2.digest();
      };
    }
  });

  // node_modules/@smithy/signature-v4/dist-cjs/getCanonicalHeaders.js
  var require_getCanonicalHeaders = __commonJS({
    "node_modules/@smithy/signature-v4/dist-cjs/getCanonicalHeaders.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.getCanonicalHeaders = void 0;
      var constants_1 = require_constants2();
      var getCanonicalHeaders2 = ({ headers }, unsignableHeaders, signableHeaders) => {
        const canonical = {};
        for (const headerName of Object.keys(headers).sort()) {
          if (headers[headerName] == void 0) {
            continue;
          }
          const canonicalHeaderName = headerName.toLowerCase();
          if (canonicalHeaderName in constants_1.ALWAYS_UNSIGNABLE_HEADERS || (unsignableHeaders === null || unsignableHeaders === void 0 ? void 0 : unsignableHeaders.has(canonicalHeaderName)) || constants_1.PROXY_HEADER_PATTERN.test(canonicalHeaderName) || constants_1.SEC_HEADER_PATTERN.test(canonicalHeaderName)) {
            if (!signableHeaders || signableHeaders && !signableHeaders.has(canonicalHeaderName)) {
              continue;
            }
          }
          canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\s+/g, " ");
        }
        return canonical;
      };
      exports.getCanonicalHeaders = getCanonicalHeaders2;
    }
  });

  // node_modules/@smithy/util-uri-escape/dist-cjs/escape-uri.js
  var require_escape_uri = __commonJS({
    "node_modules/@smithy/util-uri-escape/dist-cjs/escape-uri.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.escapeUri = void 0;
      var escapeUri3 = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode3);
      exports.escapeUri = escapeUri3;
      var hexEncode3 = (c3) => `%${c3.charCodeAt(0).toString(16).toUpperCase()}`;
    }
  });

  // node_modules/@smithy/util-uri-escape/dist-cjs/escape-uri-path.js
  var require_escape_uri_path = __commonJS({
    "node_modules/@smithy/util-uri-escape/dist-cjs/escape-uri-path.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.escapeUriPath = void 0;
      var escape_uri_1 = require_escape_uri();
      var escapeUriPath = (uri) => uri.split("/").map(escape_uri_1.escapeUri).join("/");
      exports.escapeUriPath = escapeUriPath;
    }
  });

  // node_modules/@smithy/util-uri-escape/dist-cjs/index.js
  var require_dist_cjs14 = __commonJS({
    "node_modules/@smithy/util-uri-escape/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_escape_uri(), exports);
      tslib_1.__exportStar(require_escape_uri_path(), exports);
    }
  });

  // node_modules/@smithy/signature-v4/dist-cjs/getCanonicalQuery.js
  var require_getCanonicalQuery = __commonJS({
    "node_modules/@smithy/signature-v4/dist-cjs/getCanonicalQuery.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.getCanonicalQuery = void 0;
      var util_uri_escape_1 = require_dist_cjs14();
      var constants_1 = require_constants2();
      var getCanonicalQuery2 = ({ query: query3 = {} }) => {
        const keys3 = [];
        const serialized = {};
        for (const key2 of Object.keys(query3).sort()) {
          if (key2.toLowerCase() === constants_1.SIGNATURE_HEADER) {
            continue;
          }
          keys3.push(key2);
          const value14 = query3[key2];
          if (typeof value14 === "string") {
            serialized[key2] = `${(0, util_uri_escape_1.escapeUri)(key2)}=${(0, util_uri_escape_1.escapeUri)(value14)}`;
          } else if (Array.isArray(value14)) {
            serialized[key2] = value14.slice(0).sort().reduce((encoded, value15) => encoded.concat([`${(0, util_uri_escape_1.escapeUri)(key2)}=${(0, util_uri_escape_1.escapeUri)(value15)}`]), []).join("&");
          }
        }
        return keys3.map((key2) => serialized[key2]).filter((serialized2) => serialized2).join("&");
      };
      exports.getCanonicalQuery = getCanonicalQuery2;
    }
  });

  // node_modules/@smithy/signature-v4/dist-cjs/getPayloadHash.js
  var require_getPayloadHash = __commonJS({
    "node_modules/@smithy/signature-v4/dist-cjs/getPayloadHash.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.getPayloadHash = void 0;
      var is_array_buffer_1 = require_dist_cjs11();
      var util_hex_encoding_1 = require_dist_cjs8();
      var util_utf8_1 = require_dist_cjs13();
      var constants_1 = require_constants2();
      var getPayloadHash2 = async ({ headers, body: body2 }, hashConstructor) => {
        for (const headerName of Object.keys(headers)) {
          if (headerName.toLowerCase() === constants_1.SHA256_HEADER) {
            return headers[headerName];
          }
        }
        if (body2 == void 0) {
          return "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855";
        } else if (typeof body2 === "string" || ArrayBuffer.isView(body2) || (0, is_array_buffer_1.isArrayBuffer)(body2)) {
          const hashCtor = new hashConstructor();
          hashCtor.update((0, util_utf8_1.toUint8Array)(body2));
          return (0, util_hex_encoding_1.toHex)(await hashCtor.digest());
        }
        return constants_1.UNSIGNED_PAYLOAD;
      };
      exports.getPayloadHash = getPayloadHash2;
    }
  });

  // node_modules/@smithy/signature-v4/dist-cjs/headerUtil.js
  var require_headerUtil = __commonJS({
    "node_modules/@smithy/signature-v4/dist-cjs/headerUtil.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.deleteHeader = exports.getHeaderValue = exports.hasHeader = void 0;
      var hasHeader2 = (soughtHeader, headers) => {
        soughtHeader = soughtHeader.toLowerCase();
        for (const headerName of Object.keys(headers)) {
          if (soughtHeader === headerName.toLowerCase()) {
            return true;
          }
        }
        return false;
      };
      exports.hasHeader = hasHeader2;
      var getHeaderValue = (soughtHeader, headers) => {
        soughtHeader = soughtHeader.toLowerCase();
        for (const headerName of Object.keys(headers)) {
          if (soughtHeader === headerName.toLowerCase()) {
            return headers[headerName];
          }
        }
        return void 0;
      };
      exports.getHeaderValue = getHeaderValue;
      var deleteHeader = (soughtHeader, headers) => {
        soughtHeader = soughtHeader.toLowerCase();
        for (const headerName of Object.keys(headers)) {
          if (soughtHeader === headerName.toLowerCase()) {
            delete headers[headerName];
          }
        }
      };
      exports.deleteHeader = deleteHeader;
    }
  });

  // node_modules/@smithy/signature-v4/dist-cjs/cloneRequest.js
  var require_cloneRequest = __commonJS({
    "node_modules/@smithy/signature-v4/dist-cjs/cloneRequest.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.cloneQuery = exports.cloneRequest = void 0;
      var cloneRequest2 = ({ headers, query: query3, ...rest }) => ({
        ...rest,
        headers: { ...headers },
        query: query3 ? (0, exports.cloneQuery)(query3) : void 0
      });
      exports.cloneRequest = cloneRequest2;
      var cloneQuery3 = (query3) => Object.keys(query3).reduce((carry, paramName) => {
        const param2 = query3[paramName];
        return {
          ...carry,
          [paramName]: Array.isArray(param2) ? [...param2] : param2
        };
      }, {});
      exports.cloneQuery = cloneQuery3;
    }
  });

  // node_modules/@smithy/signature-v4/dist-cjs/moveHeadersToQuery.js
  var require_moveHeadersToQuery = __commonJS({
    "node_modules/@smithy/signature-v4/dist-cjs/moveHeadersToQuery.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.moveHeadersToQuery = void 0;
      var cloneRequest_1 = require_cloneRequest();
      var moveHeadersToQuery2 = (request3, options2 = {}) => {
        var _a2;
        const { headers, query: query3 = {} } = typeof request3.clone === "function" ? request3.clone() : (0, cloneRequest_1.cloneRequest)(request3);
        for (const name15 of Object.keys(headers)) {
          const lname = name15.toLowerCase();
          if (lname.slice(0, 6) === "x-amz-" && !((_a2 = options2.unhoistableHeaders) === null || _a2 === void 0 ? void 0 : _a2.has(lname))) {
            query3[name15] = headers[name15];
            delete headers[name15];
          }
        }
        return {
          ...request3,
          headers,
          query: query3
        };
      };
      exports.moveHeadersToQuery = moveHeadersToQuery2;
    }
  });

  // node_modules/@smithy/signature-v4/dist-cjs/prepareRequest.js
  var require_prepareRequest = __commonJS({
    "node_modules/@smithy/signature-v4/dist-cjs/prepareRequest.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.prepareRequest = void 0;
      var cloneRequest_1 = require_cloneRequest();
      var constants_1 = require_constants2();
      var prepareRequest2 = (request3) => {
        request3 = typeof request3.clone === "function" ? request3.clone() : (0, cloneRequest_1.cloneRequest)(request3);
        for (const headerName of Object.keys(request3.headers)) {
          if (constants_1.GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {
            delete request3.headers[headerName];
          }
        }
        return request3;
      };
      exports.prepareRequest = prepareRequest2;
    }
  });

  // node_modules/@smithy/signature-v4/dist-cjs/utilDate.js
  var require_utilDate = __commonJS({
    "node_modules/@smithy/signature-v4/dist-cjs/utilDate.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.toDate = exports.iso8601 = void 0;
      var iso86012 = (time3) => (0, exports.toDate)(time3).toISOString().replace(/\.\d{3}Z$/, "Z");
      exports.iso8601 = iso86012;
      var toDate2 = (time3) => {
        if (typeof time3 === "number") {
          return new Date(time3 * 1e3);
        }
        if (typeof time3 === "string") {
          if (Number(time3)) {
            return new Date(Number(time3) * 1e3);
          }
          return new Date(time3);
        }
        return time3;
      };
      exports.toDate = toDate2;
    }
  });

  // node_modules/@smithy/signature-v4/dist-cjs/SignatureV4.js
  var require_SignatureV4 = __commonJS({
    "node_modules/@smithy/signature-v4/dist-cjs/SignatureV4.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SignatureV4 = void 0;
      var eventstream_codec_1 = require_dist_cjs9();
      var util_hex_encoding_1 = require_dist_cjs8();
      var util_middleware_1 = require_dist_cjs10();
      var util_utf8_1 = require_dist_cjs13();
      var constants_1 = require_constants2();
      var credentialDerivation_1 = require_credentialDerivation();
      var getCanonicalHeaders_1 = require_getCanonicalHeaders();
      var getCanonicalQuery_1 = require_getCanonicalQuery();
      var getPayloadHash_1 = require_getPayloadHash();
      var headerUtil_1 = require_headerUtil();
      var moveHeadersToQuery_1 = require_moveHeadersToQuery();
      var prepareRequest_1 = require_prepareRequest();
      var utilDate_1 = require_utilDate();
      var SignatureV42 = class {
        constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true }) {
          this.headerMarshaller = new eventstream_codec_1.HeaderMarshaller(util_utf8_1.toUtf8, util_utf8_1.fromUtf8);
          this.service = service;
          this.sha256 = sha256;
          this.uriEscapePath = uriEscapePath;
          this.applyChecksum = typeof applyChecksum === "boolean" ? applyChecksum : true;
          this.regionProvider = (0, util_middleware_1.normalizeProvider)(region);
          this.credentialProvider = (0, util_middleware_1.normalizeProvider)(credentials);
        }
        async presign(originalRequest, options2 = {}) {
          const { signingDate = /* @__PURE__ */ new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService } = options2;
          const credentials = await this.credentialProvider();
          this.validateResolvedCredentials(credentials);
          const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : await this.regionProvider();
          const { longDate, shortDate } = formatDate2(signingDate);
          if (expiresIn > constants_1.MAX_PRESIGNED_TTL) {
            return Promise.reject("Signature version 4 presigned URLs must have an expiration date less than one week in the future");
          }
          const scope2 = (0, credentialDerivation_1.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);
          const request3 = (0, moveHeadersToQuery_1.moveHeadersToQuery)((0, prepareRequest_1.prepareRequest)(originalRequest), { unhoistableHeaders });
          if (credentials.sessionToken) {
            request3.query[constants_1.TOKEN_QUERY_PARAM] = credentials.sessionToken;
          }
          request3.query[constants_1.ALGORITHM_QUERY_PARAM] = constants_1.ALGORITHM_IDENTIFIER;
          request3.query[constants_1.CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope2}`;
          request3.query[constants_1.AMZ_DATE_QUERY_PARAM] = longDate;
          request3.query[constants_1.EXPIRES_QUERY_PARAM] = expiresIn.toString(10);
          const canonicalHeaders = (0, getCanonicalHeaders_1.getCanonicalHeaders)(request3, unsignableHeaders, signableHeaders);
          request3.query[constants_1.SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList2(canonicalHeaders);
          request3.query[constants_1.SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope2, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request3, canonicalHeaders, await (0, getPayloadHash_1.getPayloadHash)(originalRequest, this.sha256)));
          return request3;
        }
        async sign(toSign, options2) {
          if (typeof toSign === "string") {
            return this.signString(toSign, options2);
          } else if (toSign.headers && toSign.payload) {
            return this.signEvent(toSign, options2);
          } else if (toSign.message) {
            return this.signMessage(toSign, options2);
          } else {
            return this.signRequest(toSign, options2);
          }
        }
        async signEvent({ headers, payload }, { signingDate = /* @__PURE__ */ new Date(), priorSignature, signingRegion, signingService }) {
          const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : await this.regionProvider();
          const { shortDate, longDate } = formatDate2(signingDate);
          const scope2 = (0, credentialDerivation_1.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);
          const hashedPayload = await (0, getPayloadHash_1.getPayloadHash)({ headers: {}, body: payload }, this.sha256);
          const hash2 = new this.sha256();
          hash2.update(headers);
          const hashedHeaders = (0, util_hex_encoding_1.toHex)(await hash2.digest());
          const stringToSign = [
            constants_1.EVENT_ALGORITHM_IDENTIFIER,
            longDate,
            scope2,
            priorSignature,
            hashedHeaders,
            hashedPayload
          ].join("\n");
          return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });
        }
        async signMessage(signableMessage, { signingDate = /* @__PURE__ */ new Date(), signingRegion, signingService }) {
          const promise2 = this.signEvent({
            headers: this.headerMarshaller.format(signableMessage.message.headers),
            payload: signableMessage.message.body
          }, {
            signingDate,
            signingRegion,
            signingService,
            priorSignature: signableMessage.priorSignature
          });
          return promise2.then((signature) => {
            return { message: signableMessage.message, signature };
          });
        }
        async signString(stringToSign, { signingDate = /* @__PURE__ */ new Date(), signingRegion, signingService } = {}) {
          const credentials = await this.credentialProvider();
          this.validateResolvedCredentials(credentials);
          const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : await this.regionProvider();
          const { shortDate } = formatDate2(signingDate);
          const hash2 = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));
          hash2.update((0, util_utf8_1.toUint8Array)(stringToSign));
          return (0, util_hex_encoding_1.toHex)(await hash2.digest());
        }
        async signRequest(requestToSign, { signingDate = /* @__PURE__ */ new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService } = {}) {
          const credentials = await this.credentialProvider();
          this.validateResolvedCredentials(credentials);
          const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : await this.regionProvider();
          const request3 = (0, prepareRequest_1.prepareRequest)(requestToSign);
          const { longDate, shortDate } = formatDate2(signingDate);
          const scope2 = (0, credentialDerivation_1.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);
          request3.headers[constants_1.AMZ_DATE_HEADER] = longDate;
          if (credentials.sessionToken) {
            request3.headers[constants_1.TOKEN_HEADER] = credentials.sessionToken;
          }
          const payloadHash = await (0, getPayloadHash_1.getPayloadHash)(request3, this.sha256);
          if (!(0, headerUtil_1.hasHeader)(constants_1.SHA256_HEADER, request3.headers) && this.applyChecksum) {
            request3.headers[constants_1.SHA256_HEADER] = payloadHash;
          }
          const canonicalHeaders = (0, getCanonicalHeaders_1.getCanonicalHeaders)(request3, unsignableHeaders, signableHeaders);
          const signature = await this.getSignature(longDate, scope2, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request3, canonicalHeaders, payloadHash));
          request3.headers[constants_1.AUTH_HEADER] = `${constants_1.ALGORITHM_IDENTIFIER} Credential=${credentials.accessKeyId}/${scope2}, SignedHeaders=${getCanonicalHeaderList2(canonicalHeaders)}, Signature=${signature}`;
          return request3;
        }
        createCanonicalRequest(request3, canonicalHeaders, payloadHash) {
          const sortedHeaders = Object.keys(canonicalHeaders).sort();
          return `${request3.method}
${this.getCanonicalPath(request3)}
${(0, getCanonicalQuery_1.getCanonicalQuery)(request3)}
${sortedHeaders.map((name15) => `${name15}:${canonicalHeaders[name15]}`).join("\n")}

${sortedHeaders.join(";")}
${payloadHash}`;
        }
        async createStringToSign(longDate, credentialScope, canonicalRequest) {
          const hash2 = new this.sha256();
          hash2.update((0, util_utf8_1.toUint8Array)(canonicalRequest));
          const hashedRequest = await hash2.digest();
          return `${constants_1.ALGORITHM_IDENTIFIER}
${longDate}
${credentialScope}
${(0, util_hex_encoding_1.toHex)(hashedRequest)}`;
        }
        getCanonicalPath({ path }) {
          if (this.uriEscapePath) {
            const normalizedPathSegments = [];
            for (const pathSegment of path.split("/")) {
              if ((pathSegment === null || pathSegment === void 0 ? void 0 : pathSegment.length) === 0)
                continue;
              if (pathSegment === ".")
                continue;
              if (pathSegment === "..") {
                normalizedPathSegments.pop();
              } else {
                normalizedPathSegments.push(pathSegment);
              }
            }
            const normalizedPath = `${(path === null || path === void 0 ? void 0 : path.startsWith("/")) ? "/" : ""}${normalizedPathSegments.join("/")}${normalizedPathSegments.length > 0 && (path === null || path === void 0 ? void 0 : path.endsWith("/")) ? "/" : ""}`;
            const doubleEncoded = encodeURIComponent(normalizedPath);
            return doubleEncoded.replace(/%2F/g, "/");
          }
          return path;
        }
        async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {
          const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);
          const hash2 = new this.sha256(await keyPromise);
          hash2.update((0, util_utf8_1.toUint8Array)(stringToSign));
          return (0, util_hex_encoding_1.toHex)(await hash2.digest());
        }
        getSigningKey(credentials, region, shortDate, service) {
          return (0, credentialDerivation_1.getSigningKey)(this.sha256, credentials, shortDate, region, service || this.service);
        }
        validateResolvedCredentials(credentials) {
          if (typeof credentials !== "object" || typeof credentials.accessKeyId !== "string" || typeof credentials.secretAccessKey !== "string") {
            throw new Error("Resolved credential object is not valid");
          }
        }
      };
      exports.SignatureV4 = SignatureV42;
      var formatDate2 = (now) => {
        const longDate = (0, utilDate_1.iso8601)(now).replace(/[\-:]/g, "");
        return {
          longDate,
          shortDate: longDate.slice(0, 8)
        };
      };
      var getCanonicalHeaderList2 = (headers) => Object.keys(headers).sort().join(";");
    }
  });

  // node_modules/@smithy/signature-v4/dist-cjs/index.js
  var require_dist_cjs15 = __commonJS({
    "node_modules/@smithy/signature-v4/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.prepareRequest = exports.moveHeadersToQuery = exports.getPayloadHash = exports.getCanonicalQuery = exports.getCanonicalHeaders = void 0;
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_SignatureV4(), exports);
      var getCanonicalHeaders_1 = require_getCanonicalHeaders();
      Object.defineProperty(exports, "getCanonicalHeaders", { enumerable: true, get: function() {
        return getCanonicalHeaders_1.getCanonicalHeaders;
      } });
      var getCanonicalQuery_1 = require_getCanonicalQuery();
      Object.defineProperty(exports, "getCanonicalQuery", { enumerable: true, get: function() {
        return getCanonicalQuery_1.getCanonicalQuery;
      } });
      var getPayloadHash_1 = require_getPayloadHash();
      Object.defineProperty(exports, "getPayloadHash", { enumerable: true, get: function() {
        return getPayloadHash_1.getPayloadHash;
      } });
      var moveHeadersToQuery_1 = require_moveHeadersToQuery();
      Object.defineProperty(exports, "moveHeadersToQuery", { enumerable: true, get: function() {
        return moveHeadersToQuery_1.moveHeadersToQuery;
      } });
      var prepareRequest_1 = require_prepareRequest();
      Object.defineProperty(exports, "prepareRequest", { enumerable: true, get: function() {
        return prepareRequest_1.prepareRequest;
      } });
      tslib_1.__exportStar(require_credentialDerivation(), exports);
    }
  });

  // node_modules/@aws-sdk/signature-v4/dist-cjs/index.js
  var require_dist_cjs16 = __commonJS({
    "node_modules/@aws-sdk/signature-v4/dist-cjs/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
      tslib_1.__exportStar(require_dist_cjs15(), exports);
    }
  });

  // node_modules/readable-stream/lib/ours/primordials.js
  var require_primordials = __commonJS({
    "node_modules/readable-stream/lib/ours/primordials.js"(exports, module) {
      "use strict";
      module.exports = {
        ArrayIsArray(self2) {
          return Array.isArray(self2);
        },
        ArrayPrototypeIncludes(self2, el) {
          return self2.includes(el);
        },
        ArrayPrototypeIndexOf(self2, el) {
          return self2.indexOf(el);
        },
        ArrayPrototypeJoin(self2, sep) {
          return self2.join(sep);
        },
        ArrayPrototypeMap(self2, fn) {
          return self2.map(fn);
        },
        ArrayPrototypePop(self2, el) {
          return self2.pop(el);
        },
        ArrayPrototypePush(self2, el) {
          return self2.push(el);
        },
        ArrayPrototypeSlice(self2, start2, end) {
          return self2.slice(start2, end);
        },
        Error,
        FunctionPrototypeCall(fn, thisArgs, ...args) {
          return fn.call(thisArgs, ...args);
        },
        FunctionPrototypeSymbolHasInstance(self2, instance) {
          return Function.prototype[Symbol.hasInstance].call(self2, instance);
        },
        MathFloor: Math.floor,
        Number,
        NumberIsInteger: Number.isInteger,
        NumberIsNaN: Number.isNaN,
        NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER,
        NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER,
        NumberParseInt: Number.parseInt,
        ObjectDefineProperties(self2, props) {
          return Object.defineProperties(self2, props);
        },
        ObjectDefineProperty(self2, name15, prop3) {
          return Object.defineProperty(self2, name15, prop3);
        },
        ObjectGetOwnPropertyDescriptor(self2, name15) {
          return Object.getOwnPropertyDescriptor(self2, name15);
        },
        ObjectKeys(obj) {
          return Object.keys(obj);
        },
        ObjectSetPrototypeOf(target6, proto) {
          return Object.setPrototypeOf(target6, proto);
        },
        Promise,
        PromisePrototypeCatch(self2, fn) {
          return self2.catch(fn);
        },
        PromisePrototypeThen(self2, thenFn, catchFn) {
          return self2.then(thenFn, catchFn);
        },
        PromiseReject(err) {
          return Promise.reject(err);
        },
        PromiseResolve(val2) {
          return Promise.resolve(val2);
        },
        ReflectApply: Reflect.apply,
        RegExpPrototypeTest(self2, value14) {
          return self2.test(value14);
        },
        SafeSet: Set,
        String,
        StringPrototypeSlice(self2, start2, end) {
          return self2.slice(start2, end);
        },
        StringPrototypeToLowerCase(self2) {
          return self2.toLowerCase();
        },
        StringPrototypeToUpperCase(self2) {
          return self2.toUpperCase();
        },
        StringPrototypeTrim(self2) {
          return self2.trim();
        },
        Symbol,
        SymbolFor: Symbol.for,
        SymbolAsyncIterator: Symbol.asyncIterator,
        SymbolHasInstance: Symbol.hasInstance,
        SymbolIterator: Symbol.iterator,
        SymbolDispose: Symbol.dispose || Symbol("Symbol.dispose"),
        SymbolAsyncDispose: Symbol.asyncDispose || Symbol("Symbol.asyncDispose"),
        TypedArrayPrototypeSet(self2, buf, len) {
          return self2.set(buf, len);
        },
        Boolean,
        Uint8Array
      };
    }
  });

  // node_modules/abort-controller/browser.js
  var require_browser = __commonJS({
    "node_modules/abort-controller/browser.js"(exports, module) {
      "use strict";
      var { AbortController: AbortController2, AbortSignal } = typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : (
        /* otherwise */
        void 0
      );
      module.exports = AbortController2;
      module.exports.AbortSignal = AbortSignal;
      module.exports.default = AbortController2;
    }
  });

  // node_modules/events/events.js
  var require_events = __commonJS({
    "node_modules/events/events.js"(exports, module) {
      "use strict";
      var R = typeof Reflect === "object" ? Reflect : null;
      var ReflectApply = R && typeof R.apply === "function" ? R.apply : function ReflectApply2(target6, receiver, args) {
        return Function.prototype.apply.call(target6, receiver, args);
      };
      var ReflectOwnKeys;
      if (R && typeof R.ownKeys === "function") {
        ReflectOwnKeys = R.ownKeys;
      } else if (Object.getOwnPropertySymbols) {
        ReflectOwnKeys = function ReflectOwnKeys2(target6) {
          return Object.getOwnPropertyNames(target6).concat(Object.getOwnPropertySymbols(target6));
        };
      } else {
        ReflectOwnKeys = function ReflectOwnKeys2(target6) {
          return Object.getOwnPropertyNames(target6);
        };
      }
      function ProcessEmitWarning(warning) {
        if (console && console.warn) console.warn(warning);
      }
      var NumberIsNaN = Number.isNaN || function NumberIsNaN2(value14) {
        return value14 !== value14;
      };
      function EventEmitter() {
        EventEmitter.init.call(this);
      }
      module.exports = EventEmitter;
      module.exports.once = once;
      EventEmitter.EventEmitter = EventEmitter;
      EventEmitter.prototype._events = void 0;
      EventEmitter.prototype._eventsCount = 0;
      EventEmitter.prototype._maxListeners = void 0;
      var defaultMaxListeners = 10;
      function checkListener(listener) {
        if (typeof listener !== "function") {
          throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
        }
      }
      Object.defineProperty(EventEmitter, "defaultMaxListeners", {
        enumerable: true,
        get: function() {
          return defaultMaxListeners;
        },
        set: function(arg) {
          if (typeof arg !== "number" || arg < 0 || NumberIsNaN(arg)) {
            throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + ".");
          }
          defaultMaxListeners = arg;
        }
      });
      EventEmitter.init = function() {
        if (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) {
          this._events = /* @__PURE__ */ Object.create(null);
          this._eventsCount = 0;
        }
        this._maxListeners = this._maxListeners || void 0;
      };
      EventEmitter.prototype.setMaxListeners = function setMaxListeners(n3) {
        if (typeof n3 !== "number" || n3 < 0 || NumberIsNaN(n3)) {
          throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n3 + ".");
        }
        this._maxListeners = n3;
        return this;
      };
      function _getMaxListeners(that) {
        if (that._maxListeners === void 0)
          return EventEmitter.defaultMaxListeners;
        return that._maxListeners;
      }
      EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
        return _getMaxListeners(this);
      };
      EventEmitter.prototype.emit = function emit(type) {
        var args = [];
        for (var i4 = 1; i4 < arguments.length; i4++) args.push(arguments[i4]);
        var doError = type === "error";
        var events = this._events;
        if (events !== void 0)
          doError = doError && events.error === void 0;
        else if (!doError)
          return false;
        if (doError) {
          var er;
          if (args.length > 0)
            er = args[0];
          if (er instanceof Error) {
            throw er;
          }
          var err = new Error("Unhandled error." + (er ? " (" + er.message + ")" : ""));
          err.context = er;
          throw err;
        }
        var handler3 = events[type];
        if (handler3 === void 0)
          return false;
        if (typeof handler3 === "function") {
          ReflectApply(handler3, this, args);
        } else {
          var len = handler3.length;
          var listeners = arrayClone(handler3, len);
          for (var i4 = 0; i4 < len; ++i4)
            ReflectApply(listeners[i4], this, args);
        }
        return true;
      };
      function _addListener(target6, type, listener, prepend) {
        var m3;
        var events;
        var existing;
        checkListener(listener);
        events = target6._events;
        if (events === void 0) {
          events = target6._events = /* @__PURE__ */ Object.create(null);
          target6._eventsCount = 0;
        } else {
          if (events.newListener !== void 0) {
            target6.emit(
              "newListener",
              type,
              listener.listener ? listener.listener : listener
            );
            events = target6._events;
          }
          existing = events[type];
        }
        if (existing === void 0) {
          existing = events[type] = listener;
          ++target6._eventsCount;
        } else {
          if (typeof existing === "function") {
            existing = events[type] = prepend ? [listener, existing] : [existing, listener];
          } else if (prepend) {
            existing.unshift(listener);
          } else {
            existing.push(listener);
          }
          m3 = _getMaxListeners(target6);
          if (m3 > 0 && existing.length > m3 && !existing.warned) {
            existing.warned = true;
            var w2 = new Error("Possible EventEmitter memory leak detected. " + existing.length + " " + String(type) + " listeners added. Use emitter.setMaxListeners() to increase limit");
            w2.name = "MaxListenersExceededWarning";
            w2.emitter = target6;
            w2.type = type;
            w2.count = existing.length;
            ProcessEmitWarning(w2);
          }
        }
        return target6;
      }
      EventEmitter.prototype.addListener = function addListener(type, listener) {
        return _addListener(this, type, listener, false);
      };
      EventEmitter.prototype.on = EventEmitter.prototype.addListener;
      EventEmitter.prototype.prependListener = function prependListener(type, listener) {
        return _addListener(this, type, listener, true);
      };
      function onceWrapper() {
        if (!this.fired) {
          this.target.removeListener(this.type, this.wrapFn);
          this.fired = true;
          if (arguments.length === 0)
            return this.listener.call(this.target);
          return this.listener.apply(this.target, arguments);
        }
      }
      function _onceWrap(target6, type, listener) {
        var state3 = { fired: false, wrapFn: void 0, target: target6, type, listener };
        var wrapped = onceWrapper.bind(state3);
        wrapped.listener = listener;
        state3.wrapFn = wrapped;
        return wrapped;
      }
      EventEmitter.prototype.once = function once2(type, listener) {
        checkListener(listener);
        this.on(type, _onceWrap(this, type, listener));
        return this;
      };
      EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
        checkListener(listener);
        this.prependListener(type, _onceWrap(this, type, listener));
        return this;
      };
      EventEmitter.prototype.removeListener = function removeListener(type, listener) {
        var list, events, position2, i4, originalListener;
        checkListener(listener);
        events = this._events;
        if (events === void 0)
          return this;
        list = events[type];
        if (list === void 0)
          return this;
        if (list === listener || list.listener === listener) {
          if (--this._eventsCount === 0)
            this._events = /* @__PURE__ */ Object.create(null);
          else {
            delete events[type];
            if (events.removeListener)
              this.emit("removeListener", type, list.listener || listener);
          }
        } else if (typeof list !== "function") {
          position2 = -1;
          for (i4 = list.length - 1; i4 >= 0; i4--) {
            if (list[i4] === listener || list[i4].listener === listener) {
              originalListener = list[i4].listener;
              position2 = i4;
              break;
            }
          }
          if (position2 < 0)
            return this;
          if (position2 === 0)
            list.shift();
          else {
            spliceOne(list, position2);
          }
          if (list.length === 1)
            events[type] = list[0];
          if (events.removeListener !== void 0)
            this.emit("removeListener", type, originalListener || listener);
        }
        return this;
      };
      EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
      EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
        var listeners, events, i4;
        events = this._events;
        if (events === void 0)
          return this;
        if (events.removeListener === void 0) {
          if (arguments.length === 0) {
            this._events = /* @__PURE__ */ Object.create(null);
            this._eventsCount = 0;
          } else if (events[type] !== void 0) {
            if (--this._eventsCount === 0)
              this._events = /* @__PURE__ */ Object.create(null);
            else
              delete events[type];
          }
          return this;
        }
        if (arguments.length === 0) {
          var keys3 = Object.keys(events);
          var key2;
          for (i4 = 0; i4 < keys3.length; ++i4) {
            key2 = keys3[i4];
            if (key2 === "removeListener") continue;
            this.removeAllListeners(key2);
          }
          this.removeAllListeners("removeListener");
          this._events = /* @__PURE__ */ Object.create(null);
          this._eventsCount = 0;
          return this;
        }
        listeners = events[type];
        if (typeof listeners === "function") {
          this.removeListener(type, listeners);
        } else if (listeners !== void 0) {
          for (i4 = listeners.length - 1; i4 >= 0; i4--) {
            this.removeListener(type, listeners[i4]);
          }
        }
        return this;
      };
      function _listeners(target6, type, unwrap5) {
        var events = target6._events;
        if (events === void 0)
          return [];
        var evlistener = events[type];
        if (evlistener === void 0)
          return [];
        if (typeof evlistener === "function")
          return unwrap5 ? [evlistener.listener || evlistener] : [evlistener];
        return unwrap5 ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
      }
      EventEmitter.prototype.listeners = function listeners(type) {
        return _listeners(this, type, true);
      };
      EventEmitter.prototype.rawListeners = function rawListeners(type) {
        return _listeners(this, type, false);
      };
      EventEmitter.listenerCount = function(emitter, type) {
        if (typeof emitter.listenerCount === "function") {
          return emitter.listenerCount(type);
        } else {
          return listenerCount.call(emitter, type);
        }
      };
      EventEmitter.prototype.listenerCount = listenerCount;
      function listenerCount(type) {
        var events = this._events;
        if (events !== void 0) {
          var evlistener = events[type];
          if (typeof evlistener === "function") {
            return 1;
          } else if (evlistener !== void 0) {
            return evlistener.length;
          }
        }
        return 0;
      }
      EventEmitter.prototype.eventNames = function eventNames() {
        return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
      };
      function arrayClone(arr, n3) {
        var copy2 = new Array(n3);
        for (var i4 = 0; i4 < n3; ++i4)
          copy2[i4] = arr[i4];
        return copy2;
      }
      function spliceOne(list, index4) {
        for (; index4 + 1 < list.length; index4++)
          list[index4] = list[index4 + 1];
        list.pop();
      }
      function unwrapListeners(arr) {
        var ret = new Array(arr.length);
        for (var i4 = 0; i4 < ret.length; ++i4) {
          ret[i4] = arr[i4].listener || arr[i4];
        }
        return ret;
      }
      function once(emitter, name15) {
        return new Promise(function(resolve, reject) {
          function errorListener(err) {
            emitter.removeListener(name15, resolver);
            reject(err);
          }
          function resolver() {
            if (typeof emitter.removeListener === "function") {
              emitter.removeListener("error", errorListener);
            }
            resolve([].slice.call(arguments));
          }
          ;
          eventTargetAgnosticAddListener(emitter, name15, resolver, { once: true });
          if (name15 !== "error") {
            addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
          }
        });
      }
      function addErrorHandlerIfEventEmitter(emitter, handler3, flags) {
        if (typeof emitter.on === "function") {
          eventTargetAgnosticAddListener(emitter, "error", handler3, flags);
        }
      }
      function eventTargetAgnosticAddListener(emitter, name15, listener, flags) {
        if (typeof emitter.on === "function") {
          if (flags.once) {
            emitter.once(name15, listener);
          } else {
            emitter.on(name15, listener);
          }
        } else if (typeof emitter.addEventListener === "function") {
          emitter.addEventListener(name15, function wrapListener(arg) {
            if (flags.once) {
              emitter.removeEventListener(name15, wrapListener);
            }
            listener(arg);
          });
        } else {
          throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
        }
      }
    }
  });

  // node_modules/readable-stream/lib/ours/util.js
  var require_util3 = __commonJS({
    "node_modules/readable-stream/lib/ours/util.js"(exports, module) {
      "use strict";
      var bufferModule = require_buffer();
      var { kResistStopPropagation, SymbolDispose } = require_primordials();
      var AbortSignal = globalThis.AbortSignal || require_browser().AbortSignal;
      var AbortController2 = globalThis.AbortController || require_browser().AbortController;
      var AsyncFunction = Object.getPrototypeOf(async function() {
      }).constructor;
      var Blob2 = globalThis.Blob || bufferModule.Blob;
      var isBlob = typeof Blob2 !== "undefined" ? function isBlob2(b4) {
        return b4 instanceof Blob2;
      } : function isBlob2(b4) {
        return false;
      };
      var validateAbortSignal = (signal, name15) => {
        if (signal !== void 0 && (signal === null || typeof signal !== "object" || !("aborted" in signal))) {
          throw new ERR_INVALID_ARG_TYPE(name15, "AbortSignal", signal);
        }
      };
      var validateFunction = (value14, name15) => {
        if (typeof value14 !== "function") throw new ERR_INVALID_ARG_TYPE(name15, "Function", value14);
      };
      var AggregateError2 = class extends Error {
        constructor(errors) {
          if (!Array.isArray(errors)) {
            throw new TypeError(`Expected input to be an Array, got ${typeof errors}`);
          }
          let message2 = "";
          for (let i4 = 0; i4 < errors.length; i4++) {
            message2 += `    ${errors[i4].stack}
`;
          }
          super(message2);
          this.name = "AggregateError";
          this.errors = errors;
        }
      };
      module.exports = {
        AggregateError: AggregateError2,
        kEmptyObject: Object.freeze({}),
        once(callback) {
          let called = false;
          return function(...args) {
            if (called) {
              return;
            }
            called = true;
            callback.apply(this, args);
          };
        },
        createDeferredPromise: function() {
          let resolve;
          let reject;
          const promise2 = new Promise((res, rej) => {
            resolve = res;
            reject = rej;
          });
          return {
            promise: promise2,
            resolve,
            reject
          };
        },
        promisify(fn) {
          return new Promise((resolve, reject) => {
            fn((err, ...args) => {
              if (err) {
                return reject(err);
              }
              return resolve(...args);
            });
          });
        },
        debuglog() {
          return function() {
          };
        },
        format(format, ...args) {
          return format.replace(/%([sdifj])/g, function(...[_unused, type]) {
            const replacement = args.shift();
            if (type === "f") {
              return replacement.toFixed(6);
            } else if (type === "j") {
              return JSON.stringify(replacement);
            } else if (type === "s" && typeof replacement === "object") {
              const ctor = replacement.constructor !== Object ? replacement.constructor.name : "";
              return `${ctor} {}`.trim();
            } else {
              return replacement.toString();
            }
          });
        },
        inspect(value14) {
          switch (typeof value14) {
            case "string":
              if (value14.includes("'")) {
                if (!value14.includes('"')) {
                  return `"${value14}"`;
                } else if (!value14.includes("`") && !value14.includes("${")) {
                  return `\`${value14}\``;
                }
              }
              return `'${value14}'`;
            case "number":
              if (isNaN(value14)) {
                return "NaN";
              } else if (Object.is(value14, -0)) {
                return String(value14);
              }
              return value14;
            case "bigint":
              return `${String(value14)}n`;
            case "boolean":
            case "undefined":
              return String(value14);
            case "object":
              return "{}";
          }
        },
        types: {
          isAsyncFunction(fn) {
            return fn instanceof AsyncFunction;
          },
          isArrayBufferView(arr) {
            return ArrayBuffer.isView(arr);
          }
        },
        isBlob,
        deprecate(fn, message2) {
          return fn;
        },
        addAbortListener: require_events().addAbortListener || function addAbortListener(signal, listener) {
          if (signal === void 0) {
            throw new ERR_INVALID_ARG_TYPE("signal", "AbortSignal", signal);
          }
          validateAbortSignal(signal, "signal");
          validateFunction(listener, "listener");
          let removeEventListener3;
          if (signal.aborted) {
            queueMicrotask(() => listener());
          } else {
            signal.addEventListener("abort", listener, {
              __proto__: null,
              once: true,
              [kResistStopPropagation]: true
            });
            removeEventListener3 = () => {
              signal.removeEventListener("abort", listener);
            };
          }
          return {
            __proto__: null,
            [SymbolDispose]() {
              var _removeEventListener;
              (_removeEventListener = removeEventListener3) === null || _removeEventListener === void 0 ? void 0 : _removeEventListener();
            }
          };
        },
        AbortSignalAny: AbortSignal.any || function AbortSignalAny(signals) {
          if (signals.length === 1) {
            return signals[0];
          }
          const ac = new AbortController2();
          const abort = () => ac.abort();
          signals.forEach((signal) => {
            validateAbortSignal(signal, "signals");
            signal.addEventListener("abort", abort, {
              once: true
            });
          });
          ac.signal.addEventListener(
            "abort",
            () => {
              signals.forEach((signal) => signal.removeEventListener("abort", abort));
            },
            {
              once: true
            }
          );
          return ac.signal;
        }
      };
      module.exports.promisify.custom = Symbol.for("nodejs.util.promisify.custom");
    }
  });

  // node_modules/readable-stream/lib/ours/errors.js
  var require_errors = __commonJS({
    "node_modules/readable-stream/lib/ours/errors.js"(exports, module) {
      "use strict";
      var { format, inspect, AggregateError: CustomAggregateError } = require_util3();
      var AggregateError2 = globalThis.AggregateError || CustomAggregateError;
      var kIsNodeError = Symbol("kIsNodeError");
      var kTypes = [
        "string",
        "function",
        "number",
        "object",
        // Accept 'Function' and 'Object' as alternative to the lower cased version.
        "Function",
        "Object",
        "boolean",
        "bigint",
        "symbol"
      ];
      var classRegExp = /^([A-Z][a-z0-9]*)+$/;
      var nodeInternalPrefix = "__node_internal_";
      var codes = {};
      function assert(value14, message2) {
        if (!value14) {
          throw new codes.ERR_INTERNAL_ASSERTION(message2);
        }
      }
      function addNumericalSeparator(val2) {
        let res = "";
        let i4 = val2.length;
        const start2 = val2[0] === "-" ? 1 : 0;
        for (; i4 >= start2 + 4; i4 -= 3) {
          res = `_${val2.slice(i4 - 3, i4)}${res}`;
        }
        return `${val2.slice(0, i4)}${res}`;
      }
      function getMessage(key2, msg, args) {
        if (typeof msg === "function") {
          assert(
            msg.length <= args.length,
            // Default options do not count.
            `Code: ${key2}; The provided arguments length (${args.length}) does not match the required ones (${msg.length}).`
          );
          return msg(...args);
        }
        const expectedLength = (msg.match(/%[dfijoOs]/g) || []).length;
        assert(
          expectedLength === args.length,
          `Code: ${key2}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`
        );
        if (args.length === 0) {
          return msg;
        }
        return format(msg, ...args);
      }
      function E2(code3, message2, Base) {
        if (!Base) {
          Base = Error;
        }
        class NodeError extends Base {
          constructor(...args) {
            super(getMessage(code3, message2, args));
          }
          toString() {
            return `${this.name} [${code3}]: ${this.message}`;
          }
        }
        Object.defineProperties(NodeError.prototype, {
          name: {
            value: Base.name,
            writable: true,
            enumerable: false,
            configurable: true
          },
          toString: {
            value() {
              return `${this.name} [${code3}]: ${this.message}`;
            },
            writable: true,
            enumerable: false,
            configurable: true
          }
        });
        NodeError.prototype.code = code3;
        NodeError.prototype[kIsNodeError] = true;
        codes[code3] = NodeError;
      }
      function hideStackFrames(fn) {
        const hidden2 = nodeInternalPrefix + fn.name;
        Object.defineProperty(fn, "name", {
          value: hidden2
        });
        return fn;
      }
      function aggregateTwoErrors(innerError, outerError) {
        if (innerError && outerError && innerError !== outerError) {
          if (Array.isArray(outerError.errors)) {
            outerError.errors.push(innerError);
            return outerError;
          }
          const err = new AggregateError2([outerError, innerError], outerError.message);
          err.code = outerError.code;
          return err;
        }
        return innerError || outerError;
      }
      var AbortError = class extends Error {
        constructor(message2 = "The operation was aborted", options2 = void 0) {
          if (options2 !== void 0 && typeof options2 !== "object") {
            throw new codes.ERR_INVALID_ARG_TYPE("options", "Object", options2);
          }
          super(message2, options2);
          this.code = "ABORT_ERR";
          this.name = "AbortError";
        }
      };
      E2("ERR_ASSERTION", "%s", Error);
      E2(
        "ERR_INVALID_ARG_TYPE",
        (name15, expected, actual) => {
          assert(typeof name15 === "string", "'name' must be a string");
          if (!Array.isArray(expected)) {
            expected = [expected];
          }
          let msg = "The ";
          if (name15.endsWith(" argument")) {
            msg += `${name15} `;
          } else {
            msg += `"${name15}" ${name15.includes(".") ? "property" : "argument"} `;
          }
          msg += "must be ";
          const types = [];
          const instances = [];
          const other = [];
          for (const value14 of expected) {
            assert(typeof value14 === "string", "All expected entries have to be of type string");
            if (kTypes.includes(value14)) {
              types.push(value14.toLowerCase());
            } else if (classRegExp.test(value14)) {
              instances.push(value14);
            } else {
              assert(value14 !== "object", 'The value "object" should be written as "Object"');
              other.push(value14);
            }
          }
          if (instances.length > 0) {
            const pos = types.indexOf("object");
            if (pos !== -1) {
              types.splice(types, pos, 1);
              instances.push("Object");
            }
          }
          if (types.length > 0) {
            switch (types.length) {
              case 1:
                msg += `of type ${types[0]}`;
                break;
              case 2:
                msg += `one of type ${types[0]} or ${types[1]}`;
                break;
              default: {
                const last3 = types.pop();
                msg += `one of type ${types.join(", ")}, or ${last3}`;
              }
            }
            if (instances.length > 0 || other.length > 0) {
              msg += " or ";
            }
          }
          if (instances.length > 0) {
            switch (instances.length) {
              case 1:
                msg += `an instance of ${instances[0]}`;
                break;
              case 2:
                msg += `an instance of ${instances[0]} or ${instances[1]}`;
                break;
              default: {
                const last3 = instances.pop();
                msg += `an instance of ${instances.join(", ")}, or ${last3}`;
              }
            }
            if (other.length > 0) {
              msg += " or ";
            }
          }
          switch (other.length) {
            case 0:
              break;
            case 1:
              if (other[0].toLowerCase() !== other[0]) {
                msg += "an ";
              }
              msg += `${other[0]}`;
              break;
            case 2:
              msg += `one of ${other[0]} or ${other[1]}`;
              break;
            default: {
              const last3 = other.pop();
              msg += `one of ${other.join(", ")}, or ${last3}`;
            }
          }
          if (actual == null) {
            msg += `. Received ${actual}`;
          } else if (typeof actual === "function" && actual.name) {
            msg += `. Received function ${actual.name}`;
          } else if (typeof actual === "object") {
            var _actual$constructor;
            if ((_actual$constructor = actual.constructor) !== null && _actual$constructor !== void 0 && _actual$constructor.name) {
              msg += `. Received an instance of ${actual.constructor.name}`;
            } else {
              const inspected = inspect(actual, {
                depth: -1
              });
              msg += `. Received ${inspected}`;
            }
          } else {
            let inspected = inspect(actual, {
              colors: false
            });
            if (inspected.length > 25) {
              inspected = `${inspected.slice(0, 25)}...`;
            }
            msg += `. Received type ${typeof actual} (${inspected})`;
          }
          return msg;
        },
        TypeError
      );
      E2(
        "ERR_INVALID_ARG_VALUE",
        (name15, value14, reason = "is invalid") => {
          let inspected = inspect(value14);
          if (inspected.length > 128) {
            inspected = inspected.slice(0, 128) + "...";
          }
          const type = name15.includes(".") ? "property" : "argument";
          return `The ${type} '${name15}' ${reason}. Received ${inspected}`;
        },
        TypeError
      );
      E2(
        "ERR_INVALID_RETURN_VALUE",
        (input3, name15, value14) => {
          var _value$constructor;
          const type = value14 !== null && value14 !== void 0 && (_value$constructor = value14.constructor) !== null && _value$constructor !== void 0 && _value$constructor.name ? `instance of ${value14.constructor.name}` : `type ${typeof value14}`;
          return `Expected ${input3} to be returned from the "${name15}" function but got ${type}.`;
        },
        TypeError
      );
      E2(
        "ERR_MISSING_ARGS",
        (...args) => {
          assert(args.length > 0, "At least one arg needs to be specified");
          let msg;
          const len = args.length;
          args = (Array.isArray(args) ? args : [args]).map((a4) => `"${a4}"`).join(" or ");
          switch (len) {
            case 1:
              msg += `The ${args[0]} argument`;
              break;
            case 2:
              msg += `The ${args[0]} and ${args[1]} arguments`;
              break;
            default:
              {
                const last3 = args.pop();
                msg += `The ${args.join(", ")}, and ${last3} arguments`;
              }
              break;
          }
          return `${msg} must be specified`;
        },
        TypeError
      );
      E2(
        "ERR_OUT_OF_RANGE",
        (str, range3, input3) => {
          assert(range3, 'Missing "range" argument');
          let received;
          if (Number.isInteger(input3) && Math.abs(input3) > 2 ** 32) {
            received = addNumericalSeparator(String(input3));
          } else if (typeof input3 === "bigint") {
            received = String(input3);
            if (input3 > 2n ** 32n || input3 < -(2n ** 32n)) {
              received = addNumericalSeparator(received);
            }
            received += "n";
          } else {
            received = inspect(input3);
          }
          return `The value of "${str}" is out of range. It must be ${range3}. Received ${received}`;
        },
        RangeError
      );
      E2("ERR_MULTIPLE_CALLBACK", "Callback called multiple times", Error);
      E2("ERR_METHOD_NOT_IMPLEMENTED", "The %s method is not implemented", Error);
      E2("ERR_STREAM_ALREADY_FINISHED", "Cannot call %s after a stream was finished", Error);
      E2("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable", Error);
      E2("ERR_STREAM_DESTROYED", "Cannot call %s after a stream was destroyed", Error);
      E2("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
      E2("ERR_STREAM_PREMATURE_CLOSE", "Premature close", Error);
      E2("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF", Error);
      E2("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event", Error);
      E2("ERR_STREAM_WRITE_AFTER_END", "write after end", Error);
      E2("ERR_UNKNOWN_ENCODING", "Unknown encoding: %s", TypeError);
      module.exports = {
        AbortError,
        aggregateTwoErrors: hideStackFrames(aggregateTwoErrors),
        hideStackFrames,
        codes
      };
    }
  });

  // node_modules/readable-stream/lib/internal/validators.js
  var require_validators = __commonJS({
    "node_modules/readable-stream/lib/internal/validators.js"(exports, module) {
      "use strict";
      var {
        ArrayIsArray,
        ArrayPrototypeIncludes,
        ArrayPrototypeJoin,
        ArrayPrototypeMap,
        NumberIsInteger,
        NumberIsNaN,
        NumberMAX_SAFE_INTEGER,
        NumberMIN_SAFE_INTEGER,
        NumberParseInt,
        ObjectPrototypeHasOwnProperty,
        RegExpPrototypeExec,
        String: String2,
        StringPrototypeToUpperCase,
        StringPrototypeTrim
      } = require_primordials();
      var {
        hideStackFrames,
        codes: { ERR_SOCKET_BAD_PORT, ERR_INVALID_ARG_TYPE: ERR_INVALID_ARG_TYPE2, ERR_INVALID_ARG_VALUE, ERR_OUT_OF_RANGE, ERR_UNKNOWN_SIGNAL }
      } = require_errors();
      var { normalizeEncoding } = require_util3();
      var { isAsyncFunction, isArrayBufferView } = require_util3().types;
      var signals = {};
      function isInt32(value14) {
        return value14 === (value14 | 0);
      }
      function isUint32(value14) {
        return value14 === value14 >>> 0;
      }
      var octalReg = /^[0-7]+$/;
      var modeDesc = "must be a 32-bit unsigned integer or an octal string";
      function parseFileMode(value14, name15, def) {
        if (typeof value14 === "undefined") {
          value14 = def;
        }
        if (typeof value14 === "string") {
          if (RegExpPrototypeExec(octalReg, value14) === null) {
            throw new ERR_INVALID_ARG_VALUE(name15, value14, modeDesc);
          }
          value14 = NumberParseInt(value14, 8);
        }
        validateUint32(value14, name15);
        return value14;
      }
      var validateInteger = hideStackFrames((value14, name15, min5 = NumberMIN_SAFE_INTEGER, max6 = NumberMAX_SAFE_INTEGER) => {
        if (typeof value14 !== "number") throw new ERR_INVALID_ARG_TYPE2(name15, "number", value14);
        if (!NumberIsInteger(value14)) throw new ERR_OUT_OF_RANGE(name15, "an integer", value14);
        if (value14 < min5 || value14 > max6) throw new ERR_OUT_OF_RANGE(name15, `>= ${min5} && <= ${max6}`, value14);
      });
      var validateInt32 = hideStackFrames((value14, name15, min5 = -2147483648, max6 = 2147483647) => {
        if (typeof value14 !== "number") {
          throw new ERR_INVALID_ARG_TYPE2(name15, "number", value14);
        }
        if (!NumberIsInteger(value14)) {
          throw new ERR_OUT_OF_RANGE(name15, "an integer", value14);
        }
        if (value14 < min5 || value14 > max6) {
          throw new ERR_OUT_OF_RANGE(name15, `>= ${min5} && <= ${max6}`, value14);
        }
      });
      var validateUint32 = hideStackFrames((value14, name15, positive = false) => {
        if (typeof value14 !== "number") {
          throw new ERR_INVALID_ARG_TYPE2(name15, "number", value14);
        }
        if (!NumberIsInteger(value14)) {
          throw new ERR_OUT_OF_RANGE(name15, "an integer", value14);
        }
        const min5 = positive ? 1 : 0;
        const max6 = 4294967295;
        if (value14 < min5 || value14 > max6) {
          throw new ERR_OUT_OF_RANGE(name15, `>= ${min5} && <= ${max6}`, value14);
        }
      });
      function validateString(value14, name15) {
        if (typeof value14 !== "string") throw new ERR_INVALID_ARG_TYPE2(name15, "string", value14);
      }
      function validateNumber(value14, name15, min5 = void 0, max6) {
        if (typeof value14 !== "number") throw new ERR_INVALID_ARG_TYPE2(name15, "number", value14);
        if (min5 != null && value14 < min5 || max6 != null && value14 > max6 || (min5 != null || max6 != null) && NumberIsNaN(value14)) {
          throw new ERR_OUT_OF_RANGE(
            name15,
            `${min5 != null ? `>= ${min5}` : ""}${min5 != null && max6 != null ? " && " : ""}${max6 != null ? `<= ${max6}` : ""}`,
            value14
          );
        }
      }
      var validateOneOf = hideStackFrames((value14, name15, oneOf2) => {
        if (!ArrayPrototypeIncludes(oneOf2, value14)) {
          const allowed = ArrayPrototypeJoin(
            ArrayPrototypeMap(oneOf2, (v3) => typeof v3 === "string" ? `'${v3}'` : String2(v3)),
            ", "
          );
          const reason = "must be one of: " + allowed;
          throw new ERR_INVALID_ARG_VALUE(name15, value14, reason);
        }
      });
      function validateBoolean(value14, name15) {
        if (typeof value14 !== "boolean") throw new ERR_INVALID_ARG_TYPE2(name15, "boolean", value14);
      }
      function getOwnPropertyValueOrDefault(options2, key2, defaultValue4) {
        return options2 == null || !ObjectPrototypeHasOwnProperty(options2, key2) ? defaultValue4 : options2[key2];
      }
      var validateObject = hideStackFrames((value14, name15, options2 = null) => {
        const allowArray = getOwnPropertyValueOrDefault(options2, "allowArray", false);
        const allowFunction = getOwnPropertyValueOrDefault(options2, "allowFunction", false);
        const nullable2 = getOwnPropertyValueOrDefault(options2, "nullable", false);
        if (!nullable2 && value14 === null || !allowArray && ArrayIsArray(value14) || typeof value14 !== "object" && (!allowFunction || typeof value14 !== "function")) {
          throw new ERR_INVALID_ARG_TYPE2(name15, "Object", value14);
        }
      });
      var validateDictionary = hideStackFrames((value14, name15) => {
        if (value14 != null && typeof value14 !== "object" && typeof value14 !== "function") {
          throw new ERR_INVALID_ARG_TYPE2(name15, "a dictionary", value14);
        }
      });
      var validateArray = hideStackFrames((value14, name15, minLength3 = 0) => {
        if (!ArrayIsArray(value14)) {
          throw new ERR_INVALID_ARG_TYPE2(name15, "Array", value14);
        }
        if (value14.length < minLength3) {
          const reason = `must be longer than ${minLength3}`;
          throw new ERR_INVALID_ARG_VALUE(name15, value14, reason);
        }
      });
      function validateStringArray(value14, name15) {
        validateArray(value14, name15);
        for (let i4 = 0; i4 < value14.length; i4++) {
          validateString(value14[i4], `${name15}[${i4}]`);
        }
      }
      function validateBooleanArray(value14, name15) {
        validateArray(value14, name15);
        for (let i4 = 0; i4 < value14.length; i4++) {
          validateBoolean(value14[i4], `${name15}[${i4}]`);
        }
      }
      function validateAbortSignalArray(value14, name15) {
        validateArray(value14, name15);
        for (let i4 = 0; i4 < value14.length; i4++) {
          const signal = value14[i4];
          const indexedName = `${name15}[${i4}]`;
          if (signal == null) {
            throw new ERR_INVALID_ARG_TYPE2(indexedName, "AbortSignal", signal);
          }
          validateAbortSignal(signal, indexedName);
        }
      }
      function validateSignalName(signal, name15 = "signal") {
        validateString(signal, name15);
        if (signals[signal] === void 0) {
          if (signals[StringPrototypeToUpperCase(signal)] !== void 0) {
            throw new ERR_UNKNOWN_SIGNAL(signal + " (signals must use all capital letters)");
          }
          throw new ERR_UNKNOWN_SIGNAL(signal);
        }
      }
      var validateBuffer = hideStackFrames((buffer, name15 = "buffer") => {
        if (!isArrayBufferView(buffer)) {
          throw new ERR_INVALID_ARG_TYPE2(name15, ["Buffer", "TypedArray", "DataView"], buffer);
        }
      });
      function validateEncoding(data, encoding2) {
        const normalizedEncoding = normalizeEncoding(encoding2);
        const length8 = data.length;
        if (normalizedEncoding === "hex" && length8 % 2 !== 0) {
          throw new ERR_INVALID_ARG_VALUE("encoding", encoding2, `is invalid for data of length ${length8}`);
        }
      }
      function validatePort(port2, name15 = "Port", allowZero = true) {
        if (typeof port2 !== "number" && typeof port2 !== "string" || typeof port2 === "string" && StringPrototypeTrim(port2).length === 0 || +port2 !== +port2 >>> 0 || port2 > 65535 || port2 === 0 && !allowZero) {
          throw new ERR_SOCKET_BAD_PORT(name15, port2, allowZero);
        }
        return port2 | 0;
      }
      var validateAbortSignal = hideStackFrames((signal, name15) => {
        if (signal !== void 0 && (signal === null || typeof signal !== "object" || !("aborted" in signal))) {
          throw new ERR_INVALID_ARG_TYPE2(name15, "AbortSignal", signal);
        }
      });
      var validateFunction = hideStackFrames((value14, name15) => {
        if (typeof value14 !== "function") throw new ERR_INVALID_ARG_TYPE2(name15, "Function", value14);
      });
      var validatePlainFunction = hideStackFrames((value14, name15) => {
        if (typeof value14 !== "function" || isAsyncFunction(value14)) throw new ERR_INVALID_ARG_TYPE2(name15, "Function", value14);
      });
      var validateUndefined = hideStackFrames((value14, name15) => {
        if (value14 !== void 0) throw new ERR_INVALID_ARG_TYPE2(name15, "undefined", value14);
      });
      function validateUnion(value14, name15, union3) {
        if (!ArrayPrototypeIncludes(union3, value14)) {
          throw new ERR_INVALID_ARG_TYPE2(name15, `('${ArrayPrototypeJoin(union3, "|")}')`, value14);
        }
      }
      var linkValueRegExp = /^(?:<[^>]*>)(?:\s*;\s*[^;"\s]+(?:=(")?[^;"\s]*\1)?)*$/;
      function validateLinkHeaderFormat(value14, name15) {
        if (typeof value14 === "undefined" || !RegExpPrototypeExec(linkValueRegExp, value14)) {
          throw new ERR_INVALID_ARG_VALUE(
            name15,
            value14,
            'must be an array or string of format "</styles.css>; rel=preload; as=style"'
          );
        }
      }
      function validateLinkHeaderValue(hints) {
        if (typeof hints === "string") {
          validateLinkHeaderFormat(hints, "hints");
          return hints;
        } else if (ArrayIsArray(hints)) {
          const hintsLength = hints.length;
          let result = "";
          if (hintsLength === 0) {
            return result;
          }
          for (let i4 = 0; i4 < hintsLength; i4++) {
            const link3 = hints[i4];
            validateLinkHeaderFormat(link3, "hints");
            result += link3;
            if (i4 !== hintsLength - 1) {
              result += ", ";
            }
          }
          return result;
        }
        throw new ERR_INVALID_ARG_VALUE(
          "hints",
          hints,
          'must be an array or string of format "</styles.css>; rel=preload; as=style"'
        );
      }
      module.exports = {
        isInt32,
        isUint32,
        parseFileMode,
        validateArray,
        validateStringArray,
        validateBooleanArray,
        validateAbortSignalArray,
        validateBoolean,
        validateBuffer,
        validateDictionary,
        validateEncoding,
        validateFunction,
        validateInt32,
        validateInteger,
        validateNumber,
        validateObject,
        validateOneOf,
        validatePlainFunction,
        validatePort,
        validateSignalName,
        validateString,
        validateUint32,
        validateUndefined,
        validateUnion,
        validateAbortSignal,
        validateLinkHeaderValue
      };
    }
  });

  // node_modules/process/browser.js
  var require_browser2 = __commonJS({
    "node_modules/process/browser.js"(exports, module) {
      var process2 = module.exports = {};
      var cachedSetTimeout;
      var cachedClearTimeout;
      function defaultSetTimout() {
        throw new Error("setTimeout has not been defined");
      }
      function defaultClearTimeout() {
        throw new Error("clearTimeout has not been defined");
      }
      (function() {
        try {
          if (typeof setTimeout === "function") {
            cachedSetTimeout = setTimeout;
          } else {
            cachedSetTimeout = defaultSetTimout;
          }
        } catch (e3) {
          cachedSetTimeout = defaultSetTimout;
        }
        try {
          if (typeof clearTimeout === "function") {
            cachedClearTimeout = clearTimeout;
          } else {
            cachedClearTimeout = defaultClearTimeout;
          }
        } catch (e3) {
          cachedClearTimeout = defaultClearTimeout;
        }
      })();
      function runTimeout(fun) {
        if (cachedSetTimeout === setTimeout) {
          return setTimeout(fun, 0);
        }
        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
          cachedSetTimeout = setTimeout;
          return setTimeout(fun, 0);
        }
        try {
          return cachedSetTimeout(fun, 0);
        } catch (e3) {
          try {
            return cachedSetTimeout.call(null, fun, 0);
          } catch (e4) {
            return cachedSetTimeout.call(this, fun, 0);
          }
        }
      }
      function runClearTimeout(marker) {
        if (cachedClearTimeout === clearTimeout) {
          return clearTimeout(marker);
        }
        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
          cachedClearTimeout = clearTimeout;
          return clearTimeout(marker);
        }
        try {
          return cachedClearTimeout(marker);
        } catch (e3) {
          try {
            return cachedClearTimeout.call(null, marker);
          } catch (e4) {
            return cachedClearTimeout.call(this, marker);
          }
        }
      }
      var queue = [];
      var draining = false;
      var currentQueue;
      var queueIndex = -1;
      function cleanUpNextTick() {
        if (!draining || !currentQueue) {
          return;
        }
        draining = false;
        if (currentQueue.length) {
          queue = currentQueue.concat(queue);
        } else {
          queueIndex = -1;
        }
        if (queue.length) {
          drainQueue();
        }
      }
      function drainQueue() {
        if (draining) {
          return;
        }
        var timeout = runTimeout(cleanUpNextTick);
        draining = true;
        var len = queue.length;
        while (len) {
          currentQueue = queue;
          queue = [];
          while (++queueIndex < len) {
            if (currentQueue) {
              currentQueue[queueIndex].run();
            }
          }
          queueIndex = -1;
          len = queue.length;
        }
        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
      }
      process2.nextTick = function(fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
          for (var i4 = 1; i4 < arguments.length; i4++) {
            args[i4 - 1] = arguments[i4];
          }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
          runTimeout(drainQueue);
        }
      };
      function Item(fun, array) {
        this.fun = fun;
        this.array = array;
      }
      Item.prototype.run = function() {
        this.fun.apply(null, this.array);
      };
      process2.title = "browser";
      process2.browser = true;
      process2.env = {};
      process2.argv = [];
      process2.version = "";
      process2.versions = {};
      function noop() {
      }
      process2.on = noop;
      process2.addListener = noop;
      process2.once = noop;
      process2.off = noop;
      process2.removeListener = noop;
      process2.removeAllListeners = noop;
      process2.emit = noop;
      process2.prependListener = noop;
      process2.prependOnceListener = noop;
      process2.listeners = function(name15) {
        return [];
      };
      process2.binding = function(name15) {
        throw new Error("process.binding is not supported");
      };
      process2.cwd = function() {
        return "/";
      };
      process2.chdir = function(dir2) {
        throw new Error("process.chdir is not supported");
      };
      process2.umask = function() {
        return 0;
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/utils.js
  var require_utils = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/utils.js"(exports, module) {
      "use strict";
      var { SymbolAsyncIterator, SymbolIterator, SymbolFor } = require_primordials();
      var kIsDestroyed = SymbolFor("nodejs.stream.destroyed");
      var kIsErrored = SymbolFor("nodejs.stream.errored");
      var kIsReadable = SymbolFor("nodejs.stream.readable");
      var kIsWritable = SymbolFor("nodejs.stream.writable");
      var kIsDisturbed = SymbolFor("nodejs.stream.disturbed");
      var kIsClosedPromise = SymbolFor("nodejs.webstream.isClosedPromise");
      var kControllerErrorFunction = SymbolFor("nodejs.webstream.controllerErrorFunction");
      function isReadableNodeStream(obj, strict = false) {
        var _obj$_readableState;
        return !!(obj && typeof obj.pipe === "function" && typeof obj.on === "function" && (!strict || typeof obj.pause === "function" && typeof obj.resume === "function") && (!obj._writableState || ((_obj$_readableState = obj._readableState) === null || _obj$_readableState === void 0 ? void 0 : _obj$_readableState.readable) !== false) && // Duplex
        (!obj._writableState || obj._readableState));
      }
      function isWritableNodeStream(obj) {
        var _obj$_writableState;
        return !!(obj && typeof obj.write === "function" && typeof obj.on === "function" && (!obj._readableState || ((_obj$_writableState = obj._writableState) === null || _obj$_writableState === void 0 ? void 0 : _obj$_writableState.writable) !== false));
      }
      function isDuplexNodeStream(obj) {
        return !!(obj && typeof obj.pipe === "function" && obj._readableState && typeof obj.on === "function" && typeof obj.write === "function");
      }
      function isNodeStream(obj) {
        return obj && (obj._readableState || obj._writableState || typeof obj.write === "function" && typeof obj.on === "function" || typeof obj.pipe === "function" && typeof obj.on === "function");
      }
      function isReadableStream2(obj) {
        return !!(obj && !isNodeStream(obj) && typeof obj.pipeThrough === "function" && typeof obj.getReader === "function" && typeof obj.cancel === "function");
      }
      function isWritableStream(obj) {
        return !!(obj && !isNodeStream(obj) && typeof obj.getWriter === "function" && typeof obj.abort === "function");
      }
      function isTransformStream(obj) {
        return !!(obj && !isNodeStream(obj) && typeof obj.readable === "object" && typeof obj.writable === "object");
      }
      function isWebStream(obj) {
        return isReadableStream2(obj) || isWritableStream(obj) || isTransformStream(obj);
      }
      function isIterable(obj, isAsync) {
        if (obj == null) return false;
        if (isAsync === true) return typeof obj[SymbolAsyncIterator] === "function";
        if (isAsync === false) return typeof obj[SymbolIterator] === "function";
        return typeof obj[SymbolAsyncIterator] === "function" || typeof obj[SymbolIterator] === "function";
      }
      function isDestroyed(stream) {
        if (!isNodeStream(stream)) return null;
        const wState = stream._writableState;
        const rState = stream._readableState;
        const state3 = wState || rState;
        return !!(stream.destroyed || stream[kIsDestroyed] || state3 !== null && state3 !== void 0 && state3.destroyed);
      }
      function isWritableEnded(stream) {
        if (!isWritableNodeStream(stream)) return null;
        if (stream.writableEnded === true) return true;
        const wState = stream._writableState;
        if (wState !== null && wState !== void 0 && wState.errored) return false;
        if (typeof (wState === null || wState === void 0 ? void 0 : wState.ended) !== "boolean") return null;
        return wState.ended;
      }
      function isWritableFinished(stream, strict) {
        if (!isWritableNodeStream(stream)) return null;
        if (stream.writableFinished === true) return true;
        const wState = stream._writableState;
        if (wState !== null && wState !== void 0 && wState.errored) return false;
        if (typeof (wState === null || wState === void 0 ? void 0 : wState.finished) !== "boolean") return null;
        return !!(wState.finished || strict === false && wState.ended === true && wState.length === 0);
      }
      function isReadableEnded(stream) {
        if (!isReadableNodeStream(stream)) return null;
        if (stream.readableEnded === true) return true;
        const rState = stream._readableState;
        if (!rState || rState.errored) return false;
        if (typeof (rState === null || rState === void 0 ? void 0 : rState.ended) !== "boolean") return null;
        return rState.ended;
      }
      function isReadableFinished(stream, strict) {
        if (!isReadableNodeStream(stream)) return null;
        const rState = stream._readableState;
        if (rState !== null && rState !== void 0 && rState.errored) return false;
        if (typeof (rState === null || rState === void 0 ? void 0 : rState.endEmitted) !== "boolean") return null;
        return !!(rState.endEmitted || strict === false && rState.ended === true && rState.length === 0);
      }
      function isReadable(stream) {
        if (stream && stream[kIsReadable] != null) return stream[kIsReadable];
        if (typeof (stream === null || stream === void 0 ? void 0 : stream.readable) !== "boolean") return null;
        if (isDestroyed(stream)) return false;
        return isReadableNodeStream(stream) && stream.readable && !isReadableFinished(stream);
      }
      function isWritable(stream) {
        if (stream && stream[kIsWritable] != null) return stream[kIsWritable];
        if (typeof (stream === null || stream === void 0 ? void 0 : stream.writable) !== "boolean") return null;
        if (isDestroyed(stream)) return false;
        return isWritableNodeStream(stream) && stream.writable && !isWritableEnded(stream);
      }
      function isFinished(stream, opts) {
        if (!isNodeStream(stream)) {
          return null;
        }
        if (isDestroyed(stream)) {
          return true;
        }
        if ((opts === null || opts === void 0 ? void 0 : opts.readable) !== false && isReadable(stream)) {
          return false;
        }
        if ((opts === null || opts === void 0 ? void 0 : opts.writable) !== false && isWritable(stream)) {
          return false;
        }
        return true;
      }
      function isWritableErrored(stream) {
        var _stream$_writableStat, _stream$_writableStat2;
        if (!isNodeStream(stream)) {
          return null;
        }
        if (stream.writableErrored) {
          return stream.writableErrored;
        }
        return (_stream$_writableStat = (_stream$_writableStat2 = stream._writableState) === null || _stream$_writableStat2 === void 0 ? void 0 : _stream$_writableStat2.errored) !== null && _stream$_writableStat !== void 0 ? _stream$_writableStat : null;
      }
      function isReadableErrored(stream) {
        var _stream$_readableStat, _stream$_readableStat2;
        if (!isNodeStream(stream)) {
          return null;
        }
        if (stream.readableErrored) {
          return stream.readableErrored;
        }
        return (_stream$_readableStat = (_stream$_readableStat2 = stream._readableState) === null || _stream$_readableStat2 === void 0 ? void 0 : _stream$_readableStat2.errored) !== null && _stream$_readableStat !== void 0 ? _stream$_readableStat : null;
      }
      function isClosed(stream) {
        if (!isNodeStream(stream)) {
          return null;
        }
        if (typeof stream.closed === "boolean") {
          return stream.closed;
        }
        const wState = stream._writableState;
        const rState = stream._readableState;
        if (typeof (wState === null || wState === void 0 ? void 0 : wState.closed) === "boolean" || typeof (rState === null || rState === void 0 ? void 0 : rState.closed) === "boolean") {
          return (wState === null || wState === void 0 ? void 0 : wState.closed) || (rState === null || rState === void 0 ? void 0 : rState.closed);
        }
        if (typeof stream._closed === "boolean" && isOutgoingMessage(stream)) {
          return stream._closed;
        }
        return null;
      }
      function isOutgoingMessage(stream) {
        return typeof stream._closed === "boolean" && typeof stream._defaultKeepAlive === "boolean" && typeof stream._removedConnection === "boolean" && typeof stream._removedContLen === "boolean";
      }
      function isServerResponse(stream) {
        return typeof stream._sent100 === "boolean" && isOutgoingMessage(stream);
      }
      function isServerRequest(stream) {
        var _stream$req;
        return typeof stream._consuming === "boolean" && typeof stream._dumped === "boolean" && ((_stream$req = stream.req) === null || _stream$req === void 0 ? void 0 : _stream$req.upgradeOrConnect) === void 0;
      }
      function willEmitClose(stream) {
        if (!isNodeStream(stream)) return null;
        const wState = stream._writableState;
        const rState = stream._readableState;
        const state3 = wState || rState;
        return !state3 && isServerResponse(stream) || !!(state3 && state3.autoDestroy && state3.emitClose && state3.closed === false);
      }
      function isDisturbed(stream) {
        var _stream$kIsDisturbed;
        return !!(stream && ((_stream$kIsDisturbed = stream[kIsDisturbed]) !== null && _stream$kIsDisturbed !== void 0 ? _stream$kIsDisturbed : stream.readableDidRead || stream.readableAborted));
      }
      function isErrored(stream) {
        var _ref, _ref2, _ref3, _ref4, _ref5, _stream$kIsErrored, _stream$_readableStat3, _stream$_writableStat3, _stream$_readableStat4, _stream$_writableStat4;
        return !!(stream && ((_ref = (_ref2 = (_ref3 = (_ref4 = (_ref5 = (_stream$kIsErrored = stream[kIsErrored]) !== null && _stream$kIsErrored !== void 0 ? _stream$kIsErrored : stream.readableErrored) !== null && _ref5 !== void 0 ? _ref5 : stream.writableErrored) !== null && _ref4 !== void 0 ? _ref4 : (_stream$_readableStat3 = stream._readableState) === null || _stream$_readableStat3 === void 0 ? void 0 : _stream$_readableStat3.errorEmitted) !== null && _ref3 !== void 0 ? _ref3 : (_stream$_writableStat3 = stream._writableState) === null || _stream$_writableStat3 === void 0 ? void 0 : _stream$_writableStat3.errorEmitted) !== null && _ref2 !== void 0 ? _ref2 : (_stream$_readableStat4 = stream._readableState) === null || _stream$_readableStat4 === void 0 ? void 0 : _stream$_readableStat4.errored) !== null && _ref !== void 0 ? _ref : (_stream$_writableStat4 = stream._writableState) === null || _stream$_writableStat4 === void 0 ? void 0 : _stream$_writableStat4.errored));
      }
      module.exports = {
        isDestroyed,
        kIsDestroyed,
        isDisturbed,
        kIsDisturbed,
        isErrored,
        kIsErrored,
        isReadable,
        kIsReadable,
        kIsClosedPromise,
        kControllerErrorFunction,
        kIsWritable,
        isClosed,
        isDuplexNodeStream,
        isFinished,
        isIterable,
        isReadableNodeStream,
        isReadableStream: isReadableStream2,
        isReadableEnded,
        isReadableFinished,
        isReadableErrored,
        isNodeStream,
        isWebStream,
        isWritable,
        isWritableNodeStream,
        isWritableStream,
        isWritableEnded,
        isWritableFinished,
        isWritableErrored,
        isServerRequest,
        isServerResponse,
        willEmitClose,
        isTransformStream
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/end-of-stream.js
  var require_end_of_stream = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/end-of-stream.js"(exports, module) {
      var process2 = require_browser2();
      var { AbortError, codes } = require_errors();
      var { ERR_INVALID_ARG_TYPE: ERR_INVALID_ARG_TYPE2, ERR_STREAM_PREMATURE_CLOSE } = codes;
      var { kEmptyObject, once } = require_util3();
      var { validateAbortSignal, validateFunction, validateObject, validateBoolean } = require_validators();
      var { Promise: Promise2, PromisePrototypeThen, SymbolDispose } = require_primordials();
      var {
        isClosed,
        isReadable,
        isReadableNodeStream,
        isReadableStream: isReadableStream2,
        isReadableFinished,
        isReadableErrored,
        isWritable,
        isWritableNodeStream,
        isWritableStream,
        isWritableFinished,
        isWritableErrored,
        isNodeStream,
        willEmitClose: _willEmitClose,
        kIsClosedPromise
      } = require_utils();
      var addAbortListener;
      function isRequest(stream) {
        return stream.setHeader && typeof stream.abort === "function";
      }
      var nop = () => {
      };
      function eos(stream, options2, callback) {
        var _options$readable, _options$writable;
        if (arguments.length === 2) {
          callback = options2;
          options2 = kEmptyObject;
        } else if (options2 == null) {
          options2 = kEmptyObject;
        } else {
          validateObject(options2, "options");
        }
        validateFunction(callback, "callback");
        validateAbortSignal(options2.signal, "options.signal");
        callback = once(callback);
        if (isReadableStream2(stream) || isWritableStream(stream)) {
          return eosWeb(stream, options2, callback);
        }
        if (!isNodeStream(stream)) {
          throw new ERR_INVALID_ARG_TYPE2("stream", ["ReadableStream", "WritableStream", "Stream"], stream);
        }
        const readable = (_options$readable = options2.readable) !== null && _options$readable !== void 0 ? _options$readable : isReadableNodeStream(stream);
        const writable = (_options$writable = options2.writable) !== null && _options$writable !== void 0 ? _options$writable : isWritableNodeStream(stream);
        const wState = stream._writableState;
        const rState = stream._readableState;
        const onlegacyfinish = () => {
          if (!stream.writable) {
            onfinish();
          }
        };
        let willEmitClose = _willEmitClose(stream) && isReadableNodeStream(stream) === readable && isWritableNodeStream(stream) === writable;
        let writableFinished = isWritableFinished(stream, false);
        const onfinish = () => {
          writableFinished = true;
          if (stream.destroyed) {
            willEmitClose = false;
          }
          if (willEmitClose && (!stream.readable || readable)) {
            return;
          }
          if (!readable || readableFinished) {
            callback.call(stream);
          }
        };
        let readableFinished = isReadableFinished(stream, false);
        const onend = () => {
          readableFinished = true;
          if (stream.destroyed) {
            willEmitClose = false;
          }
          if (willEmitClose && (!stream.writable || writable)) {
            return;
          }
          if (!writable || writableFinished) {
            callback.call(stream);
          }
        };
        const onerror = (err) => {
          callback.call(stream, err);
        };
        let closed = isClosed(stream);
        const onclose = () => {
          closed = true;
          const errored = isWritableErrored(stream) || isReadableErrored(stream);
          if (errored && typeof errored !== "boolean") {
            return callback.call(stream, errored);
          }
          if (readable && !readableFinished && isReadableNodeStream(stream, true)) {
            if (!isReadableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE());
          }
          if (writable && !writableFinished) {
            if (!isWritableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE());
          }
          callback.call(stream);
        };
        const onclosed = () => {
          closed = true;
          const errored = isWritableErrored(stream) || isReadableErrored(stream);
          if (errored && typeof errored !== "boolean") {
            return callback.call(stream, errored);
          }
          callback.call(stream);
        };
        const onrequest = () => {
          stream.req.on("finish", onfinish);
        };
        if (isRequest(stream)) {
          stream.on("complete", onfinish);
          if (!willEmitClose) {
            stream.on("abort", onclose);
          }
          if (stream.req) {
            onrequest();
          } else {
            stream.on("request", onrequest);
          }
        } else if (writable && !wState) {
          stream.on("end", onlegacyfinish);
          stream.on("close", onlegacyfinish);
        }
        if (!willEmitClose && typeof stream.aborted === "boolean") {
          stream.on("aborted", onclose);
        }
        stream.on("end", onend);
        stream.on("finish", onfinish);
        if (options2.error !== false) {
          stream.on("error", onerror);
        }
        stream.on("close", onclose);
        if (closed) {
          process2.nextTick(onclose);
        } else if (wState !== null && wState !== void 0 && wState.errorEmitted || rState !== null && rState !== void 0 && rState.errorEmitted) {
          if (!willEmitClose) {
            process2.nextTick(onclosed);
          }
        } else if (!readable && (!willEmitClose || isReadable(stream)) && (writableFinished || isWritable(stream) === false)) {
          process2.nextTick(onclosed);
        } else if (!writable && (!willEmitClose || isWritable(stream)) && (readableFinished || isReadable(stream) === false)) {
          process2.nextTick(onclosed);
        } else if (rState && stream.req && stream.aborted) {
          process2.nextTick(onclosed);
        }
        const cleanup = () => {
          callback = nop;
          stream.removeListener("aborted", onclose);
          stream.removeListener("complete", onfinish);
          stream.removeListener("abort", onclose);
          stream.removeListener("request", onrequest);
          if (stream.req) stream.req.removeListener("finish", onfinish);
          stream.removeListener("end", onlegacyfinish);
          stream.removeListener("close", onlegacyfinish);
          stream.removeListener("finish", onfinish);
          stream.removeListener("end", onend);
          stream.removeListener("error", onerror);
          stream.removeListener("close", onclose);
        };
        if (options2.signal && !closed) {
          const abort = () => {
            const endCallback = callback;
            cleanup();
            endCallback.call(
              stream,
              new AbortError(void 0, {
                cause: options2.signal.reason
              })
            );
          };
          if (options2.signal.aborted) {
            process2.nextTick(abort);
          } else {
            addAbortListener = addAbortListener || require_util3().addAbortListener;
            const disposable = addAbortListener(options2.signal, abort);
            const originalCallback = callback;
            callback = once((...args) => {
              disposable[SymbolDispose]();
              originalCallback.apply(stream, args);
            });
          }
        }
        return cleanup;
      }
      function eosWeb(stream, options2, callback) {
        let isAborted = false;
        let abort = nop;
        if (options2.signal) {
          abort = () => {
            isAborted = true;
            callback.call(
              stream,
              new AbortError(void 0, {
                cause: options2.signal.reason
              })
            );
          };
          if (options2.signal.aborted) {
            process2.nextTick(abort);
          } else {
            addAbortListener = addAbortListener || require_util3().addAbortListener;
            const disposable = addAbortListener(options2.signal, abort);
            const originalCallback = callback;
            callback = once((...args) => {
              disposable[SymbolDispose]();
              originalCallback.apply(stream, args);
            });
          }
        }
        const resolverFn = (...args) => {
          if (!isAborted) {
            process2.nextTick(() => callback.apply(stream, args));
          }
        };
        PromisePrototypeThen(stream[kIsClosedPromise].promise, resolverFn, resolverFn);
        return nop;
      }
      function finished(stream, opts) {
        var _opts;
        let autoCleanup = false;
        if (opts === null) {
          opts = kEmptyObject;
        }
        if ((_opts = opts) !== null && _opts !== void 0 && _opts.cleanup) {
          validateBoolean(opts.cleanup, "cleanup");
          autoCleanup = opts.cleanup;
        }
        return new Promise2((resolve, reject) => {
          const cleanup = eos(stream, opts, (err) => {
            if (autoCleanup) {
              cleanup();
            }
            if (err) {
              reject(err);
            } else {
              resolve();
            }
          });
        });
      }
      module.exports = eos;
      module.exports.finished = finished;
    }
  });

  // node_modules/readable-stream/lib/internal/streams/destroy.js
  var require_destroy = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/destroy.js"(exports, module) {
      "use strict";
      var process2 = require_browser2();
      var {
        aggregateTwoErrors,
        codes: { ERR_MULTIPLE_CALLBACK },
        AbortError
      } = require_errors();
      var { Symbol: Symbol2 } = require_primordials();
      var { kIsDestroyed, isDestroyed, isFinished, isServerRequest } = require_utils();
      var kDestroy = Symbol2("kDestroy");
      var kConstruct = Symbol2("kConstruct");
      function checkError(err, w2, r3) {
        if (err) {
          err.stack;
          if (w2 && !w2.errored) {
            w2.errored = err;
          }
          if (r3 && !r3.errored) {
            r3.errored = err;
          }
        }
      }
      function destroy(err, cb) {
        const r3 = this._readableState;
        const w2 = this._writableState;
        const s3 = w2 || r3;
        if (w2 !== null && w2 !== void 0 && w2.destroyed || r3 !== null && r3 !== void 0 && r3.destroyed) {
          if (typeof cb === "function") {
            cb();
          }
          return this;
        }
        checkError(err, w2, r3);
        if (w2) {
          w2.destroyed = true;
        }
        if (r3) {
          r3.destroyed = true;
        }
        if (!s3.constructed) {
          this.once(kDestroy, function(er) {
            _destroy(this, aggregateTwoErrors(er, err), cb);
          });
        } else {
          _destroy(this, err, cb);
        }
        return this;
      }
      function _destroy(self2, err, cb) {
        let called = false;
        function onDestroy(err2) {
          if (called) {
            return;
          }
          called = true;
          const r3 = self2._readableState;
          const w2 = self2._writableState;
          checkError(err2, w2, r3);
          if (w2) {
            w2.closed = true;
          }
          if (r3) {
            r3.closed = true;
          }
          if (typeof cb === "function") {
            cb(err2);
          }
          if (err2) {
            process2.nextTick(emitErrorCloseNT, self2, err2);
          } else {
            process2.nextTick(emitCloseNT, self2);
          }
        }
        try {
          self2._destroy(err || null, onDestroy);
        } catch (err2) {
          onDestroy(err2);
        }
      }
      function emitErrorCloseNT(self2, err) {
        emitErrorNT(self2, err);
        emitCloseNT(self2);
      }
      function emitCloseNT(self2) {
        const r3 = self2._readableState;
        const w2 = self2._writableState;
        if (w2) {
          w2.closeEmitted = true;
        }
        if (r3) {
          r3.closeEmitted = true;
        }
        if (w2 !== null && w2 !== void 0 && w2.emitClose || r3 !== null && r3 !== void 0 && r3.emitClose) {
          self2.emit("close");
        }
      }
      function emitErrorNT(self2, err) {
        const r3 = self2._readableState;
        const w2 = self2._writableState;
        if (w2 !== null && w2 !== void 0 && w2.errorEmitted || r3 !== null && r3 !== void 0 && r3.errorEmitted) {
          return;
        }
        if (w2) {
          w2.errorEmitted = true;
        }
        if (r3) {
          r3.errorEmitted = true;
        }
        self2.emit("error", err);
      }
      function undestroy() {
        const r3 = this._readableState;
        const w2 = this._writableState;
        if (r3) {
          r3.constructed = true;
          r3.closed = false;
          r3.closeEmitted = false;
          r3.destroyed = false;
          r3.errored = null;
          r3.errorEmitted = false;
          r3.reading = false;
          r3.ended = r3.readable === false;
          r3.endEmitted = r3.readable === false;
        }
        if (w2) {
          w2.constructed = true;
          w2.destroyed = false;
          w2.closed = false;
          w2.closeEmitted = false;
          w2.errored = null;
          w2.errorEmitted = false;
          w2.finalCalled = false;
          w2.prefinished = false;
          w2.ended = w2.writable === false;
          w2.ending = w2.writable === false;
          w2.finished = w2.writable === false;
        }
      }
      function errorOrDestroy(stream, err, sync) {
        const r3 = stream._readableState;
        const w2 = stream._writableState;
        if (w2 !== null && w2 !== void 0 && w2.destroyed || r3 !== null && r3 !== void 0 && r3.destroyed) {
          return this;
        }
        if (r3 !== null && r3 !== void 0 && r3.autoDestroy || w2 !== null && w2 !== void 0 && w2.autoDestroy)
          stream.destroy(err);
        else if (err) {
          err.stack;
          if (w2 && !w2.errored) {
            w2.errored = err;
          }
          if (r3 && !r3.errored) {
            r3.errored = err;
          }
          if (sync) {
            process2.nextTick(emitErrorNT, stream, err);
          } else {
            emitErrorNT(stream, err);
          }
        }
      }
      function construct(stream, cb) {
        if (typeof stream._construct !== "function") {
          return;
        }
        const r3 = stream._readableState;
        const w2 = stream._writableState;
        if (r3) {
          r3.constructed = false;
        }
        if (w2) {
          w2.constructed = false;
        }
        stream.once(kConstruct, cb);
        if (stream.listenerCount(kConstruct) > 1) {
          return;
        }
        process2.nextTick(constructNT, stream);
      }
      function constructNT(stream) {
        let called = false;
        function onConstruct(err) {
          if (called) {
            errorOrDestroy(stream, err !== null && err !== void 0 ? err : new ERR_MULTIPLE_CALLBACK());
            return;
          }
          called = true;
          const r3 = stream._readableState;
          const w2 = stream._writableState;
          const s3 = w2 || r3;
          if (r3) {
            r3.constructed = true;
          }
          if (w2) {
            w2.constructed = true;
          }
          if (s3.destroyed) {
            stream.emit(kDestroy, err);
          } else if (err) {
            errorOrDestroy(stream, err, true);
          } else {
            process2.nextTick(emitConstructNT, stream);
          }
        }
        try {
          stream._construct((err) => {
            process2.nextTick(onConstruct, err);
          });
        } catch (err) {
          process2.nextTick(onConstruct, err);
        }
      }
      function emitConstructNT(stream) {
        stream.emit(kConstruct);
      }
      function isRequest(stream) {
        return (stream === null || stream === void 0 ? void 0 : stream.setHeader) && typeof stream.abort === "function";
      }
      function emitCloseLegacy(stream) {
        stream.emit("close");
      }
      function emitErrorCloseLegacy(stream, err) {
        stream.emit("error", err);
        process2.nextTick(emitCloseLegacy, stream);
      }
      function destroyer(stream, err) {
        if (!stream || isDestroyed(stream)) {
          return;
        }
        if (!err && !isFinished(stream)) {
          err = new AbortError();
        }
        if (isServerRequest(stream)) {
          stream.socket = null;
          stream.destroy(err);
        } else if (isRequest(stream)) {
          stream.abort();
        } else if (isRequest(stream.req)) {
          stream.req.abort();
        } else if (typeof stream.destroy === "function") {
          stream.destroy(err);
        } else if (typeof stream.close === "function") {
          stream.close();
        } else if (err) {
          process2.nextTick(emitErrorCloseLegacy, stream, err);
        } else {
          process2.nextTick(emitCloseLegacy, stream);
        }
        if (!stream.destroyed) {
          stream[kIsDestroyed] = true;
        }
      }
      module.exports = {
        construct,
        destroyer,
        destroy,
        undestroy,
        errorOrDestroy
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/legacy.js
  var require_legacy = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/legacy.js"(exports, module) {
      "use strict";
      var { ArrayIsArray, ObjectSetPrototypeOf } = require_primordials();
      var { EventEmitter: EE } = require_events();
      function Stream(opts) {
        EE.call(this, opts);
      }
      ObjectSetPrototypeOf(Stream.prototype, EE.prototype);
      ObjectSetPrototypeOf(Stream, EE);
      Stream.prototype.pipe = function(dest, options2) {
        const source2 = this;
        function ondata(chunk) {
          if (dest.writable && dest.write(chunk) === false && source2.pause) {
            source2.pause();
          }
        }
        source2.on("data", ondata);
        function ondrain() {
          if (source2.readable && source2.resume) {
            source2.resume();
          }
        }
        dest.on("drain", ondrain);
        if (!dest._isStdio && (!options2 || options2.end !== false)) {
          source2.on("end", onend);
          source2.on("close", onclose);
        }
        let didOnEnd = false;
        function onend() {
          if (didOnEnd) return;
          didOnEnd = true;
          dest.end();
        }
        function onclose() {
          if (didOnEnd) return;
          didOnEnd = true;
          if (typeof dest.destroy === "function") dest.destroy();
        }
        function onerror(er) {
          cleanup();
          if (EE.listenerCount(this, "error") === 0) {
            this.emit("error", er);
          }
        }
        prependListener(source2, "error", onerror);
        prependListener(dest, "error", onerror);
        function cleanup() {
          source2.removeListener("data", ondata);
          dest.removeListener("drain", ondrain);
          source2.removeListener("end", onend);
          source2.removeListener("close", onclose);
          source2.removeListener("error", onerror);
          dest.removeListener("error", onerror);
          source2.removeListener("end", cleanup);
          source2.removeListener("close", cleanup);
          dest.removeListener("close", cleanup);
        }
        source2.on("end", cleanup);
        source2.on("close", cleanup);
        dest.on("close", cleanup);
        dest.emit("pipe", source2);
        return dest;
      };
      function prependListener(emitter, event, fn) {
        if (typeof emitter.prependListener === "function") return emitter.prependListener(event, fn);
        if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);
        else if (ArrayIsArray(emitter._events[event])) emitter._events[event].unshift(fn);
        else emitter._events[event] = [fn, emitter._events[event]];
      }
      module.exports = {
        Stream,
        prependListener
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/add-abort-signal.js
  var require_add_abort_signal = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/add-abort-signal.js"(exports, module) {
      "use strict";
      var { SymbolDispose } = require_primordials();
      var { AbortError, codes } = require_errors();
      var { isNodeStream, isWebStream, kControllerErrorFunction } = require_utils();
      var eos = require_end_of_stream();
      var { ERR_INVALID_ARG_TYPE: ERR_INVALID_ARG_TYPE2 } = codes;
      var addAbortListener;
      var validateAbortSignal = (signal, name15) => {
        if (typeof signal !== "object" || !("aborted" in signal)) {
          throw new ERR_INVALID_ARG_TYPE2(name15, "AbortSignal", signal);
        }
      };
      module.exports.addAbortSignal = function addAbortSignal(signal, stream) {
        validateAbortSignal(signal, "signal");
        if (!isNodeStream(stream) && !isWebStream(stream)) {
          throw new ERR_INVALID_ARG_TYPE2("stream", ["ReadableStream", "WritableStream", "Stream"], stream);
        }
        return module.exports.addAbortSignalNoValidate(signal, stream);
      };
      module.exports.addAbortSignalNoValidate = function(signal, stream) {
        if (typeof signal !== "object" || !("aborted" in signal)) {
          return stream;
        }
        const onAbort = isNodeStream(stream) ? () => {
          stream.destroy(
            new AbortError(void 0, {
              cause: signal.reason
            })
          );
        } : () => {
          stream[kControllerErrorFunction](
            new AbortError(void 0, {
              cause: signal.reason
            })
          );
        };
        if (signal.aborted) {
          onAbort();
        } else {
          addAbortListener = addAbortListener || require_util3().addAbortListener;
          const disposable = addAbortListener(signal, onAbort);
          eos(stream, disposable[SymbolDispose]);
        }
        return stream;
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/buffer_list.js
  var require_buffer_list = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/buffer_list.js"(exports, module) {
      "use strict";
      var { StringPrototypeSlice, SymbolIterator, TypedArrayPrototypeSet, Uint8Array: Uint8Array2 } = require_primordials();
      var { Buffer: Buffer2 } = require_buffer();
      var { inspect } = require_util3();
      module.exports = class BufferList {
        constructor() {
          this.head = null;
          this.tail = null;
          this.length = 0;
        }
        push(v3) {
          const entry = {
            data: v3,
            next: null
          };
          if (this.length > 0) this.tail.next = entry;
          else this.head = entry;
          this.tail = entry;
          ++this.length;
        }
        unshift(v3) {
          const entry = {
            data: v3,
            next: this.head
          };
          if (this.length === 0) this.tail = entry;
          this.head = entry;
          ++this.length;
        }
        shift() {
          if (this.length === 0) return;
          const ret = this.head.data;
          if (this.length === 1) this.head = this.tail = null;
          else this.head = this.head.next;
          --this.length;
          return ret;
        }
        clear() {
          this.head = this.tail = null;
          this.length = 0;
        }
        join(s3) {
          if (this.length === 0) return "";
          let p4 = this.head;
          let ret = "" + p4.data;
          while ((p4 = p4.next) !== null) ret += s3 + p4.data;
          return ret;
        }
        concat(n3) {
          if (this.length === 0) return Buffer2.alloc(0);
          const ret = Buffer2.allocUnsafe(n3 >>> 0);
          let p4 = this.head;
          let i4 = 0;
          while (p4) {
            TypedArrayPrototypeSet(ret, p4.data, i4);
            i4 += p4.data.length;
            p4 = p4.next;
          }
          return ret;
        }
        // Consumes a specified amount of bytes or characters from the buffered data.
        consume(n3, hasStrings) {
          const data = this.head.data;
          if (n3 < data.length) {
            const slice3 = data.slice(0, n3);
            this.head.data = data.slice(n3);
            return slice3;
          }
          if (n3 === data.length) {
            return this.shift();
          }
          return hasStrings ? this._getString(n3) : this._getBuffer(n3);
        }
        first() {
          return this.head.data;
        }
        *[SymbolIterator]() {
          for (let p4 = this.head; p4; p4 = p4.next) {
            yield p4.data;
          }
        }
        // Consumes a specified amount of characters from the buffered data.
        _getString(n3) {
          let ret = "";
          let p4 = this.head;
          let c3 = 0;
          do {
            const str = p4.data;
            if (n3 > str.length) {
              ret += str;
              n3 -= str.length;
            } else {
              if (n3 === str.length) {
                ret += str;
                ++c3;
                if (p4.next) this.head = p4.next;
                else this.head = this.tail = null;
              } else {
                ret += StringPrototypeSlice(str, 0, n3);
                this.head = p4;
                p4.data = StringPrototypeSlice(str, n3);
              }
              break;
            }
            ++c3;
          } while ((p4 = p4.next) !== null);
          this.length -= c3;
          return ret;
        }
        // Consumes a specified amount of bytes from the buffered data.
        _getBuffer(n3) {
          const ret = Buffer2.allocUnsafe(n3);
          const retLen = n3;
          let p4 = this.head;
          let c3 = 0;
          do {
            const buf = p4.data;
            if (n3 > buf.length) {
              TypedArrayPrototypeSet(ret, buf, retLen - n3);
              n3 -= buf.length;
            } else {
              if (n3 === buf.length) {
                TypedArrayPrototypeSet(ret, buf, retLen - n3);
                ++c3;
                if (p4.next) this.head = p4.next;
                else this.head = this.tail = null;
              } else {
                TypedArrayPrototypeSet(ret, new Uint8Array2(buf.buffer, buf.byteOffset, n3), retLen - n3);
                this.head = p4;
                p4.data = buf.slice(n3);
              }
              break;
            }
            ++c3;
          } while ((p4 = p4.next) !== null);
          this.length -= c3;
          return ret;
        }
        // Make sure the linked list only shows the minimal necessary information.
        [Symbol.for("nodejs.util.inspect.custom")](_2, options2) {
          return inspect(this, {
            ...options2,
            // Only inspect one level.
            depth: 0,
            // It should not recurse.
            customInspect: false
          });
        }
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/state.js
  var require_state = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/state.js"(exports, module) {
      "use strict";
      var { MathFloor, NumberIsInteger } = require_primordials();
      var { validateInteger } = require_validators();
      var { ERR_INVALID_ARG_VALUE } = require_errors().codes;
      var defaultHighWaterMarkBytes = 16 * 1024;
      var defaultHighWaterMarkObjectMode = 16;
      function highWaterMarkFrom(options2, isDuplex, duplexKey) {
        return options2.highWaterMark != null ? options2.highWaterMark : isDuplex ? options2[duplexKey] : null;
      }
      function getDefaultHighWaterMark(objectMode) {
        return objectMode ? defaultHighWaterMarkObjectMode : defaultHighWaterMarkBytes;
      }
      function setDefaultHighWaterMark(objectMode, value14) {
        validateInteger(value14, "value", 0);
        if (objectMode) {
          defaultHighWaterMarkObjectMode = value14;
        } else {
          defaultHighWaterMarkBytes = value14;
        }
      }
      function getHighWaterMark(state3, options2, duplexKey, isDuplex) {
        const hwm = highWaterMarkFrom(options2, isDuplex, duplexKey);
        if (hwm != null) {
          if (!NumberIsInteger(hwm) || hwm < 0) {
            const name15 = isDuplex ? `options.${duplexKey}` : "options.highWaterMark";
            throw new ERR_INVALID_ARG_VALUE(name15, hwm);
          }
          return MathFloor(hwm);
        }
        return getDefaultHighWaterMark(state3.objectMode);
      }
      module.exports = {
        getHighWaterMark,
        getDefaultHighWaterMark,
        setDefaultHighWaterMark
      };
    }
  });

  // node_modules/string_decoder/node_modules/safe-buffer/index.js
  var require_safe_buffer = __commonJS({
    "node_modules/string_decoder/node_modules/safe-buffer/index.js"(exports, module) {
      var buffer = require_buffer();
      var Buffer2 = buffer.Buffer;
      function copyProps(src9, dst) {
        for (var key2 in src9) {
          dst[key2] = src9[key2];
        }
      }
      if (Buffer2.from && Buffer2.alloc && Buffer2.allocUnsafe && Buffer2.allocUnsafeSlow) {
        module.exports = buffer;
      } else {
        copyProps(buffer, exports);
        exports.Buffer = SafeBuffer;
      }
      function SafeBuffer(arg, encodingOrOffset, length8) {
        return Buffer2(arg, encodingOrOffset, length8);
      }
      SafeBuffer.prototype = Object.create(Buffer2.prototype);
      copyProps(Buffer2, SafeBuffer);
      SafeBuffer.from = function(arg, encodingOrOffset, length8) {
        if (typeof arg === "number") {
          throw new TypeError("Argument must not be a number");
        }
        return Buffer2(arg, encodingOrOffset, length8);
      };
      SafeBuffer.alloc = function(size5, fill, encoding2) {
        if (typeof size5 !== "number") {
          throw new TypeError("Argument must be a number");
        }
        var buf = Buffer2(size5);
        if (fill !== void 0) {
          if (typeof encoding2 === "string") {
            buf.fill(fill, encoding2);
          } else {
            buf.fill(fill);
          }
        } else {
          buf.fill(0);
        }
        return buf;
      };
      SafeBuffer.allocUnsafe = function(size5) {
        if (typeof size5 !== "number") {
          throw new TypeError("Argument must be a number");
        }
        return Buffer2(size5);
      };
      SafeBuffer.allocUnsafeSlow = function(size5) {
        if (typeof size5 !== "number") {
          throw new TypeError("Argument must be a number");
        }
        return buffer.SlowBuffer(size5);
      };
    }
  });

  // node_modules/string_decoder/lib/string_decoder.js
  var require_string_decoder = __commonJS({
    "node_modules/string_decoder/lib/string_decoder.js"(exports) {
      "use strict";
      var Buffer2 = require_safe_buffer().Buffer;
      var isEncoding = Buffer2.isEncoding || function(encoding2) {
        encoding2 = "" + encoding2;
        switch (encoding2 && encoding2.toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
          case "raw":
            return true;
          default:
            return false;
        }
      };
      function _normalizeEncoding(enc) {
        if (!enc) return "utf8";
        var retried;
        while (true) {
          switch (enc) {
            case "utf8":
            case "utf-8":
              return "utf8";
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return "utf16le";
            case "latin1":
            case "binary":
              return "latin1";
            case "base64":
            case "ascii":
            case "hex":
              return enc;
            default:
              if (retried) return;
              enc = ("" + enc).toLowerCase();
              retried = true;
          }
        }
      }
      function normalizeEncoding(enc) {
        var nenc = _normalizeEncoding(enc);
        if (typeof nenc !== "string" && (Buffer2.isEncoding === isEncoding || !isEncoding(enc))) throw new Error("Unknown encoding: " + enc);
        return nenc || enc;
      }
      exports.StringDecoder = StringDecoder;
      function StringDecoder(encoding2) {
        this.encoding = normalizeEncoding(encoding2);
        var nb;
        switch (this.encoding) {
          case "utf16le":
            this.text = utf16Text;
            this.end = utf16End;
            nb = 4;
            break;
          case "utf8":
            this.fillLast = utf8FillLast;
            nb = 4;
            break;
          case "base64":
            this.text = base64Text;
            this.end = base64End;
            nb = 3;
            break;
          default:
            this.write = simpleWrite;
            this.end = simpleEnd;
            return;
        }
        this.lastNeed = 0;
        this.lastTotal = 0;
        this.lastChar = Buffer2.allocUnsafe(nb);
      }
      StringDecoder.prototype.write = function(buf) {
        if (buf.length === 0) return "";
        var r3;
        var i4;
        if (this.lastNeed) {
          r3 = this.fillLast(buf);
          if (r3 === void 0) return "";
          i4 = this.lastNeed;
          this.lastNeed = 0;
        } else {
          i4 = 0;
        }
        if (i4 < buf.length) return r3 ? r3 + this.text(buf, i4) : this.text(buf, i4);
        return r3 || "";
      };
      StringDecoder.prototype.end = utf8End;
      StringDecoder.prototype.text = utf8Text;
      StringDecoder.prototype.fillLast = function(buf) {
        if (this.lastNeed <= buf.length) {
          buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
          return this.lastChar.toString(this.encoding, 0, this.lastTotal);
        }
        buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
        this.lastNeed -= buf.length;
      };
      function utf8CheckByte(byte) {
        if (byte <= 127) return 0;
        else if (byte >> 5 === 6) return 2;
        else if (byte >> 4 === 14) return 3;
        else if (byte >> 3 === 30) return 4;
        return byte >> 6 === 2 ? -1 : -2;
      }
      function utf8CheckIncomplete(self2, buf, i4) {
        var j3 = buf.length - 1;
        if (j3 < i4) return 0;
        var nb = utf8CheckByte(buf[j3]);
        if (nb >= 0) {
          if (nb > 0) self2.lastNeed = nb - 1;
          return nb;
        }
        if (--j3 < i4 || nb === -2) return 0;
        nb = utf8CheckByte(buf[j3]);
        if (nb >= 0) {
          if (nb > 0) self2.lastNeed = nb - 2;
          return nb;
        }
        if (--j3 < i4 || nb === -2) return 0;
        nb = utf8CheckByte(buf[j3]);
        if (nb >= 0) {
          if (nb > 0) {
            if (nb === 2) nb = 0;
            else self2.lastNeed = nb - 3;
          }
          return nb;
        }
        return 0;
      }
      function utf8CheckExtraBytes(self2, buf, p4) {
        if ((buf[0] & 192) !== 128) {
          self2.lastNeed = 0;
          return "\uFFFD";
        }
        if (self2.lastNeed > 1 && buf.length > 1) {
          if ((buf[1] & 192) !== 128) {
            self2.lastNeed = 1;
            return "\uFFFD";
          }
          if (self2.lastNeed > 2 && buf.length > 2) {
            if ((buf[2] & 192) !== 128) {
              self2.lastNeed = 2;
              return "\uFFFD";
            }
          }
        }
      }
      function utf8FillLast(buf) {
        var p4 = this.lastTotal - this.lastNeed;
        var r3 = utf8CheckExtraBytes(this, buf, p4);
        if (r3 !== void 0) return r3;
        if (this.lastNeed <= buf.length) {
          buf.copy(this.lastChar, p4, 0, this.lastNeed);
          return this.lastChar.toString(this.encoding, 0, this.lastTotal);
        }
        buf.copy(this.lastChar, p4, 0, buf.length);
        this.lastNeed -= buf.length;
      }
      function utf8Text(buf, i4) {
        var total = utf8CheckIncomplete(this, buf, i4);
        if (!this.lastNeed) return buf.toString("utf8", i4);
        this.lastTotal = total;
        var end = buf.length - (total - this.lastNeed);
        buf.copy(this.lastChar, 0, end);
        return buf.toString("utf8", i4, end);
      }
      function utf8End(buf) {
        var r3 = buf && buf.length ? this.write(buf) : "";
        if (this.lastNeed) return r3 + "\uFFFD";
        return r3;
      }
      function utf16Text(buf, i4) {
        if ((buf.length - i4) % 2 === 0) {
          var r3 = buf.toString("utf16le", i4);
          if (r3) {
            var c3 = r3.charCodeAt(r3.length - 1);
            if (c3 >= 55296 && c3 <= 56319) {
              this.lastNeed = 2;
              this.lastTotal = 4;
              this.lastChar[0] = buf[buf.length - 2];
              this.lastChar[1] = buf[buf.length - 1];
              return r3.slice(0, -1);
            }
          }
          return r3;
        }
        this.lastNeed = 1;
        this.lastTotal = 2;
        this.lastChar[0] = buf[buf.length - 1];
        return buf.toString("utf16le", i4, buf.length - 1);
      }
      function utf16End(buf) {
        var r3 = buf && buf.length ? this.write(buf) : "";
        if (this.lastNeed) {
          var end = this.lastTotal - this.lastNeed;
          return r3 + this.lastChar.toString("utf16le", 0, end);
        }
        return r3;
      }
      function base64Text(buf, i4) {
        var n3 = (buf.length - i4) % 3;
        if (n3 === 0) return buf.toString("base64", i4);
        this.lastNeed = 3 - n3;
        this.lastTotal = 3;
        if (n3 === 1) {
          this.lastChar[0] = buf[buf.length - 1];
        } else {
          this.lastChar[0] = buf[buf.length - 2];
          this.lastChar[1] = buf[buf.length - 1];
        }
        return buf.toString("base64", i4, buf.length - n3);
      }
      function base64End(buf) {
        var r3 = buf && buf.length ? this.write(buf) : "";
        if (this.lastNeed) return r3 + this.lastChar.toString("base64", 0, 3 - this.lastNeed);
        return r3;
      }
      function simpleWrite(buf) {
        return buf.toString(this.encoding);
      }
      function simpleEnd(buf) {
        return buf && buf.length ? this.write(buf) : "";
      }
    }
  });

  // node_modules/readable-stream/lib/internal/streams/from.js
  var require_from = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/from.js"(exports, module) {
      "use strict";
      var process2 = require_browser2();
      var { PromisePrototypeThen, SymbolAsyncIterator, SymbolIterator } = require_primordials();
      var { Buffer: Buffer2 } = require_buffer();
      var { ERR_INVALID_ARG_TYPE: ERR_INVALID_ARG_TYPE2, ERR_STREAM_NULL_VALUES } = require_errors().codes;
      function from3(Readable, iterable, opts) {
        let iterator2;
        if (typeof iterable === "string" || iterable instanceof Buffer2) {
          return new Readable({
            objectMode: true,
            ...opts,
            read() {
              this.push(iterable);
              this.push(null);
            }
          });
        }
        let isAsync;
        if (iterable && iterable[SymbolAsyncIterator]) {
          isAsync = true;
          iterator2 = iterable[SymbolAsyncIterator]();
        } else if (iterable && iterable[SymbolIterator]) {
          isAsync = false;
          iterator2 = iterable[SymbolIterator]();
        } else {
          throw new ERR_INVALID_ARG_TYPE2("iterable", ["Iterable"], iterable);
        }
        const readable = new Readable({
          objectMode: true,
          highWaterMark: 1,
          // TODO(ronag): What options should be allowed?
          ...opts
        });
        let reading = false;
        readable._read = function() {
          if (!reading) {
            reading = true;
            next();
          }
        };
        readable._destroy = function(error4, cb) {
          PromisePrototypeThen(
            close2(error4),
            () => process2.nextTick(cb, error4),
            // nextTick is here in case cb throws
            (e3) => process2.nextTick(cb, e3 || error4)
          );
        };
        async function close2(error4) {
          const hadError = error4 !== void 0 && error4 !== null;
          const hasThrow = typeof iterator2.throw === "function";
          if (hadError && hasThrow) {
            const { value: value14, done } = await iterator2.throw(error4);
            await value14;
            if (done) {
              return;
            }
          }
          if (typeof iterator2.return === "function") {
            const { value: value14 } = await iterator2.return();
            await value14;
          }
        }
        async function next() {
          for (; ; ) {
            try {
              const { value: value14, done } = isAsync ? await iterator2.next() : iterator2.next();
              if (done) {
                readable.push(null);
              } else {
                const res = value14 && typeof value14.then === "function" ? await value14 : value14;
                if (res === null) {
                  reading = false;
                  throw new ERR_STREAM_NULL_VALUES();
                } else if (readable.push(res)) {
                  continue;
                } else {
                  reading = false;
                }
              }
            } catch (err) {
              readable.destroy(err);
            }
            break;
          }
        }
        return readable;
      }
      module.exports = from3;
    }
  });

  // node_modules/readable-stream/lib/internal/streams/readable.js
  var require_readable = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/readable.js"(exports, module) {
      var process2 = require_browser2();
      var {
        ArrayPrototypeIndexOf,
        NumberIsInteger,
        NumberIsNaN,
        NumberParseInt,
        ObjectDefineProperties,
        ObjectKeys,
        ObjectSetPrototypeOf,
        Promise: Promise2,
        SafeSet,
        SymbolAsyncDispose,
        SymbolAsyncIterator,
        Symbol: Symbol2
      } = require_primordials();
      module.exports = Readable;
      Readable.ReadableState = ReadableState;
      var { EventEmitter: EE } = require_events();
      var { Stream, prependListener } = require_legacy();
      var { Buffer: Buffer2 } = require_buffer();
      var { addAbortSignal } = require_add_abort_signal();
      var eos = require_end_of_stream();
      var debug2 = require_util3().debuglog("stream", (fn) => {
        debug2 = fn;
      });
      var BufferList = require_buffer_list();
      var destroyImpl = require_destroy();
      var { getHighWaterMark, getDefaultHighWaterMark } = require_state();
      var {
        aggregateTwoErrors,
        codes: {
          ERR_INVALID_ARG_TYPE: ERR_INVALID_ARG_TYPE2,
          ERR_METHOD_NOT_IMPLEMENTED,
          ERR_OUT_OF_RANGE,
          ERR_STREAM_PUSH_AFTER_EOF,
          ERR_STREAM_UNSHIFT_AFTER_END_EVENT
        },
        AbortError
      } = require_errors();
      var { validateObject } = require_validators();
      var kPaused = Symbol2("kPaused");
      var { StringDecoder } = require_string_decoder();
      var from3 = require_from();
      ObjectSetPrototypeOf(Readable.prototype, Stream.prototype);
      ObjectSetPrototypeOf(Readable, Stream);
      var nop = () => {
      };
      var { errorOrDestroy } = destroyImpl;
      var kObjectMode = 1 << 0;
      var kEnded = 1 << 1;
      var kEndEmitted = 1 << 2;
      var kReading = 1 << 3;
      var kConstructed = 1 << 4;
      var kSync = 1 << 5;
      var kNeedReadable = 1 << 6;
      var kEmittedReadable = 1 << 7;
      var kReadableListening = 1 << 8;
      var kResumeScheduled = 1 << 9;
      var kErrorEmitted = 1 << 10;
      var kEmitClose = 1 << 11;
      var kAutoDestroy = 1 << 12;
      var kDestroyed = 1 << 13;
      var kClosed = 1 << 14;
      var kCloseEmitted = 1 << 15;
      var kMultiAwaitDrain = 1 << 16;
      var kReadingMore = 1 << 17;
      var kDataEmitted = 1 << 18;
      function makeBitMapDescriptor(bit) {
        return {
          enumerable: false,
          get() {
            return (this.state & bit) !== 0;
          },
          set(value14) {
            if (value14) this.state |= bit;
            else this.state &= ~bit;
          }
        };
      }
      ObjectDefineProperties(ReadableState.prototype, {
        objectMode: makeBitMapDescriptor(kObjectMode),
        ended: makeBitMapDescriptor(kEnded),
        endEmitted: makeBitMapDescriptor(kEndEmitted),
        reading: makeBitMapDescriptor(kReading),
        // Stream is still being constructed and cannot be
        // destroyed until construction finished or failed.
        // Async construction is opt in, therefore we start as
        // constructed.
        constructed: makeBitMapDescriptor(kConstructed),
        // A flag to be able to tell if the event 'readable'/'data' is emitted
        // immediately, or on a later tick.  We set this to true at first, because
        // any actions that shouldn't happen until "later" should generally also
        // not happen before the first read call.
        sync: makeBitMapDescriptor(kSync),
        // Whenever we return null, then we set a flag to say
        // that we're awaiting a 'readable' event emission.
        needReadable: makeBitMapDescriptor(kNeedReadable),
        emittedReadable: makeBitMapDescriptor(kEmittedReadable),
        readableListening: makeBitMapDescriptor(kReadableListening),
        resumeScheduled: makeBitMapDescriptor(kResumeScheduled),
        // True if the error was already emitted and should not be thrown again.
        errorEmitted: makeBitMapDescriptor(kErrorEmitted),
        emitClose: makeBitMapDescriptor(kEmitClose),
        autoDestroy: makeBitMapDescriptor(kAutoDestroy),
        // Has it been destroyed.
        destroyed: makeBitMapDescriptor(kDestroyed),
        // Indicates whether the stream has finished destroying.
        closed: makeBitMapDescriptor(kClosed),
        // True if close has been emitted or would have been emitted
        // depending on emitClose.
        closeEmitted: makeBitMapDescriptor(kCloseEmitted),
        multiAwaitDrain: makeBitMapDescriptor(kMultiAwaitDrain),
        // If true, a maybeReadMore has been scheduled.
        readingMore: makeBitMapDescriptor(kReadingMore),
        dataEmitted: makeBitMapDescriptor(kDataEmitted)
      });
      function ReadableState(options2, stream, isDuplex) {
        if (typeof isDuplex !== "boolean") isDuplex = stream instanceof require_duplex();
        this.state = kEmitClose | kAutoDestroy | kConstructed | kSync;
        if (options2 && options2.objectMode) this.state |= kObjectMode;
        if (isDuplex && options2 && options2.readableObjectMode) this.state |= kObjectMode;
        this.highWaterMark = options2 ? getHighWaterMark(this, options2, "readableHighWaterMark", isDuplex) : getDefaultHighWaterMark(false);
        this.buffer = new BufferList();
        this.length = 0;
        this.pipes = [];
        this.flowing = null;
        this[kPaused] = null;
        if (options2 && options2.emitClose === false) this.state &= ~kEmitClose;
        if (options2 && options2.autoDestroy === false) this.state &= ~kAutoDestroy;
        this.errored = null;
        this.defaultEncoding = options2 && options2.defaultEncoding || "utf8";
        this.awaitDrainWriters = null;
        this.decoder = null;
        this.encoding = null;
        if (options2 && options2.encoding) {
          this.decoder = new StringDecoder(options2.encoding);
          this.encoding = options2.encoding;
        }
      }
      function Readable(options2) {
        if (!(this instanceof Readable)) return new Readable(options2);
        const isDuplex = this instanceof require_duplex();
        this._readableState = new ReadableState(options2, this, isDuplex);
        if (options2) {
          if (typeof options2.read === "function") this._read = options2.read;
          if (typeof options2.destroy === "function") this._destroy = options2.destroy;
          if (typeof options2.construct === "function") this._construct = options2.construct;
          if (options2.signal && !isDuplex) addAbortSignal(options2.signal, this);
        }
        Stream.call(this, options2);
        destroyImpl.construct(this, () => {
          if (this._readableState.needReadable) {
            maybeReadMore(this, this._readableState);
          }
        });
      }
      Readable.prototype.destroy = destroyImpl.destroy;
      Readable.prototype._undestroy = destroyImpl.undestroy;
      Readable.prototype._destroy = function(err, cb) {
        cb(err);
      };
      Readable.prototype[EE.captureRejectionSymbol] = function(err) {
        this.destroy(err);
      };
      Readable.prototype[SymbolAsyncDispose] = function() {
        let error4;
        if (!this.destroyed) {
          error4 = this.readableEnded ? null : new AbortError();
          this.destroy(error4);
        }
        return new Promise2((resolve, reject) => eos(this, (err) => err && err !== error4 ? reject(err) : resolve(null)));
      };
      Readable.prototype.push = function(chunk, encoding2) {
        return readableAddChunk(this, chunk, encoding2, false);
      };
      Readable.prototype.unshift = function(chunk, encoding2) {
        return readableAddChunk(this, chunk, encoding2, true);
      };
      function readableAddChunk(stream, chunk, encoding2, addToFront) {
        debug2("readableAddChunk", chunk);
        const state3 = stream._readableState;
        let err;
        if ((state3.state & kObjectMode) === 0) {
          if (typeof chunk === "string") {
            encoding2 = encoding2 || state3.defaultEncoding;
            if (state3.encoding !== encoding2) {
              if (addToFront && state3.encoding) {
                chunk = Buffer2.from(chunk, encoding2).toString(state3.encoding);
              } else {
                chunk = Buffer2.from(chunk, encoding2);
                encoding2 = "";
              }
            }
          } else if (chunk instanceof Buffer2) {
            encoding2 = "";
          } else if (Stream._isUint8Array(chunk)) {
            chunk = Stream._uint8ArrayToBuffer(chunk);
            encoding2 = "";
          } else if (chunk != null) {
            err = new ERR_INVALID_ARG_TYPE2("chunk", ["string", "Buffer", "Uint8Array"], chunk);
          }
        }
        if (err) {
          errorOrDestroy(stream, err);
        } else if (chunk === null) {
          state3.state &= ~kReading;
          onEofChunk(stream, state3);
        } else if ((state3.state & kObjectMode) !== 0 || chunk && chunk.length > 0) {
          if (addToFront) {
            if ((state3.state & kEndEmitted) !== 0) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());
            else if (state3.destroyed || state3.errored) return false;
            else addChunk(stream, state3, chunk, true);
          } else if (state3.ended) {
            errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
          } else if (state3.destroyed || state3.errored) {
            return false;
          } else {
            state3.state &= ~kReading;
            if (state3.decoder && !encoding2) {
              chunk = state3.decoder.write(chunk);
              if (state3.objectMode || chunk.length !== 0) addChunk(stream, state3, chunk, false);
              else maybeReadMore(stream, state3);
            } else {
              addChunk(stream, state3, chunk, false);
            }
          }
        } else if (!addToFront) {
          state3.state &= ~kReading;
          maybeReadMore(stream, state3);
        }
        return !state3.ended && (state3.length < state3.highWaterMark || state3.length === 0);
      }
      function addChunk(stream, state3, chunk, addToFront) {
        if (state3.flowing && state3.length === 0 && !state3.sync && stream.listenerCount("data") > 0) {
          if ((state3.state & kMultiAwaitDrain) !== 0) {
            state3.awaitDrainWriters.clear();
          } else {
            state3.awaitDrainWriters = null;
          }
          state3.dataEmitted = true;
          stream.emit("data", chunk);
        } else {
          state3.length += state3.objectMode ? 1 : chunk.length;
          if (addToFront) state3.buffer.unshift(chunk);
          else state3.buffer.push(chunk);
          if ((state3.state & kNeedReadable) !== 0) emitReadable(stream);
        }
        maybeReadMore(stream, state3);
      }
      Readable.prototype.isPaused = function() {
        const state3 = this._readableState;
        return state3[kPaused] === true || state3.flowing === false;
      };
      Readable.prototype.setEncoding = function(enc) {
        const decoder = new StringDecoder(enc);
        this._readableState.decoder = decoder;
        this._readableState.encoding = this._readableState.decoder.encoding;
        const buffer = this._readableState.buffer;
        let content3 = "";
        for (const data of buffer) {
          content3 += decoder.write(data);
        }
        buffer.clear();
        if (content3 !== "") buffer.push(content3);
        this._readableState.length = content3.length;
        return this;
      };
      var MAX_HWM = 1073741824;
      function computeNewHighWaterMark(n3) {
        if (n3 > MAX_HWM) {
          throw new ERR_OUT_OF_RANGE("size", "<= 1GiB", n3);
        } else {
          n3--;
          n3 |= n3 >>> 1;
          n3 |= n3 >>> 2;
          n3 |= n3 >>> 4;
          n3 |= n3 >>> 8;
          n3 |= n3 >>> 16;
          n3++;
        }
        return n3;
      }
      function howMuchToRead(n3, state3) {
        if (n3 <= 0 || state3.length === 0 && state3.ended) return 0;
        if ((state3.state & kObjectMode) !== 0) return 1;
        if (NumberIsNaN(n3)) {
          if (state3.flowing && state3.length) return state3.buffer.first().length;
          return state3.length;
        }
        if (n3 <= state3.length) return n3;
        return state3.ended ? state3.length : 0;
      }
      Readable.prototype.read = function(n3) {
        debug2("read", n3);
        if (n3 === void 0) {
          n3 = NaN;
        } else if (!NumberIsInteger(n3)) {
          n3 = NumberParseInt(n3, 10);
        }
        const state3 = this._readableState;
        const nOrig = n3;
        if (n3 > state3.highWaterMark) state3.highWaterMark = computeNewHighWaterMark(n3);
        if (n3 !== 0) state3.state &= ~kEmittedReadable;
        if (n3 === 0 && state3.needReadable && ((state3.highWaterMark !== 0 ? state3.length >= state3.highWaterMark : state3.length > 0) || state3.ended)) {
          debug2("read: emitReadable", state3.length, state3.ended);
          if (state3.length === 0 && state3.ended) endReadable(this);
          else emitReadable(this);
          return null;
        }
        n3 = howMuchToRead(n3, state3);
        if (n3 === 0 && state3.ended) {
          if (state3.length === 0) endReadable(this);
          return null;
        }
        let doRead = (state3.state & kNeedReadable) !== 0;
        debug2("need readable", doRead);
        if (state3.length === 0 || state3.length - n3 < state3.highWaterMark) {
          doRead = true;
          debug2("length less than watermark", doRead);
        }
        if (state3.ended || state3.reading || state3.destroyed || state3.errored || !state3.constructed) {
          doRead = false;
          debug2("reading, ended or constructing", doRead);
        } else if (doRead) {
          debug2("do read");
          state3.state |= kReading | kSync;
          if (state3.length === 0) state3.state |= kNeedReadable;
          try {
            this._read(state3.highWaterMark);
          } catch (err) {
            errorOrDestroy(this, err);
          }
          state3.state &= ~kSync;
          if (!state3.reading) n3 = howMuchToRead(nOrig, state3);
        }
        let ret;
        if (n3 > 0) ret = fromList(n3, state3);
        else ret = null;
        if (ret === null) {
          state3.needReadable = state3.length <= state3.highWaterMark;
          n3 = 0;
        } else {
          state3.length -= n3;
          if (state3.multiAwaitDrain) {
            state3.awaitDrainWriters.clear();
          } else {
            state3.awaitDrainWriters = null;
          }
        }
        if (state3.length === 0) {
          if (!state3.ended) state3.needReadable = true;
          if (nOrig !== n3 && state3.ended) endReadable(this);
        }
        if (ret !== null && !state3.errorEmitted && !state3.closeEmitted) {
          state3.dataEmitted = true;
          this.emit("data", ret);
        }
        return ret;
      };
      function onEofChunk(stream, state3) {
        debug2("onEofChunk");
        if (state3.ended) return;
        if (state3.decoder) {
          const chunk = state3.decoder.end();
          if (chunk && chunk.length) {
            state3.buffer.push(chunk);
            state3.length += state3.objectMode ? 1 : chunk.length;
          }
        }
        state3.ended = true;
        if (state3.sync) {
          emitReadable(stream);
        } else {
          state3.needReadable = false;
          state3.emittedReadable = true;
          emitReadable_(stream);
        }
      }
      function emitReadable(stream) {
        const state3 = stream._readableState;
        debug2("emitReadable", state3.needReadable, state3.emittedReadable);
        state3.needReadable = false;
        if (!state3.emittedReadable) {
          debug2("emitReadable", state3.flowing);
          state3.emittedReadable = true;
          process2.nextTick(emitReadable_, stream);
        }
      }
      function emitReadable_(stream) {
        const state3 = stream._readableState;
        debug2("emitReadable_", state3.destroyed, state3.length, state3.ended);
        if (!state3.destroyed && !state3.errored && (state3.length || state3.ended)) {
          stream.emit("readable");
          state3.emittedReadable = false;
        }
        state3.needReadable = !state3.flowing && !state3.ended && state3.length <= state3.highWaterMark;
        flow(stream);
      }
      function maybeReadMore(stream, state3) {
        if (!state3.readingMore && state3.constructed) {
          state3.readingMore = true;
          process2.nextTick(maybeReadMore_, stream, state3);
        }
      }
      function maybeReadMore_(stream, state3) {
        while (!state3.reading && !state3.ended && (state3.length < state3.highWaterMark || state3.flowing && state3.length === 0)) {
          const len = state3.length;
          debug2("maybeReadMore read 0");
          stream.read(0);
          if (len === state3.length)
            break;
        }
        state3.readingMore = false;
      }
      Readable.prototype._read = function(n3) {
        throw new ERR_METHOD_NOT_IMPLEMENTED("_read()");
      };
      Readable.prototype.pipe = function(dest, pipeOpts) {
        const src9 = this;
        const state3 = this._readableState;
        if (state3.pipes.length === 1) {
          if (!state3.multiAwaitDrain) {
            state3.multiAwaitDrain = true;
            state3.awaitDrainWriters = new SafeSet(state3.awaitDrainWriters ? [state3.awaitDrainWriters] : []);
          }
        }
        state3.pipes.push(dest);
        debug2("pipe count=%d opts=%j", state3.pipes.length, pipeOpts);
        const doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process2.stdout && dest !== process2.stderr;
        const endFn = doEnd ? onend : unpipe;
        if (state3.endEmitted) process2.nextTick(endFn);
        else src9.once("end", endFn);
        dest.on("unpipe", onunpipe);
        function onunpipe(readable, unpipeInfo) {
          debug2("onunpipe");
          if (readable === src9) {
            if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
              unpipeInfo.hasUnpiped = true;
              cleanup();
            }
          }
        }
        function onend() {
          debug2("onend");
          dest.end();
        }
        let ondrain;
        let cleanedUp = false;
        function cleanup() {
          debug2("cleanup");
          dest.removeListener("close", onclose);
          dest.removeListener("finish", onfinish);
          if (ondrain) {
            dest.removeListener("drain", ondrain);
          }
          dest.removeListener("error", onerror);
          dest.removeListener("unpipe", onunpipe);
          src9.removeListener("end", onend);
          src9.removeListener("end", unpipe);
          src9.removeListener("data", ondata);
          cleanedUp = true;
          if (ondrain && state3.awaitDrainWriters && (!dest._writableState || dest._writableState.needDrain)) ondrain();
        }
        function pause2() {
          if (!cleanedUp) {
            if (state3.pipes.length === 1 && state3.pipes[0] === dest) {
              debug2("false write response, pause", 0);
              state3.awaitDrainWriters = dest;
              state3.multiAwaitDrain = false;
            } else if (state3.pipes.length > 1 && state3.pipes.includes(dest)) {
              debug2("false write response, pause", state3.awaitDrainWriters.size);
              state3.awaitDrainWriters.add(dest);
            }
            src9.pause();
          }
          if (!ondrain) {
            ondrain = pipeOnDrain(src9, dest);
            dest.on("drain", ondrain);
          }
        }
        src9.on("data", ondata);
        function ondata(chunk) {
          debug2("ondata");
          const ret = dest.write(chunk);
          debug2("dest.write", ret);
          if (ret === false) {
            pause2();
          }
        }
        function onerror(er) {
          debug2("onerror", er);
          unpipe();
          dest.removeListener("error", onerror);
          if (dest.listenerCount("error") === 0) {
            const s3 = dest._writableState || dest._readableState;
            if (s3 && !s3.errorEmitted) {
              errorOrDestroy(dest, er);
            } else {
              dest.emit("error", er);
            }
          }
        }
        prependListener(dest, "error", onerror);
        function onclose() {
          dest.removeListener("finish", onfinish);
          unpipe();
        }
        dest.once("close", onclose);
        function onfinish() {
          debug2("onfinish");
          dest.removeListener("close", onclose);
          unpipe();
        }
        dest.once("finish", onfinish);
        function unpipe() {
          debug2("unpipe");
          src9.unpipe(dest);
        }
        dest.emit("pipe", src9);
        if (dest.writableNeedDrain === true) {
          pause2();
        } else if (!state3.flowing) {
          debug2("pipe resume");
          src9.resume();
        }
        return dest;
      };
      function pipeOnDrain(src9, dest) {
        return function pipeOnDrainFunctionResult() {
          const state3 = src9._readableState;
          if (state3.awaitDrainWriters === dest) {
            debug2("pipeOnDrain", 1);
            state3.awaitDrainWriters = null;
          } else if (state3.multiAwaitDrain) {
            debug2("pipeOnDrain", state3.awaitDrainWriters.size);
            state3.awaitDrainWriters.delete(dest);
          }
          if ((!state3.awaitDrainWriters || state3.awaitDrainWriters.size === 0) && src9.listenerCount("data")) {
            src9.resume();
          }
        };
      }
      Readable.prototype.unpipe = function(dest) {
        const state3 = this._readableState;
        const unpipeInfo = {
          hasUnpiped: false
        };
        if (state3.pipes.length === 0) return this;
        if (!dest) {
          const dests = state3.pipes;
          state3.pipes = [];
          this.pause();
          for (let i4 = 0; i4 < dests.length; i4++)
            dests[i4].emit("unpipe", this, {
              hasUnpiped: false
            });
          return this;
        }
        const index4 = ArrayPrototypeIndexOf(state3.pipes, dest);
        if (index4 === -1) return this;
        state3.pipes.splice(index4, 1);
        if (state3.pipes.length === 0) this.pause();
        dest.emit("unpipe", this, unpipeInfo);
        return this;
      };
      Readable.prototype.on = function(ev, fn) {
        const res = Stream.prototype.on.call(this, ev, fn);
        const state3 = this._readableState;
        if (ev === "data") {
          state3.readableListening = this.listenerCount("readable") > 0;
          if (state3.flowing !== false) this.resume();
        } else if (ev === "readable") {
          if (!state3.endEmitted && !state3.readableListening) {
            state3.readableListening = state3.needReadable = true;
            state3.flowing = false;
            state3.emittedReadable = false;
            debug2("on readable", state3.length, state3.reading);
            if (state3.length) {
              emitReadable(this);
            } else if (!state3.reading) {
              process2.nextTick(nReadingNextTick, this);
            }
          }
        }
        return res;
      };
      Readable.prototype.addListener = Readable.prototype.on;
      Readable.prototype.removeListener = function(ev, fn) {
        const res = Stream.prototype.removeListener.call(this, ev, fn);
        if (ev === "readable") {
          process2.nextTick(updateReadableListening, this);
        }
        return res;
      };
      Readable.prototype.off = Readable.prototype.removeListener;
      Readable.prototype.removeAllListeners = function(ev) {
        const res = Stream.prototype.removeAllListeners.apply(this, arguments);
        if (ev === "readable" || ev === void 0) {
          process2.nextTick(updateReadableListening, this);
        }
        return res;
      };
      function updateReadableListening(self2) {
        const state3 = self2._readableState;
        state3.readableListening = self2.listenerCount("readable") > 0;
        if (state3.resumeScheduled && state3[kPaused] === false) {
          state3.flowing = true;
        } else if (self2.listenerCount("data") > 0) {
          self2.resume();
        } else if (!state3.readableListening) {
          state3.flowing = null;
        }
      }
      function nReadingNextTick(self2) {
        debug2("readable nexttick read 0");
        self2.read(0);
      }
      Readable.prototype.resume = function() {
        const state3 = this._readableState;
        if (!state3.flowing) {
          debug2("resume");
          state3.flowing = !state3.readableListening;
          resume(this, state3);
        }
        state3[kPaused] = false;
        return this;
      };
      function resume(stream, state3) {
        if (!state3.resumeScheduled) {
          state3.resumeScheduled = true;
          process2.nextTick(resume_, stream, state3);
        }
      }
      function resume_(stream, state3) {
        debug2("resume", state3.reading);
        if (!state3.reading) {
          stream.read(0);
        }
        state3.resumeScheduled = false;
        stream.emit("resume");
        flow(stream);
        if (state3.flowing && !state3.reading) stream.read(0);
      }
      Readable.prototype.pause = function() {
        debug2("call pause flowing=%j", this._readableState.flowing);
        if (this._readableState.flowing !== false) {
          debug2("pause");
          this._readableState.flowing = false;
          this.emit("pause");
        }
        this._readableState[kPaused] = true;
        return this;
      };
      function flow(stream) {
        const state3 = stream._readableState;
        debug2("flow", state3.flowing);
        while (state3.flowing && stream.read() !== null) ;
      }
      Readable.prototype.wrap = function(stream) {
        let paused2 = false;
        stream.on("data", (chunk) => {
          if (!this.push(chunk) && stream.pause) {
            paused2 = true;
            stream.pause();
          }
        });
        stream.on("end", () => {
          this.push(null);
        });
        stream.on("error", (err) => {
          errorOrDestroy(this, err);
        });
        stream.on("close", () => {
          this.destroy();
        });
        stream.on("destroy", () => {
          this.destroy();
        });
        this._read = () => {
          if (paused2 && stream.resume) {
            paused2 = false;
            stream.resume();
          }
        };
        const streamKeys = ObjectKeys(stream);
        for (let j3 = 1; j3 < streamKeys.length; j3++) {
          const i4 = streamKeys[j3];
          if (this[i4] === void 0 && typeof stream[i4] === "function") {
            this[i4] = stream[i4].bind(stream);
          }
        }
        return this;
      };
      Readable.prototype[SymbolAsyncIterator] = function() {
        return streamToAsyncIterator(this);
      };
      Readable.prototype.iterator = function(options2) {
        if (options2 !== void 0) {
          validateObject(options2, "options");
        }
        return streamToAsyncIterator(this, options2);
      };
      function streamToAsyncIterator(stream, options2) {
        if (typeof stream.read !== "function") {
          stream = Readable.wrap(stream, {
            objectMode: true
          });
        }
        const iter = createAsyncIterator(stream, options2);
        iter.stream = stream;
        return iter;
      }
      async function* createAsyncIterator(stream, options2) {
        let callback = nop;
        function next(resolve) {
          if (this === stream) {
            callback();
            callback = nop;
          } else {
            callback = resolve;
          }
        }
        stream.on("readable", next);
        let error4;
        const cleanup = eos(
          stream,
          {
            writable: false
          },
          (err) => {
            error4 = err ? aggregateTwoErrors(error4, err) : null;
            callback();
            callback = nop;
          }
        );
        try {
          while (true) {
            const chunk = stream.destroyed ? null : stream.read();
            if (chunk !== null) {
              yield chunk;
            } else if (error4) {
              throw error4;
            } else if (error4 === null) {
              return;
            } else {
              await new Promise2(next);
            }
          }
        } catch (err) {
          error4 = aggregateTwoErrors(error4, err);
          throw error4;
        } finally {
          if ((error4 || (options2 === null || options2 === void 0 ? void 0 : options2.destroyOnReturn) !== false) && (error4 === void 0 || stream._readableState.autoDestroy)) {
            destroyImpl.destroyer(stream, null);
          } else {
            stream.off("readable", next);
            cleanup();
          }
        }
      }
      ObjectDefineProperties(Readable.prototype, {
        readable: {
          __proto__: null,
          get() {
            const r3 = this._readableState;
            return !!r3 && r3.readable !== false && !r3.destroyed && !r3.errorEmitted && !r3.endEmitted;
          },
          set(val2) {
            if (this._readableState) {
              this._readableState.readable = !!val2;
            }
          }
        },
        readableDidRead: {
          __proto__: null,
          enumerable: false,
          get: function() {
            return this._readableState.dataEmitted;
          }
        },
        readableAborted: {
          __proto__: null,
          enumerable: false,
          get: function() {
            return !!(this._readableState.readable !== false && (this._readableState.destroyed || this._readableState.errored) && !this._readableState.endEmitted);
          }
        },
        readableHighWaterMark: {
          __proto__: null,
          enumerable: false,
          get: function() {
            return this._readableState.highWaterMark;
          }
        },
        readableBuffer: {
          __proto__: null,
          enumerable: false,
          get: function() {
            return this._readableState && this._readableState.buffer;
          }
        },
        readableFlowing: {
          __proto__: null,
          enumerable: false,
          get: function() {
            return this._readableState.flowing;
          },
          set: function(state3) {
            if (this._readableState) {
              this._readableState.flowing = state3;
            }
          }
        },
        readableLength: {
          __proto__: null,
          enumerable: false,
          get() {
            return this._readableState.length;
          }
        },
        readableObjectMode: {
          __proto__: null,
          enumerable: false,
          get() {
            return this._readableState ? this._readableState.objectMode : false;
          }
        },
        readableEncoding: {
          __proto__: null,
          enumerable: false,
          get() {
            return this._readableState ? this._readableState.encoding : null;
          }
        },
        errored: {
          __proto__: null,
          enumerable: false,
          get() {
            return this._readableState ? this._readableState.errored : null;
          }
        },
        closed: {
          __proto__: null,
          get() {
            return this._readableState ? this._readableState.closed : false;
          }
        },
        destroyed: {
          __proto__: null,
          enumerable: false,
          get() {
            return this._readableState ? this._readableState.destroyed : false;
          },
          set(value14) {
            if (!this._readableState) {
              return;
            }
            this._readableState.destroyed = value14;
          }
        },
        readableEnded: {
          __proto__: null,
          enumerable: false,
          get() {
            return this._readableState ? this._readableState.endEmitted : false;
          }
        }
      });
      ObjectDefineProperties(ReadableState.prototype, {
        // Legacy getter for `pipesCount`.
        pipesCount: {
          __proto__: null,
          get() {
            return this.pipes.length;
          }
        },
        // Legacy property for `paused`.
        paused: {
          __proto__: null,
          get() {
            return this[kPaused] !== false;
          },
          set(value14) {
            this[kPaused] = !!value14;
          }
        }
      });
      Readable._fromList = fromList;
      function fromList(n3, state3) {
        if (state3.length === 0) return null;
        let ret;
        if (state3.objectMode) ret = state3.buffer.shift();
        else if (!n3 || n3 >= state3.length) {
          if (state3.decoder) ret = state3.buffer.join("");
          else if (state3.buffer.length === 1) ret = state3.buffer.first();
          else ret = state3.buffer.concat(state3.length);
          state3.buffer.clear();
        } else {
          ret = state3.buffer.consume(n3, state3.decoder);
        }
        return ret;
      }
      function endReadable(stream) {
        const state3 = stream._readableState;
        debug2("endReadable", state3.endEmitted);
        if (!state3.endEmitted) {
          state3.ended = true;
          process2.nextTick(endReadableNT, state3, stream);
        }
      }
      function endReadableNT(state3, stream) {
        debug2("endReadableNT", state3.endEmitted, state3.length);
        if (!state3.errored && !state3.closeEmitted && !state3.endEmitted && state3.length === 0) {
          state3.endEmitted = true;
          stream.emit("end");
          if (stream.writable && stream.allowHalfOpen === false) {
            process2.nextTick(endWritableNT, stream);
          } else if (state3.autoDestroy) {
            const wState = stream._writableState;
            const autoDestroy = !wState || wState.autoDestroy && // We don't expect the writable to ever 'finish'
            // if writable is explicitly set to false.
            (wState.finished || wState.writable === false);
            if (autoDestroy) {
              stream.destroy();
            }
          }
        }
      }
      function endWritableNT(stream) {
        const writable = stream.writable && !stream.writableEnded && !stream.destroyed;
        if (writable) {
          stream.end();
        }
      }
      Readable.from = function(iterable, opts) {
        return from3(Readable, iterable, opts);
      };
      var webStreamsAdapters;
      function lazyWebStreams() {
        if (webStreamsAdapters === void 0) webStreamsAdapters = {};
        return webStreamsAdapters;
      }
      Readable.fromWeb = function(readableStream, options2) {
        return lazyWebStreams().newStreamReadableFromReadableStream(readableStream, options2);
      };
      Readable.toWeb = function(streamReadable, options2) {
        return lazyWebStreams().newReadableStreamFromStreamReadable(streamReadable, options2);
      };
      Readable.wrap = function(src9, options2) {
        var _ref, _src$readableObjectMo;
        return new Readable({
          objectMode: (_ref = (_src$readableObjectMo = src9.readableObjectMode) !== null && _src$readableObjectMo !== void 0 ? _src$readableObjectMo : src9.objectMode) !== null && _ref !== void 0 ? _ref : true,
          ...options2,
          destroy(err, callback) {
            destroyImpl.destroyer(src9, err);
            callback(err);
          }
        }).wrap(src9);
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/writable.js
  var require_writable = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/writable.js"(exports, module) {
      var process2 = require_browser2();
      var {
        ArrayPrototypeSlice,
        Error: Error2,
        FunctionPrototypeSymbolHasInstance,
        ObjectDefineProperty,
        ObjectDefineProperties,
        ObjectSetPrototypeOf,
        StringPrototypeToLowerCase,
        Symbol: Symbol2,
        SymbolHasInstance
      } = require_primordials();
      module.exports = Writable;
      Writable.WritableState = WritableState;
      var { EventEmitter: EE } = require_events();
      var Stream = require_legacy().Stream;
      var { Buffer: Buffer2 } = require_buffer();
      var destroyImpl = require_destroy();
      var { addAbortSignal } = require_add_abort_signal();
      var { getHighWaterMark, getDefaultHighWaterMark } = require_state();
      var {
        ERR_INVALID_ARG_TYPE: ERR_INVALID_ARG_TYPE2,
        ERR_METHOD_NOT_IMPLEMENTED,
        ERR_MULTIPLE_CALLBACK,
        ERR_STREAM_CANNOT_PIPE,
        ERR_STREAM_DESTROYED,
        ERR_STREAM_ALREADY_FINISHED,
        ERR_STREAM_NULL_VALUES,
        ERR_STREAM_WRITE_AFTER_END,
        ERR_UNKNOWN_ENCODING
      } = require_errors().codes;
      var { errorOrDestroy } = destroyImpl;
      ObjectSetPrototypeOf(Writable.prototype, Stream.prototype);
      ObjectSetPrototypeOf(Writable, Stream);
      function nop() {
      }
      var kOnFinished = Symbol2("kOnFinished");
      function WritableState(options2, stream, isDuplex) {
        if (typeof isDuplex !== "boolean") isDuplex = stream instanceof require_duplex();
        this.objectMode = !!(options2 && options2.objectMode);
        if (isDuplex) this.objectMode = this.objectMode || !!(options2 && options2.writableObjectMode);
        this.highWaterMark = options2 ? getHighWaterMark(this, options2, "writableHighWaterMark", isDuplex) : getDefaultHighWaterMark(false);
        this.finalCalled = false;
        this.needDrain = false;
        this.ending = false;
        this.ended = false;
        this.finished = false;
        this.destroyed = false;
        const noDecode = !!(options2 && options2.decodeStrings === false);
        this.decodeStrings = !noDecode;
        this.defaultEncoding = options2 && options2.defaultEncoding || "utf8";
        this.length = 0;
        this.writing = false;
        this.corked = 0;
        this.sync = true;
        this.bufferProcessing = false;
        this.onwrite = onwrite.bind(void 0, stream);
        this.writecb = null;
        this.writelen = 0;
        this.afterWriteTickInfo = null;
        resetBuffer(this);
        this.pendingcb = 0;
        this.constructed = true;
        this.prefinished = false;
        this.errorEmitted = false;
        this.emitClose = !options2 || options2.emitClose !== false;
        this.autoDestroy = !options2 || options2.autoDestroy !== false;
        this.errored = null;
        this.closed = false;
        this.closeEmitted = false;
        this[kOnFinished] = [];
      }
      function resetBuffer(state3) {
        state3.buffered = [];
        state3.bufferedIndex = 0;
        state3.allBuffers = true;
        state3.allNoop = true;
      }
      WritableState.prototype.getBuffer = function getBuffer() {
        return ArrayPrototypeSlice(this.buffered, this.bufferedIndex);
      };
      ObjectDefineProperty(WritableState.prototype, "bufferedRequestCount", {
        __proto__: null,
        get() {
          return this.buffered.length - this.bufferedIndex;
        }
      });
      function Writable(options2) {
        const isDuplex = this instanceof require_duplex();
        if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable, this)) return new Writable(options2);
        this._writableState = new WritableState(options2, this, isDuplex);
        if (options2) {
          if (typeof options2.write === "function") this._write = options2.write;
          if (typeof options2.writev === "function") this._writev = options2.writev;
          if (typeof options2.destroy === "function") this._destroy = options2.destroy;
          if (typeof options2.final === "function") this._final = options2.final;
          if (typeof options2.construct === "function") this._construct = options2.construct;
          if (options2.signal) addAbortSignal(options2.signal, this);
        }
        Stream.call(this, options2);
        destroyImpl.construct(this, () => {
          const state3 = this._writableState;
          if (!state3.writing) {
            clearBuffer(this, state3);
          }
          finishMaybe(this, state3);
        });
      }
      ObjectDefineProperty(Writable, SymbolHasInstance, {
        __proto__: null,
        value: function(object2) {
          if (FunctionPrototypeSymbolHasInstance(this, object2)) return true;
          if (this !== Writable) return false;
          return object2 && object2._writableState instanceof WritableState;
        }
      });
      Writable.prototype.pipe = function() {
        errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
      };
      function _write(stream, chunk, encoding2, cb) {
        const state3 = stream._writableState;
        if (typeof encoding2 === "function") {
          cb = encoding2;
          encoding2 = state3.defaultEncoding;
        } else {
          if (!encoding2) encoding2 = state3.defaultEncoding;
          else if (encoding2 !== "buffer" && !Buffer2.isEncoding(encoding2)) throw new ERR_UNKNOWN_ENCODING(encoding2);
          if (typeof cb !== "function") cb = nop;
        }
        if (chunk === null) {
          throw new ERR_STREAM_NULL_VALUES();
        } else if (!state3.objectMode) {
          if (typeof chunk === "string") {
            if (state3.decodeStrings !== false) {
              chunk = Buffer2.from(chunk, encoding2);
              encoding2 = "buffer";
            }
          } else if (chunk instanceof Buffer2) {
            encoding2 = "buffer";
          } else if (Stream._isUint8Array(chunk)) {
            chunk = Stream._uint8ArrayToBuffer(chunk);
            encoding2 = "buffer";
          } else {
            throw new ERR_INVALID_ARG_TYPE2("chunk", ["string", "Buffer", "Uint8Array"], chunk);
          }
        }
        let err;
        if (state3.ending) {
          err = new ERR_STREAM_WRITE_AFTER_END();
        } else if (state3.destroyed) {
          err = new ERR_STREAM_DESTROYED("write");
        }
        if (err) {
          process2.nextTick(cb, err);
          errorOrDestroy(stream, err, true);
          return err;
        }
        state3.pendingcb++;
        return writeOrBuffer(stream, state3, chunk, encoding2, cb);
      }
      Writable.prototype.write = function(chunk, encoding2, cb) {
        return _write(this, chunk, encoding2, cb) === true;
      };
      Writable.prototype.cork = function() {
        this._writableState.corked++;
      };
      Writable.prototype.uncork = function() {
        const state3 = this._writableState;
        if (state3.corked) {
          state3.corked--;
          if (!state3.writing) clearBuffer(this, state3);
        }
      };
      Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding2) {
        if (typeof encoding2 === "string") encoding2 = StringPrototypeToLowerCase(encoding2);
        if (!Buffer2.isEncoding(encoding2)) throw new ERR_UNKNOWN_ENCODING(encoding2);
        this._writableState.defaultEncoding = encoding2;
        return this;
      };
      function writeOrBuffer(stream, state3, chunk, encoding2, callback) {
        const len = state3.objectMode ? 1 : chunk.length;
        state3.length += len;
        const ret = state3.length < state3.highWaterMark;
        if (!ret) state3.needDrain = true;
        if (state3.writing || state3.corked || state3.errored || !state3.constructed) {
          state3.buffered.push({
            chunk,
            encoding: encoding2,
            callback
          });
          if (state3.allBuffers && encoding2 !== "buffer") {
            state3.allBuffers = false;
          }
          if (state3.allNoop && callback !== nop) {
            state3.allNoop = false;
          }
        } else {
          state3.writelen = len;
          state3.writecb = callback;
          state3.writing = true;
          state3.sync = true;
          stream._write(chunk, encoding2, state3.onwrite);
          state3.sync = false;
        }
        return ret && !state3.errored && !state3.destroyed;
      }
      function doWrite(stream, state3, writev, len, chunk, encoding2, cb) {
        state3.writelen = len;
        state3.writecb = cb;
        state3.writing = true;
        state3.sync = true;
        if (state3.destroyed) state3.onwrite(new ERR_STREAM_DESTROYED("write"));
        else if (writev) stream._writev(chunk, state3.onwrite);
        else stream._write(chunk, encoding2, state3.onwrite);
        state3.sync = false;
      }
      function onwriteError(stream, state3, er, cb) {
        --state3.pendingcb;
        cb(er);
        errorBuffer(state3);
        errorOrDestroy(stream, er);
      }
      function onwrite(stream, er) {
        const state3 = stream._writableState;
        const sync = state3.sync;
        const cb = state3.writecb;
        if (typeof cb !== "function") {
          errorOrDestroy(stream, new ERR_MULTIPLE_CALLBACK());
          return;
        }
        state3.writing = false;
        state3.writecb = null;
        state3.length -= state3.writelen;
        state3.writelen = 0;
        if (er) {
          er.stack;
          if (!state3.errored) {
            state3.errored = er;
          }
          if (stream._readableState && !stream._readableState.errored) {
            stream._readableState.errored = er;
          }
          if (sync) {
            process2.nextTick(onwriteError, stream, state3, er, cb);
          } else {
            onwriteError(stream, state3, er, cb);
          }
        } else {
          if (state3.buffered.length > state3.bufferedIndex) {
            clearBuffer(stream, state3);
          }
          if (sync) {
            if (state3.afterWriteTickInfo !== null && state3.afterWriteTickInfo.cb === cb) {
              state3.afterWriteTickInfo.count++;
            } else {
              state3.afterWriteTickInfo = {
                count: 1,
                cb,
                stream,
                state: state3
              };
              process2.nextTick(afterWriteTick, state3.afterWriteTickInfo);
            }
          } else {
            afterWrite(stream, state3, 1, cb);
          }
        }
      }
      function afterWriteTick({ stream, state: state3, count, cb }) {
        state3.afterWriteTickInfo = null;
        return afterWrite(stream, state3, count, cb);
      }
      function afterWrite(stream, state3, count, cb) {
        const needDrain = !state3.ending && !stream.destroyed && state3.length === 0 && state3.needDrain;
        if (needDrain) {
          state3.needDrain = false;
          stream.emit("drain");
        }
        while (count-- > 0) {
          state3.pendingcb--;
          cb();
        }
        if (state3.destroyed) {
          errorBuffer(state3);
        }
        finishMaybe(stream, state3);
      }
      function errorBuffer(state3) {
        if (state3.writing) {
          return;
        }
        for (let n3 = state3.bufferedIndex; n3 < state3.buffered.length; ++n3) {
          var _state$errored;
          const { chunk, callback } = state3.buffered[n3];
          const len = state3.objectMode ? 1 : chunk.length;
          state3.length -= len;
          callback(
            (_state$errored = state3.errored) !== null && _state$errored !== void 0 ? _state$errored : new ERR_STREAM_DESTROYED("write")
          );
        }
        const onfinishCallbacks = state3[kOnFinished].splice(0);
        for (let i4 = 0; i4 < onfinishCallbacks.length; i4++) {
          var _state$errored2;
          onfinishCallbacks[i4](
            (_state$errored2 = state3.errored) !== null && _state$errored2 !== void 0 ? _state$errored2 : new ERR_STREAM_DESTROYED("end")
          );
        }
        resetBuffer(state3);
      }
      function clearBuffer(stream, state3) {
        if (state3.corked || state3.bufferProcessing || state3.destroyed || !state3.constructed) {
          return;
        }
        const { buffered, bufferedIndex, objectMode } = state3;
        const bufferedLength = buffered.length - bufferedIndex;
        if (!bufferedLength) {
          return;
        }
        let i4 = bufferedIndex;
        state3.bufferProcessing = true;
        if (bufferedLength > 1 && stream._writev) {
          state3.pendingcb -= bufferedLength - 1;
          const callback = state3.allNoop ? nop : (err) => {
            for (let n3 = i4; n3 < buffered.length; ++n3) {
              buffered[n3].callback(err);
            }
          };
          const chunks = state3.allNoop && i4 === 0 ? buffered : ArrayPrototypeSlice(buffered, i4);
          chunks.allBuffers = state3.allBuffers;
          doWrite(stream, state3, true, state3.length, chunks, "", callback);
          resetBuffer(state3);
        } else {
          do {
            const { chunk, encoding: encoding2, callback } = buffered[i4];
            buffered[i4++] = null;
            const len = objectMode ? 1 : chunk.length;
            doWrite(stream, state3, false, len, chunk, encoding2, callback);
          } while (i4 < buffered.length && !state3.writing);
          if (i4 === buffered.length) {
            resetBuffer(state3);
          } else if (i4 > 256) {
            buffered.splice(0, i4);
            state3.bufferedIndex = 0;
          } else {
            state3.bufferedIndex = i4;
          }
        }
        state3.bufferProcessing = false;
      }
      Writable.prototype._write = function(chunk, encoding2, cb) {
        if (this._writev) {
          this._writev(
            [
              {
                chunk,
                encoding: encoding2
              }
            ],
            cb
          );
        } else {
          throw new ERR_METHOD_NOT_IMPLEMENTED("_write()");
        }
      };
      Writable.prototype._writev = null;
      Writable.prototype.end = function(chunk, encoding2, cb) {
        const state3 = this._writableState;
        if (typeof chunk === "function") {
          cb = chunk;
          chunk = null;
          encoding2 = null;
        } else if (typeof encoding2 === "function") {
          cb = encoding2;
          encoding2 = null;
        }
        let err;
        if (chunk !== null && chunk !== void 0) {
          const ret = _write(this, chunk, encoding2);
          if (ret instanceof Error2) {
            err = ret;
          }
        }
        if (state3.corked) {
          state3.corked = 1;
          this.uncork();
        }
        if (err) {
        } else if (!state3.errored && !state3.ending) {
          state3.ending = true;
          finishMaybe(this, state3, true);
          state3.ended = true;
        } else if (state3.finished) {
          err = new ERR_STREAM_ALREADY_FINISHED("end");
        } else if (state3.destroyed) {
          err = new ERR_STREAM_DESTROYED("end");
        }
        if (typeof cb === "function") {
          if (err || state3.finished) {
            process2.nextTick(cb, err);
          } else {
            state3[kOnFinished].push(cb);
          }
        }
        return this;
      };
      function needFinish(state3) {
        return state3.ending && !state3.destroyed && state3.constructed && state3.length === 0 && !state3.errored && state3.buffered.length === 0 && !state3.finished && !state3.writing && !state3.errorEmitted && !state3.closeEmitted;
      }
      function callFinal(stream, state3) {
        let called = false;
        function onFinish(err) {
          if (called) {
            errorOrDestroy(stream, err !== null && err !== void 0 ? err : ERR_MULTIPLE_CALLBACK());
            return;
          }
          called = true;
          state3.pendingcb--;
          if (err) {
            const onfinishCallbacks = state3[kOnFinished].splice(0);
            for (let i4 = 0; i4 < onfinishCallbacks.length; i4++) {
              onfinishCallbacks[i4](err);
            }
            errorOrDestroy(stream, err, state3.sync);
          } else if (needFinish(state3)) {
            state3.prefinished = true;
            stream.emit("prefinish");
            state3.pendingcb++;
            process2.nextTick(finish, stream, state3);
          }
        }
        state3.sync = true;
        state3.pendingcb++;
        try {
          stream._final(onFinish);
        } catch (err) {
          onFinish(err);
        }
        state3.sync = false;
      }
      function prefinish(stream, state3) {
        if (!state3.prefinished && !state3.finalCalled) {
          if (typeof stream._final === "function" && !state3.destroyed) {
            state3.finalCalled = true;
            callFinal(stream, state3);
          } else {
            state3.prefinished = true;
            stream.emit("prefinish");
          }
        }
      }
      function finishMaybe(stream, state3, sync) {
        if (needFinish(state3)) {
          prefinish(stream, state3);
          if (state3.pendingcb === 0) {
            if (sync) {
              state3.pendingcb++;
              process2.nextTick(
                (stream2, state4) => {
                  if (needFinish(state4)) {
                    finish(stream2, state4);
                  } else {
                    state4.pendingcb--;
                  }
                },
                stream,
                state3
              );
            } else if (needFinish(state3)) {
              state3.pendingcb++;
              finish(stream, state3);
            }
          }
        }
      }
      function finish(stream, state3) {
        state3.pendingcb--;
        state3.finished = true;
        const onfinishCallbacks = state3[kOnFinished].splice(0);
        for (let i4 = 0; i4 < onfinishCallbacks.length; i4++) {
          onfinishCallbacks[i4]();
        }
        stream.emit("finish");
        if (state3.autoDestroy) {
          const rState = stream._readableState;
          const autoDestroy = !rState || rState.autoDestroy && // We don't expect the readable to ever 'end'
          // if readable is explicitly set to false.
          (rState.endEmitted || rState.readable === false);
          if (autoDestroy) {
            stream.destroy();
          }
        }
      }
      ObjectDefineProperties(Writable.prototype, {
        closed: {
          __proto__: null,
          get() {
            return this._writableState ? this._writableState.closed : false;
          }
        },
        destroyed: {
          __proto__: null,
          get() {
            return this._writableState ? this._writableState.destroyed : false;
          },
          set(value14) {
            if (this._writableState) {
              this._writableState.destroyed = value14;
            }
          }
        },
        writable: {
          __proto__: null,
          get() {
            const w2 = this._writableState;
            return !!w2 && w2.writable !== false && !w2.destroyed && !w2.errored && !w2.ending && !w2.ended;
          },
          set(val2) {
            if (this._writableState) {
              this._writableState.writable = !!val2;
            }
          }
        },
        writableFinished: {
          __proto__: null,
          get() {
            return this._writableState ? this._writableState.finished : false;
          }
        },
        writableObjectMode: {
          __proto__: null,
          get() {
            return this._writableState ? this._writableState.objectMode : false;
          }
        },
        writableBuffer: {
          __proto__: null,
          get() {
            return this._writableState && this._writableState.getBuffer();
          }
        },
        writableEnded: {
          __proto__: null,
          get() {
            return this._writableState ? this._writableState.ending : false;
          }
        },
        writableNeedDrain: {
          __proto__: null,
          get() {
            const wState = this._writableState;
            if (!wState) return false;
            return !wState.destroyed && !wState.ending && wState.needDrain;
          }
        },
        writableHighWaterMark: {
          __proto__: null,
          get() {
            return this._writableState && this._writableState.highWaterMark;
          }
        },
        writableCorked: {
          __proto__: null,
          get() {
            return this._writableState ? this._writableState.corked : 0;
          }
        },
        writableLength: {
          __proto__: null,
          get() {
            return this._writableState && this._writableState.length;
          }
        },
        errored: {
          __proto__: null,
          enumerable: false,
          get() {
            return this._writableState ? this._writableState.errored : null;
          }
        },
        writableAborted: {
          __proto__: null,
          enumerable: false,
          get: function() {
            return !!(this._writableState.writable !== false && (this._writableState.destroyed || this._writableState.errored) && !this._writableState.finished);
          }
        }
      });
      var destroy = destroyImpl.destroy;
      Writable.prototype.destroy = function(err, cb) {
        const state3 = this._writableState;
        if (!state3.destroyed && (state3.bufferedIndex < state3.buffered.length || state3[kOnFinished].length)) {
          process2.nextTick(errorBuffer, state3);
        }
        destroy.call(this, err, cb);
        return this;
      };
      Writable.prototype._undestroy = destroyImpl.undestroy;
      Writable.prototype._destroy = function(err, cb) {
        cb(err);
      };
      Writable.prototype[EE.captureRejectionSymbol] = function(err) {
        this.destroy(err);
      };
      var webStreamsAdapters;
      function lazyWebStreams() {
        if (webStreamsAdapters === void 0) webStreamsAdapters = {};
        return webStreamsAdapters;
      }
      Writable.fromWeb = function(writableStream, options2) {
        return lazyWebStreams().newStreamWritableFromWritableStream(writableStream, options2);
      };
      Writable.toWeb = function(streamWritable) {
        return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/duplexify.js
  var require_duplexify = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/duplexify.js"(exports, module) {
      var process2 = require_browser2();
      var bufferModule = require_buffer();
      var {
        isReadable,
        isWritable,
        isIterable,
        isNodeStream,
        isReadableNodeStream,
        isWritableNodeStream,
        isDuplexNodeStream,
        isReadableStream: isReadableStream2,
        isWritableStream
      } = require_utils();
      var eos = require_end_of_stream();
      var {
        AbortError,
        codes: { ERR_INVALID_ARG_TYPE: ERR_INVALID_ARG_TYPE2, ERR_INVALID_RETURN_VALUE }
      } = require_errors();
      var { destroyer } = require_destroy();
      var Duplex = require_duplex();
      var Readable = require_readable();
      var Writable = require_writable();
      var { createDeferredPromise } = require_util3();
      var from3 = require_from();
      var Blob2 = globalThis.Blob || bufferModule.Blob;
      var isBlob = typeof Blob2 !== "undefined" ? function isBlob2(b4) {
        return b4 instanceof Blob2;
      } : function isBlob2(b4) {
        return false;
      };
      var AbortController2 = globalThis.AbortController || require_browser().AbortController;
      var { FunctionPrototypeCall } = require_primordials();
      var Duplexify = class extends Duplex {
        constructor(options2) {
          super(options2);
          if ((options2 === null || options2 === void 0 ? void 0 : options2.readable) === false) {
            this._readableState.readable = false;
            this._readableState.ended = true;
            this._readableState.endEmitted = true;
          }
          if ((options2 === null || options2 === void 0 ? void 0 : options2.writable) === false) {
            this._writableState.writable = false;
            this._writableState.ending = true;
            this._writableState.ended = true;
            this._writableState.finished = true;
          }
        }
      };
      module.exports = function duplexify(body2, name15) {
        if (isDuplexNodeStream(body2)) {
          return body2;
        }
        if (isReadableNodeStream(body2)) {
          return _duplexify({
            readable: body2
          });
        }
        if (isWritableNodeStream(body2)) {
          return _duplexify({
            writable: body2
          });
        }
        if (isNodeStream(body2)) {
          return _duplexify({
            writable: false,
            readable: false
          });
        }
        if (isReadableStream2(body2)) {
          return _duplexify({
            readable: Readable.fromWeb(body2)
          });
        }
        if (isWritableStream(body2)) {
          return _duplexify({
            writable: Writable.fromWeb(body2)
          });
        }
        if (typeof body2 === "function") {
          const { value: value14, write: write3, final, destroy } = fromAsyncGen(body2);
          if (isIterable(value14)) {
            return from3(Duplexify, value14, {
              // TODO (ronag): highWaterMark?
              objectMode: true,
              write: write3,
              final,
              destroy
            });
          }
          const then2 = value14 === null || value14 === void 0 ? void 0 : value14.then;
          if (typeof then2 === "function") {
            let d3;
            const promise2 = FunctionPrototypeCall(
              then2,
              value14,
              (val2) => {
                if (val2 != null) {
                  throw new ERR_INVALID_RETURN_VALUE("nully", "body", val2);
                }
              },
              (err) => {
                destroyer(d3, err);
              }
            );
            return d3 = new Duplexify({
              // TODO (ronag): highWaterMark?
              objectMode: true,
              readable: false,
              write: write3,
              final(cb) {
                final(async () => {
                  try {
                    await promise2;
                    process2.nextTick(cb, null);
                  } catch (err) {
                    process2.nextTick(cb, err);
                  }
                });
              },
              destroy
            });
          }
          throw new ERR_INVALID_RETURN_VALUE("Iterable, AsyncIterable or AsyncFunction", name15, value14);
        }
        if (isBlob(body2)) {
          return duplexify(body2.arrayBuffer());
        }
        if (isIterable(body2)) {
          return from3(Duplexify, body2, {
            // TODO (ronag): highWaterMark?
            objectMode: true,
            writable: false
          });
        }
        if (isReadableStream2(body2 === null || body2 === void 0 ? void 0 : body2.readable) && isWritableStream(body2 === null || body2 === void 0 ? void 0 : body2.writable)) {
          return Duplexify.fromWeb(body2);
        }
        if (typeof (body2 === null || body2 === void 0 ? void 0 : body2.writable) === "object" || typeof (body2 === null || body2 === void 0 ? void 0 : body2.readable) === "object") {
          const readable = body2 !== null && body2 !== void 0 && body2.readable ? isReadableNodeStream(body2 === null || body2 === void 0 ? void 0 : body2.readable) ? body2 === null || body2 === void 0 ? void 0 : body2.readable : duplexify(body2.readable) : void 0;
          const writable = body2 !== null && body2 !== void 0 && body2.writable ? isWritableNodeStream(body2 === null || body2 === void 0 ? void 0 : body2.writable) ? body2 === null || body2 === void 0 ? void 0 : body2.writable : duplexify(body2.writable) : void 0;
          return _duplexify({
            readable,
            writable
          });
        }
        const then = body2 === null || body2 === void 0 ? void 0 : body2.then;
        if (typeof then === "function") {
          let d3;
          FunctionPrototypeCall(
            then,
            body2,
            (val2) => {
              if (val2 != null) {
                d3.push(val2);
              }
              d3.push(null);
            },
            (err) => {
              destroyer(d3, err);
            }
          );
          return d3 = new Duplexify({
            objectMode: true,
            writable: false,
            read() {
            }
          });
        }
        throw new ERR_INVALID_ARG_TYPE2(
          name15,
          [
            "Blob",
            "ReadableStream",
            "WritableStream",
            "Stream",
            "Iterable",
            "AsyncIterable",
            "Function",
            "{ readable, writable } pair",
            "Promise"
          ],
          body2
        );
      };
      function fromAsyncGen(fn) {
        let { promise: promise2, resolve } = createDeferredPromise();
        const ac = new AbortController2();
        const signal = ac.signal;
        const value14 = fn(
          async function* () {
            while (true) {
              const _promise = promise2;
              promise2 = null;
              const { chunk, done, cb } = await _promise;
              process2.nextTick(cb);
              if (done) return;
              if (signal.aborted)
                throw new AbortError(void 0, {
                  cause: signal.reason
                });
              ({ promise: promise2, resolve } = createDeferredPromise());
              yield chunk;
            }
          }(),
          {
            signal
          }
        );
        return {
          value: value14,
          write(chunk, encoding2, cb) {
            const _resolve = resolve;
            resolve = null;
            _resolve({
              chunk,
              done: false,
              cb
            });
          },
          final(cb) {
            const _resolve = resolve;
            resolve = null;
            _resolve({
              done: true,
              cb
            });
          },
          destroy(err, cb) {
            ac.abort();
            cb(err);
          }
        };
      }
      function _duplexify(pair) {
        const r3 = pair.readable && typeof pair.readable.read !== "function" ? Readable.wrap(pair.readable) : pair.readable;
        const w2 = pair.writable;
        let readable = !!isReadable(r3);
        let writable = !!isWritable(w2);
        let ondrain;
        let onfinish;
        let onreadable;
        let onclose;
        let d3;
        function onfinished(err) {
          const cb = onclose;
          onclose = null;
          if (cb) {
            cb(err);
          } else if (err) {
            d3.destroy(err);
          }
        }
        d3 = new Duplexify({
          // TODO (ronag): highWaterMark?
          readableObjectMode: !!(r3 !== null && r3 !== void 0 && r3.readableObjectMode),
          writableObjectMode: !!(w2 !== null && w2 !== void 0 && w2.writableObjectMode),
          readable,
          writable
        });
        if (writable) {
          eos(w2, (err) => {
            writable = false;
            if (err) {
              destroyer(r3, err);
            }
            onfinished(err);
          });
          d3._write = function(chunk, encoding2, callback) {
            if (w2.write(chunk, encoding2)) {
              callback();
            } else {
              ondrain = callback;
            }
          };
          d3._final = function(callback) {
            w2.end();
            onfinish = callback;
          };
          w2.on("drain", function() {
            if (ondrain) {
              const cb = ondrain;
              ondrain = null;
              cb();
            }
          });
          w2.on("finish", function() {
            if (onfinish) {
              const cb = onfinish;
              onfinish = null;
              cb();
            }
          });
        }
        if (readable) {
          eos(r3, (err) => {
            readable = false;
            if (err) {
              destroyer(r3, err);
            }
            onfinished(err);
          });
          r3.on("readable", function() {
            if (onreadable) {
              const cb = onreadable;
              onreadable = null;
              cb();
            }
          });
          r3.on("end", function() {
            d3.push(null);
          });
          d3._read = function() {
            while (true) {
              const buf = r3.read();
              if (buf === null) {
                onreadable = d3._read;
                return;
              }
              if (!d3.push(buf)) {
                return;
              }
            }
          };
        }
        d3._destroy = function(err, callback) {
          if (!err && onclose !== null) {
            err = new AbortError();
          }
          onreadable = null;
          ondrain = null;
          onfinish = null;
          if (onclose === null) {
            callback(err);
          } else {
            onclose = callback;
            destroyer(w2, err);
            destroyer(r3, err);
          }
        };
        return d3;
      }
    }
  });

  // node_modules/readable-stream/lib/internal/streams/duplex.js
  var require_duplex = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/duplex.js"(exports, module) {
      "use strict";
      var {
        ObjectDefineProperties,
        ObjectGetOwnPropertyDescriptor,
        ObjectKeys,
        ObjectSetPrototypeOf
      } = require_primordials();
      module.exports = Duplex;
      var Readable = require_readable();
      var Writable = require_writable();
      ObjectSetPrototypeOf(Duplex.prototype, Readable.prototype);
      ObjectSetPrototypeOf(Duplex, Readable);
      {
        const keys3 = ObjectKeys(Writable.prototype);
        for (let i4 = 0; i4 < keys3.length; i4++) {
          const method2 = keys3[i4];
          if (!Duplex.prototype[method2]) Duplex.prototype[method2] = Writable.prototype[method2];
        }
      }
      function Duplex(options2) {
        if (!(this instanceof Duplex)) return new Duplex(options2);
        Readable.call(this, options2);
        Writable.call(this, options2);
        if (options2) {
          this.allowHalfOpen = options2.allowHalfOpen !== false;
          if (options2.readable === false) {
            this._readableState.readable = false;
            this._readableState.ended = true;
            this._readableState.endEmitted = true;
          }
          if (options2.writable === false) {
            this._writableState.writable = false;
            this._writableState.ending = true;
            this._writableState.ended = true;
            this._writableState.finished = true;
          }
        } else {
          this.allowHalfOpen = true;
        }
      }
      ObjectDefineProperties(Duplex.prototype, {
        writable: {
          __proto__: null,
          ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writable")
        },
        writableHighWaterMark: {
          __proto__: null,
          ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableHighWaterMark")
        },
        writableObjectMode: {
          __proto__: null,
          ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableObjectMode")
        },
        writableBuffer: {
          __proto__: null,
          ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableBuffer")
        },
        writableLength: {
          __proto__: null,
          ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableLength")
        },
        writableFinished: {
          __proto__: null,
          ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableFinished")
        },
        writableCorked: {
          __proto__: null,
          ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableCorked")
        },
        writableEnded: {
          __proto__: null,
          ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableEnded")
        },
        writableNeedDrain: {
          __proto__: null,
          ...ObjectGetOwnPropertyDescriptor(Writable.prototype, "writableNeedDrain")
        },
        destroyed: {
          __proto__: null,
          get() {
            if (this._readableState === void 0 || this._writableState === void 0) {
              return false;
            }
            return this._readableState.destroyed && this._writableState.destroyed;
          },
          set(value14) {
            if (this._readableState && this._writableState) {
              this._readableState.destroyed = value14;
              this._writableState.destroyed = value14;
            }
          }
        }
      });
      var webStreamsAdapters;
      function lazyWebStreams() {
        if (webStreamsAdapters === void 0) webStreamsAdapters = {};
        return webStreamsAdapters;
      }
      Duplex.fromWeb = function(pair, options2) {
        return lazyWebStreams().newStreamDuplexFromReadableWritablePair(pair, options2);
      };
      Duplex.toWeb = function(duplex) {
        return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);
      };
      var duplexify;
      Duplex.from = function(body2) {
        if (!duplexify) {
          duplexify = require_duplexify();
        }
        return duplexify(body2, "body");
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/transform.js
  var require_transform = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/transform.js"(exports, module) {
      "use strict";
      var { ObjectSetPrototypeOf, Symbol: Symbol2 } = require_primordials();
      module.exports = Transform;
      var { ERR_METHOD_NOT_IMPLEMENTED } = require_errors().codes;
      var Duplex = require_duplex();
      var { getHighWaterMark } = require_state();
      ObjectSetPrototypeOf(Transform.prototype, Duplex.prototype);
      ObjectSetPrototypeOf(Transform, Duplex);
      var kCallback = Symbol2("kCallback");
      function Transform(options2) {
        if (!(this instanceof Transform)) return new Transform(options2);
        const readableHighWaterMark = options2 ? getHighWaterMark(this, options2, "readableHighWaterMark", true) : null;
        if (readableHighWaterMark === 0) {
          options2 = {
            ...options2,
            highWaterMark: null,
            readableHighWaterMark,
            // TODO (ronag): 0 is not optimal since we have
            // a "bug" where we check needDrain before calling _write and not after.
            // Refs: https://github.com/nodejs/node/pull/32887
            // Refs: https://github.com/nodejs/node/pull/35941
            writableHighWaterMark: options2.writableHighWaterMark || 0
          };
        }
        Duplex.call(this, options2);
        this._readableState.sync = false;
        this[kCallback] = null;
        if (options2) {
          if (typeof options2.transform === "function") this._transform = options2.transform;
          if (typeof options2.flush === "function") this._flush = options2.flush;
        }
        this.on("prefinish", prefinish);
      }
      function final(cb) {
        if (typeof this._flush === "function" && !this.destroyed) {
          this._flush((er, data) => {
            if (er) {
              if (cb) {
                cb(er);
              } else {
                this.destroy(er);
              }
              return;
            }
            if (data != null) {
              this.push(data);
            }
            this.push(null);
            if (cb) {
              cb();
            }
          });
        } else {
          this.push(null);
          if (cb) {
            cb();
          }
        }
      }
      function prefinish() {
        if (this._final !== final) {
          final.call(this);
        }
      }
      Transform.prototype._final = final;
      Transform.prototype._transform = function(chunk, encoding2, callback) {
        throw new ERR_METHOD_NOT_IMPLEMENTED("_transform()");
      };
      Transform.prototype._write = function(chunk, encoding2, callback) {
        const rState = this._readableState;
        const wState = this._writableState;
        const length8 = rState.length;
        this._transform(chunk, encoding2, (err, val2) => {
          if (err) {
            callback(err);
            return;
          }
          if (val2 != null) {
            this.push(val2);
          }
          if (wState.ended || // Backwards compat.
          length8 === rState.length || // Backwards compat.
          rState.length < rState.highWaterMark) {
            callback();
          } else {
            this[kCallback] = callback;
          }
        });
      };
      Transform.prototype._read = function() {
        if (this[kCallback]) {
          const callback = this[kCallback];
          this[kCallback] = null;
          callback();
        }
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/passthrough.js
  var require_passthrough = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/passthrough.js"(exports, module) {
      "use strict";
      var { ObjectSetPrototypeOf } = require_primordials();
      module.exports = PassThrough;
      var Transform = require_transform();
      ObjectSetPrototypeOf(PassThrough.prototype, Transform.prototype);
      ObjectSetPrototypeOf(PassThrough, Transform);
      function PassThrough(options2) {
        if (!(this instanceof PassThrough)) return new PassThrough(options2);
        Transform.call(this, options2);
      }
      PassThrough.prototype._transform = function(chunk, encoding2, cb) {
        cb(null, chunk);
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/pipeline.js
  var require_pipeline = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/pipeline.js"(exports, module) {
      var process2 = require_browser2();
      var { ArrayIsArray, Promise: Promise2, SymbolAsyncIterator, SymbolDispose } = require_primordials();
      var eos = require_end_of_stream();
      var { once } = require_util3();
      var destroyImpl = require_destroy();
      var Duplex = require_duplex();
      var {
        aggregateTwoErrors,
        codes: {
          ERR_INVALID_ARG_TYPE: ERR_INVALID_ARG_TYPE2,
          ERR_INVALID_RETURN_VALUE,
          ERR_MISSING_ARGS,
          ERR_STREAM_DESTROYED,
          ERR_STREAM_PREMATURE_CLOSE
        },
        AbortError
      } = require_errors();
      var { validateFunction, validateAbortSignal } = require_validators();
      var {
        isIterable,
        isReadable,
        isReadableNodeStream,
        isNodeStream,
        isTransformStream,
        isWebStream,
        isReadableStream: isReadableStream2,
        isReadableFinished
      } = require_utils();
      var AbortController2 = globalThis.AbortController || require_browser().AbortController;
      var PassThrough;
      var Readable;
      var addAbortListener;
      function destroyer(stream, reading, writing) {
        let finished = false;
        stream.on("close", () => {
          finished = true;
        });
        const cleanup = eos(
          stream,
          {
            readable: reading,
            writable: writing
          },
          (err) => {
            finished = !err;
          }
        );
        return {
          destroy: (err) => {
            if (finished) return;
            finished = true;
            destroyImpl.destroyer(stream, err || new ERR_STREAM_DESTROYED("pipe"));
          },
          cleanup
        };
      }
      function popCallback(streams) {
        validateFunction(streams[streams.length - 1], "streams[stream.length - 1]");
        return streams.pop();
      }
      function makeAsyncIterable(val2) {
        if (isIterable(val2)) {
          return val2;
        } else if (isReadableNodeStream(val2)) {
          return fromReadable(val2);
        }
        throw new ERR_INVALID_ARG_TYPE2("val", ["Readable", "Iterable", "AsyncIterable"], val2);
      }
      async function* fromReadable(val2) {
        if (!Readable) {
          Readable = require_readable();
        }
        yield* Readable.prototype[SymbolAsyncIterator].call(val2);
      }
      async function pumpToNode(iterable, writable, finish, { end }) {
        let error4;
        let onresolve = null;
        const resume = (err) => {
          if (err) {
            error4 = err;
          }
          if (onresolve) {
            const callback = onresolve;
            onresolve = null;
            callback();
          }
        };
        const wait = () => new Promise2((resolve, reject) => {
          if (error4) {
            reject(error4);
          } else {
            onresolve = () => {
              if (error4) {
                reject(error4);
              } else {
                resolve();
              }
            };
          }
        });
        writable.on("drain", resume);
        const cleanup = eos(
          writable,
          {
            readable: false
          },
          resume
        );
        try {
          if (writable.writableNeedDrain) {
            await wait();
          }
          for await (const chunk of iterable) {
            if (!writable.write(chunk)) {
              await wait();
            }
          }
          if (end) {
            writable.end();
            await wait();
          }
          finish();
        } catch (err) {
          finish(error4 !== err ? aggregateTwoErrors(error4, err) : err);
        } finally {
          cleanup();
          writable.off("drain", resume);
        }
      }
      async function pumpToWeb(readable, writable, finish, { end }) {
        if (isTransformStream(writable)) {
          writable = writable.writable;
        }
        const writer = writable.getWriter();
        try {
          for await (const chunk of readable) {
            await writer.ready;
            writer.write(chunk).catch(() => {
            });
          }
          await writer.ready;
          if (end) {
            await writer.close();
          }
          finish();
        } catch (err) {
          try {
            await writer.abort(err);
            finish(err);
          } catch (err2) {
            finish(err2);
          }
        }
      }
      function pipeline(...streams) {
        return pipelineImpl(streams, once(popCallback(streams)));
      }
      function pipelineImpl(streams, callback, opts) {
        if (streams.length === 1 && ArrayIsArray(streams[0])) {
          streams = streams[0];
        }
        if (streams.length < 2) {
          throw new ERR_MISSING_ARGS("streams");
        }
        const ac = new AbortController2();
        const signal = ac.signal;
        const outerSignal = opts === null || opts === void 0 ? void 0 : opts.signal;
        const lastStreamCleanup = [];
        validateAbortSignal(outerSignal, "options.signal");
        function abort() {
          finishImpl(new AbortError());
        }
        addAbortListener = addAbortListener || require_util3().addAbortListener;
        let disposable;
        if (outerSignal) {
          disposable = addAbortListener(outerSignal, abort);
        }
        let error4;
        let value14;
        const destroys = [];
        let finishCount = 0;
        function finish(err) {
          finishImpl(err, --finishCount === 0);
        }
        function finishImpl(err, final) {
          var _disposable;
          if (err && (!error4 || error4.code === "ERR_STREAM_PREMATURE_CLOSE")) {
            error4 = err;
          }
          if (!error4 && !final) {
            return;
          }
          while (destroys.length) {
            destroys.shift()(error4);
          }
          ;
          (_disposable = disposable) === null || _disposable === void 0 ? void 0 : _disposable[SymbolDispose]();
          ac.abort();
          if (final) {
            if (!error4) {
              lastStreamCleanup.forEach((fn) => fn());
            }
            process2.nextTick(callback, error4, value14);
          }
        }
        let ret;
        for (let i4 = 0; i4 < streams.length; i4++) {
          const stream = streams[i4];
          const reading = i4 < streams.length - 1;
          const writing = i4 > 0;
          const end = reading || (opts === null || opts === void 0 ? void 0 : opts.end) !== false;
          const isLastStream = i4 === streams.length - 1;
          if (isNodeStream(stream)) {
            let onError2 = function(err) {
              if (err && err.name !== "AbortError" && err.code !== "ERR_STREAM_PREMATURE_CLOSE") {
                finish(err);
              }
            };
            var onError = onError2;
            if (end) {
              const { destroy, cleanup } = destroyer(stream, reading, writing);
              destroys.push(destroy);
              if (isReadable(stream) && isLastStream) {
                lastStreamCleanup.push(cleanup);
              }
            }
            stream.on("error", onError2);
            if (isReadable(stream) && isLastStream) {
              lastStreamCleanup.push(() => {
                stream.removeListener("error", onError2);
              });
            }
          }
          if (i4 === 0) {
            if (typeof stream === "function") {
              ret = stream({
                signal
              });
              if (!isIterable(ret)) {
                throw new ERR_INVALID_RETURN_VALUE("Iterable, AsyncIterable or Stream", "source", ret);
              }
            } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {
              ret = stream;
            } else {
              ret = Duplex.from(stream);
            }
          } else if (typeof stream === "function") {
            if (isTransformStream(ret)) {
              var _ret;
              ret = makeAsyncIterable((_ret = ret) === null || _ret === void 0 ? void 0 : _ret.readable);
            } else {
              ret = makeAsyncIterable(ret);
            }
            ret = stream(ret, {
              signal
            });
            if (reading) {
              if (!isIterable(ret, true)) {
                throw new ERR_INVALID_RETURN_VALUE("AsyncIterable", `transform[${i4 - 1}]`, ret);
              }
            } else {
              var _ret2;
              if (!PassThrough) {
                PassThrough = require_passthrough();
              }
              const pt = new PassThrough({
                objectMode: true
              });
              const then = (_ret2 = ret) === null || _ret2 === void 0 ? void 0 : _ret2.then;
              if (typeof then === "function") {
                finishCount++;
                then.call(
                  ret,
                  (val2) => {
                    value14 = val2;
                    if (val2 != null) {
                      pt.write(val2);
                    }
                    if (end) {
                      pt.end();
                    }
                    process2.nextTick(finish);
                  },
                  (err) => {
                    pt.destroy(err);
                    process2.nextTick(finish, err);
                  }
                );
              } else if (isIterable(ret, true)) {
                finishCount++;
                pumpToNode(ret, pt, finish, {
                  end
                });
              } else if (isReadableStream2(ret) || isTransformStream(ret)) {
                const toRead = ret.readable || ret;
                finishCount++;
                pumpToNode(toRead, pt, finish, {
                  end
                });
              } else {
                throw new ERR_INVALID_RETURN_VALUE("AsyncIterable or Promise", "destination", ret);
              }
              ret = pt;
              const { destroy, cleanup } = destroyer(ret, false, true);
              destroys.push(destroy);
              if (isLastStream) {
                lastStreamCleanup.push(cleanup);
              }
            }
          } else if (isNodeStream(stream)) {
            if (isReadableNodeStream(ret)) {
              finishCount += 2;
              const cleanup = pipe(ret, stream, finish, {
                end
              });
              if (isReadable(stream) && isLastStream) {
                lastStreamCleanup.push(cleanup);
              }
            } else if (isTransformStream(ret) || isReadableStream2(ret)) {
              const toRead = ret.readable || ret;
              finishCount++;
              pumpToNode(toRead, stream, finish, {
                end
              });
            } else if (isIterable(ret)) {
              finishCount++;
              pumpToNode(ret, stream, finish, {
                end
              });
            } else {
              throw new ERR_INVALID_ARG_TYPE2(
                "val",
                ["Readable", "Iterable", "AsyncIterable", "ReadableStream", "TransformStream"],
                ret
              );
            }
            ret = stream;
          } else if (isWebStream(stream)) {
            if (isReadableNodeStream(ret)) {
              finishCount++;
              pumpToWeb(makeAsyncIterable(ret), stream, finish, {
                end
              });
            } else if (isReadableStream2(ret) || isIterable(ret)) {
              finishCount++;
              pumpToWeb(ret, stream, finish, {
                end
              });
            } else if (isTransformStream(ret)) {
              finishCount++;
              pumpToWeb(ret.readable, stream, finish, {
                end
              });
            } else {
              throw new ERR_INVALID_ARG_TYPE2(
                "val",
                ["Readable", "Iterable", "AsyncIterable", "ReadableStream", "TransformStream"],
                ret
              );
            }
            ret = stream;
          } else {
            ret = Duplex.from(stream);
          }
        }
        if (signal !== null && signal !== void 0 && signal.aborted || outerSignal !== null && outerSignal !== void 0 && outerSignal.aborted) {
          process2.nextTick(abort);
        }
        return ret;
      }
      function pipe(src9, dst, finish, { end }) {
        let ended2 = false;
        dst.on("close", () => {
          if (!ended2) {
            finish(new ERR_STREAM_PREMATURE_CLOSE());
          }
        });
        src9.pipe(dst, {
          end: false
        });
        if (end) {
          let endFn2 = function() {
            ended2 = true;
            dst.end();
          };
          var endFn = endFn2;
          if (isReadableFinished(src9)) {
            process2.nextTick(endFn2);
          } else {
            src9.once("end", endFn2);
          }
        } else {
          finish();
        }
        eos(
          src9,
          {
            readable: true,
            writable: false
          },
          (err) => {
            const rState = src9._readableState;
            if (err && err.code === "ERR_STREAM_PREMATURE_CLOSE" && rState && rState.ended && !rState.errored && !rState.errorEmitted) {
              src9.once("end", finish).once("error", finish);
            } else {
              finish(err);
            }
          }
        );
        return eos(
          dst,
          {
            readable: false,
            writable: true
          },
          finish
        );
      }
      module.exports = {
        pipelineImpl,
        pipeline
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/compose.js
  var require_compose = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/compose.js"(exports, module) {
      "use strict";
      var { pipeline } = require_pipeline();
      var Duplex = require_duplex();
      var { destroyer } = require_destroy();
      var {
        isNodeStream,
        isReadable,
        isWritable,
        isWebStream,
        isTransformStream,
        isWritableStream,
        isReadableStream: isReadableStream2
      } = require_utils();
      var {
        AbortError,
        codes: { ERR_INVALID_ARG_VALUE, ERR_MISSING_ARGS }
      } = require_errors();
      var eos = require_end_of_stream();
      module.exports = function compose2(...streams) {
        if (streams.length === 0) {
          throw new ERR_MISSING_ARGS("streams");
        }
        if (streams.length === 1) {
          return Duplex.from(streams[0]);
        }
        const orgStreams = [...streams];
        if (typeof streams[0] === "function") {
          streams[0] = Duplex.from(streams[0]);
        }
        if (typeof streams[streams.length - 1] === "function") {
          const idx = streams.length - 1;
          streams[idx] = Duplex.from(streams[idx]);
        }
        for (let n3 = 0; n3 < streams.length; ++n3) {
          if (!isNodeStream(streams[n3]) && !isWebStream(streams[n3])) {
            continue;
          }
          if (n3 < streams.length - 1 && !(isReadable(streams[n3]) || isReadableStream2(streams[n3]) || isTransformStream(streams[n3]))) {
            throw new ERR_INVALID_ARG_VALUE(`streams[${n3}]`, orgStreams[n3], "must be readable");
          }
          if (n3 > 0 && !(isWritable(streams[n3]) || isWritableStream(streams[n3]) || isTransformStream(streams[n3]))) {
            throw new ERR_INVALID_ARG_VALUE(`streams[${n3}]`, orgStreams[n3], "must be writable");
          }
        }
        let ondrain;
        let onfinish;
        let onreadable;
        let onclose;
        let d3;
        function onfinished(err) {
          const cb = onclose;
          onclose = null;
          if (cb) {
            cb(err);
          } else if (err) {
            d3.destroy(err);
          } else if (!readable && !writable) {
            d3.destroy();
          }
        }
        const head3 = streams[0];
        const tail2 = pipeline(streams, onfinished);
        const writable = !!(isWritable(head3) || isWritableStream(head3) || isTransformStream(head3));
        const readable = !!(isReadable(tail2) || isReadableStream2(tail2) || isTransformStream(tail2));
        d3 = new Duplex({
          // TODO (ronag): highWaterMark?
          writableObjectMode: !!(head3 !== null && head3 !== void 0 && head3.writableObjectMode),
          readableObjectMode: !!(tail2 !== null && tail2 !== void 0 && tail2.readableObjectMode),
          writable,
          readable
        });
        if (writable) {
          if (isNodeStream(head3)) {
            d3._write = function(chunk, encoding2, callback) {
              if (head3.write(chunk, encoding2)) {
                callback();
              } else {
                ondrain = callback;
              }
            };
            d3._final = function(callback) {
              head3.end();
              onfinish = callback;
            };
            head3.on("drain", function() {
              if (ondrain) {
                const cb = ondrain;
                ondrain = null;
                cb();
              }
            });
          } else if (isWebStream(head3)) {
            const writable2 = isTransformStream(head3) ? head3.writable : head3;
            const writer = writable2.getWriter();
            d3._write = async function(chunk, encoding2, callback) {
              try {
                await writer.ready;
                writer.write(chunk).catch(() => {
                });
                callback();
              } catch (err) {
                callback(err);
              }
            };
            d3._final = async function(callback) {
              try {
                await writer.ready;
                writer.close().catch(() => {
                });
                onfinish = callback;
              } catch (err) {
                callback(err);
              }
            };
          }
          const toRead = isTransformStream(tail2) ? tail2.readable : tail2;
          eos(toRead, () => {
            if (onfinish) {
              const cb = onfinish;
              onfinish = null;
              cb();
            }
          });
        }
        if (readable) {
          if (isNodeStream(tail2)) {
            tail2.on("readable", function() {
              if (onreadable) {
                const cb = onreadable;
                onreadable = null;
                cb();
              }
            });
            tail2.on("end", function() {
              d3.push(null);
            });
            d3._read = function() {
              while (true) {
                const buf = tail2.read();
                if (buf === null) {
                  onreadable = d3._read;
                  return;
                }
                if (!d3.push(buf)) {
                  return;
                }
              }
            };
          } else if (isWebStream(tail2)) {
            const readable2 = isTransformStream(tail2) ? tail2.readable : tail2;
            const reader = readable2.getReader();
            d3._read = async function() {
              while (true) {
                try {
                  const { value: value14, done } = await reader.read();
                  if (!d3.push(value14)) {
                    return;
                  }
                  if (done) {
                    d3.push(null);
                    return;
                  }
                } catch {
                  return;
                }
              }
            };
          }
        }
        d3._destroy = function(err, callback) {
          if (!err && onclose !== null) {
            err = new AbortError();
          }
          onreadable = null;
          ondrain = null;
          onfinish = null;
          if (onclose === null) {
            callback(err);
          } else {
            onclose = callback;
            if (isNodeStream(tail2)) {
              destroyer(tail2, err);
            }
          }
        };
        return d3;
      };
    }
  });

  // node_modules/readable-stream/lib/internal/streams/operators.js
  var require_operators = __commonJS({
    "node_modules/readable-stream/lib/internal/streams/operators.js"(exports, module) {
      "use strict";
      var AbortController2 = globalThis.AbortController || require_browser().AbortController;
      var {
        codes: { ERR_INVALID_ARG_VALUE, ERR_INVALID_ARG_TYPE: ERR_INVALID_ARG_TYPE2, ERR_MISSING_ARGS, ERR_OUT_OF_RANGE },
        AbortError
      } = require_errors();
      var { validateAbortSignal, validateInteger, validateObject } = require_validators();
      var kWeakHandler = require_primordials().Symbol("kWeak");
      var kResistStopPropagation = require_primordials().Symbol("kResistStopPropagation");
      var { finished } = require_end_of_stream();
      var staticCompose = require_compose();
      var { addAbortSignalNoValidate } = require_add_abort_signal();
      var { isWritable, isNodeStream } = require_utils();
      var { deprecate } = require_util3();
      var {
        ArrayPrototypePush,
        Boolean: Boolean2,
        MathFloor,
        Number: Number2,
        NumberIsNaN,
        Promise: Promise2,
        PromiseReject,
        PromiseResolve,
        PromisePrototypeThen,
        Symbol: Symbol2
      } = require_primordials();
      var kEmpty = Symbol2("kEmpty");
      var kEof = Symbol2("kEof");
      function compose2(stream, options2) {
        if (options2 != null) {
          validateObject(options2, "options");
        }
        if ((options2 === null || options2 === void 0 ? void 0 : options2.signal) != null) {
          validateAbortSignal(options2.signal, "options.signal");
        }
        if (isNodeStream(stream) && !isWritable(stream)) {
          throw new ERR_INVALID_ARG_VALUE("stream", stream, "must be writable");
        }
        const composedStream = staticCompose(this, stream);
        if (options2 !== null && options2 !== void 0 && options2.signal) {
          addAbortSignalNoValidate(options2.signal, composedStream);
        }
        return composedStream;
      }
      function map25(fn, options2) {
        if (typeof fn !== "function") {
          throw new ERR_INVALID_ARG_TYPE2("fn", ["Function", "AsyncFunction"], fn);
        }
        if (options2 != null) {
          validateObject(options2, "options");
        }
        if ((options2 === null || options2 === void 0 ? void 0 : options2.signal) != null) {
          validateAbortSignal(options2.signal, "options.signal");
        }
        let concurrency = 1;
        if ((options2 === null || options2 === void 0 ? void 0 : options2.concurrency) != null) {
          concurrency = MathFloor(options2.concurrency);
        }
        let highWaterMark = concurrency - 1;
        if ((options2 === null || options2 === void 0 ? void 0 : options2.highWaterMark) != null) {
          highWaterMark = MathFloor(options2.highWaterMark);
        }
        validateInteger(concurrency, "options.concurrency", 1);
        validateInteger(highWaterMark, "options.highWaterMark", 0);
        highWaterMark += concurrency;
        return async function* map26() {
          const signal = require_util3().AbortSignalAny(
            [options2 === null || options2 === void 0 ? void 0 : options2.signal].filter(Boolean2)
          );
          const stream = this;
          const queue = [];
          const signalOpt = {
            signal
          };
          let next;
          let resume;
          let done = false;
          let cnt = 0;
          function onCatch() {
            done = true;
            afterItemProcessed();
          }
          function afterItemProcessed() {
            cnt -= 1;
            maybeResume();
          }
          function maybeResume() {
            if (resume && !done && cnt < concurrency && queue.length < highWaterMark) {
              resume();
              resume = null;
            }
          }
          async function pump() {
            try {
              for await (let val2 of stream) {
                if (done) {
                  return;
                }
                if (signal.aborted) {
                  throw new AbortError();
                }
                try {
                  val2 = fn(val2, signalOpt);
                  if (val2 === kEmpty) {
                    continue;
                  }
                  val2 = PromiseResolve(val2);
                } catch (err) {
                  val2 = PromiseReject(err);
                }
                cnt += 1;
                PromisePrototypeThen(val2, afterItemProcessed, onCatch);
                queue.push(val2);
                if (next) {
                  next();
                  next = null;
                }
                if (!done && (queue.length >= highWaterMark || cnt >= concurrency)) {
                  await new Promise2((resolve) => {
                    resume = resolve;
                  });
                }
              }
              queue.push(kEof);
            } catch (err) {
              const val2 = PromiseReject(err);
              PromisePrototypeThen(val2, afterItemProcessed, onCatch);
              queue.push(val2);
            } finally {
              done = true;
              if (next) {
                next();
                next = null;
              }
            }
          }
          pump();
          try {
            while (true) {
              while (queue.length > 0) {
                const val2 = await queue[0];
                if (val2 === kEof) {
                  return;
                }
                if (signal.aborted) {
                  throw new AbortError();
                }
                if (val2 !== kEmpty) {
                  yield val2;
                }
                queue.shift();
                maybeResume();
              }
              await new Promise2((resolve) => {
                next = resolve;
              });
            }
          } finally {
            done = true;
            if (resume) {
              resume();
              resume = null;
            }
          }
        }.call(this);
      }
      function asIndexedPairs(options2 = void 0) {
        if (options2 != null) {
          validateObject(options2, "options");
        }
        if ((options2 === null || options2 === void 0 ? void 0 : options2.signal) != null) {
          validateAbortSignal(options2.signal, "options.signal");
        }
        return async function* asIndexedPairs2() {
          let index4 = 0;
          for await (const val2 of this) {
            var _options$signal;
            if (options2 !== null && options2 !== void 0 && (_options$signal = options2.signal) !== null && _options$signal !== void 0 && _options$signal.aborted) {
              throw new AbortError({
                cause: options2.signal.reason
              });
            }
            yield [index4++, val2];
          }
        }.call(this);
      }
      async function some2(fn, options2 = void 0) {
        for await (const unused of filter3.call(this, fn, options2)) {
          return true;
        }
        return false;
      }
      async function every(fn, options2 = void 0) {
        if (typeof fn !== "function") {
          throw new ERR_INVALID_ARG_TYPE2("fn", ["Function", "AsyncFunction"], fn);
        }
        return !await some2.call(
          this,
          async (...args) => {
            return !await fn(...args);
          },
          options2
        );
      }
      async function find3(fn, options2) {
        for await (const result of filter3.call(this, fn, options2)) {
          return result;
        }
        return void 0;
      }
      async function forEach(fn, options2) {
        if (typeof fn !== "function") {
          throw new ERR_INVALID_ARG_TYPE2("fn", ["Function", "AsyncFunction"], fn);
        }
        async function forEachFn(value14, options3) {
          await fn(value14, options3);
          return kEmpty;
        }
        for await (const unused of map25.call(this, forEachFn, options2)) ;
      }
      function filter3(fn, options2) {
        if (typeof fn !== "function") {
          throw new ERR_INVALID_ARG_TYPE2("fn", ["Function", "AsyncFunction"], fn);
        }
        async function filterFn(value14, options3) {
          if (await fn(value14, options3)) {
            return value14;
          }
          return kEmpty;
        }
        return map25.call(this, filterFn, options2);
      }
      var ReduceAwareErrMissingArgs = class extends ERR_MISSING_ARGS {
        constructor() {
          super("reduce");
          this.message = "Reduce of an empty stream requires an initial value";
        }
      };
      async function reduce(reducer, initialValue, options2) {
        var _options$signal2;
        if (typeof reducer !== "function") {
          throw new ERR_INVALID_ARG_TYPE2("reducer", ["Function", "AsyncFunction"], reducer);
        }
        if (options2 != null) {
          validateObject(options2, "options");
        }
        if ((options2 === null || options2 === void 0 ? void 0 : options2.signal) != null) {
          validateAbortSignal(options2.signal, "options.signal");
        }
        let hasInitialValue = arguments.length > 1;
        if (options2 !== null && options2 !== void 0 && (_options$signal2 = options2.signal) !== null && _options$signal2 !== void 0 && _options$signal2.aborted) {
          const err = new AbortError(void 0, {
            cause: options2.signal.reason
          });
          this.once("error", () => {
          });
          await finished(this.destroy(err));
          throw err;
        }
        const ac = new AbortController2();
        const signal = ac.signal;
        if (options2 !== null && options2 !== void 0 && options2.signal) {
          const opts = {
            once: true,
            [kWeakHandler]: this,
            [kResistStopPropagation]: true
          };
          options2.signal.addEventListener("abort", () => ac.abort(), opts);
        }
        let gotAnyItemFromStream = false;
        try {
          for await (const value14 of this) {
            var _options$signal3;
            gotAnyItemFromStream = true;
            if (options2 !== null && options2 !== void 0 && (_options$signal3 = options2.signal) !== null && _options$signal3 !== void 0 && _options$signal3.aborted) {
              throw new AbortError();
            }
            if (!hasInitialValue) {
              initialValue = value14;
              hasInitialValue = true;
            } else {
              initialValue = await reducer(initialValue, value14, {
                signal
              });
            }
          }
          if (!gotAnyItemFromStream && !hasInitialValue) {
            throw new ReduceAwareErrMissingArgs();
          }
        } finally {
          ac.abort();
        }
        return initialValue;
      }
      async function toArray3(options2) {
        if (options2 != null) {
          validateObject(options2, "options");
        }
        if ((options2 === null || options2 === void 0 ? void 0 : options2.signal) != null) {
          validateAbortSignal(options2.signal, "options.signal");
        }
        const result = [];
        for await (const val2 of this) {
          var _options$signal4;
          if (options2 !== null && options2 !== void 0 && (_options$signal4 = options2.signal) !== null && _options$signal4 !== void 0 && _options$signal4.aborted) {
            throw new AbortError(void 0, {
              cause: options2.signal.reason
            });
          }
          ArrayPrototypePush(result, val2);
        }
        return result;
      }
      function flatMap(fn, options2) {
        const values = map25.call(this, fn, options2);
        return async function* flatMap2() {
          for await (const val2 of values) {
            yield* val2;
          }
        }.call(this);
      }
      function toIntegerOrInfinity(number) {
        number = Number2(number);
        if (NumberIsNaN(number)) {
          return 0;
        }
        if (number < 0) {
          throw new ERR_OUT_OF_RANGE("number", ">= 0", number);
        }
        return number;
      }
      function drop5(number, options2 = void 0) {
        if (options2 != null) {
          validateObject(options2, "options");
        }
        if ((options2 === null || options2 === void 0 ? void 0 : options2.signal) != null) {
          validateAbortSignal(options2.signal, "options.signal");
        }
        number = toIntegerOrInfinity(number);
        return async function* drop6() {
          var _options$signal5;
          if (options2 !== null && options2 !== void 0 && (_options$signal5 = options2.signal) !== null && _options$signal5 !== void 0 && _options$signal5.aborted) {
            throw new AbortError();
          }
          for await (const val2 of this) {
            var _options$signal6;
            if (options2 !== null && options2 !== void 0 && (_options$signal6 = options2.signal) !== null && _options$signal6 !== void 0 && _options$signal6.aborted) {
              throw new AbortError();
            }
            if (number-- <= 0) {
              yield val2;
            }
          }
        }.call(this);
      }
      function take5(number, options2 = void 0) {
        if (options2 != null) {
          validateObject(options2, "options");
        }
        if ((options2 === null || options2 === void 0 ? void 0 : options2.signal) != null) {
          validateAbortSignal(options2.signal, "options.signal");
        }
        number = toIntegerOrInfinity(number);
        return async function* take6() {
          var _options$signal7;
          if (options2 !== null && options2 !== void 0 && (_options$signal7 = options2.signal) !== null && _options$signal7 !== void 0 && _options$signal7.aborted) {
            throw new AbortError();
          }
          for await (const val2 of this) {
            var _options$signal8;
            if (options2 !== null && options2 !== void 0 && (_options$signal8 = options2.signal) !== null && _options$signal8 !== void 0 && _options$signal8.aborted) {
              throw new AbortError();
            }
            if (number-- > 0) {
              yield val2;
            }
            if (number <= 0) {
              return;
            }
          }
        }.call(this);
      }
      module.exports.streamReturningOperators = {
        asIndexedPairs: deprecate(asIndexedPairs, "readable.asIndexedPairs will be removed in a future version."),
        drop: drop5,
        filter: filter3,
        flatMap,
        map: map25,
        take: take5,
        compose: compose2
      };
      module.exports.promiseReturningOperators = {
        every,
        forEach,
        reduce,
        toArray: toArray3,
        some: some2,
        find: find3
      };
    }
  });

  // node_modules/readable-stream/lib/stream/promises.js
  var require_promises = __commonJS({
    "node_modules/readable-stream/lib/stream/promises.js"(exports, module) {
      "use strict";
      var { ArrayPrototypePop, Promise: Promise2 } = require_primordials();
      var { isIterable, isNodeStream, isWebStream } = require_utils();
      var { pipelineImpl: pl } = require_pipeline();
      var { finished } = require_end_of_stream();
      require_stream2();
      function pipeline(...streams) {
        return new Promise2((resolve, reject) => {
          let signal;
          let end;
          const lastArg = streams[streams.length - 1];
          if (lastArg && typeof lastArg === "object" && !isNodeStream(lastArg) && !isIterable(lastArg) && !isWebStream(lastArg)) {
            const options2 = ArrayPrototypePop(streams);
            signal = options2.signal;
            end = options2.end;
          }
          pl(
            streams,
            (err, value14) => {
              if (err) {
                reject(err);
              } else {
                resolve(value14);
              }
            },
            {
              signal,
              end
            }
          );
        });
      }
      module.exports = {
        finished,
        pipeline
      };
    }
  });

  // node_modules/readable-stream/lib/stream.js
  var require_stream2 = __commonJS({
    "node_modules/readable-stream/lib/stream.js"(exports, module) {
      var { Buffer: Buffer2 } = require_buffer();
      var { ObjectDefineProperty, ObjectKeys, ReflectApply } = require_primordials();
      var {
        promisify: { custom: customPromisify }
      } = require_util3();
      var { streamReturningOperators, promiseReturningOperators } = require_operators();
      var {
        codes: { ERR_ILLEGAL_CONSTRUCTOR }
      } = require_errors();
      var compose2 = require_compose();
      var { setDefaultHighWaterMark, getDefaultHighWaterMark } = require_state();
      var { pipeline } = require_pipeline();
      var { destroyer } = require_destroy();
      var eos = require_end_of_stream();
      var promises = require_promises();
      var utils = require_utils();
      var Stream = module.exports = require_legacy().Stream;
      Stream.isDestroyed = utils.isDestroyed;
      Stream.isDisturbed = utils.isDisturbed;
      Stream.isErrored = utils.isErrored;
      Stream.isReadable = utils.isReadable;
      Stream.isWritable = utils.isWritable;
      Stream.Readable = require_readable();
      for (const key2 of ObjectKeys(streamReturningOperators)) {
        let fn2 = function(...args) {
          if (new.target) {
            throw ERR_ILLEGAL_CONSTRUCTOR();
          }
          return Stream.Readable.from(ReflectApply(op, this, args));
        };
        fn = fn2;
        const op = streamReturningOperators[key2];
        ObjectDefineProperty(fn2, "name", {
          __proto__: null,
          value: op.name
        });
        ObjectDefineProperty(fn2, "length", {
          __proto__: null,
          value: op.length
        });
        ObjectDefineProperty(Stream.Readable.prototype, key2, {
          __proto__: null,
          value: fn2,
          enumerable: false,
          configurable: true,
          writable: true
        });
      }
      var fn;
      for (const key2 of ObjectKeys(promiseReturningOperators)) {
        let fn2 = function(...args) {
          if (new.target) {
            throw ERR_ILLEGAL_CONSTRUCTOR();
          }
          return ReflectApply(op, this, args);
        };
        fn = fn2;
        const op = promiseReturningOperators[key2];
        ObjectDefineProperty(fn2, "name", {
          __proto__: null,
          value: op.name
        });
        ObjectDefineProperty(fn2, "length", {
          __proto__: null,
          value: op.length
        });
        ObjectDefineProperty(Stream.Readable.prototype, key2, {
          __proto__: null,
          value: fn2,
          enumerable: false,
          configurable: true,
          writable: true
        });
      }
      var fn;
      Stream.Writable = require_writable();
      Stream.Duplex = require_duplex();
      Stream.Transform = require_transform();
      Stream.PassThrough = require_passthrough();
      Stream.pipeline = pipeline;
      var { addAbortSignal } = require_add_abort_signal();
      Stream.addAbortSignal = addAbortSignal;
      Stream.finished = eos;
      Stream.destroy = destroyer;
      Stream.compose = compose2;
      Stream.setDefaultHighWaterMark = setDefaultHighWaterMark;
      Stream.getDefaultHighWaterMark = getDefaultHighWaterMark;
      ObjectDefineProperty(Stream, "promises", {
        __proto__: null,
        configurable: true,
        enumerable: true,
        get() {
          return promises;
        }
      });
      ObjectDefineProperty(pipeline, customPromisify, {
        __proto__: null,
        enumerable: true,
        get() {
          return promises.pipeline;
        }
      });
      ObjectDefineProperty(eos, customPromisify, {
        __proto__: null,
        enumerable: true,
        get() {
          return promises.finished;
        }
      });
      Stream.Stream = Stream;
      Stream._isUint8Array = function isUint8Array(value14) {
        return value14 instanceof Uint8Array;
      };
      Stream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {
        return Buffer2.from(chunk.buffer, chunk.byteOffset, chunk.byteLength);
      };
    }
  });

  // node_modules/readable-stream/lib/ours/browser.js
  var require_browser3 = __commonJS({
    "node_modules/readable-stream/lib/ours/browser.js"(exports, module) {
      "use strict";
      var CustomStream = require_stream2();
      var promises = require_promises();
      var originalDestroy = CustomStream.Readable.destroy;
      module.exports = CustomStream.Readable;
      module.exports._uint8ArrayToBuffer = CustomStream._uint8ArrayToBuffer;
      module.exports._isUint8Array = CustomStream._isUint8Array;
      module.exports.isDisturbed = CustomStream.isDisturbed;
      module.exports.isErrored = CustomStream.isErrored;
      module.exports.isReadable = CustomStream.isReadable;
      module.exports.Readable = CustomStream.Readable;
      module.exports.Writable = CustomStream.Writable;
      module.exports.Duplex = CustomStream.Duplex;
      module.exports.Transform = CustomStream.Transform;
      module.exports.PassThrough = CustomStream.PassThrough;
      module.exports.addAbortSignal = CustomStream.addAbortSignal;
      module.exports.finished = CustomStream.finished;
      module.exports.destroy = CustomStream.destroy;
      module.exports.destroy = originalDestroy;
      module.exports.pipeline = CustomStream.pipeline;
      module.exports.compose = CustomStream.compose;
      Object.defineProperty(CustomStream, "promises", {
        configurable: true,
        enumerable: true,
        get() {
          return promises;
        }
      });
      module.exports.Stream = CustomStream.Stream;
      module.exports.default = module.exports;
    }
  });

  // node_modules/es-errors/index.js
  var require_es_errors = __commonJS({
    "node_modules/es-errors/index.js"(exports, module) {
      "use strict";
      module.exports = Error;
    }
  });

  // node_modules/es-errors/eval.js
  var require_eval = __commonJS({
    "node_modules/es-errors/eval.js"(exports, module) {
      "use strict";
      module.exports = EvalError;
    }
  });

  // node_modules/es-errors/range.js
  var require_range = __commonJS({
    "node_modules/es-errors/range.js"(exports, module) {
      "use strict";
      module.exports = RangeError;
    }
  });

  // node_modules/es-errors/ref.js
  var require_ref = __commonJS({
    "node_modules/es-errors/ref.js"(exports, module) {
      "use strict";
      module.exports = ReferenceError;
    }
  });

  // node_modules/es-errors/syntax.js
  var require_syntax = __commonJS({
    "node_modules/es-errors/syntax.js"(exports, module) {
      "use strict";
      module.exports = SyntaxError;
    }
  });

  // node_modules/es-errors/type.js
  var require_type = __commonJS({
    "node_modules/es-errors/type.js"(exports, module) {
      "use strict";
      module.exports = TypeError;
    }
  });

  // node_modules/es-errors/uri.js
  var require_uri2 = __commonJS({
    "node_modules/es-errors/uri.js"(exports, module) {
      "use strict";
      module.exports = URIError;
    }
  });

  // node_modules/has-symbols/shams.js
  var require_shams = __commonJS({
    "node_modules/has-symbols/shams.js"(exports, module) {
      "use strict";
      module.exports = function hasSymbols() {
        if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
          return false;
        }
        if (typeof Symbol.iterator === "symbol") {
          return true;
        }
        var obj = {};
        var sym = Symbol("test");
        var symObj = Object(sym);
        if (typeof sym === "string") {
          return false;
        }
        if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
          return false;
        }
        if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
          return false;
        }
        var symVal = 42;
        obj[sym] = symVal;
        for (sym in obj) {
          return false;
        }
        if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
          return false;
        }
        if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
          return false;
        }
        var syms = Object.getOwnPropertySymbols(obj);
        if (syms.length !== 1 || syms[0] !== sym) {
          return false;
        }
        if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
          return false;
        }
        if (typeof Object.getOwnPropertyDescriptor === "function") {
          var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
          if (descriptor.value !== symVal || descriptor.enumerable !== true) {
            return false;
          }
        }
        return true;
      };
    }
  });

  // node_modules/has-symbols/index.js
  var require_has_symbols = __commonJS({
    "node_modules/has-symbols/index.js"(exports, module) {
      "use strict";
      var origSymbol = typeof Symbol !== "undefined" && Symbol;
      var hasSymbolSham = require_shams();
      module.exports = function hasNativeSymbols() {
        if (typeof origSymbol !== "function") {
          return false;
        }
        if (typeof Symbol !== "function") {
          return false;
        }
        if (typeof origSymbol("foo") !== "symbol") {
          return false;
        }
        if (typeof Symbol("bar") !== "symbol") {
          return false;
        }
        return hasSymbolSham();
      };
    }
  });

  // node_modules/has-proto/index.js
  var require_has_proto = __commonJS({
    "node_modules/has-proto/index.js"(exports, module) {
      "use strict";
      var test = {
        __proto__: null,
        foo: {}
      };
      var $Object = Object;
      module.exports = function hasProto() {
        return { __proto__: test }.foo === test.foo && !(test instanceof $Object);
      };
    }
  });

  // node_modules/function-bind/implementation.js
  var require_implementation = __commonJS({
    "node_modules/function-bind/implementation.js"(exports, module) {
      "use strict";
      var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
      var toStr = Object.prototype.toString;
      var max6 = Math.max;
      var funcType = "[object Function]";
      var concatty = function concatty2(a4, b4) {
        var arr = [];
        for (var i4 = 0; i4 < a4.length; i4 += 1) {
          arr[i4] = a4[i4];
        }
        for (var j3 = 0; j3 < b4.length; j3 += 1) {
          arr[j3 + a4.length] = b4[j3];
        }
        return arr;
      };
      var slicy = function slicy2(arrLike, offset) {
        var arr = [];
        for (var i4 = offset || 0, j3 = 0; i4 < arrLike.length; i4 += 1, j3 += 1) {
          arr[j3] = arrLike[i4];
        }
        return arr;
      };
      var joiny = function(arr, joiner) {
        var str = "";
        for (var i4 = 0; i4 < arr.length; i4 += 1) {
          str += arr[i4];
          if (i4 + 1 < arr.length) {
            str += joiner;
          }
        }
        return str;
      };
      module.exports = function bind9(that) {
        var target6 = this;
        if (typeof target6 !== "function" || toStr.apply(target6) !== funcType) {
          throw new TypeError(ERROR_MESSAGE + target6);
        }
        var args = slicy(arguments, 1);
        var bound;
        var binder = function() {
          if (this instanceof bound) {
            var result = target6.apply(
              this,
              concatty(args, arguments)
            );
            if (Object(result) === result) {
              return result;
            }
            return this;
          }
          return target6.apply(
            that,
            concatty(args, arguments)
          );
        };
        var boundLength = max6(0, target6.length - args.length);
        var boundArgs = [];
        for (var i4 = 0; i4 < boundLength; i4++) {
          boundArgs[i4] = "$" + i4;
        }
        bound = Function("binder", "return function (" + joiny(boundArgs, ",") + "){ return binder.apply(this,arguments); }")(binder);
        if (target6.prototype) {
          var Empty2 = function Empty3() {
          };
          Empty2.prototype = target6.prototype;
          bound.prototype = new Empty2();
          Empty2.prototype = null;
        }
        return bound;
      };
    }
  });

  // node_modules/function-bind/index.js
  var require_function_bind = __commonJS({
    "node_modules/function-bind/index.js"(exports, module) {
      "use strict";
      var implementation = require_implementation();
      module.exports = Function.prototype.bind || implementation;
    }
  });

  // node_modules/hasown/index.js
  var require_hasown = __commonJS({
    "node_modules/hasown/index.js"(exports, module) {
      "use strict";
      var call = Function.prototype.call;
      var $hasOwn = Object.prototype.hasOwnProperty;
      var bind9 = require_function_bind();
      module.exports = bind9.call(call, $hasOwn);
    }
  });

  // node_modules/get-intrinsic/index.js
  var require_get_intrinsic = __commonJS({
    "node_modules/get-intrinsic/index.js"(exports, module) {
      "use strict";
      var undefined2;
      var $Error = require_es_errors();
      var $EvalError = require_eval();
      var $RangeError = require_range();
      var $ReferenceError = require_ref();
      var $SyntaxError = require_syntax();
      var $TypeError = require_type();
      var $URIError = require_uri2();
      var $Function = Function;
      var getEvalledConstructor = function(expressionSyntax) {
        try {
          return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
        } catch (e3) {
        }
      };
      var $gOPD = Object.getOwnPropertyDescriptor;
      if ($gOPD) {
        try {
          $gOPD({}, "");
        } catch (e3) {
          $gOPD = null;
        }
      }
      var throwTypeError = function() {
        throw new $TypeError();
      };
      var ThrowTypeError = $gOPD ? function() {
        try {
          arguments.callee;
          return throwTypeError;
        } catch (calleeThrows) {
          try {
            return $gOPD(arguments, "callee").get;
          } catch (gOPDthrows) {
            return throwTypeError;
          }
        }
      }() : throwTypeError;
      var hasSymbols = require_has_symbols()();
      var hasProto = require_has_proto()();
      var getProto = Object.getPrototypeOf || (hasProto ? function(x2) {
        return x2.__proto__;
      } : null);
      var needsEval = {};
      var TypedArray = typeof Uint8Array === "undefined" || !getProto ? undefined2 : getProto(Uint8Array);
      var INTRINSICS = {
        __proto__: null,
        "%AggregateError%": typeof AggregateError === "undefined" ? undefined2 : AggregateError,
        "%Array%": Array,
        "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined2 : ArrayBuffer,
        "%ArrayIteratorPrototype%": hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined2,
        "%AsyncFromSyncIteratorPrototype%": undefined2,
        "%AsyncFunction%": needsEval,
        "%AsyncGenerator%": needsEval,
        "%AsyncGeneratorFunction%": needsEval,
        "%AsyncIteratorPrototype%": needsEval,
        "%Atomics%": typeof Atomics === "undefined" ? undefined2 : Atomics,
        "%BigInt%": typeof BigInt === "undefined" ? undefined2 : BigInt,
        "%BigInt64Array%": typeof BigInt64Array === "undefined" ? undefined2 : BigInt64Array,
        "%BigUint64Array%": typeof BigUint64Array === "undefined" ? undefined2 : BigUint64Array,
        "%Boolean%": Boolean,
        "%DataView%": typeof DataView === "undefined" ? undefined2 : DataView,
        "%Date%": Date,
        "%decodeURI%": decodeURI,
        "%decodeURIComponent%": decodeURIComponent,
        "%encodeURI%": encodeURI,
        "%encodeURIComponent%": encodeURIComponent,
        "%Error%": $Error,
        "%eval%": eval,
        // eslint-disable-line no-eval
        "%EvalError%": $EvalError,
        "%Float32Array%": typeof Float32Array === "undefined" ? undefined2 : Float32Array,
        "%Float64Array%": typeof Float64Array === "undefined" ? undefined2 : Float64Array,
        "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined2 : FinalizationRegistry,
        "%Function%": $Function,
        "%GeneratorFunction%": needsEval,
        "%Int8Array%": typeof Int8Array === "undefined" ? undefined2 : Int8Array,
        "%Int16Array%": typeof Int16Array === "undefined" ? undefined2 : Int16Array,
        "%Int32Array%": typeof Int32Array === "undefined" ? undefined2 : Int32Array,
        "%isFinite%": isFinite,
        "%isNaN%": isNaN,
        "%IteratorPrototype%": hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined2,
        "%JSON%": typeof JSON === "object" ? JSON : undefined2,
        "%Map%": typeof Map === "undefined" ? undefined2 : Map,
        "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Map())[Symbol.iterator]()),
        "%Math%": Math,
        "%Number%": Number,
        "%Object%": Object,
        "%parseFloat%": parseFloat,
        "%parseInt%": parseInt,
        "%Promise%": typeof Promise === "undefined" ? undefined2 : Promise,
        "%Proxy%": typeof Proxy === "undefined" ? undefined2 : Proxy,
        "%RangeError%": $RangeError,
        "%ReferenceError%": $ReferenceError,
        "%Reflect%": typeof Reflect === "undefined" ? undefined2 : Reflect,
        "%RegExp%": RegExp,
        "%Set%": typeof Set === "undefined" ? undefined2 : Set,
        "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Set())[Symbol.iterator]()),
        "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined2 : SharedArrayBuffer,
        "%String%": String,
        "%StringIteratorPrototype%": hasSymbols && getProto ? getProto(""[Symbol.iterator]()) : undefined2,
        "%Symbol%": hasSymbols ? Symbol : undefined2,
        "%SyntaxError%": $SyntaxError,
        "%ThrowTypeError%": ThrowTypeError,
        "%TypedArray%": TypedArray,
        "%TypeError%": $TypeError,
        "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined2 : Uint8Array,
        "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined2 : Uint8ClampedArray,
        "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined2 : Uint16Array,
        "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined2 : Uint32Array,
        "%URIError%": $URIError,
        "%WeakMap%": typeof WeakMap === "undefined" ? undefined2 : WeakMap,
        "%WeakRef%": typeof WeakRef === "undefined" ? undefined2 : WeakRef,
        "%WeakSet%": typeof WeakSet === "undefined" ? undefined2 : WeakSet
      };
      if (getProto) {
        try {
          null.error;
        } catch (e3) {
          errorProto = getProto(getProto(e3));
          INTRINSICS["%Error.prototype%"] = errorProto;
        }
      }
      var errorProto;
      var doEval = function doEval2(name15) {
        var value14;
        if (name15 === "%AsyncFunction%") {
          value14 = getEvalledConstructor("async function () {}");
        } else if (name15 === "%GeneratorFunction%") {
          value14 = getEvalledConstructor("function* () {}");
        } else if (name15 === "%AsyncGeneratorFunction%") {
          value14 = getEvalledConstructor("async function* () {}");
        } else if (name15 === "%AsyncGenerator%") {
          var fn = doEval2("%AsyncGeneratorFunction%");
          if (fn) {
            value14 = fn.prototype;
          }
        } else if (name15 === "%AsyncIteratorPrototype%") {
          var gen = doEval2("%AsyncGenerator%");
          if (gen && getProto) {
            value14 = getProto(gen.prototype);
          }
        }
        INTRINSICS[name15] = value14;
        return value14;
      };
      var LEGACY_ALIASES = {
        __proto__: null,
        "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
        "%ArrayPrototype%": ["Array", "prototype"],
        "%ArrayProto_entries%": ["Array", "prototype", "entries"],
        "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
        "%ArrayProto_keys%": ["Array", "prototype", "keys"],
        "%ArrayProto_values%": ["Array", "prototype", "values"],
        "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
        "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
        "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
        "%BooleanPrototype%": ["Boolean", "prototype"],
        "%DataViewPrototype%": ["DataView", "prototype"],
        "%DatePrototype%": ["Date", "prototype"],
        "%ErrorPrototype%": ["Error", "prototype"],
        "%EvalErrorPrototype%": ["EvalError", "prototype"],
        "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
        "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
        "%FunctionPrototype%": ["Function", "prototype"],
        "%Generator%": ["GeneratorFunction", "prototype"],
        "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
        "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
        "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
        "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
        "%JSONParse%": ["JSON", "parse"],
        "%JSONStringify%": ["JSON", "stringify"],
        "%MapPrototype%": ["Map", "prototype"],
        "%NumberPrototype%": ["Number", "prototype"],
        "%ObjectPrototype%": ["Object", "prototype"],
        "%ObjProto_toString%": ["Object", "prototype", "toString"],
        "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
        "%PromisePrototype%": ["Promise", "prototype"],
        "%PromiseProto_then%": ["Promise", "prototype", "then"],
        "%Promise_all%": ["Promise", "all"],
        "%Promise_reject%": ["Promise", "reject"],
        "%Promise_resolve%": ["Promise", "resolve"],
        "%RangeErrorPrototype%": ["RangeError", "prototype"],
        "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
        "%RegExpPrototype%": ["RegExp", "prototype"],
        "%SetPrototype%": ["Set", "prototype"],
        "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
        "%StringPrototype%": ["String", "prototype"],
        "%SymbolPrototype%": ["Symbol", "prototype"],
        "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
        "%TypedArrayPrototype%": ["TypedArray", "prototype"],
        "%TypeErrorPrototype%": ["TypeError", "prototype"],
        "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
        "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
        "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
        "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
        "%URIErrorPrototype%": ["URIError", "prototype"],
        "%WeakMapPrototype%": ["WeakMap", "prototype"],
        "%WeakSetPrototype%": ["WeakSet", "prototype"]
      };
      var bind9 = require_function_bind();
      var hasOwn = require_hasown();
      var $concat = bind9.call(Function.call, Array.prototype.concat);
      var $spliceApply = bind9.call(Function.apply, Array.prototype.splice);
      var $replace = bind9.call(Function.call, String.prototype.replace);
      var $strSlice = bind9.call(Function.call, String.prototype.slice);
      var $exec = bind9.call(Function.call, RegExp.prototype.exec);
      var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
      var reEscapeChar = /\\(\\)?/g;
      var stringToPath = function stringToPath2(string) {
        var first = $strSlice(string, 0, 1);
        var last3 = $strSlice(string, -1);
        if (first === "%" && last3 !== "%") {
          throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
        } else if (last3 === "%" && first !== "%") {
          throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
        }
        var result = [];
        $replace(string, rePropName, function(match4, number, quote, subString) {
          result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number || match4;
        });
        return result;
      };
      var getBaseIntrinsic = function getBaseIntrinsic2(name15, allowMissing) {
        var intrinsicName = name15;
        var alias;
        if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
          alias = LEGACY_ALIASES[intrinsicName];
          intrinsicName = "%" + alias[0] + "%";
        }
        if (hasOwn(INTRINSICS, intrinsicName)) {
          var value14 = INTRINSICS[intrinsicName];
          if (value14 === needsEval) {
            value14 = doEval(intrinsicName);
          }
          if (typeof value14 === "undefined" && !allowMissing) {
            throw new $TypeError("intrinsic " + name15 + " exists, but is not available. Please file an issue!");
          }
          return {
            alias,
            name: intrinsicName,
            value: value14
          };
        }
        throw new $SyntaxError("intrinsic " + name15 + " does not exist!");
      };
      module.exports = function GetIntrinsic(name15, allowMissing) {
        if (typeof name15 !== "string" || name15.length === 0) {
          throw new $TypeError("intrinsic name must be a non-empty string");
        }
        if (arguments.length > 1 && typeof allowMissing !== "boolean") {
          throw new $TypeError('"allowMissing" argument must be a boolean');
        }
        if ($exec(/^%?[^%]*%?$/, name15) === null) {
          throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
        }
        var parts = stringToPath(name15);
        var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
        var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
        var intrinsicRealName = intrinsic.name;
        var value14 = intrinsic.value;
        var skipFurtherCaching = false;
        var alias = intrinsic.alias;
        if (alias) {
          intrinsicBaseName = alias[0];
          $spliceApply(parts, $concat([0, 1], alias));
        }
        for (var i4 = 1, isOwn = true; i4 < parts.length; i4 += 1) {
          var part = parts[i4];
          var first = $strSlice(part, 0, 1);
          var last3 = $strSlice(part, -1);
          if ((first === '"' || first === "'" || first === "`" || (last3 === '"' || last3 === "'" || last3 === "`")) && first !== last3) {
            throw new $SyntaxError("property names with quotes must have matching quotes");
          }
          if (part === "constructor" || !isOwn) {
            skipFurtherCaching = true;
          }
          intrinsicBaseName += "." + part;
          intrinsicRealName = "%" + intrinsicBaseName + "%";
          if (hasOwn(INTRINSICS, intrinsicRealName)) {
            value14 = INTRINSICS[intrinsicRealName];
          } else if (value14 != null) {
            if (!(part in value14)) {
              if (!allowMissing) {
                throw new $TypeError("base intrinsic for " + name15 + " exists, but the property is not available.");
              }
              return void 0;
            }
            if ($gOPD && i4 + 1 >= parts.length) {
              var desc = $gOPD(value14, part);
              isOwn = !!desc;
              if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
                value14 = desc.get;
              } else {
                value14 = value14[part];
              }
            } else {
              isOwn = hasOwn(value14, part);
              value14 = value14[part];
            }
            if (isOwn && !skipFurtherCaching) {
              INTRINSICS[intrinsicRealName] = value14;
            }
          }
        }
        return value14;
      };
    }
  });

  // node_modules/es-define-property/index.js
  var require_es_define_property = __commonJS({
    "node_modules/es-define-property/index.js"(exports, module) {
      "use strict";
      var GetIntrinsic = require_get_intrinsic();
      var $defineProperty = GetIntrinsic("%Object.defineProperty%", true) || false;
      if ($defineProperty) {
        try {
          $defineProperty({}, "a", { value: 1 });
        } catch (e3) {
          $defineProperty = false;
        }
      }
      module.exports = $defineProperty;
    }
  });

  // node_modules/gopd/index.js
  var require_gopd = __commonJS({
    "node_modules/gopd/index.js"(exports, module) {
      "use strict";
      var GetIntrinsic = require_get_intrinsic();
      var $gOPD = GetIntrinsic("%Object.getOwnPropertyDescriptor%", true);
      if ($gOPD) {
        try {
          $gOPD([], "length");
        } catch (e3) {
          $gOPD = null;
        }
      }
      module.exports = $gOPD;
    }
  });

  // node_modules/define-data-property/index.js
  var require_define_data_property = __commonJS({
    "node_modules/define-data-property/index.js"(exports, module) {
      "use strict";
      var $defineProperty = require_es_define_property();
      var $SyntaxError = require_syntax();
      var $TypeError = require_type();
      var gopd = require_gopd();
      module.exports = function defineDataProperty(obj, property, value14) {
        if (!obj || typeof obj !== "object" && typeof obj !== "function") {
          throw new $TypeError("`obj` must be an object or a function`");
        }
        if (typeof property !== "string" && typeof property !== "symbol") {
          throw new $TypeError("`property` must be a string or a symbol`");
        }
        if (arguments.length > 3 && typeof arguments[3] !== "boolean" && arguments[3] !== null) {
          throw new $TypeError("`nonEnumerable`, if provided, must be a boolean or null");
        }
        if (arguments.length > 4 && typeof arguments[4] !== "boolean" && arguments[4] !== null) {
          throw new $TypeError("`nonWritable`, if provided, must be a boolean or null");
        }
        if (arguments.length > 5 && typeof arguments[5] !== "boolean" && arguments[5] !== null) {
          throw new $TypeError("`nonConfigurable`, if provided, must be a boolean or null");
        }
        if (arguments.length > 6 && typeof arguments[6] !== "boolean") {
          throw new $TypeError("`loose`, if provided, must be a boolean");
        }
        var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
        var nonWritable = arguments.length > 4 ? arguments[4] : null;
        var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
        var loose = arguments.length > 6 ? arguments[6] : false;
        var desc = !!gopd && gopd(obj, property);
        if ($defineProperty) {
          $defineProperty(obj, property, {
            configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
            enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
            value: value14,
            writable: nonWritable === null && desc ? desc.writable : !nonWritable
          });
        } else if (loose || !nonEnumerable && !nonWritable && !nonConfigurable) {
          obj[property] = value14;
        } else {
          throw new $SyntaxError("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
        }
      };
    }
  });

  // node_modules/has-property-descriptors/index.js
  var require_has_property_descriptors = __commonJS({
    "node_modules/has-property-descriptors/index.js"(exports, module) {
      "use strict";
      var $defineProperty = require_es_define_property();
      var hasPropertyDescriptors = function hasPropertyDescriptors2() {
        return !!$defineProperty;
      };
      hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
        if (!$defineProperty) {
          return null;
        }
        try {
          return $defineProperty([], "length", { value: 1 }).length !== 1;
        } catch (e3) {
          return true;
        }
      };
      module.exports = hasPropertyDescriptors;
    }
  });

  // node_modules/set-function-length/index.js
  var require_set_function_length = __commonJS({
    "node_modules/set-function-length/index.js"(exports, module) {
      "use strict";
      var GetIntrinsic = require_get_intrinsic();
      var define2 = require_define_data_property();
      var hasDescriptors = require_has_property_descriptors()();
      var gOPD = require_gopd();
      var $TypeError = require_type();
      var $floor = GetIntrinsic("%Math.floor%");
      module.exports = function setFunctionLength(fn, length8) {
        if (typeof fn !== "function") {
          throw new $TypeError("`fn` is not a function");
        }
        if (typeof length8 !== "number" || length8 < 0 || length8 > 4294967295 || $floor(length8) !== length8) {
          throw new $TypeError("`length` must be a positive 32-bit integer");
        }
        var loose = arguments.length > 2 && !!arguments[2];
        var functionLengthIsConfigurable = true;
        var functionLengthIsWritable = true;
        if ("length" in fn && gOPD) {
          var desc = gOPD(fn, "length");
          if (desc && !desc.configurable) {
            functionLengthIsConfigurable = false;
          }
          if (desc && !desc.writable) {
            functionLengthIsWritable = false;
          }
        }
        if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
          if (hasDescriptors) {
            define2(
              /** @type {Parameters<define>[0]} */
              fn,
              "length",
              length8,
              true,
              true
            );
          } else {
            define2(
              /** @type {Parameters<define>[0]} */
              fn,
              "length",
              length8
            );
          }
        }
        return fn;
      };
    }
  });

  // node_modules/call-bind/index.js
  var require_call_bind = __commonJS({
    "node_modules/call-bind/index.js"(exports, module) {
      "use strict";
      var bind9 = require_function_bind();
      var GetIntrinsic = require_get_intrinsic();
      var setFunctionLength = require_set_function_length();
      var $TypeError = require_type();
      var $apply = GetIntrinsic("%Function.prototype.apply%");
      var $call = GetIntrinsic("%Function.prototype.call%");
      var $reflectApply = GetIntrinsic("%Reflect.apply%", true) || bind9.call($call, $apply);
      var $defineProperty = require_es_define_property();
      var $max = GetIntrinsic("%Math.max%");
      module.exports = function callBind(originalFunction) {
        if (typeof originalFunction !== "function") {
          throw new $TypeError("a function is required");
        }
        var func = $reflectApply(bind9, $call, arguments);
        return setFunctionLength(
          func,
          1 + $max(0, originalFunction.length - (arguments.length - 1)),
          true
        );
      };
      var applyBind = function applyBind2() {
        return $reflectApply(bind9, $apply, arguments);
      };
      if ($defineProperty) {
        $defineProperty(module.exports, "apply", { value: applyBind });
      } else {
        module.exports.apply = applyBind;
      }
    }
  });

  // node_modules/call-bind/callBound.js
  var require_callBound = __commonJS({
    "node_modules/call-bind/callBound.js"(exports, module) {
      "use strict";
      var GetIntrinsic = require_get_intrinsic();
      var callBind = require_call_bind();
      var $indexOf = callBind(GetIntrinsic("String.prototype.indexOf"));
      module.exports = function callBoundIntrinsic(name15, allowMissing) {
        var intrinsic = GetIntrinsic(name15, !!allowMissing);
        if (typeof intrinsic === "function" && $indexOf(name15, ".prototype.") > -1) {
          return callBind(intrinsic);
        }
        return intrinsic;
      };
    }
  });

  // (disabled):node_modules/object-inspect/util.inspect
  var require_util4 = __commonJS({
    "(disabled):node_modules/object-inspect/util.inspect"() {
    }
  });

  // node_modules/object-inspect/index.js
  var require_object_inspect = __commonJS({
    "node_modules/object-inspect/index.js"(exports, module) {
      var hasMap = typeof Map === "function" && Map.prototype;
      var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null;
      var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === "function" ? mapSizeDescriptor.get : null;
      var mapForEach = hasMap && Map.prototype.forEach;
      var hasSet = typeof Set === "function" && Set.prototype;
      var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null;
      var setSize3 = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === "function" ? setSizeDescriptor.get : null;
      var setForEach = hasSet && Set.prototype.forEach;
      var hasWeakMap = typeof WeakMap === "function" && WeakMap.prototype;
      var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
      var hasWeakSet = typeof WeakSet === "function" && WeakSet.prototype;
      var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
      var hasWeakRef = typeof WeakRef === "function" && WeakRef.prototype;
      var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
      var booleanValueOf = Boolean.prototype.valueOf;
      var objectToString = Object.prototype.toString;
      var functionToString = Function.prototype.toString;
      var $match = String.prototype.match;
      var $slice = String.prototype.slice;
      var $replace = String.prototype.replace;
      var $toUpperCase = String.prototype.toUpperCase;
      var $toLowerCase = String.prototype.toLowerCase;
      var $test = RegExp.prototype.test;
      var $concat = Array.prototype.concat;
      var $join = Array.prototype.join;
      var $arrSlice = Array.prototype.slice;
      var $floor = Math.floor;
      var bigIntValueOf = typeof BigInt === "function" ? BigInt.prototype.valueOf : null;
      var gOPS = Object.getOwnPropertySymbols;
      var symToString = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol.prototype.toString : null;
      var hasShammedSymbols = typeof Symbol === "function" && typeof Symbol.iterator === "object";
      var toStringTag = typeof Symbol === "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? "object" : "symbol") ? Symbol.toStringTag : null;
      var isEnumerable = Object.prototype.propertyIsEnumerable;
      var gPO = (typeof Reflect === "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(O) {
        return O.__proto__;
      } : null);
      function addNumericSeparator(num, str) {
        if (num === Infinity || num === -Infinity || num !== num || num && num > -1e3 && num < 1e3 || $test.call(/e/, str)) {
          return str;
        }
        var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
        if (typeof num === "number") {
          var int = num < 0 ? -$floor(-num) : $floor(num);
          if (int !== num) {
            var intStr = String(int);
            var dec = $slice.call(str, intStr.length + 1);
            return $replace.call(intStr, sepRegex, "$&_") + "." + $replace.call($replace.call(dec, /([0-9]{3})/g, "$&_"), /_$/, "");
          }
        }
        return $replace.call(str, sepRegex, "$&_");
      }
      var utilInspect = require_util4();
      var inspectCustom = utilInspect.custom;
      var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
      module.exports = function inspect_(obj, options2, depth, seen) {
        var opts = options2 || {};
        if (has(opts, "quoteStyle") && (opts.quoteStyle !== "single" && opts.quoteStyle !== "double")) {
          throw new TypeError('option "quoteStyle" must be "single" or "double"');
        }
        if (has(opts, "maxStringLength") && (typeof opts.maxStringLength === "number" ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity : opts.maxStringLength !== null)) {
          throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
        }
        var customInspect = has(opts, "customInspect") ? opts.customInspect : true;
        if (typeof customInspect !== "boolean" && customInspect !== "symbol") {
          throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
        }
        if (has(opts, "indent") && opts.indent !== null && opts.indent !== "	" && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)) {
          throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
        }
        if (has(opts, "numericSeparator") && typeof opts.numericSeparator !== "boolean") {
          throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
        }
        var numericSeparator = opts.numericSeparator;
        if (typeof obj === "undefined") {
          return "undefined";
        }
        if (obj === null) {
          return "null";
        }
        if (typeof obj === "boolean") {
          return obj ? "true" : "false";
        }
        if (typeof obj === "string") {
          return inspectString(obj, opts);
        }
        if (typeof obj === "number") {
          if (obj === 0) {
            return Infinity / obj > 0 ? "0" : "-0";
          }
          var str = String(obj);
          return numericSeparator ? addNumericSeparator(obj, str) : str;
        }
        if (typeof obj === "bigint") {
          var bigIntStr = String(obj) + "n";
          return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
        }
        var maxDepth = typeof opts.depth === "undefined" ? 5 : opts.depth;
        if (typeof depth === "undefined") {
          depth = 0;
        }
        if (depth >= maxDepth && maxDepth > 0 && typeof obj === "object") {
          return isArray2(obj) ? "[Array]" : "[Object]";
        }
        var indent2 = getIndent(opts, depth);
        if (typeof seen === "undefined") {
          seen = [];
        } else if (indexOf2(seen, obj) >= 0) {
          return "[Circular]";
        }
        function inspect(value14, from3, noIndent) {
          if (from3) {
            seen = $arrSlice.call(seen);
            seen.push(from3);
          }
          if (noIndent) {
            var newOpts = {
              depth: opts.depth
            };
            if (has(opts, "quoteStyle")) {
              newOpts.quoteStyle = opts.quoteStyle;
            }
            return inspect_(value14, newOpts, depth + 1, seen);
          }
          return inspect_(value14, opts, depth + 1, seen);
        }
        if (typeof obj === "function" && !isRegExp(obj)) {
          var name15 = nameOf(obj);
          var keys3 = arrObjKeys(obj, inspect);
          return "[Function" + (name15 ? ": " + name15 : " (anonymous)") + "]" + (keys3.length > 0 ? " { " + $join.call(keys3, ", ") + " }" : "");
        }
        if (isSymbol(obj)) {
          var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, "$1") : symToString.call(obj);
          return typeof obj === "object" && !hasShammedSymbols ? markBoxed(symString) : symString;
        }
        if (isElement(obj)) {
          var s3 = "<" + $toLowerCase.call(String(obj.nodeName));
          var attrs = obj.attributes || [];
          for (var i4 = 0; i4 < attrs.length; i4++) {
            s3 += " " + attrs[i4].name + "=" + wrapQuotes(quote(attrs[i4].value), "double", opts);
          }
          s3 += ">";
          if (obj.childNodes && obj.childNodes.length) {
            s3 += "...";
          }
          s3 += "</" + $toLowerCase.call(String(obj.nodeName)) + ">";
          return s3;
        }
        if (isArray2(obj)) {
          if (obj.length === 0) {
            return "[]";
          }
          var xs = arrObjKeys(obj, inspect);
          if (indent2 && !singleLineValues(xs)) {
            return "[" + indentedJoin(xs, indent2) + "]";
          }
          return "[ " + $join.call(xs, ", ") + " ]";
        }
        if (isError(obj)) {
          var parts = arrObjKeys(obj, inspect);
          if (!("cause" in Error.prototype) && "cause" in obj && !isEnumerable.call(obj, "cause")) {
            return "{ [" + String(obj) + "] " + $join.call($concat.call("[cause]: " + inspect(obj.cause), parts), ", ") + " }";
          }
          if (parts.length === 0) {
            return "[" + String(obj) + "]";
          }
          return "{ [" + String(obj) + "] " + $join.call(parts, ", ") + " }";
        }
        if (typeof obj === "object" && customInspect) {
          if (inspectSymbol && typeof obj[inspectSymbol] === "function" && utilInspect) {
            return utilInspect(obj, { depth: maxDepth - depth });
          } else if (customInspect !== "symbol" && typeof obj.inspect === "function") {
            return obj.inspect();
          }
        }
        if (isMap2(obj)) {
          var mapParts = [];
          if (mapForEach) {
            mapForEach.call(obj, function(value14, key2) {
              mapParts.push(inspect(key2, obj, true) + " => " + inspect(value14, obj));
            });
          }
          return collectionOf("Map", mapSize.call(obj), mapParts, indent2);
        }
        if (isSet2(obj)) {
          var setParts = [];
          if (setForEach) {
            setForEach.call(obj, function(value14) {
              setParts.push(inspect(value14, obj));
            });
          }
          return collectionOf("Set", setSize3.call(obj), setParts, indent2);
        }
        if (isWeakMap(obj)) {
          return weakCollectionOf("WeakMap");
        }
        if (isWeakSet(obj)) {
          return weakCollectionOf("WeakSet");
        }
        if (isWeakRef(obj)) {
          return weakCollectionOf("WeakRef");
        }
        if (isNumber(obj)) {
          return markBoxed(inspect(Number(obj)));
        }
        if (isBigInt(obj)) {
          return markBoxed(inspect(bigIntValueOf.call(obj)));
        }
        if (isBoolean(obj)) {
          return markBoxed(booleanValueOf.call(obj));
        }
        if (isString(obj)) {
          return markBoxed(inspect(String(obj)));
        }
        if (typeof window !== "undefined" && obj === window) {
          return "{ [object Window] }";
        }
        if (typeof globalThis !== "undefined" && obj === globalThis || typeof global !== "undefined" && obj === global) {
          return "{ [object globalThis] }";
        }
        if (!isDate(obj) && !isRegExp(obj)) {
          var ys = arrObjKeys(obj, inspect);
          var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
          var protoTag = obj instanceof Object ? "" : "null prototype";
          var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? "Object" : "";
          var constructorTag = isPlainObject || typeof obj.constructor !== "function" ? "" : obj.constructor.name ? obj.constructor.name + " " : "";
          var tag = constructorTag + (stringTag || protoTag ? "[" + $join.call($concat.call([], stringTag || [], protoTag || []), ": ") + "] " : "");
          if (ys.length === 0) {
            return tag + "{}";
          }
          if (indent2) {
            return tag + "{" + indentedJoin(ys, indent2) + "}";
          }
          return tag + "{ " + $join.call(ys, ", ") + " }";
        }
        return String(obj);
      };
      function wrapQuotes(s3, defaultStyle, opts) {
        var quoteChar = (opts.quoteStyle || defaultStyle) === "double" ? '"' : "'";
        return quoteChar + s3 + quoteChar;
      }
      function quote(s3) {
        return $replace.call(String(s3), /"/g, "&quot;");
      }
      function isArray2(obj) {
        return toStr(obj) === "[object Array]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
      }
      function isDate(obj) {
        return toStr(obj) === "[object Date]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
      }
      function isRegExp(obj) {
        return toStr(obj) === "[object RegExp]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
      }
      function isError(obj) {
        return toStr(obj) === "[object Error]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
      }
      function isString(obj) {
        return toStr(obj) === "[object String]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
      }
      function isNumber(obj) {
        return toStr(obj) === "[object Number]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
      }
      function isBoolean(obj) {
        return toStr(obj) === "[object Boolean]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
      }
      function isSymbol(obj) {
        if (hasShammedSymbols) {
          return obj && typeof obj === "object" && obj instanceof Symbol;
        }
        if (typeof obj === "symbol") {
          return true;
        }
        if (!obj || typeof obj !== "object" || !symToString) {
          return false;
        }
        try {
          symToString.call(obj);
          return true;
        } catch (e3) {
        }
        return false;
      }
      function isBigInt(obj) {
        if (!obj || typeof obj !== "object" || !bigIntValueOf) {
          return false;
        }
        try {
          bigIntValueOf.call(obj);
          return true;
        } catch (e3) {
        }
        return false;
      }
      var hasOwn = Object.prototype.hasOwnProperty || function(key2) {
        return key2 in this;
      };
      function has(obj, key2) {
        return hasOwn.call(obj, key2);
      }
      function toStr(obj) {
        return objectToString.call(obj);
      }
      function nameOf(f3) {
        if (f3.name) {
          return f3.name;
        }
        var m3 = $match.call(functionToString.call(f3), /^function\s*([\w$]+)/);
        if (m3) {
          return m3[1];
        }
        return null;
      }
      function indexOf2(xs, x2) {
        if (xs.indexOf) {
          return xs.indexOf(x2);
        }
        for (var i4 = 0, l3 = xs.length; i4 < l3; i4++) {
          if (xs[i4] === x2) {
            return i4;
          }
        }
        return -1;
      }
      function isMap2(x2) {
        if (!mapSize || !x2 || typeof x2 !== "object") {
          return false;
        }
        try {
          mapSize.call(x2);
          try {
            setSize3.call(x2);
          } catch (s3) {
            return true;
          }
          return x2 instanceof Map;
        } catch (e3) {
        }
        return false;
      }
      function isWeakMap(x2) {
        if (!weakMapHas || !x2 || typeof x2 !== "object") {
          return false;
        }
        try {
          weakMapHas.call(x2, weakMapHas);
          try {
            weakSetHas.call(x2, weakSetHas);
          } catch (s3) {
            return true;
          }
          return x2 instanceof WeakMap;
        } catch (e3) {
        }
        return false;
      }
      function isWeakRef(x2) {
        if (!weakRefDeref || !x2 || typeof x2 !== "object") {
          return false;
        }
        try {
          weakRefDeref.call(x2);
          return true;
        } catch (e3) {
        }
        return false;
      }
      function isSet2(x2) {
        if (!setSize3 || !x2 || typeof x2 !== "object") {
          return false;
        }
        try {
          setSize3.call(x2);
          try {
            mapSize.call(x2);
          } catch (m3) {
            return true;
          }
          return x2 instanceof Set;
        } catch (e3) {
        }
        return false;
      }
      function isWeakSet(x2) {
        if (!weakSetHas || !x2 || typeof x2 !== "object") {
          return false;
        }
        try {
          weakSetHas.call(x2, weakSetHas);
          try {
            weakMapHas.call(x2, weakMapHas);
          } catch (s3) {
            return true;
          }
          return x2 instanceof WeakSet;
        } catch (e3) {
        }
        return false;
      }
      function isElement(x2) {
        if (!x2 || typeof x2 !== "object") {
          return false;
        }
        if (typeof HTMLElement !== "undefined" && x2 instanceof HTMLElement) {
          return true;
        }
        return typeof x2.nodeName === "string" && typeof x2.getAttribute === "function";
      }
      function inspectString(str, opts) {
        if (str.length > opts.maxStringLength) {
          var remaining = str.length - opts.maxStringLength;
          var trailer = "... " + remaining + " more character" + (remaining > 1 ? "s" : "");
          return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
        }
        var s3 = $replace.call($replace.call(str, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, lowbyte);
        return wrapQuotes(s3, "single", opts);
      }
      function lowbyte(c3) {
        var n3 = c3.charCodeAt(0);
        var x2 = {
          8: "b",
          9: "t",
          10: "n",
          12: "f",
          13: "r"
        }[n3];
        if (x2) {
          return "\\" + x2;
        }
        return "\\x" + (n3 < 16 ? "0" : "") + $toUpperCase.call(n3.toString(16));
      }
      function markBoxed(str) {
        return "Object(" + str + ")";
      }
      function weakCollectionOf(type) {
        return type + " { ? }";
      }
      function collectionOf(type, size5, entries, indent2) {
        var joinedEntries = indent2 ? indentedJoin(entries, indent2) : $join.call(entries, ", ");
        return type + " (" + size5 + ") {" + joinedEntries + "}";
      }
      function singleLineValues(xs) {
        for (var i4 = 0; i4 < xs.length; i4++) {
          if (indexOf2(xs[i4], "\n") >= 0) {
            return false;
          }
        }
        return true;
      }
      function getIndent(opts, depth) {
        var baseIndent;
        if (opts.indent === "	") {
          baseIndent = "	";
        } else if (typeof opts.indent === "number" && opts.indent > 0) {
          baseIndent = $join.call(Array(opts.indent + 1), " ");
        } else {
          return null;
        }
        return {
          base: baseIndent,
          prev: $join.call(Array(depth + 1), baseIndent)
        };
      }
      function indentedJoin(xs, indent2) {
        if (xs.length === 0) {
          return "";
        }
        var lineJoiner = "\n" + indent2.prev + indent2.base;
        return lineJoiner + $join.call(xs, "," + lineJoiner) + "\n" + indent2.prev;
      }
      function arrObjKeys(obj, inspect) {
        var isArr = isArray2(obj);
        var xs = [];
        if (isArr) {
          xs.length = obj.length;
          for (var i4 = 0; i4 < obj.length; i4++) {
            xs[i4] = has(obj, i4) ? inspect(obj[i4], obj) : "";
          }
        }
        var syms = typeof gOPS === "function" ? gOPS(obj) : [];
        var symMap;
        if (hasShammedSymbols) {
          symMap = {};
          for (var k3 = 0; k3 < syms.length; k3++) {
            symMap["$" + syms[k3]] = syms[k3];
          }
        }
        for (var key2 in obj) {
          if (!has(obj, key2)) {
            continue;
          }
          if (isArr && String(Number(key2)) === key2 && key2 < obj.length) {
            continue;
          }
          if (hasShammedSymbols && symMap["$" + key2] instanceof Symbol) {
            continue;
          } else if ($test.call(/[^\w$]/, key2)) {
            xs.push(inspect(key2, obj) + ": " + inspect(obj[key2], obj));
          } else {
            xs.push(key2 + ": " + inspect(obj[key2], obj));
          }
        }
        if (typeof gOPS === "function") {
          for (var j3 = 0; j3 < syms.length; j3++) {
            if (isEnumerable.call(obj, syms[j3])) {
              xs.push("[" + inspect(syms[j3]) + "]: " + inspect(obj[syms[j3]], obj));
            }
          }
        }
        return xs;
      }
    }
  });

  // node_modules/side-channel/index.js
  var require_side_channel = __commonJS({
    "node_modules/side-channel/index.js"(exports, module) {
      "use strict";
      var GetIntrinsic = require_get_intrinsic();
      var callBound = require_callBound();
      var inspect = require_object_inspect();
      var $TypeError = require_type();
      var $WeakMap = GetIntrinsic("%WeakMap%", true);
      var $Map = GetIntrinsic("%Map%", true);
      var $weakMapGet = callBound("WeakMap.prototype.get", true);
      var $weakMapSet = callBound("WeakMap.prototype.set", true);
      var $weakMapHas = callBound("WeakMap.prototype.has", true);
      var $mapGet = callBound("Map.prototype.get", true);
      var $mapSet = callBound("Map.prototype.set", true);
      var $mapHas = callBound("Map.prototype.has", true);
      var listGetNode = function(list, key2) {
        var prev = list;
        var curr;
        for (; (curr = prev.next) !== null; prev = curr) {
          if (curr.key === key2) {
            prev.next = curr.next;
            curr.next = /** @type {NonNullable<typeof list.next>} */
            list.next;
            list.next = curr;
            return curr;
          }
        }
      };
      var listGet = function(objects, key2) {
        var node = listGetNode(objects, key2);
        return node && node.value;
      };
      var listSet = function(objects, key2, value14) {
        var node = listGetNode(objects, key2);
        if (node) {
          node.value = value14;
        } else {
          objects.next = /** @type {import('.').ListNode<typeof value>} */
          {
            // eslint-disable-line no-param-reassign, no-extra-parens
            key: key2,
            next: objects.next,
            value: value14
          };
        }
      };
      var listHas = function(objects, key2) {
        return !!listGetNode(objects, key2);
      };
      module.exports = function getSideChannel() {
        var $wm;
        var $m;
        var $o;
        var channel = {
          assert: function(key2) {
            if (!channel.has(key2)) {
              throw new $TypeError("Side channel does not contain " + inspect(key2));
            }
          },
          get: function(key2) {
            if ($WeakMap && key2 && (typeof key2 === "object" || typeof key2 === "function")) {
              if ($wm) {
                return $weakMapGet($wm, key2);
              }
            } else if ($Map) {
              if ($m) {
                return $mapGet($m, key2);
              }
            } else {
              if ($o) {
                return listGet($o, key2);
              }
            }
          },
          has: function(key2) {
            if ($WeakMap && key2 && (typeof key2 === "object" || typeof key2 === "function")) {
              if ($wm) {
                return $weakMapHas($wm, key2);
              }
            } else if ($Map) {
              if ($m) {
                return $mapHas($m, key2);
              }
            } else {
              if ($o) {
                return listHas($o, key2);
              }
            }
            return false;
          },
          set: function(key2, value14) {
            if ($WeakMap && key2 && (typeof key2 === "object" || typeof key2 === "function")) {
              if (!$wm) {
                $wm = new $WeakMap();
              }
              $weakMapSet($wm, key2, value14);
            } else if ($Map) {
              if (!$m) {
                $m = new $Map();
              }
              $mapSet($m, key2, value14);
            } else {
              if (!$o) {
                $o = { key: {}, next: null };
              }
              listSet($o, key2, value14);
            }
          }
        };
        return channel;
      };
    }
  });

  // node_modules/qs/lib/formats.js
  var require_formats = __commonJS({
    "node_modules/qs/lib/formats.js"(exports, module) {
      "use strict";
      var replace3 = String.prototype.replace;
      var percentTwenties = /%20/g;
      var Format = {
        RFC1738: "RFC1738",
        RFC3986: "RFC3986"
      };
      module.exports = {
        "default": Format.RFC3986,
        formatters: {
          RFC1738: function(value14) {
            return replace3.call(value14, percentTwenties, "+");
          },
          RFC3986: function(value14) {
            return String(value14);
          }
        },
        RFC1738: Format.RFC1738,
        RFC3986: Format.RFC3986
      };
    }
  });

  // node_modules/qs/lib/utils.js
  var require_utils2 = __commonJS({
    "node_modules/qs/lib/utils.js"(exports, module) {
      "use strict";
      var formats = require_formats();
      var has = Object.prototype.hasOwnProperty;
      var isArray2 = Array.isArray;
      var hexTable = function() {
        var array = [];
        for (var i4 = 0; i4 < 256; ++i4) {
          array.push("%" + ((i4 < 16 ? "0" : "") + i4.toString(16)).toUpperCase());
        }
        return array;
      }();
      var compactQueue = function compactQueue2(queue) {
        while (queue.length > 1) {
          var item = queue.pop();
          var obj = item.obj[item.prop];
          if (isArray2(obj)) {
            var compacted = [];
            for (var j3 = 0; j3 < obj.length; ++j3) {
              if (typeof obj[j3] !== "undefined") {
                compacted.push(obj[j3]);
              }
            }
            item.obj[item.prop] = compacted;
          }
        }
      };
      var arrayToObject = function arrayToObject2(source2, options2) {
        var obj = options2 && options2.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
        for (var i4 = 0; i4 < source2.length; ++i4) {
          if (typeof source2[i4] !== "undefined") {
            obj[i4] = source2[i4];
          }
        }
        return obj;
      };
      var merge = function merge2(target6, source2, options2) {
        if (!source2) {
          return target6;
        }
        if (typeof source2 !== "object") {
          if (isArray2(target6)) {
            target6.push(source2);
          } else if (target6 && typeof target6 === "object") {
            if (options2 && (options2.plainObjects || options2.allowPrototypes) || !has.call(Object.prototype, source2)) {
              target6[source2] = true;
            }
          } else {
            return [target6, source2];
          }
          return target6;
        }
        if (!target6 || typeof target6 !== "object") {
          return [target6].concat(source2);
        }
        var mergeTarget = target6;
        if (isArray2(target6) && !isArray2(source2)) {
          mergeTarget = arrayToObject(target6, options2);
        }
        if (isArray2(target6) && isArray2(source2)) {
          source2.forEach(function(item, i4) {
            if (has.call(target6, i4)) {
              var targetItem = target6[i4];
              if (targetItem && typeof targetItem === "object" && item && typeof item === "object") {
                target6[i4] = merge2(targetItem, item, options2);
              } else {
                target6.push(item);
              }
            } else {
              target6[i4] = item;
            }
          });
          return target6;
        }
        return Object.keys(source2).reduce(function(acc, key2) {
          var value14 = source2[key2];
          if (has.call(acc, key2)) {
            acc[key2] = merge2(acc[key2], value14, options2);
          } else {
            acc[key2] = value14;
          }
          return acc;
        }, mergeTarget);
      };
      var assign2 = function assignSingleSource(target6, source2) {
        return Object.keys(source2).reduce(function(acc, key2) {
          acc[key2] = source2[key2];
          return acc;
        }, target6);
      };
      var decode = function(str, decoder, charset2) {
        var strWithoutPlus = str.replace(/\+/g, " ");
        if (charset2 === "iso-8859-1") {
          return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
        }
        try {
          return decodeURIComponent(strWithoutPlus);
        } catch (e3) {
          return strWithoutPlus;
        }
      };
      var encode = function encode2(str, defaultEncoder, charset2, kind2, format) {
        if (str.length === 0) {
          return str;
        }
        var string = str;
        if (typeof str === "symbol") {
          string = Symbol.prototype.toString.call(str);
        } else if (typeof str !== "string") {
          string = String(str);
        }
        if (charset2 === "iso-8859-1") {
          return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {
            return "%26%23" + parseInt($0.slice(2), 16) + "%3B";
          });
        }
        var out = "";
        for (var i4 = 0; i4 < string.length; ++i4) {
          var c3 = string.charCodeAt(i4);
          if (c3 === 45 || c3 === 46 || c3 === 95 || c3 === 126 || c3 >= 48 && c3 <= 57 || c3 >= 65 && c3 <= 90 || c3 >= 97 && c3 <= 122 || format === formats.RFC1738 && (c3 === 40 || c3 === 41)) {
            out += string.charAt(i4);
            continue;
          }
          if (c3 < 128) {
            out = out + hexTable[c3];
            continue;
          }
          if (c3 < 2048) {
            out = out + (hexTable[192 | c3 >> 6] + hexTable[128 | c3 & 63]);
            continue;
          }
          if (c3 < 55296 || c3 >= 57344) {
            out = out + (hexTable[224 | c3 >> 12] + hexTable[128 | c3 >> 6 & 63] + hexTable[128 | c3 & 63]);
            continue;
          }
          i4 += 1;
          c3 = 65536 + ((c3 & 1023) << 10 | string.charCodeAt(i4) & 1023);
          out += hexTable[240 | c3 >> 18] + hexTable[128 | c3 >> 12 & 63] + hexTable[128 | c3 >> 6 & 63] + hexTable[128 | c3 & 63];
        }
        return out;
      };
      var compact = function compact2(value14) {
        var queue = [{ obj: { o: value14 }, prop: "o" }];
        var refs = [];
        for (var i4 = 0; i4 < queue.length; ++i4) {
          var item = queue[i4];
          var obj = item.obj[item.prop];
          var keys3 = Object.keys(obj);
          for (var j3 = 0; j3 < keys3.length; ++j3) {
            var key2 = keys3[j3];
            var val2 = obj[key2];
            if (typeof val2 === "object" && val2 !== null && refs.indexOf(val2) === -1) {
              queue.push({ obj, prop: key2 });
              refs.push(val2);
            }
          }
        }
        compactQueue(queue);
        return value14;
      };
      var isRegExp = function isRegExp2(obj) {
        return Object.prototype.toString.call(obj) === "[object RegExp]";
      };
      var isBuffer = function isBuffer2(obj) {
        if (!obj || typeof obj !== "object") {
          return false;
        }
        return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
      };
      var combine = function combine2(a4, b4) {
        return [].concat(a4, b4);
      };
      var maybeMap = function maybeMap2(val2, fn) {
        if (isArray2(val2)) {
          var mapped = [];
          for (var i4 = 0; i4 < val2.length; i4 += 1) {
            mapped.push(fn(val2[i4]));
          }
          return mapped;
        }
        return fn(val2);
      };
      module.exports = {
        arrayToObject,
        assign: assign2,
        combine,
        compact,
        decode,
        encode,
        isBuffer,
        isRegExp,
        maybeMap,
        merge
      };
    }
  });

  // node_modules/qs/lib/stringify.js
  var require_stringify = __commonJS({
    "node_modules/qs/lib/stringify.js"(exports, module) {
      "use strict";
      var getSideChannel = require_side_channel();
      var utils = require_utils2();
      var formats = require_formats();
      var has = Object.prototype.hasOwnProperty;
      var arrayPrefixGenerators = {
        brackets: function brackets(prefix) {
          return prefix + "[]";
        },
        comma: "comma",
        indices: function indices(prefix, key2) {
          return prefix + "[" + key2 + "]";
        },
        repeat: function repeat2(prefix) {
          return prefix;
        }
      };
      var isArray2 = Array.isArray;
      var push2 = Array.prototype.push;
      var pushToArray = function(arr, valueOrArray) {
        push2.apply(arr, isArray2(valueOrArray) ? valueOrArray : [valueOrArray]);
      };
      var toISO = Date.prototype.toISOString;
      var defaultFormat = formats["default"];
      var defaults = {
        addQueryPrefix: false,
        allowDots: false,
        charset: "utf-8",
        charsetSentinel: false,
        delimiter: "&",
        encode: true,
        encoder: utils.encode,
        encodeValuesOnly: false,
        format: defaultFormat,
        formatter: formats.formatters[defaultFormat],
        // deprecated
        indices: false,
        serializeDate: function serializeDate(date) {
          return toISO.call(date);
        },
        skipNulls: false,
        strictNullHandling: false
      };
      var isNonNullishPrimitive = function isNonNullishPrimitive2(v3) {
        return typeof v3 === "string" || typeof v3 === "number" || typeof v3 === "boolean" || typeof v3 === "symbol" || typeof v3 === "bigint";
      };
      var sentinel = {};
      var stringify2 = function stringify3(object2, prefix, generateArrayPrefix, commaRoundTrip, strictNullHandling, skipNulls, encoder, filter3, sort2, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset2, sideChannel) {
        var obj = object2;
        var tmpSc = sideChannel;
        var step3 = 0;
        var findFlag = false;
        while ((tmpSc = tmpSc.get(sentinel)) !== void 0 && !findFlag) {
          var pos = tmpSc.get(object2);
          step3 += 1;
          if (typeof pos !== "undefined") {
            if (pos === step3) {
              throw new RangeError("Cyclic object value");
            } else {
              findFlag = true;
            }
          }
          if (typeof tmpSc.get(sentinel) === "undefined") {
            step3 = 0;
          }
        }
        if (typeof filter3 === "function") {
          obj = filter3(prefix, obj);
        } else if (obj instanceof Date) {
          obj = serializeDate(obj);
        } else if (generateArrayPrefix === "comma" && isArray2(obj)) {
          obj = utils.maybeMap(obj, function(value15) {
            if (value15 instanceof Date) {
              return serializeDate(value15);
            }
            return value15;
          });
        }
        if (obj === null) {
          if (strictNullHandling) {
            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset2, "key", format) : prefix;
          }
          obj = "";
        }
        if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
          if (encoder) {
            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset2, "key", format);
            return [formatter(keyValue) + "=" + formatter(encoder(obj, defaults.encoder, charset2, "value", format))];
          }
          return [formatter(prefix) + "=" + formatter(String(obj))];
        }
        var values = [];
        if (typeof obj === "undefined") {
          return values;
        }
        var objKeys;
        if (generateArrayPrefix === "comma" && isArray2(obj)) {
          if (encodeValuesOnly && encoder) {
            obj = utils.maybeMap(obj, encoder);
          }
          objKeys = [{ value: obj.length > 0 ? obj.join(",") || null : void 0 }];
        } else if (isArray2(filter3)) {
          objKeys = filter3;
        } else {
          var keys3 = Object.keys(obj);
          objKeys = sort2 ? keys3.sort(sort2) : keys3;
        }
        var adjustedPrefix = commaRoundTrip && isArray2(obj) && obj.length === 1 ? prefix + "[]" : prefix;
        for (var j3 = 0; j3 < objKeys.length; ++j3) {
          var key2 = objKeys[j3];
          var value14 = typeof key2 === "object" && typeof key2.value !== "undefined" ? key2.value : obj[key2];
          if (skipNulls && value14 === null) {
            continue;
          }
          var keyPrefix = isArray2(obj) ? typeof generateArrayPrefix === "function" ? generateArrayPrefix(adjustedPrefix, key2) : adjustedPrefix : adjustedPrefix + (allowDots ? "." + key2 : "[" + key2 + "]");
          sideChannel.set(object2, step3);
          var valueSideChannel = getSideChannel();
          valueSideChannel.set(sentinel, sideChannel);
          pushToArray(values, stringify3(
            value14,
            keyPrefix,
            generateArrayPrefix,
            commaRoundTrip,
            strictNullHandling,
            skipNulls,
            generateArrayPrefix === "comma" && encodeValuesOnly && isArray2(obj) ? null : encoder,
            filter3,
            sort2,
            allowDots,
            serializeDate,
            format,
            formatter,
            encodeValuesOnly,
            charset2,
            valueSideChannel
          ));
        }
        return values;
      };
      var normalizeStringifyOptions = function normalizeStringifyOptions2(opts) {
        if (!opts) {
          return defaults;
        }
        if (opts.encoder !== null && typeof opts.encoder !== "undefined" && typeof opts.encoder !== "function") {
          throw new TypeError("Encoder has to be a function.");
        }
        var charset2 = opts.charset || defaults.charset;
        if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
          throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
        }
        var format = formats["default"];
        if (typeof opts.format !== "undefined") {
          if (!has.call(formats.formatters, opts.format)) {
            throw new TypeError("Unknown format option provided.");
          }
          format = opts.format;
        }
        var formatter = formats.formatters[format];
        var filter3 = defaults.filter;
        if (typeof opts.filter === "function" || isArray2(opts.filter)) {
          filter3 = opts.filter;
        }
        return {
          addQueryPrefix: typeof opts.addQueryPrefix === "boolean" ? opts.addQueryPrefix : defaults.addQueryPrefix,
          allowDots: typeof opts.allowDots === "undefined" ? defaults.allowDots : !!opts.allowDots,
          charset: charset2,
          charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
          delimiter: typeof opts.delimiter === "undefined" ? defaults.delimiter : opts.delimiter,
          encode: typeof opts.encode === "boolean" ? opts.encode : defaults.encode,
          encoder: typeof opts.encoder === "function" ? opts.encoder : defaults.encoder,
          encodeValuesOnly: typeof opts.encodeValuesOnly === "boolean" ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
          filter: filter3,
          format,
          formatter,
          serializeDate: typeof opts.serializeDate === "function" ? opts.serializeDate : defaults.serializeDate,
          skipNulls: typeof opts.skipNulls === "boolean" ? opts.skipNulls : defaults.skipNulls,
          sort: typeof opts.sort === "function" ? opts.sort : null,
          strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
        };
      };
      module.exports = function(object2, opts) {
        var obj = object2;
        var options2 = normalizeStringifyOptions(opts);
        var objKeys;
        var filter3;
        if (typeof options2.filter === "function") {
          filter3 = options2.filter;
          obj = filter3("", obj);
        } else if (isArray2(options2.filter)) {
          filter3 = options2.filter;
          objKeys = filter3;
        }
        var keys3 = [];
        if (typeof obj !== "object" || obj === null) {
          return "";
        }
        var arrayFormat;
        if (opts && opts.arrayFormat in arrayPrefixGenerators) {
          arrayFormat = opts.arrayFormat;
        } else if (opts && "indices" in opts) {
          arrayFormat = opts.indices ? "indices" : "repeat";
        } else {
          arrayFormat = "indices";
        }
        var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
        if (opts && "commaRoundTrip" in opts && typeof opts.commaRoundTrip !== "boolean") {
          throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
        }
        var commaRoundTrip = generateArrayPrefix === "comma" && opts && opts.commaRoundTrip;
        if (!objKeys) {
          objKeys = Object.keys(obj);
        }
        if (options2.sort) {
          objKeys.sort(options2.sort);
        }
        var sideChannel = getSideChannel();
        for (var i4 = 0; i4 < objKeys.length; ++i4) {
          var key2 = objKeys[i4];
          if (options2.skipNulls && obj[key2] === null) {
            continue;
          }
          pushToArray(keys3, stringify2(
            obj[key2],
            key2,
            generateArrayPrefix,
            commaRoundTrip,
            options2.strictNullHandling,
            options2.skipNulls,
            options2.encode ? options2.encoder : null,
            options2.filter,
            options2.sort,
            options2.allowDots,
            options2.serializeDate,
            options2.format,
            options2.formatter,
            options2.encodeValuesOnly,
            options2.charset,
            sideChannel
          ));
        }
        var joined = keys3.join(options2.delimiter);
        var prefix = options2.addQueryPrefix === true ? "?" : "";
        if (options2.charsetSentinel) {
          if (options2.charset === "iso-8859-1") {
            prefix += "utf8=%26%2310003%3B&";
          } else {
            prefix += "utf8=%E2%9C%93&";
          }
        }
        return joined.length > 0 ? prefix + joined : "";
      };
    }
  });

  // node_modules/qs/lib/parse.js
  var require_parse = __commonJS({
    "node_modules/qs/lib/parse.js"(exports, module) {
      "use strict";
      var utils = require_utils2();
      var has = Object.prototype.hasOwnProperty;
      var isArray2 = Array.isArray;
      var defaults = {
        allowDots: false,
        allowPrototypes: false,
        allowSparse: false,
        arrayLimit: 20,
        charset: "utf-8",
        charsetSentinel: false,
        comma: false,
        decoder: utils.decode,
        delimiter: "&",
        depth: 5,
        ignoreQueryPrefix: false,
        interpretNumericEntities: false,
        parameterLimit: 1e3,
        parseArrays: true,
        plainObjects: false,
        strictNullHandling: false
      };
      var interpretNumericEntities = function(str) {
        return str.replace(/&#(\d+);/g, function($0, numberStr) {
          return String.fromCharCode(parseInt(numberStr, 10));
        });
      };
      var parseArrayValue = function(val2, options2) {
        if (val2 && typeof val2 === "string" && options2.comma && val2.indexOf(",") > -1) {
          return val2.split(",");
        }
        return val2;
      };
      var isoSentinel = "utf8=%26%2310003%3B";
      var charsetSentinel = "utf8=%E2%9C%93";
      var parseValues = function parseQueryStringValues(str, options2) {
        var obj = { __proto__: null };
        var cleanStr = options2.ignoreQueryPrefix ? str.replace(/^\?/, "") : str;
        var limit = options2.parameterLimit === Infinity ? void 0 : options2.parameterLimit;
        var parts = cleanStr.split(options2.delimiter, limit);
        var skipIndex = -1;
        var i4;
        var charset2 = options2.charset;
        if (options2.charsetSentinel) {
          for (i4 = 0; i4 < parts.length; ++i4) {
            if (parts[i4].indexOf("utf8=") === 0) {
              if (parts[i4] === charsetSentinel) {
                charset2 = "utf-8";
              } else if (parts[i4] === isoSentinel) {
                charset2 = "iso-8859-1";
              }
              skipIndex = i4;
              i4 = parts.length;
            }
          }
        }
        for (i4 = 0; i4 < parts.length; ++i4) {
          if (i4 === skipIndex) {
            continue;
          }
          var part = parts[i4];
          var bracketEqualsPos = part.indexOf("]=");
          var pos = bracketEqualsPos === -1 ? part.indexOf("=") : bracketEqualsPos + 1;
          var key2, val2;
          if (pos === -1) {
            key2 = options2.decoder(part, defaults.decoder, charset2, "key");
            val2 = options2.strictNullHandling ? null : "";
          } else {
            key2 = options2.decoder(part.slice(0, pos), defaults.decoder, charset2, "key");
            val2 = utils.maybeMap(
              parseArrayValue(part.slice(pos + 1), options2),
              function(encodedVal) {
                return options2.decoder(encodedVal, defaults.decoder, charset2, "value");
              }
            );
          }
          if (val2 && options2.interpretNumericEntities && charset2 === "iso-8859-1") {
            val2 = interpretNumericEntities(val2);
          }
          if (part.indexOf("[]=") > -1) {
            val2 = isArray2(val2) ? [val2] : val2;
          }
          if (has.call(obj, key2)) {
            obj[key2] = utils.combine(obj[key2], val2);
          } else {
            obj[key2] = val2;
          }
        }
        return obj;
      };
      var parseObject = function(chain, val2, options2, valuesParsed) {
        var leaf = valuesParsed ? val2 : parseArrayValue(val2, options2);
        for (var i4 = chain.length - 1; i4 >= 0; --i4) {
          var obj;
          var root = chain[i4];
          if (root === "[]" && options2.parseArrays) {
            obj = [].concat(leaf);
          } else {
            obj = options2.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
            var cleanRoot = root.charAt(0) === "[" && root.charAt(root.length - 1) === "]" ? root.slice(1, -1) : root;
            var index4 = parseInt(cleanRoot, 10);
            if (!options2.parseArrays && cleanRoot === "") {
              obj = { 0: leaf };
            } else if (!isNaN(index4) && root !== cleanRoot && String(index4) === cleanRoot && index4 >= 0 && (options2.parseArrays && index4 <= options2.arrayLimit)) {
              obj = [];
              obj[index4] = leaf;
            } else if (cleanRoot !== "__proto__") {
              obj[cleanRoot] = leaf;
            }
          }
          leaf = obj;
        }
        return leaf;
      };
      var parseKeys = function parseQueryStringKeys(givenKey, val2, options2, valuesParsed) {
        if (!givenKey) {
          return;
        }
        var key2 = options2.allowDots ? givenKey.replace(/\.([^.[]+)/g, "[$1]") : givenKey;
        var brackets = /(\[[^[\]]*])/;
        var child = /(\[[^[\]]*])/g;
        var segment = options2.depth > 0 && brackets.exec(key2);
        var parent2 = segment ? key2.slice(0, segment.index) : key2;
        var keys3 = [];
        if (parent2) {
          if (!options2.plainObjects && has.call(Object.prototype, parent2)) {
            if (!options2.allowPrototypes) {
              return;
            }
          }
          keys3.push(parent2);
        }
        var i4 = 0;
        while (options2.depth > 0 && (segment = child.exec(key2)) !== null && i4 < options2.depth) {
          i4 += 1;
          if (!options2.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
            if (!options2.allowPrototypes) {
              return;
            }
          }
          keys3.push(segment[1]);
        }
        if (segment) {
          keys3.push("[" + key2.slice(segment.index) + "]");
        }
        return parseObject(keys3, val2, options2, valuesParsed);
      };
      var normalizeParseOptions = function normalizeParseOptions2(opts) {
        if (!opts) {
          return defaults;
        }
        if (opts.decoder !== null && opts.decoder !== void 0 && typeof opts.decoder !== "function") {
          throw new TypeError("Decoder has to be a function.");
        }
        if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
          throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
        }
        var charset2 = typeof opts.charset === "undefined" ? defaults.charset : opts.charset;
        return {
          allowDots: typeof opts.allowDots === "undefined" ? defaults.allowDots : !!opts.allowDots,
          allowPrototypes: typeof opts.allowPrototypes === "boolean" ? opts.allowPrototypes : defaults.allowPrototypes,
          allowSparse: typeof opts.allowSparse === "boolean" ? opts.allowSparse : defaults.allowSparse,
          arrayLimit: typeof opts.arrayLimit === "number" ? opts.arrayLimit : defaults.arrayLimit,
          charset: charset2,
          charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
          comma: typeof opts.comma === "boolean" ? opts.comma : defaults.comma,
          decoder: typeof opts.decoder === "function" ? opts.decoder : defaults.decoder,
          delimiter: typeof opts.delimiter === "string" || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
          // eslint-disable-next-line no-implicit-coercion, no-extra-parens
          depth: typeof opts.depth === "number" || opts.depth === false ? +opts.depth : defaults.depth,
          ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
          interpretNumericEntities: typeof opts.interpretNumericEntities === "boolean" ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
          parameterLimit: typeof opts.parameterLimit === "number" ? opts.parameterLimit : defaults.parameterLimit,
          parseArrays: opts.parseArrays !== false,
          plainObjects: typeof opts.plainObjects === "boolean" ? opts.plainObjects : defaults.plainObjects,
          strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
        };
      };
      module.exports = function(str, opts) {
        var options2 = normalizeParseOptions(opts);
        if (str === "" || str === null || typeof str === "undefined") {
          return options2.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
        }
        var tempObj = typeof str === "string" ? parseValues(str, options2) : str;
        var obj = options2.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
        var keys3 = Object.keys(tempObj);
        for (var i4 = 0; i4 < keys3.length; ++i4) {
          var key2 = keys3[i4];
          var newObj = parseKeys(key2, tempObj[key2], options2, typeof str === "string");
          obj = utils.merge(obj, newObj, options2);
        }
        if (options2.allowSparse === true) {
          return obj;
        }
        return utils.compact(obj);
      };
    }
  });

  // node_modules/qs/lib/index.js
  var require_lib = __commonJS({
    "node_modules/qs/lib/index.js"(exports, module) {
      "use strict";
      var stringify2 = require_stringify();
      var parse7 = require_parse();
      var formats = require_formats();
      module.exports = {
        formats,
        parse: parse7,
        stringify: stringify2
      };
    }
  });

  // node_modules/cohere-ai/core/runtime/runtime.js
  var require_runtime = __commonJS({
    "node_modules/cohere-ai/core/runtime/runtime.js"(exports) {
      "use strict";
      var _a2;
      var _b;
      var _c;
      var _d;
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.RUNTIME = void 0;
      var isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined";
      var isWebWorker = typeof self === "object" && // @ts-ignore
      typeof (self === null || self === void 0 ? void 0 : self.importScripts) === "function" && (((_a2 = self.constructor) === null || _a2 === void 0 ? void 0 : _a2.name) === "DedicatedWorkerGlobalScope" || ((_b = self.constructor) === null || _b === void 0 ? void 0 : _b.name) === "ServiceWorkerGlobalScope" || ((_c = self.constructor) === null || _c === void 0 ? void 0 : _c.name) === "SharedWorkerGlobalScope");
      var isDeno = typeof Deno !== "undefined" && typeof Deno.version !== "undefined" && typeof Deno.version.deno !== "undefined";
      var isBun = typeof Bun !== "undefined" && typeof Bun.version !== "undefined";
      var isNode = typeof process !== "undefined" && Boolean(process.version) && Boolean((_d = process.versions) === null || _d === void 0 ? void 0 : _d.node) && // Deno spoofs process.versions.node, see https://deno.land/std@0.177.0/node/process.ts?s=versions
      !isDeno && !isBun;
      var isReactNative = typeof navigator !== "undefined" && (navigator === null || navigator === void 0 ? void 0 : navigator.product) === "ReactNative";
      exports.RUNTIME = evaluateRuntime();
      function evaluateRuntime() {
        if (isBrowser) {
          return {
            type: "browser",
            version: window.navigator.userAgent
          };
        }
        if (isWebWorker) {
          return {
            type: "web-worker"
          };
        }
        if (isDeno) {
          return {
            type: "deno",
            version: Deno.version.deno
          };
        }
        if (isBun) {
          return {
            type: "bun",
            version: Bun.version
          };
        }
        if (isNode) {
          return {
            type: "node",
            version: process.versions.node
          };
        }
        if (isReactNative) {
          return {
            type: "react-native"
          };
        }
        return {
          type: "unknown"
        };
      }
    }
  });

  // node_modules/cohere-ai/core/runtime/index.js
  var require_runtime2 = __commonJS({
    "node_modules/cohere-ai/core/runtime/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.RUNTIME = void 0;
      var runtime_1 = require_runtime();
      Object.defineProperty(exports, "RUNTIME", { enumerable: true, get: function() {
        return runtime_1.RUNTIME;
      } });
    }
  });

  // node_modules/formdata-node/lib/browser.cjs
  var require_browser4 = __commonJS({
    "node_modules/formdata-node/lib/browser.cjs"(exports, module) {
      "use strict";
      var __defProp2 = Object.defineProperty;
      var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
      var __getOwnPropNames2 = Object.getOwnPropertyNames;
      var __hasOwnProp2 = Object.prototype.hasOwnProperty;
      var __export2 = (target6, all4) => {
        for (var name15 in all4)
          __defProp2(target6, name15, { get: all4[name15], enumerable: true });
      };
      var __copyProps2 = (to, from3, except2, desc) => {
        if (from3 && typeof from3 === "object" || typeof from3 === "function") {
          for (let key2 of __getOwnPropNames2(from3))
            if (!__hasOwnProp2.call(to, key2) && key2 !== except2)
              __defProp2(to, key2, { get: () => from3[key2], enumerable: !(desc = __getOwnPropDesc2(from3, key2)) || desc.enumerable });
        }
        return to;
      };
      var __toCommonJS2 = (mod3) => __copyProps2(__defProp2({}, "__esModule", { value: true }), mod3);
      var browser_exports = {};
      __export2(browser_exports, {
        Blob: () => Blob2,
        File: () => File,
        FormData: () => FormData
      });
      module.exports = __toCommonJS2(browser_exports);
      var globalObject = function() {
        if (typeof globalThis !== "undefined") {
          return globalThis;
        }
        if (typeof self !== "undefined") {
          return self;
        }
        return window;
      }();
      var { FormData, Blob: Blob2, File } = globalObject;
    }
  });

  // node_modules/form-data/lib/browser.js
  var require_browser5 = __commonJS({
    "node_modules/form-data/lib/browser.js"(exports, module) {
      module.exports = typeof self == "object" ? self.FormData : window.FormData;
    }
  });

  // node_modules/node-fetch/browser.js
  var require_browser6 = __commonJS({
    "node_modules/node-fetch/browser.js"(exports, module) {
      "use strict";
      var getGlobal = function() {
        if (typeof self !== "undefined") {
          return self;
        }
        if (typeof window !== "undefined") {
          return window;
        }
        if (typeof global !== "undefined") {
          return global;
        }
        throw new Error("unable to locate global object");
      };
      var globalObject = getGlobal();
      module.exports = exports = globalObject.fetch;
      if (globalObject.fetch) {
        exports.default = globalObject.fetch.bind(globalObject);
      }
      exports.Headers = globalObject.Headers;
      exports.Request = globalObject.Request;
      exports.Response = globalObject.Response;
    }
  });

  // node_modules/cohere-ai/core/fetcher/Fetcher.js
  var require_Fetcher = __commonJS({
    "node_modules/cohere-ai/core/fetcher/Fetcher.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      var __importDefault3 = exports && exports.__importDefault || function(mod3) {
        return mod3 && mod3.__esModule ? mod3 : { "default": mod3 };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.fetcher = void 0;
      var qs_1 = __importDefault3(require_lib());
      var runtime_1 = require_runtime2();
      var INITIAL_RETRY_DELAY = 1;
      var MAX_RETRY_DELAY = 60;
      var DEFAULT_MAX_RETRIES = 2;
      function fetcherImpl(args) {
        var _a2, _b;
        return __awaiter3(this, void 0, void 0, function* () {
          const headers = {};
          if (args.body !== void 0 && args.contentType != null) {
            headers["Content-Type"] = args.contentType;
          }
          if (args.headers != null) {
            for (const [key2, value14] of Object.entries(args.headers)) {
              if (value14 != null) {
                headers[key2] = value14;
              }
            }
          }
          const url = Object.keys((_a2 = args.queryParameters) !== null && _a2 !== void 0 ? _a2 : {}).length > 0 ? `${args.url}?${qs_1.default.stringify(args.queryParameters, { arrayFormat: "repeat" })}` : args.url;
          let body2 = void 0;
          const maybeStringifyBody = (body3) => {
            if (body3 instanceof Uint8Array) {
              return body3;
            } else if (args.contentType === "application/x-www-form-urlencoded" && typeof args.body === "string") {
              return args.body;
            } else {
              return JSON.stringify(body3);
            }
          };
          if (runtime_1.RUNTIME.type === "node") {
            if (args.body instanceof (yield Promise.resolve().then(() => __importStar3(require_browser4()))).FormData) {
              body2 = args.body;
            } else {
              body2 = maybeStringifyBody(args.body);
            }
          } else {
            if (args.body instanceof (yield Promise.resolve().then(() => __importStar3(require_browser5()))).default) {
              body2 = args.body;
            } else {
              body2 = maybeStringifyBody(args.body);
            }
          }
          const fetchFn = runtime_1.RUNTIME.type === "node" ? (
            // `.default` is required due to this issue:
            // https://github.com/node-fetch/node-fetch/issues/450#issuecomment-387045223
            (yield Promise.resolve().then(() => __importStar3(require_browser6()))).default
          ) : typeof fetch == "function" ? fetch : (yield Promise.resolve().then(() => __importStar3(require_browser6()))).default;
          const makeRequest = () => __awaiter3(this, void 0, void 0, function* () {
            const signals = [];
            let timeoutAbortId = void 0;
            if (args.timeoutMs != null) {
              const { signal, abortId } = getTimeoutSignal(args.timeoutMs);
              timeoutAbortId = abortId;
              signals.push(signal);
            }
            if (args.abortSignal != null) {
              signals.push(args.abortSignal);
            }
            const response = yield fetchFn(url, {
              method: args.method,
              headers,
              body: body2,
              signal: anySignal(signals),
              credentials: args.withCredentials ? "include" : void 0
            });
            if (timeoutAbortId != null) {
              clearTimeout(timeoutAbortId);
            }
            return response;
          });
          try {
            let response = yield makeRequest();
            for (let i4 = 0; i4 < ((_b = args.maxRetries) !== null && _b !== void 0 ? _b : DEFAULT_MAX_RETRIES); ++i4) {
              if (response.status === 408 || response.status === 409 || response.status === 429 || response.status >= 500) {
                const delay = Math.min(INITIAL_RETRY_DELAY * Math.pow(i4, 2), MAX_RETRY_DELAY);
                yield new Promise((resolve) => setTimeout(resolve, delay));
                response = yield makeRequest();
              } else {
                break;
              }
            }
            let body3;
            if (response.body != null && args.responseType === "blob") {
              body3 = yield response.blob();
            } else if (response.body != null && args.responseType === "streaming") {
              body3 = response.body;
            } else if (response.body != null && args.responseType === "text") {
              body3 = yield response.text();
            } else {
              const text6 = yield response.text();
              if (text6.length > 0) {
                try {
                  body3 = JSON.parse(text6);
                } catch (err) {
                  return {
                    ok: false,
                    error: {
                      reason: "non-json",
                      statusCode: response.status,
                      rawBody: text6
                    }
                  };
                }
              }
            }
            if (response.status >= 200 && response.status < 400) {
              return {
                ok: true,
                body: body3,
                headers: response.headers
              };
            } else {
              return {
                ok: false,
                error: {
                  reason: "status-code",
                  statusCode: response.status,
                  body: body3
                }
              };
            }
          } catch (error4) {
            if (args.abortSignal != null && args.abortSignal.aborted) {
              return {
                ok: false,
                error: {
                  reason: "unknown",
                  errorMessage: "The user aborted a request"
                }
              };
            } else if (error4 instanceof Error && error4.name === "AbortError") {
              return {
                ok: false,
                error: {
                  reason: "timeout"
                }
              };
            } else if (error4 instanceof Error) {
              return {
                ok: false,
                error: {
                  reason: "unknown",
                  errorMessage: error4.message
                }
              };
            }
            return {
              ok: false,
              error: {
                reason: "unknown",
                errorMessage: JSON.stringify(error4)
              }
            };
          }
        });
      }
      var TIMEOUT = "timeout";
      function getTimeoutSignal(timeoutMs) {
        const controller = new AbortController();
        const abortId = setTimeout(() => controller.abort(TIMEOUT), timeoutMs);
        return { signal: controller.signal, abortId };
      }
      function anySignal(...args) {
        const signals = args.length === 1 && Array.isArray(args[0]) ? args[0] : args;
        const controller = new AbortController();
        for (const signal of signals) {
          if (signal.aborted) {
            controller.abort(signal === null || signal === void 0 ? void 0 : signal.reason);
            break;
          }
          signal.addEventListener("abort", () => controller.abort(signal === null || signal === void 0 ? void 0 : signal.reason), {
            signal: controller.signal
          });
        }
        return controller.signal;
      }
      exports.fetcher = fetcherImpl;
    }
  });

  // node_modules/cohere-ai/core/fetcher/getHeader.js
  var require_getHeader = __commonJS({
    "node_modules/cohere-ai/core/fetcher/getHeader.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.getHeader = void 0;
      function getHeader(headers, header2) {
        for (const [headerKey, headerValue] of Object.entries(headers)) {
          if (headerKey.toLowerCase() === header2.toLowerCase()) {
            return headerValue;
          }
        }
        return void 0;
      }
      exports.getHeader = getHeader;
    }
  });

  // node_modules/cohere-ai/core/fetcher/Supplier.js
  var require_Supplier = __commonJS({
    "node_modules/cohere-ai/core/fetcher/Supplier.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Supplier = void 0;
      exports.Supplier = {
        get: (supplier) => __awaiter3(void 0, void 0, void 0, function* () {
          if (typeof supplier === "function") {
            return supplier();
          } else {
            return supplier;
          }
        })
      };
    }
  });

  // node_modules/cohere-ai/core/fetcher/index.js
  var require_fetcher = __commonJS({
    "node_modules/cohere-ai/core/fetcher/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Supplier = exports.getHeader = exports.fetcher = void 0;
      var Fetcher_1 = require_Fetcher();
      Object.defineProperty(exports, "fetcher", { enumerable: true, get: function() {
        return Fetcher_1.fetcher;
      } });
      var getHeader_1 = require_getHeader();
      Object.defineProperty(exports, "getHeader", { enumerable: true, get: function() {
        return getHeader_1.getHeader;
      } });
      var Supplier_1 = require_Supplier();
      Object.defineProperty(exports, "Supplier", { enumerable: true, get: function() {
        return Supplier_1.Supplier;
      } });
    }
  });

  // node_modules/js-base64/base64.js
  var require_base64 = __commonJS({
    "node_modules/js-base64/base64.js"(exports, module) {
      (function(global2, factory) {
        typeof exports === "object" && typeof module !== "undefined" ? module.exports = factory() : typeof define === "function" && define.amd ? define(factory) : (
          // cf. https://github.com/dankogai/js-base64/issues/119
          function() {
            var _Base64 = global2.Base64;
            var gBase64 = factory();
            gBase64.noConflict = function() {
              global2.Base64 = _Base64;
              return gBase64;
            };
            if (global2.Meteor) {
              Base64 = gBase64;
            }
            global2.Base64 = gBase64;
          }()
        );
      })(typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : exports, function() {
        "use strict";
        var version = "3.7.2";
        var VERSION = version;
        var _hasatob = typeof atob === "function";
        var _hasbtoa = typeof btoa === "function";
        var _hasBuffer = typeof Buffer === "function";
        var _TD = typeof TextDecoder === "function" ? new TextDecoder() : void 0;
        var _TE = typeof TextEncoder === "function" ? new TextEncoder() : void 0;
        var b64ch = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        var b64chs = Array.prototype.slice.call(b64ch);
        var b64tab = function(a4) {
          var tab = {};
          a4.forEach(function(c3, i4) {
            return tab[c3] = i4;
          });
          return tab;
        }(b64chs);
        var b64re = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/;
        var _fromCC = String.fromCharCode.bind(String);
        var _U8Afrom = typeof Uint8Array.from === "function" ? Uint8Array.from.bind(Uint8Array) : function(it, fn) {
          if (fn === void 0) {
            fn = function(x2) {
              return x2;
            };
          }
          return new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));
        };
        var _mkUriSafe = function(src9) {
          return src9.replace(/=/g, "").replace(/[+\/]/g, function(m0) {
            return m0 == "+" ? "-" : "_";
          });
        };
        var _tidyB64 = function(s3) {
          return s3.replace(/[^A-Za-z0-9\+\/]/g, "");
        };
        var btoaPolyfill = function(bin) {
          var u32, c0, c1, c22, asc = "";
          var pad = bin.length % 3;
          for (var i4 = 0; i4 < bin.length; ) {
            if ((c0 = bin.charCodeAt(i4++)) > 255 || (c1 = bin.charCodeAt(i4++)) > 255 || (c22 = bin.charCodeAt(i4++)) > 255)
              throw new TypeError("invalid character found");
            u32 = c0 << 16 | c1 << 8 | c22;
            asc += b64chs[u32 >> 18 & 63] + b64chs[u32 >> 12 & 63] + b64chs[u32 >> 6 & 63] + b64chs[u32 & 63];
          }
          return pad ? asc.slice(0, pad - 3) + "===".substring(pad) : asc;
        };
        var _btoa = _hasbtoa ? function(bin) {
          return btoa(bin);
        } : _hasBuffer ? function(bin) {
          return Buffer.from(bin, "binary").toString("base64");
        } : btoaPolyfill;
        var _fromUint8Array = _hasBuffer ? function(u8a) {
          return Buffer.from(u8a).toString("base64");
        } : function(u8a) {
          var maxargs = 4096;
          var strs = [];
          for (var i4 = 0, l3 = u8a.length; i4 < l3; i4 += maxargs) {
            strs.push(_fromCC.apply(null, u8a.subarray(i4, i4 + maxargs)));
          }
          return _btoa(strs.join(""));
        };
        var fromUint8Array = function(u8a, urlsafe) {
          if (urlsafe === void 0) {
            urlsafe = false;
          }
          return urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);
        };
        var cb_utob = function(c3) {
          if (c3.length < 2) {
            var cc = c3.charCodeAt(0);
            return cc < 128 ? c3 : cc < 2048 ? _fromCC(192 | cc >>> 6) + _fromCC(128 | cc & 63) : _fromCC(224 | cc >>> 12 & 15) + _fromCC(128 | cc >>> 6 & 63) + _fromCC(128 | cc & 63);
          } else {
            var cc = 65536 + (c3.charCodeAt(0) - 55296) * 1024 + (c3.charCodeAt(1) - 56320);
            return _fromCC(240 | cc >>> 18 & 7) + _fromCC(128 | cc >>> 12 & 63) + _fromCC(128 | cc >>> 6 & 63) + _fromCC(128 | cc & 63);
          }
        };
        var re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
        var utob = function(u4) {
          return u4.replace(re_utob, cb_utob);
        };
        var _encode = _hasBuffer ? function(s3) {
          return Buffer.from(s3, "utf8").toString("base64");
        } : _TE ? function(s3) {
          return _fromUint8Array(_TE.encode(s3));
        } : function(s3) {
          return _btoa(utob(s3));
        };
        var encode = function(src9, urlsafe) {
          if (urlsafe === void 0) {
            urlsafe = false;
          }
          return urlsafe ? _mkUriSafe(_encode(src9)) : _encode(src9);
        };
        var encodeURI2 = function(src9) {
          return encode(src9, true);
        };
        var re_btou = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g;
        var cb_btou = function(cccc) {
          switch (cccc.length) {
            case 4:
              var cp = (7 & cccc.charCodeAt(0)) << 18 | (63 & cccc.charCodeAt(1)) << 12 | (63 & cccc.charCodeAt(2)) << 6 | 63 & cccc.charCodeAt(3), offset = cp - 65536;
              return _fromCC((offset >>> 10) + 55296) + _fromCC((offset & 1023) + 56320);
            case 3:
              return _fromCC((15 & cccc.charCodeAt(0)) << 12 | (63 & cccc.charCodeAt(1)) << 6 | 63 & cccc.charCodeAt(2));
            default:
              return _fromCC((31 & cccc.charCodeAt(0)) << 6 | 63 & cccc.charCodeAt(1));
          }
        };
        var btou = function(b4) {
          return b4.replace(re_btou, cb_btou);
        };
        var atobPolyfill = function(asc) {
          asc = asc.replace(/\s+/g, "");
          if (!b64re.test(asc))
            throw new TypeError("malformed base64.");
          asc += "==".slice(2 - (asc.length & 3));
          var u24, bin = "", r1, r22;
          for (var i4 = 0; i4 < asc.length; ) {
            u24 = b64tab[asc.charAt(i4++)] << 18 | b64tab[asc.charAt(i4++)] << 12 | (r1 = b64tab[asc.charAt(i4++)]) << 6 | (r22 = b64tab[asc.charAt(i4++)]);
            bin += r1 === 64 ? _fromCC(u24 >> 16 & 255) : r22 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255) : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);
          }
          return bin;
        };
        var _atob = _hasatob ? function(asc) {
          return atob(_tidyB64(asc));
        } : _hasBuffer ? function(asc) {
          return Buffer.from(asc, "base64").toString("binary");
        } : atobPolyfill;
        var _toUint8Array = _hasBuffer ? function(a4) {
          return _U8Afrom(Buffer.from(a4, "base64"));
        } : function(a4) {
          return _U8Afrom(_atob(a4), function(c3) {
            return c3.charCodeAt(0);
          });
        };
        var toUint8Array2 = function(a4) {
          return _toUint8Array(_unURI(a4));
        };
        var _decode = _hasBuffer ? function(a4) {
          return Buffer.from(a4, "base64").toString("utf8");
        } : _TD ? function(a4) {
          return _TD.decode(_toUint8Array(a4));
        } : function(a4) {
          return btou(_atob(a4));
        };
        var _unURI = function(a4) {
          return _tidyB64(a4.replace(/[-_]/g, function(m0) {
            return m0 == "-" ? "+" : "/";
          }));
        };
        var decode = function(src9) {
          return _decode(_unURI(src9));
        };
        var isValid = function(src9) {
          if (typeof src9 !== "string")
            return false;
          var s3 = src9.replace(/\s+/g, "").replace(/={0,2}$/, "");
          return !/[^\s0-9a-zA-Z\+/]/.test(s3) || !/[^\s0-9a-zA-Z\-_]/.test(s3);
        };
        var _noEnum = function(v3) {
          return {
            value: v3,
            enumerable: false,
            writable: true,
            configurable: true
          };
        };
        var extendString = function() {
          var _add = function(name15, body2) {
            return Object.defineProperty(String.prototype, name15, _noEnum(body2));
          };
          _add("fromBase64", function() {
            return decode(this);
          });
          _add("toBase64", function(urlsafe) {
            return encode(this, urlsafe);
          });
          _add("toBase64URI", function() {
            return encode(this, true);
          });
          _add("toBase64URL", function() {
            return encode(this, true);
          });
          _add("toUint8Array", function() {
            return toUint8Array2(this);
          });
        };
        var extendUint8Array = function() {
          var _add = function(name15, body2) {
            return Object.defineProperty(Uint8Array.prototype, name15, _noEnum(body2));
          };
          _add("toBase64", function(urlsafe) {
            return fromUint8Array(this, urlsafe);
          });
          _add("toBase64URI", function() {
            return fromUint8Array(this, true);
          });
          _add("toBase64URL", function() {
            return fromUint8Array(this, true);
          });
        };
        var extendBuiltins = function() {
          extendString();
          extendUint8Array();
        };
        var gBase64 = {
          version,
          VERSION,
          atob: _atob,
          atobPolyfill,
          btoa: _btoa,
          btoaPolyfill,
          fromBase64: decode,
          toBase64: encode,
          encode,
          encodeURI: encodeURI2,
          encodeURL: encodeURI2,
          utob,
          btou,
          decode,
          isValid,
          fromUint8Array,
          toUint8Array: toUint8Array2,
          extendString,
          extendUint8Array,
          extendBuiltins
        };
        gBase64.Base64 = {};
        Object.keys(gBase64).forEach(function(k3) {
          return gBase64.Base64[k3] = gBase64[k3];
        });
        return gBase64;
      });
    }
  });

  // node_modules/cohere-ai/core/auth/BasicAuth.js
  var require_BasicAuth = __commonJS({
    "node_modules/cohere-ai/core/auth/BasicAuth.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.BasicAuth = void 0;
      var js_base64_1 = require_base64();
      var BASIC_AUTH_HEADER_PREFIX = /^Basic /i;
      exports.BasicAuth = {
        toAuthorizationHeader: (basicAuth) => {
          if (basicAuth == null) {
            return void 0;
          }
          const token = js_base64_1.Base64.encode(`${basicAuth.username}:${basicAuth.password}`);
          return `Basic ${token}`;
        },
        fromAuthorizationHeader: (header2) => {
          const credentials = header2.replace(BASIC_AUTH_HEADER_PREFIX, "");
          const decoded = js_base64_1.Base64.decode(credentials);
          const [username, password] = decoded.split(":", 2);
          if (username == null || password == null) {
            throw new Error("Invalid basic auth");
          }
          return {
            username,
            password
          };
        }
      };
    }
  });

  // node_modules/cohere-ai/core/auth/BearerToken.js
  var require_BearerToken = __commonJS({
    "node_modules/cohere-ai/core/auth/BearerToken.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.BearerToken = void 0;
      var BEARER_AUTH_HEADER_PREFIX = /^Bearer /i;
      exports.BearerToken = {
        toAuthorizationHeader: (token) => {
          if (token == null) {
            return void 0;
          }
          return `Bearer ${token}`;
        },
        fromAuthorizationHeader: (header2) => {
          return header2.replace(BEARER_AUTH_HEADER_PREFIX, "").trim();
        }
      };
    }
  });

  // node_modules/cohere-ai/core/auth/index.js
  var require_auth2 = __commonJS({
    "node_modules/cohere-ai/core/auth/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.BearerToken = exports.BasicAuth = void 0;
      var BasicAuth_1 = require_BasicAuth();
      Object.defineProperty(exports, "BasicAuth", { enumerable: true, get: function() {
        return BasicAuth_1.BasicAuth;
      } });
      var BearerToken_1 = require_BearerToken();
      Object.defineProperty(exports, "BearerToken", { enumerable: true, get: function() {
        return BearerToken_1.BearerToken;
      } });
    }
  });

  // node_modules/cohere-ai/core/streaming-fetcher/Stream.js
  var require_Stream = __commonJS({
    "node_modules/cohere-ai/core/streaming-fetcher/Stream.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      var __asyncValues3 = exports && exports.__asyncValues || function(o3) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m3 = o3[Symbol.asyncIterator], i4;
        return m3 ? m3.call(o3) : (o3 = typeof __values === "function" ? __values(o3) : o3[Symbol.iterator](), i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
          return this;
        }, i4);
        function verb(n3) {
          i4[n3] = o3[n3] && function(v3) {
            return new Promise(function(resolve, reject) {
              v3 = o3[n3](v3), settle(resolve, reject, v3.done, v3.value);
            });
          };
        }
        function settle(resolve, reject, d3, v3) {
          Promise.resolve(v3).then(function(v5) {
            resolve({ value: v5, done: d3 });
          }, reject);
        }
      };
      var __await3 = exports && exports.__await || function(v3) {
        return this instanceof __await3 ? (this.v = v3, this) : new __await3(v3);
      };
      var __asyncGenerator3 = exports && exports.__asyncGenerator || function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g3 = generator.apply(thisArg, _arguments || []), i4, q4 = [];
        return i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
          return this;
        }, i4;
        function verb(n3) {
          if (g3[n3]) i4[n3] = function(v3) {
            return new Promise(function(a4, b4) {
              q4.push([n3, v3, a4, b4]) > 1 || resume(n3, v3);
            });
          };
        }
        function resume(n3, v3) {
          try {
            step3(g3[n3](v3));
          } catch (e3) {
            settle(q4[0][3], e3);
          }
        }
        function step3(r3) {
          r3.value instanceof __await3 ? Promise.resolve(r3.value.v).then(fulfill, reject) : settle(q4[0][2], r3);
        }
        function fulfill(value14) {
          resume("next", value14);
        }
        function reject(value14) {
          resume("throw", value14);
        }
        function settle(f3, v3) {
          if (f3(v3), q4.shift(), q4.length) resume(q4[0][0], q4[0][1]);
        }
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.readableStreamAsyncIterable = exports.Stream = void 0;
      var runtime_1 = require_runtime2();
      var DATA_PREFIX = "data:";
      var Stream = class {
        constructor({ stream, parse: parse7, eventShape, signal }) {
          this.controller = new AbortController();
          this.stream = stream;
          this.parse = parse7;
          if (eventShape.type === "sse") {
            this.prefix = DATA_PREFIX;
            this.messageTerminator = "\n";
            this.streamTerminator = eventShape.streamTerminator;
          } else {
            this.messageTerminator = eventShape.messageTerminator;
          }
          signal === null || signal === void 0 ? void 0 : signal.addEventListener("abort", () => this.controller.abort());
        }
        iterMessages() {
          return __asyncGenerator3(this, arguments, function* iterMessages_1() {
            var e_1, _a2;
            this.controller.signal;
            const stream = readableStreamAsyncIterable(this.stream);
            let buf = "";
            let prefixSeen = false;
            try {
              for (var stream_1 = __asyncValues3(stream), stream_1_1; stream_1_1 = yield __await3(stream_1.next()), !stream_1_1.done; ) {
                const chunk = stream_1_1.value;
                buf += this.decodeChunk(chunk);
                let terminatorIndex;
                while ((terminatorIndex = buf.indexOf(this.messageTerminator)) >= 0) {
                  let line = buf.slice(0, terminatorIndex + 1);
                  buf = buf.slice(terminatorIndex + 1);
                  if (line.length === 0) {
                    continue;
                  }
                  if (!prefixSeen && this.prefix != null) {
                    const prefixIndex = line.indexOf(this.prefix);
                    if (prefixIndex === -1) {
                      continue;
                    }
                    prefixSeen = true;
                    line = line.slice(prefixIndex + this.prefix.length);
                  }
                  if (this.streamTerminator != null && line.includes(this.streamTerminator)) {
                    return yield __await3(void 0);
                  }
                  const message2 = yield __await3(this.parse(JSON.parse(line)));
                  yield yield __await3(message2);
                  prefixSeen = false;
                }
              }
            } catch (e_1_1) {
              e_1 = { error: e_1_1 };
            } finally {
              try {
                if (stream_1_1 && !stream_1_1.done && (_a2 = stream_1.return)) yield __await3(_a2.call(stream_1));
              } finally {
                if (e_1) throw e_1.error;
              }
            }
          });
        }
        [Symbol.asyncIterator]() {
          return __asyncGenerator3(this, arguments, function* _a2() {
            var e_2, _b;
            try {
              for (var _c = __asyncValues3(this.iterMessages()), _d; _d = yield __await3(_c.next()), !_d.done; ) {
                const message2 = _d.value;
                yield yield __await3(message2);
              }
            } catch (e_2_1) {
              e_2 = { error: e_2_1 };
            } finally {
              try {
                if (_d && !_d.done && (_b = _c.return)) yield __await3(_b.call(_c));
              } finally {
                if (e_2) throw e_2.error;
              }
            }
          });
        }
        decodeChunk(chunk) {
          let decoded = "";
          if (runtime_1.RUNTIME.type === "node" && typeof chunk != "undefined") {
            decoded += Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk);
          } else if (runtime_1.RUNTIME.type === "browser" && typeof TextDecoder !== "undefined") {
            const decoder = new TextDecoder("utf8");
            decoded += decoder.decode(chunk);
          }
          return decoded;
        }
      };
      exports.Stream = Stream;
      function readableStreamAsyncIterable(stream) {
        if (stream[Symbol.asyncIterator]) {
          return stream;
        }
        const reader = stream.getReader();
        return {
          next() {
            return __awaiter3(this, void 0, void 0, function* () {
              try {
                const result = yield reader.read();
                if (result === null || result === void 0 ? void 0 : result.done) {
                  reader.releaseLock();
                }
                return result;
              } catch (e3) {
                reader.releaseLock();
                throw e3;
              }
            });
          },
          return() {
            return __awaiter3(this, void 0, void 0, function* () {
              const cancelPromise = reader.cancel();
              reader.releaseLock();
              yield cancelPromise;
              return { done: true, value: void 0 };
            });
          },
          [Symbol.asyncIterator]() {
            return this;
          }
        };
      }
      exports.readableStreamAsyncIterable = readableStreamAsyncIterable;
    }
  });

  // node_modules/cohere-ai/core/streaming-fetcher/index.js
  var require_streaming_fetcher = __commonJS({
    "node_modules/cohere-ai/core/streaming-fetcher/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Stream = void 0;
      var Stream_1 = require_Stream();
      Object.defineProperty(exports, "Stream", { enumerable: true, get: function() {
        return Stream_1.Stream;
      } });
    }
  });

  // node_modules/form-data-encoder/lib/index.cjs
  var require_lib2 = __commonJS({
    "node_modules/form-data-encoder/lib/index.cjs"(exports, module) {
      "use strict";
      var __defProp2 = Object.defineProperty;
      var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
      var __getOwnPropNames2 = Object.getOwnPropertyNames;
      var __hasOwnProp2 = Object.prototype.hasOwnProperty;
      var __export2 = (target6, all4) => {
        for (var name15 in all4)
          __defProp2(target6, name15, { get: all4[name15], enumerable: true });
      };
      var __copyProps2 = (to, from3, except2, desc) => {
        if (from3 && typeof from3 === "object" || typeof from3 === "function") {
          for (let key2 of __getOwnPropNames2(from3))
            if (!__hasOwnProp2.call(to, key2) && key2 !== except2)
              __defProp2(to, key2, { get: () => from3[key2], enumerable: !(desc = __getOwnPropDesc2(from3, key2)) || desc.enumerable });
        }
        return to;
      };
      var __toCommonJS2 = (mod3) => __copyProps2(__defProp2({}, "__esModule", { value: true }), mod3);
      var __accessCheck = (obj, member2, msg) => {
        if (!member2.has(obj))
          throw TypeError("Cannot " + msg);
      };
      var __privateGet = (obj, member2, getter) => {
        __accessCheck(obj, member2, "read from private field");
        return getter ? getter.call(obj) : member2.get(obj);
      };
      var __privateAdd = (obj, member2, value14) => {
        if (member2.has(obj))
          throw TypeError("Cannot add the same private member more than once");
        member2 instanceof WeakSet ? member2.add(obj) : member2.set(obj, value14);
      };
      var __privateSet = (obj, member2, value14, setter) => {
        __accessCheck(obj, member2, "write to private field");
        setter ? setter.call(obj, value14) : member2.set(obj, value14);
        return value14;
      };
      var __privateMethod = (obj, member2, method2) => {
        __accessCheck(obj, member2, "access private method");
        return method2;
      };
      var src_exports = {};
      __export2(src_exports, {
        FormDataEncoder: () => FormDataEncoder,
        isFile: () => isFile,
        isFormData: () => isFormData
      });
      module.exports = __toCommonJS2(src_exports);
      var isFunction = (value14) => typeof value14 === "function";
      var isAsyncIterable = (value14) => isFunction(value14[Symbol.asyncIterator]);
      var MAX_CHUNK_SIZE = 65536;
      function* chunk(value14) {
        if (value14.byteLength <= MAX_CHUNK_SIZE) {
          yield value14;
          return;
        }
        let offset = 0;
        while (offset < value14.byteLength) {
          const size5 = Math.min(value14.byteLength - offset, MAX_CHUNK_SIZE);
          const buffer = value14.buffer.slice(offset, offset + size5);
          offset += buffer.byteLength;
          yield new Uint8Array(buffer);
        }
      }
      async function* readStream(readable) {
        const reader = readable.getReader();
        while (true) {
          const { done, value: value14 } = await reader.read();
          if (done) {
            break;
          }
          yield value14;
        }
      }
      async function* chunkStream(stream) {
        for await (const value14 of stream) {
          yield* chunk(value14);
        }
      }
      var getStreamIterator = (source2) => {
        if (isAsyncIterable(source2)) {
          return chunkStream(source2);
        }
        if (isFunction(source2.getReader)) {
          return chunkStream(readStream(source2));
        }
        throw new TypeError(
          "Unsupported data source: Expected either ReadableStream or async iterable."
        );
      };
      var alphabet = "abcdefghijklmnopqrstuvwxyz0123456789";
      function createBoundary() {
        let size5 = 16;
        let res = "";
        while (size5--) {
          res += alphabet[Math.random() * alphabet.length << 0];
        }
        return res;
      }
      var normalizeValue = (value14) => String(value14).replace(/\r|\n/g, (match4, i4, str) => {
        if (match4 === "\r" && str[i4 + 1] !== "\n" || match4 === "\n" && str[i4 - 1] !== "\r") {
          return "\r\n";
        }
        return match4;
      });
      var getType = (value14) => Object.prototype.toString.call(value14).slice(8, -1).toLowerCase();
      function isPlainObject(value14) {
        if (getType(value14) !== "object") {
          return false;
        }
        const pp = Object.getPrototypeOf(value14);
        if (pp === null || pp === void 0) {
          return true;
        }
        const Ctor = pp.constructor && pp.constructor.toString();
        return Ctor === Object.toString();
      }
      function getProperty(target6, prop3) {
        if (typeof prop3 === "string") {
          for (const [name15, value14] of Object.entries(target6)) {
            if (prop3.toLowerCase() === name15.toLowerCase()) {
              return value14;
            }
          }
        }
        return void 0;
      }
      var proxyHeaders = (object2) => new Proxy(
        object2,
        {
          get: (target6, prop3) => getProperty(target6, prop3),
          has: (target6, prop3) => getProperty(target6, prop3) !== void 0
        }
      );
      var isFormData = (value14) => Boolean(
        value14 && isFunction(value14.constructor) && value14[Symbol.toStringTag] === "FormData" && isFunction(value14.append) && isFunction(value14.getAll) && isFunction(value14.entries) && isFunction(value14[Symbol.iterator])
      );
      var escapeName = (name15) => String(name15).replace(/\r/g, "%0D").replace(/\n/g, "%0A").replace(/"/g, "%22");
      var isFile = (value14) => Boolean(
        value14 && typeof value14 === "object" && isFunction(value14.constructor) && value14[Symbol.toStringTag] === "File" && isFunction(value14.stream) && value14.name != null
      );
      var defaultOptions = {
        enableAdditionalHeaders: false
      };
      var readonlyProp = { writable: false, configurable: false };
      var _CRLF;
      var _CRLF_BYTES;
      var _CRLF_BYTES_LENGTH;
      var _DASHES;
      var _encoder;
      var _footer;
      var _form12;
      var _options;
      var _getFieldHeader;
      var getFieldHeader_fn;
      var _getContentLength;
      var getContentLength_fn;
      var FormDataEncoder = class {
        constructor(form2, boundaryOrOptions, options2) {
          __privateAdd(this, _getFieldHeader);
          __privateAdd(this, _getContentLength);
          __privateAdd(this, _CRLF, "\r\n");
          __privateAdd(this, _CRLF_BYTES, void 0);
          __privateAdd(this, _CRLF_BYTES_LENGTH, void 0);
          __privateAdd(this, _DASHES, "-".repeat(2));
          __privateAdd(this, _encoder, new TextEncoder());
          __privateAdd(this, _footer, void 0);
          __privateAdd(this, _form12, void 0);
          __privateAdd(this, _options, void 0);
          if (!isFormData(form2)) {
            throw new TypeError("Expected first argument to be a FormData instance.");
          }
          let boundary;
          if (isPlainObject(boundaryOrOptions)) {
            options2 = boundaryOrOptions;
          } else {
            boundary = boundaryOrOptions;
          }
          if (!boundary) {
            boundary = createBoundary();
          }
          if (typeof boundary !== "string") {
            throw new TypeError("Expected boundary argument to be a string.");
          }
          if (options2 && !isPlainObject(options2)) {
            throw new TypeError("Expected options argument to be an object.");
          }
          __privateSet(this, _form12, Array.from(form2.entries()));
          __privateSet(this, _options, { ...defaultOptions, ...options2 });
          __privateSet(this, _CRLF_BYTES, __privateGet(this, _encoder).encode(__privateGet(this, _CRLF)));
          __privateSet(this, _CRLF_BYTES_LENGTH, __privateGet(this, _CRLF_BYTES).byteLength);
          this.boundary = `form-data-boundary-${boundary}`;
          this.contentType = `multipart/form-data; boundary=${this.boundary}`;
          __privateSet(this, _footer, __privateGet(this, _encoder).encode(
            `${__privateGet(this, _DASHES)}${this.boundary}${__privateGet(this, _DASHES)}${__privateGet(this, _CRLF).repeat(2)}`
          ));
          const headers = {
            "Content-Type": this.contentType
          };
          const contentLength = __privateMethod(this, _getContentLength, getContentLength_fn).call(this);
          if (contentLength) {
            this.contentLength = contentLength;
            headers["Content-Length"] = contentLength;
          }
          this.headers = proxyHeaders(Object.freeze(headers));
          Object.defineProperties(this, {
            boundary: readonlyProp,
            contentType: readonlyProp,
            contentLength: readonlyProp,
            headers: readonlyProp
          });
        }
        /**
         * Creates an iterator allowing to go through form-data parts (with metadata).
         * This method **will not** read the files and **will not** split values big into smaller chunks.
         *
         * Using this method, you can convert form-data content into Blob:
         *
         * @example
         *
         * ```ts
         * import {Readable} from "stream"
         *
         * import {FormDataEncoder} from "form-data-encoder"
         *
         * import {FormData} from "formdata-polyfill/esm-min.js"
         * import {fileFrom} from "fetch-blob/form.js"
         * import {File} from "fetch-blob/file.js"
         * import {Blob} from "fetch-blob"
         *
         * import fetch from "node-fetch"
         *
         * const form = new FormData()
         *
         * form.set("field", "Just a random string")
         * form.set("file", new File(["Using files is class amazing"]))
         * form.set("fileFromPath", await fileFrom("path/to/a/file.txt"))
         *
         * const encoder = new FormDataEncoder(form)
         *
         * const options = {
         *   method: "post",
         *   body: new Blob(encoder, {type: encoder.contentType})
         * }
         *
         * const response = await fetch("https://httpbin.org/post", options)
         *
         * console.log(await response.json())
         * ```
         */
        *values() {
          for (const [name15, raw] of __privateGet(this, _form12)) {
            const value14 = isFile(raw) ? raw : __privateGet(this, _encoder).encode(
              normalizeValue(raw)
            );
            yield __privateMethod(this, _getFieldHeader, getFieldHeader_fn).call(this, name15, value14);
            yield value14;
            yield __privateGet(this, _CRLF_BYTES);
          }
          yield __privateGet(this, _footer);
        }
        /**
         * Creates an async iterator allowing to perform the encoding by portions.
         * This method reads through files and splits big values into smaller pieces (65536 bytes per each).
         *
         * @example
         *
         * ```ts
         * import {Readable} from "stream"
         *
         * import {FormData, File, fileFromPath} from "formdata-node"
         * import {FormDataEncoder} from "form-data-encoder"
         *
         * import fetch from "node-fetch"
         *
         * const form = new FormData()
         *
         * form.set("field", "Just a random string")
         * form.set("file", new File(["Using files is class amazing"], "file.txt"))
         * form.set("fileFromPath", await fileFromPath("path/to/a/file.txt"))
         *
         * const encoder = new FormDataEncoder(form)
         *
         * const options = {
         *   method: "post",
         *   headers: encoder.headers,
         *   body: Readable.from(encoder.encode()) // or Readable.from(encoder)
         * }
         *
         * const response = await fetch("https://httpbin.org/post", options)
         *
         * console.log(await response.json())
         * ```
         */
        async *encode() {
          for (const part of this.values()) {
            if (isFile(part)) {
              yield* getStreamIterator(part.stream());
            } else {
              yield* chunk(part);
            }
          }
        }
        /**
         * Creates an iterator allowing to read through the encoder data using for...of loops
         */
        [Symbol.iterator]() {
          return this.values();
        }
        /**
         * Creates an **async** iterator allowing to read through the encoder data using for-await...of loops
         */
        [Symbol.asyncIterator]() {
          return this.encode();
        }
      };
      _CRLF = /* @__PURE__ */ new WeakMap();
      _CRLF_BYTES = /* @__PURE__ */ new WeakMap();
      _CRLF_BYTES_LENGTH = /* @__PURE__ */ new WeakMap();
      _DASHES = /* @__PURE__ */ new WeakMap();
      _encoder = /* @__PURE__ */ new WeakMap();
      _footer = /* @__PURE__ */ new WeakMap();
      _form12 = /* @__PURE__ */ new WeakMap();
      _options = /* @__PURE__ */ new WeakMap();
      _getFieldHeader = /* @__PURE__ */ new WeakSet();
      getFieldHeader_fn = function(name15, value14) {
        let header2 = "";
        header2 += `${__privateGet(this, _DASHES)}${this.boundary}${__privateGet(this, _CRLF)}`;
        header2 += `Content-Disposition: form-data; name="${escapeName(name15)}"`;
        if (isFile(value14)) {
          header2 += `; filename="${escapeName(value14.name)}"${__privateGet(this, _CRLF)}`;
          header2 += `Content-Type: ${value14.type || "application/octet-stream"}`;
        }
        if (__privateGet(this, _options).enableAdditionalHeaders === true) {
          const size5 = isFile(value14) ? value14.size : value14.byteLength;
          if (size5 != null && !isNaN(size5)) {
            header2 += `${__privateGet(this, _CRLF)}Content-Length: ${size5}`;
          }
        }
        return __privateGet(this, _encoder).encode(`${header2}${__privateGet(this, _CRLF).repeat(2)}`);
      };
      _getContentLength = /* @__PURE__ */ new WeakSet();
      getContentLength_fn = function() {
        let length8 = 0;
        for (const [name15, raw] of __privateGet(this, _form12)) {
          const value14 = isFile(raw) ? raw : __privateGet(this, _encoder).encode(
            normalizeValue(raw)
          );
          const size5 = isFile(value14) ? value14.size : value14.byteLength;
          if (size5 == null || isNaN(size5)) {
            return void 0;
          }
          length8 += __privateMethod(this, _getFieldHeader, getFieldHeader_fn).call(this, name15, value14).byteLength;
          length8 += size5;
          length8 += __privateGet(this, _CRLF_BYTES_LENGTH);
        }
        return String(length8 + __privateGet(this, _footer).byteLength);
      };
    }
  });

  // node_modules/cohere-ai/core/form-data-utils/FormDataWrapper.js
  var require_FormDataWrapper = __commonJS({
    "node_modules/cohere-ai/core/form-data-utils/FormDataWrapper.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.FormDataWrapper = void 0;
      var readable_stream_1 = require_browser3();
      var runtime_1 = require_runtime2();
      var FormDataRequestBody = class {
        constructor(fd) {
          this.fd = fd;
        }
        setup() {
          return __awaiter3(this, void 0, void 0, function* () {
            if (this.encoder == null && runtime_1.RUNTIME.type === "node") {
              this.encoder = new (yield Promise.resolve().then(() => __importStar3(require_lib2()))).FormDataEncoder(this.fd);
            }
          });
        }
        /**
         * @returns the multipart form data request
         */
        getBody() {
          return __awaiter3(this, void 0, void 0, function* () {
            if (runtime_1.RUNTIME.type !== "node") {
              return this.fd;
            } else {
              if (this.encoder == null) {
                yield this.setup();
              }
              return readable_stream_1.Readable.from(this.encoder);
            }
          });
        }
        /**
         * @returns headers that need to be added to the multipart form data request
         */
        getHeaders() {
          return __awaiter3(this, void 0, void 0, function* () {
            if (runtime_1.RUNTIME.type !== "node") {
              return {};
            } else {
              if (this.encoder == null) {
                yield this.setup();
              }
              return {
                "Content-Length": this.encoder.length
              };
            }
          });
        }
      };
      var FormDataWrapper = class {
        append(name15, value14) {
          return __awaiter3(this, void 0, void 0, function* () {
            if (this.fd == null) {
              if (runtime_1.RUNTIME.type === "node") {
                this.fd = new (yield Promise.resolve().then(() => __importStar3(require_browser4()))).FormData();
              } else {
                this.fd = new (yield Promise.resolve().then(() => __importStar3(require_browser5()))).default();
              }
            }
            this.fd.append(name15, value14);
          });
        }
        getRequest() {
          return new FormDataRequestBody(this.fd);
        }
      };
      exports.FormDataWrapper = FormDataWrapper;
    }
  });

  // node_modules/cohere-ai/core/form-data-utils/index.js
  var require_form_data_utils = __commonJS({
    "node_modules/cohere-ai/core/form-data-utils/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_FormDataWrapper(), exports);
    }
  });

  // node_modules/cohere-ai/core/schemas/Schema.js
  var require_Schema = __commonJS({
    "node_modules/cohere-ai/core/schemas/Schema.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SchemaType = void 0;
      exports.SchemaType = {
        DATE: "date",
        ENUM: "enum",
        LIST: "list",
        STRING_LITERAL: "stringLiteral",
        BOOLEAN_LITERAL: "booleanLiteral",
        OBJECT: "object",
        ANY: "any",
        BOOLEAN: "boolean",
        NUMBER: "number",
        STRING: "string",
        UNKNOWN: "unknown",
        RECORD: "record",
        SET: "set",
        UNION: "union",
        UNDISCRIMINATED_UNION: "undiscriminatedUnion",
        OPTIONAL: "optional"
      };
    }
  });

  // node_modules/cohere-ai/core/schemas/utils/getErrorMessageForIncorrectType.js
  var require_getErrorMessageForIncorrectType = __commonJS({
    "node_modules/cohere-ai/core/schemas/utils/getErrorMessageForIncorrectType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.getErrorMessageForIncorrectType = void 0;
      function getErrorMessageForIncorrectType(value14, expectedType) {
        return `Expected ${expectedType}. Received ${getTypeAsString(value14)}.`;
      }
      exports.getErrorMessageForIncorrectType = getErrorMessageForIncorrectType;
      function getTypeAsString(value14) {
        if (Array.isArray(value14)) {
          return "list";
        }
        if (value14 === null) {
          return "null";
        }
        switch (typeof value14) {
          case "string":
            return `"${value14}"`;
          case "number":
          case "boolean":
          case "undefined":
            return `${value14}`;
        }
        return typeof value14;
      }
    }
  });

  // node_modules/cohere-ai/core/schemas/utils/maybeSkipValidation.js
  var require_maybeSkipValidation = __commonJS({
    "node_modules/cohere-ai/core/schemas/utils/maybeSkipValidation.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.maybeSkipValidation = void 0;
      function maybeSkipValidation(schema) {
        return Object.assign(Object.assign({}, schema), { json: transformAndMaybeSkipValidation(schema.json), parse: transformAndMaybeSkipValidation(schema.parse) });
      }
      exports.maybeSkipValidation = maybeSkipValidation;
      function transformAndMaybeSkipValidation(transform) {
        return (value14, opts) => __awaiter3(this, void 0, void 0, function* () {
          const transformed = yield transform(value14, opts);
          const { skipValidation = false } = opts !== null && opts !== void 0 ? opts : {};
          if (!transformed.ok && skipValidation) {
            console.warn([
              "Failed to validate.",
              ...transformed.errors.map((error4) => "  - " + (error4.path.length > 0 ? `${error4.path.join(".")}: ${error4.message}` : error4.message))
            ].join("\n"));
            return {
              ok: true,
              value: value14
            };
          } else {
            return transformed;
          }
        });
      }
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/schema-utils/stringifyValidationErrors.js
  var require_stringifyValidationErrors = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/schema-utils/stringifyValidationErrors.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.stringifyValidationError = void 0;
      function stringifyValidationError(error4) {
        if (error4.path.length === 0) {
          return error4.message;
        }
        return `${error4.path.join(" -> ")}: ${error4.message}`;
      }
      exports.stringifyValidationError = stringifyValidationError;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/schema-utils/JsonError.js
  var require_JsonError = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/schema-utils/JsonError.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.JsonError = void 0;
      var stringifyValidationErrors_1 = require_stringifyValidationErrors();
      var JsonError = class _JsonError extends Error {
        constructor(errors) {
          super(errors.map(stringifyValidationErrors_1.stringifyValidationError).join("; "));
          this.errors = errors;
          Object.setPrototypeOf(this, _JsonError.prototype);
        }
      };
      exports.JsonError = JsonError;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/schema-utils/ParseError.js
  var require_ParseError = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/schema-utils/ParseError.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ParseError = void 0;
      var stringifyValidationErrors_1 = require_stringifyValidationErrors();
      var ParseError = class _ParseError extends Error {
        constructor(errors) {
          super(errors.map(stringifyValidationErrors_1.stringifyValidationError).join("; "));
          this.errors = errors;
          Object.setPrototypeOf(this, _ParseError.prototype);
        }
      };
      exports.ParseError = ParseError;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/schema-utils/getSchemaUtils.js
  var require_getSchemaUtils = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/schema-utils/getSchemaUtils.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.transform = exports.optional = exports.getSchemaUtils = void 0;
      var Schema_1 = require_Schema();
      var JsonError_1 = require_JsonError();
      var ParseError_1 = require_ParseError();
      function getSchemaUtils(schema) {
        return {
          optional: () => optional(schema),
          transform: (transformer) => transform(schema, transformer),
          parseOrThrow: (raw, opts) => __awaiter3(this, void 0, void 0, function* () {
            const parsed = yield schema.parse(raw, opts);
            if (parsed.ok) {
              return parsed.value;
            }
            throw new ParseError_1.ParseError(parsed.errors);
          }),
          jsonOrThrow: (parsed, opts) => __awaiter3(this, void 0, void 0, function* () {
            const raw = yield schema.json(parsed, opts);
            if (raw.ok) {
              return raw.value;
            }
            throw new JsonError_1.JsonError(raw.errors);
          })
        };
      }
      exports.getSchemaUtils = getSchemaUtils;
      function optional(schema) {
        const baseSchema = {
          parse: (raw, opts) => {
            if (raw == null) {
              return {
                ok: true,
                value: void 0
              };
            }
            return schema.parse(raw, opts);
          },
          json: (parsed, opts) => {
            if (parsed == null) {
              return {
                ok: true,
                value: null
              };
            }
            return schema.json(parsed, opts);
          },
          getType: () => Schema_1.SchemaType.OPTIONAL
        };
        return Object.assign(Object.assign({}, baseSchema), getSchemaUtils(baseSchema));
      }
      exports.optional = optional;
      function transform(schema, transformer) {
        const baseSchema = {
          parse: (raw, opts) => __awaiter3(this, void 0, void 0, function* () {
            const parsed = yield schema.parse(raw, opts);
            if (!parsed.ok) {
              return parsed;
            }
            return {
              ok: true,
              value: transformer.transform(parsed.value)
            };
          }),
          json: (transformed, opts) => __awaiter3(this, void 0, void 0, function* () {
            const parsed = yield transformer.untransform(transformed);
            return schema.json(parsed, opts);
          }),
          getType: () => schema.getType()
        };
        return Object.assign(Object.assign({}, baseSchema), getSchemaUtils(baseSchema));
      }
      exports.transform = transform;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/schema-utils/index.js
  var require_schema_utils = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/schema-utils/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ParseError = exports.JsonError = exports.transform = exports.optional = exports.getSchemaUtils = void 0;
      var getSchemaUtils_1 = require_getSchemaUtils();
      Object.defineProperty(exports, "getSchemaUtils", { enumerable: true, get: function() {
        return getSchemaUtils_1.getSchemaUtils;
      } });
      Object.defineProperty(exports, "optional", { enumerable: true, get: function() {
        return getSchemaUtils_1.optional;
      } });
      Object.defineProperty(exports, "transform", { enumerable: true, get: function() {
        return getSchemaUtils_1.transform;
      } });
      var JsonError_1 = require_JsonError();
      Object.defineProperty(exports, "JsonError", { enumerable: true, get: function() {
        return JsonError_1.JsonError;
      } });
      var ParseError_1 = require_ParseError();
      Object.defineProperty(exports, "ParseError", { enumerable: true, get: function() {
        return ParseError_1.ParseError;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/date/date.js
  var require_date = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/date/date.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.date = void 0;
      var Schema_1 = require_Schema();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      var maybeSkipValidation_1 = require_maybeSkipValidation();
      var schema_utils_1 = require_schema_utils();
      var ISO_8601_REGEX = /^([+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24:?00)([.,]\d+(?!:))?)?(\17[0-5]\d([.,]\d+)?)?([zZ]|([+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;
      function date() {
        const baseSchema = {
          parse: (raw, { breadcrumbsPrefix = [] } = {}) => {
            if (typeof raw !== "string") {
              return {
                ok: false,
                errors: [
                  {
                    path: breadcrumbsPrefix,
                    message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(raw, "string")
                  }
                ]
              };
            }
            if (!ISO_8601_REGEX.test(raw)) {
              return {
                ok: false,
                errors: [
                  {
                    path: breadcrumbsPrefix,
                    message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(raw, "ISO 8601 date string")
                  }
                ]
              };
            }
            return {
              ok: true,
              value: new Date(raw)
            };
          },
          json: (date2, { breadcrumbsPrefix = [] } = {}) => {
            if (date2 instanceof Date) {
              return {
                ok: true,
                value: date2.toISOString()
              };
            } else {
              return {
                ok: false,
                errors: [
                  {
                    path: breadcrumbsPrefix,
                    message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(date2, "Date object")
                  }
                ]
              };
            }
          },
          getType: () => Schema_1.SchemaType.DATE
        };
        return Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema));
      }
      exports.date = date;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/date/index.js
  var require_date2 = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/date/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.date = void 0;
      var date_1 = require_date();
      Object.defineProperty(exports, "date", { enumerable: true, get: function() {
        return date_1.date;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/utils/createIdentitySchemaCreator.js
  var require_createIdentitySchemaCreator = __commonJS({
    "node_modules/cohere-ai/core/schemas/utils/createIdentitySchemaCreator.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.createIdentitySchemaCreator = void 0;
      var schema_utils_1 = require_schema_utils();
      var maybeSkipValidation_1 = require_maybeSkipValidation();
      function createIdentitySchemaCreator(schemaType, validate) {
        return () => {
          const baseSchema = {
            parse: validate,
            json: validate,
            getType: () => schemaType
          };
          return Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema));
        };
      }
      exports.createIdentitySchemaCreator = createIdentitySchemaCreator;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/enum/enum.js
  var require_enum = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/enum/enum.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.enum_ = void 0;
      var Schema_1 = require_Schema();
      var createIdentitySchemaCreator_1 = require_createIdentitySchemaCreator();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      function enum_(values) {
        const validValues = new Set(values);
        const schemaCreator = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.ENUM, (value14, { allowUnrecognizedEnumValues, breadcrumbsPrefix = [] } = {}) => {
          if (typeof value14 !== "string") {
            return {
              ok: false,
              errors: [
                {
                  path: breadcrumbsPrefix,
                  message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value14, "string")
                }
              ]
            };
          }
          if (!validValues.has(value14) && !allowUnrecognizedEnumValues) {
            return {
              ok: false,
              errors: [
                {
                  path: breadcrumbsPrefix,
                  message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value14, "enum")
                }
              ]
            };
          }
          return {
            ok: true,
            value: value14
          };
        });
        return schemaCreator();
      }
      exports.enum_ = enum_;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/enum/index.js
  var require_enum2 = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/enum/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.enum_ = void 0;
      var enum_1 = require_enum();
      Object.defineProperty(exports, "enum_", { enumerable: true, get: function() {
        return enum_1.enum_;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/lazy/lazy.js
  var require_lazy = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/lazy/lazy.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.getMemoizedSchema = exports.constructLazyBaseSchema = exports.lazy = void 0;
      var schema_utils_1 = require_schema_utils();
      function lazy(getter) {
        const baseSchema = constructLazyBaseSchema(getter);
        return Object.assign(Object.assign({}, baseSchema), (0, schema_utils_1.getSchemaUtils)(baseSchema));
      }
      exports.lazy = lazy;
      function constructLazyBaseSchema(getter) {
        return {
          parse: (raw, opts) => __awaiter3(this, void 0, void 0, function* () {
            return (yield getMemoizedSchema(getter)).parse(raw, opts);
          }),
          json: (parsed, opts) => __awaiter3(this, void 0, void 0, function* () {
            return (yield getMemoizedSchema(getter)).json(parsed, opts);
          }),
          getType: () => __awaiter3(this, void 0, void 0, function* () {
            return (yield getMemoizedSchema(getter)).getType();
          })
        };
      }
      exports.constructLazyBaseSchema = constructLazyBaseSchema;
      function getMemoizedSchema(getter) {
        return __awaiter3(this, void 0, void 0, function* () {
          const castedGetter = getter;
          if (castedGetter.__zurg_memoized == null) {
            castedGetter.__zurg_memoized = yield getter();
          }
          return castedGetter.__zurg_memoized;
        });
      }
      exports.getMemoizedSchema = getMemoizedSchema;
    }
  });

  // node_modules/cohere-ai/core/schemas/utils/entries.js
  var require_entries = __commonJS({
    "node_modules/cohere-ai/core/schemas/utils/entries.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.entries = void 0;
      function entries(object2) {
        return Object.entries(object2);
      }
      exports.entries = entries;
    }
  });

  // node_modules/cohere-ai/core/schemas/utils/filterObject.js
  var require_filterObject = __commonJS({
    "node_modules/cohere-ai/core/schemas/utils/filterObject.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.filterObject = void 0;
      function filterObject(obj, keysToInclude) {
        const keysToIncludeSet = new Set(keysToInclude);
        return Object.entries(obj).reduce((acc, [key2, value14]) => {
          if (keysToIncludeSet.has(key2)) {
            acc[key2] = value14;
          }
          return acc;
        }, {});
      }
      exports.filterObject = filterObject;
    }
  });

  // node_modules/cohere-ai/core/schemas/utils/isPlainObject.js
  var require_isPlainObject = __commonJS({
    "node_modules/cohere-ai/core/schemas/utils/isPlainObject.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.isPlainObject = void 0;
      function isPlainObject(value14) {
        if (typeof value14 !== "object" || value14 === null) {
          return false;
        }
        if (Object.getPrototypeOf(value14) === null) {
          return true;
        }
        let proto = value14;
        while (Object.getPrototypeOf(proto) !== null) {
          proto = Object.getPrototypeOf(proto);
        }
        return Object.getPrototypeOf(value14) === proto;
      }
      exports.isPlainObject = isPlainObject;
    }
  });

  // node_modules/cohere-ai/core/schemas/utils/keys.js
  var require_keys = __commonJS({
    "node_modules/cohere-ai/core/schemas/utils/keys.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.keys = void 0;
      function keys3(object2) {
        return Object.keys(object2);
      }
      exports.keys = keys3;
    }
  });

  // node_modules/cohere-ai/core/schemas/utils/partition.js
  var require_partition = __commonJS({
    "node_modules/cohere-ai/core/schemas/utils/partition.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.partition = void 0;
      function partition4(items2, predicate) {
        const trueItems = [], falseItems = [];
        for (const item of items2) {
          if (predicate(item)) {
            trueItems.push(item);
          } else {
            falseItems.push(item);
          }
        }
        return [trueItems, falseItems];
      }
      exports.partition = partition4;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/object-like/getObjectLikeUtils.js
  var require_getObjectLikeUtils = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/object-like/getObjectLikeUtils.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.withParsedProperties = exports.getObjectLikeUtils = void 0;
      var filterObject_1 = require_filterObject();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      var isPlainObject_1 = require_isPlainObject();
      var schema_utils_1 = require_schema_utils();
      function getObjectLikeUtils(schema) {
        return {
          withParsedProperties: (properties) => withParsedProperties(schema, properties)
        };
      }
      exports.getObjectLikeUtils = getObjectLikeUtils;
      function withParsedProperties(objectLike, properties) {
        const objectSchema = {
          parse: (raw, opts) => __awaiter3(this, void 0, void 0, function* () {
            const parsedObject = yield objectLike.parse(raw, opts);
            if (!parsedObject.ok) {
              return parsedObject;
            }
            const additionalProperties = Object.entries(properties).reduce((processed, [key2, value14]) => {
              return Object.assign(Object.assign({}, processed), { [key2]: typeof value14 === "function" ? value14(parsedObject.value) : value14 });
            }, {});
            return {
              ok: true,
              value: Object.assign(Object.assign({}, parsedObject.value), additionalProperties)
            };
          }),
          json: (parsed, opts) => {
            var _a2;
            if (!(0, isPlainObject_1.isPlainObject)(parsed)) {
              return {
                ok: false,
                errors: [
                  {
                    path: (_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [],
                    message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(parsed, "object")
                  }
                ]
              };
            }
            const addedPropertyKeys = new Set(Object.keys(properties));
            const parsedWithoutAddedProperties = (0, filterObject_1.filterObject)(parsed, Object.keys(parsed).filter((key2) => !addedPropertyKeys.has(key2)));
            return objectLike.json(parsedWithoutAddedProperties, opts);
          },
          getType: () => objectLike.getType()
        };
        return Object.assign(Object.assign(Object.assign({}, objectSchema), (0, schema_utils_1.getSchemaUtils)(objectSchema)), getObjectLikeUtils(objectSchema));
      }
      exports.withParsedProperties = withParsedProperties;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/object-like/index.js
  var require_object_like = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/object-like/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.withParsedProperties = exports.getObjectLikeUtils = void 0;
      var getObjectLikeUtils_1 = require_getObjectLikeUtils();
      Object.defineProperty(exports, "getObjectLikeUtils", { enumerable: true, get: function() {
        return getObjectLikeUtils_1.getObjectLikeUtils;
      } });
      Object.defineProperty(exports, "withParsedProperties", { enumerable: true, get: function() {
        return getObjectLikeUtils_1.withParsedProperties;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/object/property.js
  var require_property = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/object/property.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.isProperty = exports.property = void 0;
      function property(rawKey, valueSchema) {
        return {
          rawKey,
          valueSchema,
          isProperty: true
        };
      }
      exports.property = property;
      function isProperty(maybeProperty) {
        return maybeProperty.isProperty;
      }
      exports.isProperty = isProperty;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/object/object.js
  var require_object = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/object/object.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.getObjectUtils = exports.object = void 0;
      var Schema_1 = require_Schema();
      var entries_1 = require_entries();
      var filterObject_1 = require_filterObject();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      var isPlainObject_1 = require_isPlainObject();
      var keys_1 = require_keys();
      var maybeSkipValidation_1 = require_maybeSkipValidation();
      var partition_1 = require_partition();
      var object_like_1 = require_object_like();
      var schema_utils_1 = require_schema_utils();
      var property_1 = require_property();
      function object2(schemas) {
        const baseSchema = {
          _getRawProperties: () => Promise.resolve(Object.entries(schemas).map(([parsedKey, propertySchema]) => (0, property_1.isProperty)(propertySchema) ? propertySchema.rawKey : parsedKey)),
          _getParsedProperties: () => Promise.resolve((0, keys_1.keys)(schemas)),
          parse: (raw, opts) => __awaiter3(this, void 0, void 0, function* () {
            const rawKeyToProperty = {};
            const requiredKeys = [];
            for (const [parsedKey, schemaOrObjectProperty] of (0, entries_1.entries)(schemas)) {
              const rawKey = (0, property_1.isProperty)(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
              const valueSchema = (0, property_1.isProperty)(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
              const property = {
                rawKey,
                parsedKey,
                valueSchema
              };
              rawKeyToProperty[rawKey] = property;
              if (isSchemaRequired(valueSchema)) {
                requiredKeys.push(rawKey);
              }
            }
            return validateAndTransformObject({
              value: raw,
              requiredKeys,
              getProperty: (rawKey) => {
                const property = rawKeyToProperty[rawKey];
                if (property == null) {
                  return void 0;
                }
                return {
                  transformedKey: property.parsedKey,
                  transform: (propertyValue) => {
                    var _a2;
                    return property.valueSchema.parse(propertyValue, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...(_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [], rawKey] }));
                  }
                };
              },
              unrecognizedObjectKeys: opts === null || opts === void 0 ? void 0 : opts.unrecognizedObjectKeys,
              skipValidation: opts === null || opts === void 0 ? void 0 : opts.skipValidation,
              breadcrumbsPrefix: opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix
            });
          }),
          json: (parsed, opts) => __awaiter3(this, void 0, void 0, function* () {
            const requiredKeys = [];
            for (const [parsedKey, schemaOrObjectProperty] of (0, entries_1.entries)(schemas)) {
              const valueSchema = (0, property_1.isProperty)(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
              if (isSchemaRequired(valueSchema)) {
                requiredKeys.push(parsedKey);
              }
            }
            return validateAndTransformObject({
              value: parsed,
              requiredKeys,
              getProperty: (parsedKey) => {
                const property = schemas[parsedKey];
                if (property == null) {
                  return void 0;
                }
                if ((0, property_1.isProperty)(property)) {
                  return {
                    transformedKey: property.rawKey,
                    transform: (propertyValue) => {
                      var _a2;
                      return property.valueSchema.json(propertyValue, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...(_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [], parsedKey] }));
                    }
                  };
                } else {
                  return {
                    transformedKey: parsedKey,
                    transform: (propertyValue) => {
                      var _a2;
                      return property.json(propertyValue, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...(_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [], parsedKey] }));
                    }
                  };
                }
              },
              unrecognizedObjectKeys: opts === null || opts === void 0 ? void 0 : opts.unrecognizedObjectKeys,
              skipValidation: opts === null || opts === void 0 ? void 0 : opts.skipValidation,
              breadcrumbsPrefix: opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix
            });
          }),
          getType: () => Schema_1.SchemaType.OBJECT
        };
        return Object.assign(Object.assign(Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema)), (0, object_like_1.getObjectLikeUtils)(baseSchema)), getObjectUtils(baseSchema));
      }
      exports.object = object2;
      function validateAndTransformObject({ value: value14, requiredKeys, getProperty, unrecognizedObjectKeys = "fail", skipValidation = false, breadcrumbsPrefix = [] }) {
        return __awaiter3(this, void 0, void 0, function* () {
          if (!(0, isPlainObject_1.isPlainObject)(value14)) {
            return {
              ok: false,
              errors: [
                {
                  path: breadcrumbsPrefix,
                  message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value14, "object")
                }
              ]
            };
          }
          const missingRequiredKeys = new Set(requiredKeys);
          const errors = [];
          const transformed = {};
          for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value14)) {
            const property = getProperty(preTransformedKey);
            if (property != null) {
              missingRequiredKeys.delete(preTransformedKey);
              const value15 = yield property.transform(preTransformedItemValue);
              if (value15.ok) {
                transformed[property.transformedKey] = value15.value;
              } else {
                transformed[preTransformedKey] = preTransformedItemValue;
                errors.push(...value15.errors);
              }
            } else {
              switch (unrecognizedObjectKeys) {
                case "fail":
                  errors.push({
                    path: [...breadcrumbsPrefix, preTransformedKey],
                    message: `Unexpected key "${preTransformedKey}"`
                  });
                  break;
                case "strip":
                  break;
                case "passthrough":
                  transformed[preTransformedKey] = preTransformedItemValue;
                  break;
              }
            }
          }
          errors.push(...requiredKeys.filter((key2) => missingRequiredKeys.has(key2)).map((key2) => ({
            path: breadcrumbsPrefix,
            message: `Missing required key "${key2}"`
          })));
          if (errors.length === 0 || skipValidation) {
            return {
              ok: true,
              value: transformed
            };
          } else {
            return {
              ok: false,
              errors
            };
          }
        });
      }
      function getObjectUtils(schema) {
        return {
          extend: (extension) => {
            const baseSchema = {
              _getParsedProperties: () => __awaiter3(this, void 0, void 0, function* () {
                return [
                  ...yield schema._getParsedProperties(),
                  ...yield extension._getParsedProperties()
                ];
              }),
              _getRawProperties: () => __awaiter3(this, void 0, void 0, function* () {
                return [
                  ...yield schema._getRawProperties(),
                  ...yield extension._getRawProperties()
                ];
              }),
              parse: (raw, opts) => __awaiter3(this, void 0, void 0, function* () {
                return validateAndTransformExtendedObject({
                  extensionKeys: yield extension._getRawProperties(),
                  value: raw,
                  transformBase: (rawBase) => schema.parse(rawBase, opts),
                  transformExtension: (rawExtension) => extension.parse(rawExtension, opts)
                });
              }),
              json: (parsed, opts) => __awaiter3(this, void 0, void 0, function* () {
                return validateAndTransformExtendedObject({
                  extensionKeys: yield extension._getParsedProperties(),
                  value: parsed,
                  transformBase: (parsedBase) => schema.json(parsedBase, opts),
                  transformExtension: (parsedExtension) => extension.json(parsedExtension, opts)
                });
              }),
              getType: () => Schema_1.SchemaType.OBJECT
            };
            return Object.assign(Object.assign(Object.assign(Object.assign({}, baseSchema), (0, schema_utils_1.getSchemaUtils)(baseSchema)), (0, object_like_1.getObjectLikeUtils)(baseSchema)), getObjectUtils(baseSchema));
          }
        };
      }
      exports.getObjectUtils = getObjectUtils;
      function validateAndTransformExtendedObject({ extensionKeys, value: value14, transformBase, transformExtension }) {
        return __awaiter3(this, void 0, void 0, function* () {
          const extensionPropertiesSet = new Set(extensionKeys);
          const [extensionProperties, baseProperties] = (0, partition_1.partition)((0, keys_1.keys)(value14), (key2) => extensionPropertiesSet.has(key2));
          const transformedBase = yield transformBase((0, filterObject_1.filterObject)(value14, baseProperties));
          const transformedExtension = yield transformExtension((0, filterObject_1.filterObject)(value14, extensionProperties));
          if (transformedBase.ok && transformedExtension.ok) {
            return {
              ok: true,
              value: Object.assign(Object.assign({}, transformedBase.value), transformedExtension.value)
            };
          } else {
            return {
              ok: false,
              errors: [
                ...transformedBase.ok ? [] : transformedBase.errors,
                ...transformedExtension.ok ? [] : transformedExtension.errors
              ]
            };
          }
        });
      }
      function isSchemaRequired(schema) {
        return !isSchemaOptional(schema);
      }
      function isSchemaOptional(schema) {
        switch (schema.getType()) {
          case Schema_1.SchemaType.ANY:
          case Schema_1.SchemaType.UNKNOWN:
          case Schema_1.SchemaType.OPTIONAL:
            return true;
          default:
            return false;
        }
      }
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/object/objectWithoutOptionalProperties.js
  var require_objectWithoutOptionalProperties = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/object/objectWithoutOptionalProperties.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.objectWithoutOptionalProperties = void 0;
      var object_1 = require_object();
      function objectWithoutOptionalProperties(schemas) {
        return (0, object_1.object)(schemas);
      }
      exports.objectWithoutOptionalProperties = objectWithoutOptionalProperties;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/object/index.js
  var require_object2 = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/object/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.property = exports.isProperty = exports.objectWithoutOptionalProperties = exports.object = exports.getObjectUtils = void 0;
      var object_1 = require_object();
      Object.defineProperty(exports, "getObjectUtils", { enumerable: true, get: function() {
        return object_1.getObjectUtils;
      } });
      Object.defineProperty(exports, "object", { enumerable: true, get: function() {
        return object_1.object;
      } });
      var objectWithoutOptionalProperties_1 = require_objectWithoutOptionalProperties();
      Object.defineProperty(exports, "objectWithoutOptionalProperties", { enumerable: true, get: function() {
        return objectWithoutOptionalProperties_1.objectWithoutOptionalProperties;
      } });
      var property_1 = require_property();
      Object.defineProperty(exports, "isProperty", { enumerable: true, get: function() {
        return property_1.isProperty;
      } });
      Object.defineProperty(exports, "property", { enumerable: true, get: function() {
        return property_1.property;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/lazy/lazyObject.js
  var require_lazyObject = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/lazy/lazyObject.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.lazyObject = void 0;
      var object_1 = require_object2();
      var object_like_1 = require_object_like();
      var schema_utils_1 = require_schema_utils();
      var lazy_1 = require_lazy();
      function lazyObject(getter) {
        const baseSchema = Object.assign(Object.assign({}, (0, lazy_1.constructLazyBaseSchema)(getter)), { _getRawProperties: () => __awaiter3(this, void 0, void 0, function* () {
          return (yield (0, lazy_1.getMemoizedSchema)(getter))._getRawProperties();
        }), _getParsedProperties: () => __awaiter3(this, void 0, void 0, function* () {
          return (yield (0, lazy_1.getMemoizedSchema)(getter))._getParsedProperties();
        }) });
        return Object.assign(Object.assign(Object.assign(Object.assign({}, baseSchema), (0, schema_utils_1.getSchemaUtils)(baseSchema)), (0, object_like_1.getObjectLikeUtils)(baseSchema)), (0, object_1.getObjectUtils)(baseSchema));
      }
      exports.lazyObject = lazyObject;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/lazy/index.js
  var require_lazy2 = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/lazy/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.lazyObject = exports.lazy = void 0;
      var lazy_1 = require_lazy();
      Object.defineProperty(exports, "lazy", { enumerable: true, get: function() {
        return lazy_1.lazy;
      } });
      var lazyObject_1 = require_lazyObject();
      Object.defineProperty(exports, "lazyObject", { enumerable: true, get: function() {
        return lazyObject_1.lazyObject;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/list/list.js
  var require_list = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/list/list.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.list = void 0;
      var Schema_1 = require_Schema();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      var maybeSkipValidation_1 = require_maybeSkipValidation();
      var schema_utils_1 = require_schema_utils();
      function list(schema) {
        const baseSchema = {
          parse: (raw, opts) => __awaiter3(this, void 0, void 0, function* () {
            return validateAndTransformArray(raw, (item, index4) => {
              var _a2;
              return schema.parse(item, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...(_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [], `[${index4}]`] }));
            });
          }),
          json: (parsed, opts) => validateAndTransformArray(parsed, (item, index4) => {
            var _a2;
            return schema.json(item, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...(_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [], `[${index4}]`] }));
          }),
          getType: () => Schema_1.SchemaType.LIST
        };
        return Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema));
      }
      exports.list = list;
      function validateAndTransformArray(value14, transformItem) {
        return __awaiter3(this, void 0, void 0, function* () {
          if (!Array.isArray(value14)) {
            return {
              ok: false,
              errors: [
                {
                  message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value14, "list"),
                  path: []
                }
              ]
            };
          }
          const maybeValidItems = yield Promise.all(value14.map((item, index4) => transformItem(item, index4)));
          return maybeValidItems.reduce((acc, item) => {
            if (acc.ok && item.ok) {
              return {
                ok: true,
                value: [...acc.value, item.value]
              };
            }
            const errors = [];
            if (!acc.ok) {
              errors.push(...acc.errors);
            }
            if (!item.ok) {
              errors.push(...item.errors);
            }
            return {
              ok: false,
              errors
            };
          }, { ok: true, value: [] });
        });
      }
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/list/index.js
  var require_list2 = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/list/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.list = void 0;
      var list_1 = require_list();
      Object.defineProperty(exports, "list", { enumerable: true, get: function() {
        return list_1.list;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/literals/stringLiteral.js
  var require_stringLiteral = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/literals/stringLiteral.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.stringLiteral = void 0;
      var Schema_1 = require_Schema();
      var createIdentitySchemaCreator_1 = require_createIdentitySchemaCreator();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      function stringLiteral(literal) {
        const schemaCreator = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.STRING_LITERAL, (value14, { breadcrumbsPrefix = [] } = {}) => {
          if (value14 === literal) {
            return {
              ok: true,
              value: literal
            };
          } else {
            return {
              ok: false,
              errors: [
                {
                  path: breadcrumbsPrefix,
                  message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value14, `"${literal}"`)
                }
              ]
            };
          }
        });
        return schemaCreator();
      }
      exports.stringLiteral = stringLiteral;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/literals/booleanLiteral.js
  var require_booleanLiteral = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/literals/booleanLiteral.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.booleanLiteral = void 0;
      var Schema_1 = require_Schema();
      var createIdentitySchemaCreator_1 = require_createIdentitySchemaCreator();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      function booleanLiteral(literal) {
        const schemaCreator = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.BOOLEAN_LITERAL, (value14, { breadcrumbsPrefix = [] } = {}) => {
          if (value14 === literal) {
            return {
              ok: true,
              value: literal
            };
          } else {
            return {
              ok: false,
              errors: [
                {
                  path: breadcrumbsPrefix,
                  message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value14, `${literal.toString()}`)
                }
              ]
            };
          }
        });
        return schemaCreator();
      }
      exports.booleanLiteral = booleanLiteral;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/literals/index.js
  var require_literals = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/literals/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.booleanLiteral = exports.stringLiteral = void 0;
      var stringLiteral_1 = require_stringLiteral();
      Object.defineProperty(exports, "stringLiteral", { enumerable: true, get: function() {
        return stringLiteral_1.stringLiteral;
      } });
      var booleanLiteral_1 = require_booleanLiteral();
      Object.defineProperty(exports, "booleanLiteral", { enumerable: true, get: function() {
        return booleanLiteral_1.booleanLiteral;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/primitives/any.js
  var require_any = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/primitives/any.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.any = void 0;
      var Schema_1 = require_Schema();
      var createIdentitySchemaCreator_1 = require_createIdentitySchemaCreator();
      exports.any = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.ANY, (value14) => ({ ok: true, value: value14 }));
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/primitives/boolean.js
  var require_boolean = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/primitives/boolean.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.boolean = void 0;
      var Schema_1 = require_Schema();
      var createIdentitySchemaCreator_1 = require_createIdentitySchemaCreator();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      exports.boolean = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.BOOLEAN, (value14, { breadcrumbsPrefix = [] } = {}) => {
        if (typeof value14 === "boolean") {
          return {
            ok: true,
            value: value14
          };
        } else {
          return {
            ok: false,
            errors: [
              {
                path: breadcrumbsPrefix,
                message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value14, "boolean")
              }
            ]
          };
        }
      });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/primitives/number.js
  var require_number = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/primitives/number.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.number = void 0;
      var Schema_1 = require_Schema();
      var createIdentitySchemaCreator_1 = require_createIdentitySchemaCreator();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      exports.number = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.NUMBER, (value14, { breadcrumbsPrefix = [] } = {}) => {
        if (typeof value14 === "number") {
          return {
            ok: true,
            value: value14
          };
        } else {
          return {
            ok: false,
            errors: [
              {
                path: breadcrumbsPrefix,
                message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value14, "number")
              }
            ]
          };
        }
      });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/primitives/string.js
  var require_string = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/primitives/string.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.string = void 0;
      var Schema_1 = require_Schema();
      var createIdentitySchemaCreator_1 = require_createIdentitySchemaCreator();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      exports.string = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.STRING, (value14, { breadcrumbsPrefix = [] } = {}) => {
        if (typeof value14 === "string") {
          return {
            ok: true,
            value: value14
          };
        } else {
          return {
            ok: false,
            errors: [
              {
                path: breadcrumbsPrefix,
                message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value14, "string")
              }
            ]
          };
        }
      });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/primitives/unknown.js
  var require_unknown = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/primitives/unknown.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.unknown = void 0;
      var Schema_1 = require_Schema();
      var createIdentitySchemaCreator_1 = require_createIdentitySchemaCreator();
      exports.unknown = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.UNKNOWN, (value14) => ({ ok: true, value: value14 }));
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/primitives/index.js
  var require_primitives = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/primitives/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.unknown = exports.string = exports.number = exports.boolean = exports.any = void 0;
      var any_1 = require_any();
      Object.defineProperty(exports, "any", { enumerable: true, get: function() {
        return any_1.any;
      } });
      var boolean_1 = require_boolean();
      Object.defineProperty(exports, "boolean", { enumerable: true, get: function() {
        return boolean_1.boolean;
      } });
      var number_1 = require_number();
      Object.defineProperty(exports, "number", { enumerable: true, get: function() {
        return number_1.number;
      } });
      var string_1 = require_string();
      Object.defineProperty(exports, "string", { enumerable: true, get: function() {
        return string_1.string;
      } });
      var unknown_1 = require_unknown();
      Object.defineProperty(exports, "unknown", { enumerable: true, get: function() {
        return unknown_1.unknown;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/record/record.js
  var require_record = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/record/record.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.record = void 0;
      var Schema_1 = require_Schema();
      var entries_1 = require_entries();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      var isPlainObject_1 = require_isPlainObject();
      var maybeSkipValidation_1 = require_maybeSkipValidation();
      var schema_utils_1 = require_schema_utils();
      function record(keySchema, valueSchema) {
        const baseSchema = {
          parse: (raw, opts) => __awaiter3(this, void 0, void 0, function* () {
            return validateAndTransformRecord({
              value: raw,
              isKeyNumeric: (yield keySchema.getType()) === Schema_1.SchemaType.NUMBER,
              transformKey: (key2) => {
                var _a2;
                return keySchema.parse(key2, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...(_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [], `${key2} (key)`] }));
              },
              transformValue: (value14, key2) => {
                var _a2;
                return valueSchema.parse(value14, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...(_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [], `${key2}`] }));
              },
              breadcrumbsPrefix: opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix
            });
          }),
          json: (parsed, opts) => __awaiter3(this, void 0, void 0, function* () {
            return validateAndTransformRecord({
              value: parsed,
              isKeyNumeric: (yield keySchema.getType()) === Schema_1.SchemaType.NUMBER,
              transformKey: (key2) => {
                var _a2;
                return keySchema.json(key2, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...(_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [], `${key2} (key)`] }));
              },
              transformValue: (value14, key2) => {
                var _a2;
                return valueSchema.json(value14, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...(_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [], `${key2}`] }));
              },
              breadcrumbsPrefix: opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix
            });
          }),
          getType: () => Schema_1.SchemaType.RECORD
        };
        return Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema));
      }
      exports.record = record;
      function validateAndTransformRecord({ value: value14, isKeyNumeric, transformKey, transformValue, breadcrumbsPrefix = [] }) {
        return __awaiter3(this, void 0, void 0, function* () {
          if (!(0, isPlainObject_1.isPlainObject)(value14)) {
            return {
              ok: false,
              errors: [
                {
                  path: breadcrumbsPrefix,
                  message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value14, "object")
                }
              ]
            };
          }
          return (0, entries_1.entries)(value14).reduce((accPromise, [stringKey, value15]) => __awaiter3(this, void 0, void 0, function* () {
            if (value15 == null) {
              return accPromise;
            }
            const acc = yield accPromise;
            let key2 = stringKey;
            if (isKeyNumeric) {
              const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
              if (!isNaN(numberKey)) {
                key2 = numberKey;
              }
            }
            const transformedKey = yield transformKey(key2);
            const transformedValue = yield transformValue(value15, key2);
            if (acc.ok && transformedKey.ok && transformedValue.ok) {
              return {
                ok: true,
                value: Object.assign(Object.assign({}, acc.value), { [transformedKey.value]: transformedValue.value })
              };
            }
            const errors = [];
            if (!acc.ok) {
              errors.push(...acc.errors);
            }
            if (!transformedKey.ok) {
              errors.push(...transformedKey.errors);
            }
            if (!transformedValue.ok) {
              errors.push(...transformedValue.errors);
            }
            return {
              ok: false,
              errors
            };
          }), Promise.resolve({ ok: true, value: {} }));
        });
      }
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/record/index.js
  var require_record2 = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/record/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.record = void 0;
      var record_1 = require_record();
      Object.defineProperty(exports, "record", { enumerable: true, get: function() {
        return record_1.record;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/set/set.js
  var require_set = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/set/set.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.set = void 0;
      var Schema_1 = require_Schema();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      var maybeSkipValidation_1 = require_maybeSkipValidation();
      var list_1 = require_list2();
      var schema_utils_1 = require_schema_utils();
      function set(schema) {
        const listSchema = (0, list_1.list)(schema);
        const baseSchema = {
          parse: (raw, opts) => __awaiter3(this, void 0, void 0, function* () {
            const parsedList = yield listSchema.parse(raw, opts);
            if (parsedList.ok) {
              return {
                ok: true,
                value: new Set(parsedList.value)
              };
            } else {
              return parsedList;
            }
          }),
          json: (parsed, opts) => __awaiter3(this, void 0, void 0, function* () {
            var _a2;
            if (!(parsed instanceof Set)) {
              return {
                ok: false,
                errors: [
                  {
                    path: (_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [],
                    message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(parsed, "Set")
                  }
                ]
              };
            }
            const jsonList = yield listSchema.json([...parsed], opts);
            return jsonList;
          }),
          getType: () => Schema_1.SchemaType.SET
        };
        return Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema));
      }
      exports.set = set;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/set/index.js
  var require_set2 = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/set/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.set = void 0;
      var set_1 = require_set();
      Object.defineProperty(exports, "set", { enumerable: true, get: function() {
        return set_1.set;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/undiscriminated-union/undiscriminatedUnion.js
  var require_undiscriminatedUnion = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/undiscriminated-union/undiscriminatedUnion.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.undiscriminatedUnion = void 0;
      var Schema_1 = require_Schema();
      var maybeSkipValidation_1 = require_maybeSkipValidation();
      var schema_utils_1 = require_schema_utils();
      function undiscriminatedUnion(schemas) {
        const baseSchema = {
          parse: (raw, opts) => __awaiter3(this, void 0, void 0, function* () {
            return validateAndTransformUndiscriminatedUnion((schema, opts2) => schema.parse(raw, opts2), schemas, opts);
          }),
          json: (parsed, opts) => __awaiter3(this, void 0, void 0, function* () {
            return validateAndTransformUndiscriminatedUnion((schema, opts2) => schema.json(parsed, opts2), schemas, opts);
          }),
          getType: () => Schema_1.SchemaType.UNDISCRIMINATED_UNION
        };
        return Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema));
      }
      exports.undiscriminatedUnion = undiscriminatedUnion;
      function validateAndTransformUndiscriminatedUnion(transform, schemas, opts) {
        return __awaiter3(this, void 0, void 0, function* () {
          const errors = [];
          for (const [index4, schema] of schemas.entries()) {
            const transformed = yield transform(schema, Object.assign(Object.assign({}, opts), { skipValidation: false }));
            if (transformed.ok) {
              return transformed;
            } else {
              for (const error4 of transformed.errors) {
                errors.push({
                  path: error4.path,
                  message: `[Variant ${index4}] ${error4.message}`
                });
              }
            }
          }
          return {
            ok: false,
            errors
          };
        });
      }
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/undiscriminated-union/index.js
  var require_undiscriminated_union = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/undiscriminated-union/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.undiscriminatedUnion = void 0;
      var undiscriminatedUnion_1 = require_undiscriminatedUnion();
      Object.defineProperty(exports, "undiscriminatedUnion", { enumerable: true, get: function() {
        return undiscriminatedUnion_1.undiscriminatedUnion;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/union/discriminant.js
  var require_discriminant = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/union/discriminant.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.discriminant = void 0;
      function discriminant(parsedDiscriminant, rawDiscriminant) {
        return {
          parsedDiscriminant,
          rawDiscriminant
        };
      }
      exports.discriminant = discriminant;
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/union/union.js
  var require_union = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/union/union.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      var __rest3 = exports && exports.__rest || function(s3, e3) {
        var t3 = {};
        for (var p4 in s3) if (Object.prototype.hasOwnProperty.call(s3, p4) && e3.indexOf(p4) < 0)
          t3[p4] = s3[p4];
        if (s3 != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i4 = 0, p4 = Object.getOwnPropertySymbols(s3); i4 < p4.length; i4++) {
            if (e3.indexOf(p4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s3, p4[i4]))
              t3[p4[i4]] = s3[p4[i4]];
          }
        return t3;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.union = void 0;
      var Schema_1 = require_Schema();
      var getErrorMessageForIncorrectType_1 = require_getErrorMessageForIncorrectType();
      var isPlainObject_1 = require_isPlainObject();
      var keys_1 = require_keys();
      var maybeSkipValidation_1 = require_maybeSkipValidation();
      var enum_1 = require_enum2();
      var object_like_1 = require_object_like();
      var schema_utils_1 = require_schema_utils();
      function union3(discriminant, union4) {
        const rawDiscriminant = typeof discriminant === "string" ? discriminant : discriminant.rawDiscriminant;
        const parsedDiscriminant = typeof discriminant === "string" ? discriminant : discriminant.parsedDiscriminant;
        const discriminantValueSchema = (0, enum_1.enum_)((0, keys_1.keys)(union4));
        const baseSchema = {
          parse: (raw, opts) => __awaiter3(this, void 0, void 0, function* () {
            return transformAndValidateUnion({
              value: raw,
              discriminant: rawDiscriminant,
              transformedDiscriminant: parsedDiscriminant,
              transformDiscriminantValue: (discriminantValue) => {
                var _a2;
                return discriminantValueSchema.parse(discriminantValue, {
                  allowUnrecognizedEnumValues: opts === null || opts === void 0 ? void 0 : opts.allowUnrecognizedUnionMembers,
                  breadcrumbsPrefix: [...(_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [], rawDiscriminant]
                });
              },
              getAdditionalPropertiesSchema: (discriminantValue) => union4[discriminantValue],
              allowUnrecognizedUnionMembers: opts === null || opts === void 0 ? void 0 : opts.allowUnrecognizedUnionMembers,
              transformAdditionalProperties: (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts),
              breadcrumbsPrefix: opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix
            });
          }),
          json: (parsed, opts) => __awaiter3(this, void 0, void 0, function* () {
            return transformAndValidateUnion({
              value: parsed,
              discriminant: parsedDiscriminant,
              transformedDiscriminant: rawDiscriminant,
              transformDiscriminantValue: (discriminantValue) => {
                var _a2;
                return discriminantValueSchema.json(discriminantValue, {
                  allowUnrecognizedEnumValues: opts === null || opts === void 0 ? void 0 : opts.allowUnrecognizedUnionMembers,
                  breadcrumbsPrefix: [...(_a2 = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a2 !== void 0 ? _a2 : [], parsedDiscriminant]
                });
              },
              getAdditionalPropertiesSchema: (discriminantValue) => union4[discriminantValue],
              allowUnrecognizedUnionMembers: opts === null || opts === void 0 ? void 0 : opts.allowUnrecognizedUnionMembers,
              transformAdditionalProperties: (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts),
              breadcrumbsPrefix: opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix
            });
          }),
          getType: () => Schema_1.SchemaType.UNION
        };
        return Object.assign(Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema)), (0, object_like_1.getObjectLikeUtils)(baseSchema));
      }
      exports.union = union3;
      function transformAndValidateUnion({ value: value14, discriminant, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnrecognizedUnionMembers = false, transformAdditionalProperties, breadcrumbsPrefix = [] }) {
        return __awaiter3(this, void 0, void 0, function* () {
          if (!(0, isPlainObject_1.isPlainObject)(value14)) {
            return {
              ok: false,
              errors: [
                {
                  path: breadcrumbsPrefix,
                  message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value14, "object")
                }
              ]
            };
          }
          const _a2 = value14, _b = discriminant, discriminantValue = _a2[_b], additionalProperties = __rest3(_a2, [typeof _b === "symbol" ? _b : _b + ""]);
          if (discriminantValue == null) {
            return {
              ok: false,
              errors: [
                {
                  path: breadcrumbsPrefix,
                  message: `Missing discriminant ("${discriminant}")`
                }
              ]
            };
          }
          const transformedDiscriminantValue = yield transformDiscriminantValue(discriminantValue);
          if (!transformedDiscriminantValue.ok) {
            return {
              ok: false,
              errors: transformedDiscriminantValue.errors
            };
          }
          const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
          if (additionalPropertiesSchema == null) {
            if (allowUnrecognizedUnionMembers) {
              return {
                ok: true,
                value: Object.assign({ [transformedDiscriminant]: transformedDiscriminantValue.value }, additionalProperties)
              };
            } else {
              return {
                ok: false,
                errors: [
                  {
                    path: [...breadcrumbsPrefix, discriminant],
                    message: "Unexpected discriminant value"
                  }
                ]
              };
            }
          }
          const transformedAdditionalProperties = yield transformAdditionalProperties(additionalProperties, additionalPropertiesSchema);
          if (!transformedAdditionalProperties.ok) {
            return transformedAdditionalProperties;
          }
          return {
            ok: true,
            value: Object.assign({ [transformedDiscriminant]: discriminantValue }, transformedAdditionalProperties.value)
          };
        });
      }
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/union/index.js
  var require_union2 = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/union/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.union = exports.discriminant = void 0;
      var discriminant_1 = require_discriminant();
      Object.defineProperty(exports, "discriminant", { enumerable: true, get: function() {
        return discriminant_1.discriminant;
      } });
      var union_1 = require_union();
      Object.defineProperty(exports, "union", { enumerable: true, get: function() {
        return union_1.union;
      } });
    }
  });

  // node_modules/cohere-ai/core/schemas/builders/index.js
  var require_builders = __commonJS({
    "node_modules/cohere-ai/core/schemas/builders/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_date2(), exports);
      __exportStar3(require_enum2(), exports);
      __exportStar3(require_lazy2(), exports);
      __exportStar3(require_list2(), exports);
      __exportStar3(require_literals(), exports);
      __exportStar3(require_object2(), exports);
      __exportStar3(require_object_like(), exports);
      __exportStar3(require_primitives(), exports);
      __exportStar3(require_record2(), exports);
      __exportStar3(require_schema_utils(), exports);
      __exportStar3(require_set2(), exports);
      __exportStar3(require_undiscriminated_union(), exports);
      __exportStar3(require_union2(), exports);
    }
  });

  // node_modules/cohere-ai/core/schemas/index.js
  var require_schemas = __commonJS({
    "node_modules/cohere-ai/core/schemas/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_builders(), exports);
    }
  });

  // node_modules/cohere-ai/core/index.js
  var require_core = __commonJS({
    "node_modules/cohere-ai/core/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.serialization = void 0;
      __exportStar3(require_fetcher(), exports);
      __exportStar3(require_auth2(), exports);
      __exportStar3(require_streaming_fetcher(), exports);
      __exportStar3(require_runtime2(), exports);
      __exportStar3(require_form_data_utils(), exports);
      exports.serialization = __importStar3(require_schemas());
    }
  });

  // node_modules/cohere-ai/errors/CohereError.js
  var require_CohereError = __commonJS({
    "node_modules/cohere-ai/errors/CohereError.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CohereError = void 0;
      var CohereError = class _CohereError extends Error {
        constructor({ message: message2, statusCode, body: body2 }) {
          super(buildMessage({ message: message2, statusCode, body: body2 }));
          Object.setPrototypeOf(this, _CohereError.prototype);
          if (statusCode != null) {
            this.statusCode = statusCode;
          }
          if (body2 !== void 0) {
            this.body = body2;
          }
        }
      };
      exports.CohereError = CohereError;
      function buildMessage({ message: message2, statusCode, body: body2 }) {
        let lines = [];
        if (message2 != null) {
          lines.push(message2);
        }
        if (statusCode != null) {
          lines.push(`Status code: ${statusCode.toString()}`);
        }
        if (body2 != null) {
          lines.push(`Body: ${JSON.stringify(body2, void 0, 2)}`);
        }
        return lines.join("\n");
      }
    }
  });

  // node_modules/cohere-ai/errors/CohereTimeoutError.js
  var require_CohereTimeoutError = __commonJS({
    "node_modules/cohere-ai/errors/CohereTimeoutError.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CohereTimeoutError = void 0;
      var CohereTimeoutError = class _CohereTimeoutError extends Error {
        constructor() {
          super("Timeout");
          Object.setPrototypeOf(this, _CohereTimeoutError.prototype);
        }
      };
      exports.CohereTimeoutError = CohereTimeoutError;
    }
  });

  // node_modules/cohere-ai/errors/index.js
  var require_errors2 = __commonJS({
    "node_modules/cohere-ai/errors/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CohereTimeoutError = exports.CohereError = void 0;
      var CohereError_1 = require_CohereError();
      Object.defineProperty(exports, "CohereError", { enumerable: true, get: function() {
        return CohereError_1.CohereError;
      } });
      var CohereTimeoutError_1 = require_CohereTimeoutError();
      Object.defineProperty(exports, "CohereTimeoutError", { enumerable: true, get: function() {
        return CohereTimeoutError_1.CohereTimeoutError;
      } });
    }
  });

  // node_modules/cohere-ai/core/streaming-fetcher/streaming-utils.js
  var require_streaming_utils = __commonJS({
    "node_modules/cohere-ai/core/streaming-fetcher/streaming-utils.js"(exports) {
      "use strict";
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      var __asyncValues3 = exports && exports.__asyncValues || function(o3) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m3 = o3[Symbol.asyncIterator], i4;
        return m3 ? m3.call(o3) : (o3 = typeof __values === "function" ? __values(o3) : o3[Symbol.iterator](), i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
          return this;
        }, i4);
        function verb(n3) {
          i4[n3] = o3[n3] && function(v3) {
            return new Promise(function(resolve, reject) {
              v3 = o3[n3](v3), settle(resolve, reject, v3.done, v3.value);
            });
          };
        }
        function settle(resolve, reject, d3, v3) {
          Promise.resolve(v3).then(function(v5) {
            resolve({ value: v5, done: d3 });
          }, reject);
        }
      };
      var __await3 = exports && exports.__await || function(v3) {
        return this instanceof __await3 ? (this.v = v3, this) : new __await3(v3);
      };
      var __asyncGenerator3 = exports && exports.__asyncGenerator || function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g3 = generator.apply(thisArg, _arguments || []), i4, q4 = [];
        return i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
          return this;
        }, i4;
        function verb(n3) {
          if (g3[n3]) i4[n3] = function(v3) {
            return new Promise(function(a4, b4) {
              q4.push([n3, v3, a4, b4]) > 1 || resume(n3, v3);
            });
          };
        }
        function resume(n3, v3) {
          try {
            step3(g3[n3](v3));
          } catch (e3) {
            settle(q4[0][3], e3);
          }
        }
        function step3(r3) {
          r3.value instanceof __await3 ? Promise.resolve(r3.value.v).then(fulfill, reject) : settle(q4[0][2], r3);
        }
        function fulfill(value14) {
          resume("next", value14);
        }
        function reject(value14) {
          resume("throw", value14);
        }
        function settle(f3, v3) {
          if (f3(v3), q4.shift(), q4.length) resume(q4[0][0], q4[0][1]);
        }
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.readableStreamAsyncIterable = exports._decodeChunks = exports.LineDecoder = exports._iterSSEMessages = exports.StreamUtils = void 0;
      var errors_1 = require_errors2();
      var StreamUtils = class _StreamUtils {
        constructor(iterator2, controller) {
          this.iterator = iterator2;
          this.controller = controller;
        }
        static fromSSEResponse(response, controller) {
          let consumed = false;
          function iterator2() {
            return __asyncGenerator3(this, arguments, function* iterator_1() {
              var e_1, _a2;
              if (consumed) {
                throw new Error("Cannot iterate over a consumed stream, use `.tee()` to split the stream.");
              }
              consumed = true;
              let done = false;
              try {
                try {
                  for (var _b = __asyncValues3(_iterSSEMessages(response, controller)), _c; _c = yield __await3(_b.next()), !_c.done; ) {
                    const sse = _c.value;
                    if (done)
                      continue;
                    if (sse.data.startsWith("[DONE]")) {
                      done = true;
                      continue;
                    }
                    if (sse.event === null) {
                      let data;
                      try {
                        data = JSON.parse(sse.data);
                      } catch (e3) {
                        console.error(`Could not parse message into JSON:`, sse.data);
                        console.error(`From chunk:`, sse.raw);
                        throw e3;
                      }
                      if (data && data.error) {
                        throw new errors_1.CohereError({ message: `Error: ${data.error}` });
                      }
                      yield yield __await3(data);
                    } else {
                      let data;
                      try {
                        data = JSON.parse(sse.data);
                      } catch (e3) {
                        console.error(`Could not parse message into JSON:`, sse.data);
                        console.error(`From chunk:`, sse.raw);
                        throw e3;
                      }
                      if (sse.event == "error") {
                        throw new errors_1.CohereError({ message: `Error: ${data.message}, ${data.error}` });
                      }
                      yield yield __await3({ event: sse.event, data });
                    }
                  }
                } catch (e_1_1) {
                  e_1 = { error: e_1_1 };
                } finally {
                  try {
                    if (_c && !_c.done && (_a2 = _b.return)) yield __await3(_a2.call(_b));
                  } finally {
                    if (e_1) throw e_1.error;
                  }
                }
                done = true;
              } catch (e3) {
                if (e3 instanceof Error && e3.name === "AbortError")
                  return yield __await3(void 0);
                throw e3;
              } finally {
                if (!done)
                  controller === null || controller === void 0 ? void 0 : controller.abort();
              }
            });
          }
          return new _StreamUtils(iterator2, controller);
        }
        /**
         * Generates a Stream from a newline-separated ReadableStream
         * where each item is a JSON value.
         */
        static fromReadableStream(readableStream, controller) {
          let consumed = false;
          function iterLines() {
            return __asyncGenerator3(this, arguments, function* iterLines_1() {
              var e_2, _a2;
              const lineDecoder = new LineDecoder();
              const iter = readableStreamAsyncIterable(readableStream);
              try {
                for (var iter_1 = __asyncValues3(iter), iter_1_1; iter_1_1 = yield __await3(iter_1.next()), !iter_1_1.done; ) {
                  const chunk = iter_1_1.value;
                  for (const line of lineDecoder.decode(chunk)) {
                    yield yield __await3(line);
                  }
                }
              } catch (e_2_1) {
                e_2 = { error: e_2_1 };
              } finally {
                try {
                  if (iter_1_1 && !iter_1_1.done && (_a2 = iter_1.return)) yield __await3(_a2.call(iter_1));
                } finally {
                  if (e_2) throw e_2.error;
                }
              }
              for (const line of lineDecoder.flush()) {
                yield yield __await3(line);
              }
            });
          }
          function iterator2() {
            return __asyncGenerator3(this, arguments, function* iterator_2() {
              var e_3, _a2;
              if (consumed) {
                throw new Error("Cannot iterate over a consumed stream, use `.tee()` to split the stream.");
              }
              consumed = true;
              let done = false;
              try {
                try {
                  for (var _b = __asyncValues3(iterLines()), _c; _c = yield __await3(_b.next()), !_c.done; ) {
                    const line = _c.value;
                    if (done)
                      continue;
                    if (line)
                      yield yield __await3(JSON.parse(line));
                  }
                } catch (e_3_1) {
                  e_3 = { error: e_3_1 };
                } finally {
                  try {
                    if (_c && !_c.done && (_a2 = _b.return)) yield __await3(_a2.call(_b));
                  } finally {
                    if (e_3) throw e_3.error;
                  }
                }
                done = true;
              } catch (e3) {
                if (e3 instanceof Error && e3.name === "AbortError")
                  return yield __await3(void 0);
                throw e3;
              } finally {
                if (!done)
                  controller === null || controller === void 0 ? void 0 : controller.abort();
              }
            });
          }
          return new _StreamUtils(iterator2, controller);
        }
        [Symbol.asyncIterator]() {
          return this.iterator();
        }
        /**
         * Splits the stream into two streams which can be
         * independently read from at different speeds.
         */
        tee() {
          const left = [];
          const right = [];
          const iterator2 = this.iterator();
          const teeIterator = (queue) => {
            return {
              next: () => {
                if (queue.length === 0) {
                  const result = iterator2.next();
                  left.push(result);
                  right.push(result);
                }
                return queue.shift();
              }
            };
          };
          return [
            new _StreamUtils(() => teeIterator(left), this.controller),
            new _StreamUtils(() => teeIterator(right), this.controller)
          ];
        }
        /**
         * Converts this stream to a newline-separated ReadableStream of
         * JSON stringified values in the stream
         * which can be turned back into a Stream with `Stream.fromReadableStream()`.
         */
        toReadableStream() {
          const self2 = this;
          let iter;
          const encoder = new TextEncoder();
          return new ReadableStream({
            start() {
              return __awaiter3(this, void 0, void 0, function* () {
                iter = self2[Symbol.asyncIterator]();
              });
            },
            pull(ctrl) {
              return __awaiter3(this, void 0, void 0, function* () {
                try {
                  const { value: value14, done } = yield iter.next();
                  if (done)
                    return ctrl.close();
                  const bytes = encoder.encode(JSON.stringify(value14) + "\n");
                  ctrl.enqueue(bytes);
                } catch (err) {
                  ctrl.error(err);
                }
              });
            },
            cancel() {
              var _a2;
              return __awaiter3(this, void 0, void 0, function* () {
                yield (_a2 = iter.return) === null || _a2 === void 0 ? void 0 : _a2.call(iter);
              });
            }
          });
        }
      };
      exports.StreamUtils = StreamUtils;
      function _iterSSEMessages(response, controller) {
        return __asyncGenerator3(this, arguments, function* _iterSSEMessages_1() {
          var e_4, _a2;
          if (!response.body) {
            controller === null || controller === void 0 ? void 0 : controller.abort();
            throw new errors_1.CohereError({ message: `Attempted to iterate over a response with no body` });
          }
          const sseDecoder = new SSEDecoder();
          const lineDecoder = new LineDecoder();
          const iter = readableStreamAsyncIterable(response.body);
          try {
            for (var _b = __asyncValues3(iterSSEChunks(iter)), _c; _c = yield __await3(_b.next()), !_c.done; ) {
              const sseChunk = _c.value;
              for (const line of lineDecoder.decode(sseChunk)) {
                const sse = sseDecoder.decode(line);
                if (sse)
                  yield yield __await3(sse);
              }
            }
          } catch (e_4_1) {
            e_4 = { error: e_4_1 };
          } finally {
            try {
              if (_c && !_c.done && (_a2 = _b.return)) yield __await3(_a2.call(_b));
            } finally {
              if (e_4) throw e_4.error;
            }
          }
          for (const line of lineDecoder.flush()) {
            const sse = sseDecoder.decode(line);
            if (sse)
              yield yield __await3(sse);
          }
        });
      }
      exports._iterSSEMessages = _iterSSEMessages;
      function iterSSEChunks(iterator2) {
        return __asyncGenerator3(this, arguments, function* iterSSEChunks_1() {
          var e_5, _a2;
          let data = new Uint8Array();
          try {
            for (var iterator_3 = __asyncValues3(iterator2), iterator_3_1; iterator_3_1 = yield __await3(iterator_3.next()), !iterator_3_1.done; ) {
              const chunk = iterator_3_1.value;
              if (chunk == null) {
                continue;
              }
              const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk) : typeof chunk === "string" ? new TextEncoder().encode(chunk) : chunk;
              let newData = new Uint8Array(data.length + binaryChunk.length);
              newData.set(data);
              newData.set(binaryChunk, data.length);
              data = newData;
              let patternIndex;
              while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {
                yield yield __await3(data.slice(0, patternIndex));
                data = data.slice(patternIndex);
              }
            }
          } catch (e_5_1) {
            e_5 = { error: e_5_1 };
          } finally {
            try {
              if (iterator_3_1 && !iterator_3_1.done && (_a2 = iterator_3.return)) yield __await3(_a2.call(iterator_3));
            } finally {
              if (e_5) throw e_5.error;
            }
          }
          if (data.length > 0) {
            yield yield __await3(data);
          }
        });
      }
      function findDoubleNewlineIndex(buffer) {
        const newline = 10;
        const carriage = 13;
        for (let i4 = 0; i4 < buffer.length - 2; i4++) {
          if (buffer[i4] === newline && buffer[i4 + 1] === newline) {
            return i4 + 2;
          }
          if (buffer[i4] === carriage && buffer[i4 + 1] === carriage) {
            return i4 + 2;
          }
          if (buffer[i4] === carriage && buffer[i4 + 1] === newline && i4 + 3 < buffer.length && buffer[i4 + 2] === carriage && buffer[i4 + 3] === newline) {
            return i4 + 4;
          }
        }
        return -1;
      }
      var SSEDecoder = class {
        constructor() {
          this.event = null;
          this.data = [];
          this.chunks = [];
        }
        decode(line) {
          if (line.endsWith("\r")) {
            line = line.substring(0, line.length - 1);
          }
          if (!line) {
            if (!this.event && !this.data.length)
              return null;
            const sse = {
              event: this.event,
              data: this.data.join("\n"),
              raw: this.chunks
            };
            this.event = null;
            this.data = [];
            this.chunks = [];
            return sse;
          }
          this.chunks.push(line);
          if (line.startsWith(":")) {
            return null;
          }
          let [fieldname, _2, value14] = partition4(line, ":");
          if (value14.startsWith(" ")) {
            value14 = value14.substring(1);
          }
          if (fieldname === "event") {
            this.event = value14;
          } else if (fieldname === "data") {
            this.data.push(value14);
          }
          return null;
        }
      };
      var LineDecoder = class _LineDecoder {
        constructor() {
          this.buffer = [];
          this.trailingCR = false;
        }
        decode(chunk) {
          let text6 = this.decodeText(chunk);
          if (this.trailingCR) {
            text6 = "\r" + text6;
            this.trailingCR = false;
          }
          if (text6.endsWith("\r")) {
            this.trailingCR = true;
            text6 = text6.slice(0, -1);
          }
          if (!text6) {
            return [];
          }
          const trailingNewline = _LineDecoder.NEWLINE_CHARS.has(text6[text6.length - 1] || "");
          let lines = text6.split(_LineDecoder.NEWLINE_REGEXP);
          if (trailingNewline) {
            lines.pop();
          }
          if (lines.length === 1 && !trailingNewline) {
            this.buffer.push(lines[0]);
            return [];
          }
          if (this.buffer.length > 0) {
            lines = [this.buffer.join("") + lines[0], ...lines.slice(1)];
            this.buffer = [];
          }
          if (!trailingNewline) {
            this.buffer = [lines.pop() || ""];
          }
          return lines;
        }
        decodeText(bytes) {
          var _a2;
          if (bytes == null)
            return "";
          if (typeof bytes === "string")
            return bytes;
          if (typeof Buffer !== "undefined") {
            if (bytes instanceof Buffer) {
              return bytes.toString();
            }
            if (bytes instanceof Uint8Array) {
              return Buffer.from(bytes).toString();
            }
            throw new errors_1.CohereError({
              message: `Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global "Buffer" defined, which this library assumes to be Node. Please report this error.`
            });
          }
          if (typeof TextDecoder !== "undefined") {
            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {
              (_a2 = this.textDecoder) !== null && _a2 !== void 0 ? _a2 : this.textDecoder = new TextDecoder("utf8");
              return this.textDecoder.decode(bytes);
            }
            throw new errors_1.CohereError({
              message: `Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`
            });
          }
          throw new errors_1.CohereError({
            message: `Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`
          });
        }
        flush() {
          if (!this.buffer.length && !this.trailingCR) {
            return [];
          }
          const lines = [this.buffer.join("")];
          this.buffer = [];
          this.trailingCR = false;
          return lines;
        }
      };
      exports.LineDecoder = LineDecoder;
      LineDecoder.NEWLINE_CHARS = /* @__PURE__ */ new Set(["\n", "\r"]);
      LineDecoder.NEWLINE_REGEXP = /\r\n|[\n\r]/g;
      function _decodeChunks(chunks) {
        const decoder = new LineDecoder();
        const lines = [];
        for (const chunk of chunks) {
          lines.push(...decoder.decode(chunk));
        }
        return lines;
      }
      exports._decodeChunks = _decodeChunks;
      function partition4(str, delimiter) {
        const index4 = str.indexOf(delimiter);
        if (index4 !== -1) {
          return [str.substring(0, index4), delimiter, str.substring(index4 + delimiter.length)];
        }
        return [str, "", ""];
      }
      function readableStreamAsyncIterable(stream) {
        if (stream[Symbol.asyncIterator])
          return stream;
        const reader = stream.getReader();
        return {
          next() {
            return __awaiter3(this, void 0, void 0, function* () {
              try {
                const result = yield reader.read();
                if (result === null || result === void 0 ? void 0 : result.done)
                  reader.releaseLock();
                return result;
              } catch (e3) {
                reader.releaseLock();
                throw e3;
              }
            });
          },
          return() {
            return __awaiter3(this, void 0, void 0, function* () {
              const cancelPromise = reader.cancel();
              reader.releaseLock();
              yield cancelPromise;
              return { done: true, value: void 0 };
            });
          },
          [Symbol.asyncIterator]() {
            return this;
          }
        };
      }
      exports.readableStreamAsyncIterable = readableStreamAsyncIterable;
    }
  });

  // node_modules/cohere-ai/serialization/resources/embedJobs/types/CreateEmbedJobRequestTruncate.js
  var require_CreateEmbedJobRequestTruncate = __commonJS({
    "node_modules/cohere-ai/serialization/resources/embedJobs/types/CreateEmbedJobRequestTruncate.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CreateEmbedJobRequestTruncate = void 0;
      var core = __importStar3(require_core());
      exports.CreateEmbedJobRequestTruncate = core.serialization.enum_(["START", "END"]);
    }
  });

  // node_modules/cohere-ai/serialization/resources/embedJobs/types/index.js
  var require_types2 = __commonJS({
    "node_modules/cohere-ai/serialization/resources/embedJobs/types/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_CreateEmbedJobRequestTruncate(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/types/EmbedInputType.js
  var require_EmbedInputType = __commonJS({
    "node_modules/cohere-ai/serialization/types/EmbedInputType.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedInputType = void 0;
      var core = __importStar3(require_core());
      exports.EmbedInputType = core.serialization.enum_(["search_document", "search_query", "classification", "clustering"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/EmbeddingType.js
  var require_EmbeddingType = __commonJS({
    "node_modules/cohere-ai/serialization/types/EmbeddingType.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbeddingType = void 0;
      var core = __importStar3(require_core());
      exports.EmbeddingType = core.serialization.enum_(["float", "int8", "uint8", "binary", "ubinary"]);
    }
  });

  // node_modules/cohere-ai/serialization/resources/embedJobs/client/requests/CreateEmbedJobRequest.js
  var require_CreateEmbedJobRequest = __commonJS({
    "node_modules/cohere-ai/serialization/resources/embedJobs/client/requests/CreateEmbedJobRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CreateEmbedJobRequest = void 0;
      var core = __importStar3(require_core());
      var EmbedInputType_1 = require_EmbedInputType();
      var EmbeddingType_1 = require_EmbeddingType();
      var CreateEmbedJobRequestTruncate_1 = require_CreateEmbedJobRequestTruncate();
      exports.CreateEmbedJobRequest = core.serialization.object({
        model: core.serialization.string(),
        datasetId: core.serialization.property("dataset_id", core.serialization.string()),
        inputType: core.serialization.property("input_type", EmbedInputType_1.EmbedInputType),
        name: core.serialization.string().optional(),
        embeddingTypes: core.serialization.property("embedding_types", core.serialization.list(EmbeddingType_1.EmbeddingType).optional()),
        truncate: CreateEmbedJobRequestTruncate_1.CreateEmbedJobRequestTruncate.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/embedJobs/client/requests/index.js
  var require_requests = __commonJS({
    "node_modules/cohere-ai/serialization/resources/embedJobs/client/requests/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CreateEmbedJobRequest = void 0;
      var CreateEmbedJobRequest_1 = require_CreateEmbedJobRequest();
      Object.defineProperty(exports, "CreateEmbedJobRequest", { enumerable: true, get: function() {
        return CreateEmbedJobRequest_1.CreateEmbedJobRequest;
      } });
    }
  });

  // node_modules/cohere-ai/serialization/resources/embedJobs/client/index.js
  var require_client2 = __commonJS({
    "node_modules/cohere-ai/serialization/resources/embedJobs/client/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_requests(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/resources/embedJobs/index.js
  var require_embedJobs = __commonJS({
    "node_modules/cohere-ai/serialization/resources/embedJobs/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_types2(), exports);
      __exportStar3(require_client2(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/types/DatasetType.js
  var require_DatasetType = __commonJS({
    "node_modules/cohere-ai/serialization/types/DatasetType.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DatasetType = void 0;
      var core = __importStar3(require_core());
      exports.DatasetType = core.serialization.enum_([
        "embed-input",
        "embed-result",
        "cluster-result",
        "cluster-outliers",
        "reranker-finetune-input",
        "single-label-classification-finetune-input",
        "chat-finetune-input",
        "multi-label-classification-finetune-input"
      ]);
    }
  });

  // node_modules/cohere-ai/serialization/types/DatasetValidationStatus.js
  var require_DatasetValidationStatus = __commonJS({
    "node_modules/cohere-ai/serialization/types/DatasetValidationStatus.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DatasetValidationStatus = void 0;
      var core = __importStar3(require_core());
      exports.DatasetValidationStatus = core.serialization.enum_(["unknown", "queued", "processing", "failed", "validated", "skipped"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/DatasetPart.js
  var require_DatasetPart = __commonJS({
    "node_modules/cohere-ai/serialization/types/DatasetPart.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DatasetPart = void 0;
      var core = __importStar3(require_core());
      exports.DatasetPart = core.serialization.object({
        id: core.serialization.string(),
        name: core.serialization.string(),
        url: core.serialization.string().optional(),
        index: core.serialization.number().optional(),
        sizeBytes: core.serialization.property("size_bytes", core.serialization.number().optional()),
        numRows: core.serialization.property("num_rows", core.serialization.number().optional()),
        originalUrl: core.serialization.property("original_url", core.serialization.string().optional()),
        samples: core.serialization.list(core.serialization.string()).optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/Dataset.js
  var require_Dataset = __commonJS({
    "node_modules/cohere-ai/serialization/types/Dataset.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Dataset = void 0;
      var core = __importStar3(require_core());
      var DatasetType_1 = require_DatasetType();
      var DatasetValidationStatus_1 = require_DatasetValidationStatus();
      var DatasetPart_1 = require_DatasetPart();
      exports.Dataset = core.serialization.object({
        id: core.serialization.string(),
        name: core.serialization.string(),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date()),
        datasetType: core.serialization.property("dataset_type", DatasetType_1.DatasetType),
        validationStatus: core.serialization.property("validation_status", DatasetValidationStatus_1.DatasetValidationStatus),
        validationError: core.serialization.property("validation_error", core.serialization.string().optional()),
        schema: core.serialization.string().optional(),
        requiredFields: core.serialization.property("required_fields", core.serialization.list(core.serialization.string()).optional()),
        preserveFields: core.serialization.property("preserve_fields", core.serialization.list(core.serialization.string()).optional()),
        datasetParts: core.serialization.property("dataset_parts", core.serialization.list(DatasetPart_1.DatasetPart).optional()),
        validationWarnings: core.serialization.property("validation_warnings", core.serialization.list(core.serialization.string()).optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/datasets/types/DatasetsListResponse.js
  var require_DatasetsListResponse = __commonJS({
    "node_modules/cohere-ai/serialization/resources/datasets/types/DatasetsListResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DatasetsListResponse = void 0;
      var core = __importStar3(require_core());
      var Dataset_1 = require_Dataset();
      exports.DatasetsListResponse = core.serialization.object({
        datasets: core.serialization.list(Dataset_1.Dataset).optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/datasets/types/DatasetsCreateResponseDatasetPartsItem.js
  var require_DatasetsCreateResponseDatasetPartsItem = __commonJS({
    "node_modules/cohere-ai/serialization/resources/datasets/types/DatasetsCreateResponseDatasetPartsItem.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DatasetsCreateResponseDatasetPartsItem = void 0;
      var core = __importStar3(require_core());
      exports.DatasetsCreateResponseDatasetPartsItem = core.serialization.object({
        name: core.serialization.string().optional(),
        numRows: core.serialization.property("num_rows", core.serialization.number().optional()),
        samples: core.serialization.list(core.serialization.string()).optional(),
        partKind: core.serialization.property("part_kind", core.serialization.string().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/datasets/types/DatasetsCreateResponse.js
  var require_DatasetsCreateResponse = __commonJS({
    "node_modules/cohere-ai/serialization/resources/datasets/types/DatasetsCreateResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DatasetsCreateResponse = void 0;
      var core = __importStar3(require_core());
      exports.DatasetsCreateResponse = core.serialization.object({
        id: core.serialization.string().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/datasets/types/DatasetsGetUsageResponse.js
  var require_DatasetsGetUsageResponse = __commonJS({
    "node_modules/cohere-ai/serialization/resources/datasets/types/DatasetsGetUsageResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DatasetsGetUsageResponse = void 0;
      var core = __importStar3(require_core());
      exports.DatasetsGetUsageResponse = core.serialization.object({
        organizationUsage: core.serialization.property("organization_usage", core.serialization.number().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/datasets/types/DatasetsGetResponse.js
  var require_DatasetsGetResponse = __commonJS({
    "node_modules/cohere-ai/serialization/resources/datasets/types/DatasetsGetResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DatasetsGetResponse = void 0;
      var core = __importStar3(require_core());
      var Dataset_1 = require_Dataset();
      exports.DatasetsGetResponse = core.serialization.object({
        dataset: Dataset_1.Dataset
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/datasets/types/index.js
  var require_types3 = __commonJS({
    "node_modules/cohere-ai/serialization/resources/datasets/types/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_DatasetsListResponse(), exports);
      __exportStar3(require_DatasetsCreateResponseDatasetPartsItem(), exports);
      __exportStar3(require_DatasetsCreateResponse(), exports);
      __exportStar3(require_DatasetsGetUsageResponse(), exports);
      __exportStar3(require_DatasetsGetResponse(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/resources/datasets/client/delete.js
  var require_delete = __commonJS({
    "node_modules/cohere-ai/serialization/resources/datasets/client/delete.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Response = void 0;
      var core = __importStar3(require_core());
      exports.Response = core.serialization.record(core.serialization.string(), core.serialization.unknown());
    }
  });

  // node_modules/cohere-ai/serialization/resources/datasets/client/index.js
  var require_client3 = __commonJS({
    "node_modules/cohere-ai/serialization/resources/datasets/client/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.delete = void 0;
      exports.delete = __importStar3(require_delete());
    }
  });

  // node_modules/cohere-ai/serialization/resources/datasets/index.js
  var require_datasets = __commonJS({
    "node_modules/cohere-ai/serialization/resources/datasets/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_types3(), exports);
      __exportStar3(require_client3(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/BaseType.js
  var require_BaseType = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/BaseType.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.BaseType = void 0;
      var core = __importStar3(require_core());
      exports.BaseType = core.serialization.enum_([
        "BASE_TYPE_UNSPECIFIED",
        "BASE_TYPE_GENERATIVE",
        "BASE_TYPE_CLASSIFICATION",
        "BASE_TYPE_RERANK",
        "BASE_TYPE_CHAT"
      ]);
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/Strategy.js
  var require_Strategy = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/Strategy.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Strategy = void 0;
      var core = __importStar3(require_core());
      exports.Strategy = core.serialization.enum_(["STRATEGY_UNSPECIFIED", "STRATEGY_VANILLA", "STRATEGY_TFEW"]);
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/BaseModel.js
  var require_BaseModel = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/BaseModel.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.BaseModel = void 0;
      var core = __importStar3(require_core());
      var BaseType_1 = require_BaseType();
      var Strategy_1 = require_Strategy();
      exports.BaseModel = core.serialization.object({
        name: core.serialization.string().optional(),
        version: core.serialization.string().optional(),
        baseType: core.serialization.property("base_type", BaseType_1.BaseType),
        strategy: Strategy_1.Strategy.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/Hyperparameters.js
  var require_Hyperparameters = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/Hyperparameters.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Hyperparameters = void 0;
      var core = __importStar3(require_core());
      exports.Hyperparameters = core.serialization.object({
        earlyStoppingPatience: core.serialization.property("early_stopping_patience", core.serialization.number().optional()),
        earlyStoppingThreshold: core.serialization.property("early_stopping_threshold", core.serialization.number().optional()),
        trainBatchSize: core.serialization.property("train_batch_size", core.serialization.number().optional()),
        trainEpochs: core.serialization.property("train_epochs", core.serialization.number().optional()),
        learningRate: core.serialization.property("learning_rate", core.serialization.number().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/Settings.js
  var require_Settings = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/Settings.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Settings = void 0;
      var core = __importStar3(require_core());
      var BaseModel_1 = require_BaseModel();
      var Hyperparameters_1 = require_Hyperparameters();
      exports.Settings = core.serialization.object({
        baseModel: core.serialization.property("base_model", BaseModel_1.BaseModel),
        datasetId: core.serialization.property("dataset_id", core.serialization.string()),
        hyperparameters: Hyperparameters_1.Hyperparameters.optional(),
        multiLabel: core.serialization.property("multi_label", core.serialization.boolean().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/Status.js
  var require_Status = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/Status.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Status = void 0;
      var core = __importStar3(require_core());
      exports.Status = core.serialization.enum_([
        "STATUS_UNSPECIFIED",
        "STATUS_FINETUNING",
        "STATUS_DEPLOYING_API",
        "STATUS_READY",
        "STATUS_FAILED",
        "STATUS_DELETED",
        "STATUS_TEMPORARILY_OFFLINE",
        "STATUS_PAUSED",
        "STATUS_QUEUED"
      ]);
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/FinetunedModel.js
  var require_FinetunedModel = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/FinetunedModel.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.FinetunedModel = void 0;
      var core = __importStar3(require_core());
      var Settings_1 = require_Settings();
      var Status_1 = require_Status();
      exports.FinetunedModel = core.serialization.object({
        id: core.serialization.string().optional(),
        name: core.serialization.string(),
        creatorId: core.serialization.property("creator_id", core.serialization.string().optional()),
        organizationId: core.serialization.property("organization_id", core.serialization.string().optional()),
        settings: Settings_1.Settings,
        status: Status_1.Status.optional(),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
        completedAt: core.serialization.property("completed_at", core.serialization.date().optional()),
        lastUsed: core.serialization.property("last_used", core.serialization.date().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/ListFinetunedModelsResponse.js
  var require_ListFinetunedModelsResponse = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/ListFinetunedModelsResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ListFinetunedModelsResponse = void 0;
      var core = __importStar3(require_core());
      var FinetunedModel_1 = require_FinetunedModel();
      exports.ListFinetunedModelsResponse = core.serialization.object({
        finetunedModels: core.serialization.property("finetuned_models", core.serialization.list(FinetunedModel_1.FinetunedModel).optional()),
        nextPageToken: core.serialization.property("next_page_token", core.serialization.string().optional()),
        totalSize: core.serialization.property("total_size", core.serialization.number().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/CreateFinetunedModelResponse.js
  var require_CreateFinetunedModelResponse = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/CreateFinetunedModelResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CreateFinetunedModelResponse = void 0;
      var core = __importStar3(require_core());
      var FinetunedModel_1 = require_FinetunedModel();
      exports.CreateFinetunedModelResponse = core.serialization.object({
        finetunedModel: core.serialization.property("finetuned_model", FinetunedModel_1.FinetunedModel.optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/GetFinetunedModelResponse.js
  var require_GetFinetunedModelResponse = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/GetFinetunedModelResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GetFinetunedModelResponse = void 0;
      var core = __importStar3(require_core());
      var FinetunedModel_1 = require_FinetunedModel();
      exports.GetFinetunedModelResponse = core.serialization.object({
        finetunedModel: core.serialization.property("finetuned_model", FinetunedModel_1.FinetunedModel.optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/DeleteFinetunedModelResponse.js
  var require_DeleteFinetunedModelResponse = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/DeleteFinetunedModelResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DeleteFinetunedModelResponse = void 0;
      var core = __importStar3(require_core());
      exports.DeleteFinetunedModelResponse = core.serialization.record(core.serialization.string(), core.serialization.unknown());
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/UpdateFinetunedModelResponse.js
  var require_UpdateFinetunedModelResponse = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/UpdateFinetunedModelResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.UpdateFinetunedModelResponse = void 0;
      var core = __importStar3(require_core());
      var FinetunedModel_1 = require_FinetunedModel();
      exports.UpdateFinetunedModelResponse = core.serialization.object({
        finetunedModel: core.serialization.property("finetuned_model", FinetunedModel_1.FinetunedModel.optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/Event.js
  var require_Event = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/Event.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Event = void 0;
      var core = __importStar3(require_core());
      var Status_1 = require_Status();
      exports.Event = core.serialization.object({
        userId: core.serialization.property("user_id", core.serialization.string().optional()),
        status: Status_1.Status.optional(),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/ListEventsResponse.js
  var require_ListEventsResponse = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/ListEventsResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ListEventsResponse = void 0;
      var core = __importStar3(require_core());
      var Event_1 = require_Event();
      exports.ListEventsResponse = core.serialization.object({
        events: core.serialization.list(Event_1.Event).optional(),
        nextPageToken: core.serialization.property("next_page_token", core.serialization.string().optional()),
        totalSize: core.serialization.property("total_size", core.serialization.number().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/TrainingStepMetrics.js
  var require_TrainingStepMetrics = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/TrainingStepMetrics.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.TrainingStepMetrics = void 0;
      var core = __importStar3(require_core());
      exports.TrainingStepMetrics = core.serialization.object({
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        stepNumber: core.serialization.property("step_number", core.serialization.number().optional()),
        metrics: core.serialization.record(core.serialization.string(), core.serialization.number()).optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/ListTrainingStepMetricsResponse.js
  var require_ListTrainingStepMetricsResponse = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/ListTrainingStepMetricsResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ListTrainingStepMetricsResponse = void 0;
      var core = __importStar3(require_core());
      var TrainingStepMetrics_1 = require_TrainingStepMetrics();
      exports.ListTrainingStepMetricsResponse = core.serialization.object({
        stepMetrics: core.serialization.property("step_metrics", core.serialization.list(TrainingStepMetrics_1.TrainingStepMetrics).optional()),
        nextPageToken: core.serialization.property("next_page_token", core.serialization.string().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/index.js
  var require_types4 = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/types/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_BaseType(), exports);
      __exportStar3(require_Strategy(), exports);
      __exportStar3(require_BaseModel(), exports);
      __exportStar3(require_Hyperparameters(), exports);
      __exportStar3(require_Settings(), exports);
      __exportStar3(require_Status(), exports);
      __exportStar3(require_FinetunedModel(), exports);
      __exportStar3(require_ListFinetunedModelsResponse(), exports);
      __exportStar3(require_CreateFinetunedModelResponse(), exports);
      __exportStar3(require_GetFinetunedModelResponse(), exports);
      __exportStar3(require_DeleteFinetunedModelResponse(), exports);
      __exportStar3(require_UpdateFinetunedModelResponse(), exports);
      __exportStar3(require_Event(), exports);
      __exportStar3(require_ListEventsResponse(), exports);
      __exportStar3(require_TrainingStepMetrics(), exports);
      __exportStar3(require_ListTrainingStepMetricsResponse(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/index.js
  var require_finetuning = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/finetuning/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_types4(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/resources/index.js
  var require_resources = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/resources/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.finetuning = void 0;
      exports.finetuning = __importStar3(require_finetuning());
      __exportStar3(require_types4(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/client/requests/FinetuningUpdateFinetunedModelRequest.js
  var require_FinetuningUpdateFinetunedModelRequest = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/client/requests/FinetuningUpdateFinetunedModelRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.FinetuningUpdateFinetunedModelRequest = void 0;
      var core = __importStar3(require_core());
      var Settings_1 = require_Settings();
      var Status_1 = require_Status();
      exports.FinetuningUpdateFinetunedModelRequest = core.serialization.object({
        name: core.serialization.string(),
        creatorId: core.serialization.property("creator_id", core.serialization.string().optional()),
        organizationId: core.serialization.property("organization_id", core.serialization.string().optional()),
        settings: Settings_1.Settings,
        status: Status_1.Status.optional(),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
        completedAt: core.serialization.property("completed_at", core.serialization.date().optional()),
        lastUsed: core.serialization.property("last_used", core.serialization.date().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/client/requests/index.js
  var require_requests2 = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/client/requests/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.FinetuningUpdateFinetunedModelRequest = void 0;
      var FinetuningUpdateFinetunedModelRequest_1 = require_FinetuningUpdateFinetunedModelRequest();
      Object.defineProperty(exports, "FinetuningUpdateFinetunedModelRequest", { enumerable: true, get: function() {
        return FinetuningUpdateFinetunedModelRequest_1.FinetuningUpdateFinetunedModelRequest;
      } });
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/client/index.js
  var require_client4 = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/client/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_requests2(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/resources/finetuning/index.js
  var require_finetuning2 = __commonJS({
    "node_modules/cohere-ai/serialization/resources/finetuning/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_resources(), exports);
      __exportStar3(require_client4(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/types/CreateConnectorOAuth.js
  var require_CreateConnectorOAuth = __commonJS({
    "node_modules/cohere-ai/serialization/types/CreateConnectorOAuth.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CreateConnectorOAuth = void 0;
      var core = __importStar3(require_core());
      exports.CreateConnectorOAuth = core.serialization.object({
        clientId: core.serialization.property("client_id", core.serialization.string().optional()),
        clientSecret: core.serialization.property("client_secret", core.serialization.string().optional()),
        authorizeUrl: core.serialization.property("authorize_url", core.serialization.string().optional()),
        tokenUrl: core.serialization.property("token_url", core.serialization.string().optional()),
        scope: core.serialization.string().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/AuthTokenType.js
  var require_AuthTokenType = __commonJS({
    "node_modules/cohere-ai/serialization/types/AuthTokenType.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.AuthTokenType = void 0;
      var core = __importStar3(require_core());
      exports.AuthTokenType = core.serialization.enum_(["bearer", "basic", "noscheme"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/CreateConnectorServiceAuth.js
  var require_CreateConnectorServiceAuth = __commonJS({
    "node_modules/cohere-ai/serialization/types/CreateConnectorServiceAuth.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CreateConnectorServiceAuth = void 0;
      var core = __importStar3(require_core());
      var AuthTokenType_1 = require_AuthTokenType();
      exports.CreateConnectorServiceAuth = core.serialization.object({
        type: AuthTokenType_1.AuthTokenType,
        token: core.serialization.string()
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/connectors/client/requests/CreateConnectorRequest.js
  var require_CreateConnectorRequest = __commonJS({
    "node_modules/cohere-ai/serialization/resources/connectors/client/requests/CreateConnectorRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CreateConnectorRequest = void 0;
      var core = __importStar3(require_core());
      var CreateConnectorOAuth_1 = require_CreateConnectorOAuth();
      var CreateConnectorServiceAuth_1 = require_CreateConnectorServiceAuth();
      exports.CreateConnectorRequest = core.serialization.object({
        name: core.serialization.string(),
        description: core.serialization.string().optional(),
        url: core.serialization.string(),
        excludes: core.serialization.list(core.serialization.string()).optional(),
        oauth: CreateConnectorOAuth_1.CreateConnectorOAuth.optional(),
        active: core.serialization.boolean().optional(),
        continueOnFailure: core.serialization.property("continue_on_failure", core.serialization.boolean().optional()),
        serviceAuth: core.serialization.property("service_auth", CreateConnectorServiceAuth_1.CreateConnectorServiceAuth.optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/connectors/client/requests/UpdateConnectorRequest.js
  var require_UpdateConnectorRequest = __commonJS({
    "node_modules/cohere-ai/serialization/resources/connectors/client/requests/UpdateConnectorRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.UpdateConnectorRequest = void 0;
      var core = __importStar3(require_core());
      var CreateConnectorOAuth_1 = require_CreateConnectorOAuth();
      var CreateConnectorServiceAuth_1 = require_CreateConnectorServiceAuth();
      exports.UpdateConnectorRequest = core.serialization.object({
        name: core.serialization.string().optional(),
        url: core.serialization.string().optional(),
        excludes: core.serialization.list(core.serialization.string()).optional(),
        oauth: CreateConnectorOAuth_1.CreateConnectorOAuth.optional(),
        active: core.serialization.boolean().optional(),
        continueOnFailure: core.serialization.property("continue_on_failure", core.serialization.boolean().optional()),
        serviceAuth: core.serialization.property("service_auth", CreateConnectorServiceAuth_1.CreateConnectorServiceAuth.optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/resources/connectors/client/requests/index.js
  var require_requests3 = __commonJS({
    "node_modules/cohere-ai/serialization/resources/connectors/client/requests/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.UpdateConnectorRequest = exports.CreateConnectorRequest = void 0;
      var CreateConnectorRequest_1 = require_CreateConnectorRequest();
      Object.defineProperty(exports, "CreateConnectorRequest", { enumerable: true, get: function() {
        return CreateConnectorRequest_1.CreateConnectorRequest;
      } });
      var UpdateConnectorRequest_1 = require_UpdateConnectorRequest();
      Object.defineProperty(exports, "UpdateConnectorRequest", { enumerable: true, get: function() {
        return UpdateConnectorRequest_1.UpdateConnectorRequest;
      } });
    }
  });

  // node_modules/cohere-ai/serialization/resources/connectors/client/index.js
  var require_client5 = __commonJS({
    "node_modules/cohere-ai/serialization/resources/connectors/client/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_requests3(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/resources/connectors/index.js
  var require_connectors = __commonJS({
    "node_modules/cohere-ai/serialization/resources/connectors/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_client5(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/resources/index.js
  var require_resources2 = __commonJS({
    "node_modules/cohere-ai/serialization/resources/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.connectors = exports.finetuning = exports.datasets = exports.embedJobs = void 0;
      exports.embedJobs = __importStar3(require_embedJobs());
      __exportStar3(require_types2(), exports);
      exports.datasets = __importStar3(require_datasets());
      __exportStar3(require_types3(), exports);
      exports.finetuning = __importStar3(require_finetuning2());
      __exportStar3(require_requests(), exports);
      exports.connectors = __importStar3(require_connectors());
      __exportStar3(require_requests3(), exports);
      __exportStar3(require_requests2(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatStreamRequestPromptTruncation.js
  var require_ChatStreamRequestPromptTruncation = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatStreamRequestPromptTruncation.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamRequestPromptTruncation = void 0;
      var core = __importStar3(require_core());
      exports.ChatStreamRequestPromptTruncation = core.serialization.enum_(["OFF", "AUTO", "AUTO_PRESERVE_ORDER"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatStreamRequestCitationQuality.js
  var require_ChatStreamRequestCitationQuality = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatStreamRequestCitationQuality.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamRequestCitationQuality = void 0;
      var core = __importStar3(require_core());
      exports.ChatStreamRequestCitationQuality = core.serialization.enum_(["fast", "accurate", "off"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatStreamRequestConnectorsSearchOptions.js
  var require_ChatStreamRequestConnectorsSearchOptions = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatStreamRequestConnectorsSearchOptions.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamRequestConnectorsSearchOptions = void 0;
      var core = __importStar3(require_core());
      exports.ChatStreamRequestConnectorsSearchOptions = core.serialization.object({
        seed: core.serialization.number().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatStreamRequestResponseFormatType.js
  var require_ChatStreamRequestResponseFormatType = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatStreamRequestResponseFormatType.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamRequestResponseFormatType = void 0;
      var core = __importStar3(require_core());
      exports.ChatStreamRequestResponseFormatType = core.serialization.enum_(["text", "json_object"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatStreamRequestResponseFormat.js
  var require_ChatStreamRequestResponseFormat = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatStreamRequestResponseFormat.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamRequestResponseFormat = void 0;
      var core = __importStar3(require_core());
      var ChatStreamRequestResponseFormatType_1 = require_ChatStreamRequestResponseFormatType();
      exports.ChatStreamRequestResponseFormat = core.serialization.object({
        type: ChatStreamRequestResponseFormatType_1.ChatStreamRequestResponseFormatType,
        schema: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/UnprocessableEntityErrorBody.js
  var require_UnprocessableEntityErrorBody = __commonJS({
    "node_modules/cohere-ai/serialization/types/UnprocessableEntityErrorBody.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.UnprocessableEntityErrorBody = void 0;
      var core = __importStar3(require_core());
      exports.UnprocessableEntityErrorBody = core.serialization.object({
        data: core.serialization.string().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/TooManyRequestsErrorBody.js
  var require_TooManyRequestsErrorBody = __commonJS({
    "node_modules/cohere-ai/serialization/types/TooManyRequestsErrorBody.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.TooManyRequestsErrorBody = void 0;
      var core = __importStar3(require_core());
      exports.TooManyRequestsErrorBody = core.serialization.object({
        data: core.serialization.string().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ClientClosedRequestErrorBody.js
  var require_ClientClosedRequestErrorBody = __commonJS({
    "node_modules/cohere-ai/serialization/types/ClientClosedRequestErrorBody.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ClientClosedRequestErrorBody = void 0;
      var core = __importStar3(require_core());
      exports.ClientClosedRequestErrorBody = core.serialization.object({
        data: core.serialization.string().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/NotImplementedErrorBody.js
  var require_NotImplementedErrorBody = __commonJS({
    "node_modules/cohere-ai/serialization/types/NotImplementedErrorBody.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.NotImplementedErrorBody = void 0;
      var core = __importStar3(require_core());
      exports.NotImplementedErrorBody = core.serialization.object({
        data: core.serialization.string().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/GatewayTimeoutErrorBody.js
  var require_GatewayTimeoutErrorBody = __commonJS({
    "node_modules/cohere-ai/serialization/types/GatewayTimeoutErrorBody.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GatewayTimeoutErrorBody = void 0;
      var core = __importStar3(require_core());
      exports.GatewayTimeoutErrorBody = core.serialization.object({
        data: core.serialization.string().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatRequestPromptTruncation.js
  var require_ChatRequestPromptTruncation = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatRequestPromptTruncation.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatRequestPromptTruncation = void 0;
      var core = __importStar3(require_core());
      exports.ChatRequestPromptTruncation = core.serialization.enum_(["OFF", "AUTO", "AUTO_PRESERVE_ORDER"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatRequestCitationQuality.js
  var require_ChatRequestCitationQuality = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatRequestCitationQuality.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatRequestCitationQuality = void 0;
      var core = __importStar3(require_core());
      exports.ChatRequestCitationQuality = core.serialization.enum_(["fast", "accurate", "off"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatRequestConnectorsSearchOptions.js
  var require_ChatRequestConnectorsSearchOptions = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatRequestConnectorsSearchOptions.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatRequestConnectorsSearchOptions = void 0;
      var core = __importStar3(require_core());
      exports.ChatRequestConnectorsSearchOptions = core.serialization.object({
        seed: core.serialization.number().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatRequestResponseFormatType.js
  var require_ChatRequestResponseFormatType = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatRequestResponseFormatType.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatRequestResponseFormatType = void 0;
      var core = __importStar3(require_core());
      exports.ChatRequestResponseFormatType = core.serialization.enum_(["text", "json_object"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatRequestResponseFormat.js
  var require_ChatRequestResponseFormat = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatRequestResponseFormat.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatRequestResponseFormat = void 0;
      var core = __importStar3(require_core());
      var ChatRequestResponseFormatType_1 = require_ChatRequestResponseFormatType();
      exports.ChatRequestResponseFormat = core.serialization.object({
        type: ChatRequestResponseFormatType_1.ChatRequestResponseFormatType,
        schema: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/GenerateStreamRequestTruncate.js
  var require_GenerateStreamRequestTruncate = __commonJS({
    "node_modules/cohere-ai/serialization/types/GenerateStreamRequestTruncate.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateStreamRequestTruncate = void 0;
      var core = __importStar3(require_core());
      exports.GenerateStreamRequestTruncate = core.serialization.enum_(["NONE", "START", "END"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/GenerateStreamRequestReturnLikelihoods.js
  var require_GenerateStreamRequestReturnLikelihoods = __commonJS({
    "node_modules/cohere-ai/serialization/types/GenerateStreamRequestReturnLikelihoods.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateStreamRequestReturnLikelihoods = void 0;
      var core = __importStar3(require_core());
      exports.GenerateStreamRequestReturnLikelihoods = core.serialization.enum_(["GENERATION", "ALL", "NONE"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/GenerateRequestTruncate.js
  var require_GenerateRequestTruncate = __commonJS({
    "node_modules/cohere-ai/serialization/types/GenerateRequestTruncate.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateRequestTruncate = void 0;
      var core = __importStar3(require_core());
      exports.GenerateRequestTruncate = core.serialization.enum_(["NONE", "START", "END"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/GenerateRequestReturnLikelihoods.js
  var require_GenerateRequestReturnLikelihoods = __commonJS({
    "node_modules/cohere-ai/serialization/types/GenerateRequestReturnLikelihoods.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateRequestReturnLikelihoods = void 0;
      var core = __importStar3(require_core());
      exports.GenerateRequestReturnLikelihoods = core.serialization.enum_(["GENERATION", "ALL", "NONE"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/EmbedRequestTruncate.js
  var require_EmbedRequestTruncate = __commonJS({
    "node_modules/cohere-ai/serialization/types/EmbedRequestTruncate.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedRequestTruncate = void 0;
      var core = __importStar3(require_core());
      exports.EmbedRequestTruncate = core.serialization.enum_(["NONE", "START", "END"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/ApiMetaApiVersion.js
  var require_ApiMetaApiVersion = __commonJS({
    "node_modules/cohere-ai/serialization/types/ApiMetaApiVersion.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ApiMetaApiVersion = void 0;
      var core = __importStar3(require_core());
      exports.ApiMetaApiVersion = core.serialization.object({
        version: core.serialization.string(),
        isDeprecated: core.serialization.property("is_deprecated", core.serialization.boolean().optional()),
        isExperimental: core.serialization.property("is_experimental", core.serialization.boolean().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ApiMetaBilledUnits.js
  var require_ApiMetaBilledUnits = __commonJS({
    "node_modules/cohere-ai/serialization/types/ApiMetaBilledUnits.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ApiMetaBilledUnits = void 0;
      var core = __importStar3(require_core());
      exports.ApiMetaBilledUnits = core.serialization.object({
        inputTokens: core.serialization.property("input_tokens", core.serialization.number().optional()),
        outputTokens: core.serialization.property("output_tokens", core.serialization.number().optional()),
        searchUnits: core.serialization.property("search_units", core.serialization.number().optional()),
        classifications: core.serialization.number().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ApiMetaTokens.js
  var require_ApiMetaTokens = __commonJS({
    "node_modules/cohere-ai/serialization/types/ApiMetaTokens.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ApiMetaTokens = void 0;
      var core = __importStar3(require_core());
      exports.ApiMetaTokens = core.serialization.object({
        inputTokens: core.serialization.property("input_tokens", core.serialization.number().optional()),
        outputTokens: core.serialization.property("output_tokens", core.serialization.number().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ApiMeta.js
  var require_ApiMeta = __commonJS({
    "node_modules/cohere-ai/serialization/types/ApiMeta.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ApiMeta = void 0;
      var core = __importStar3(require_core());
      var ApiMetaApiVersion_1 = require_ApiMetaApiVersion();
      var ApiMetaBilledUnits_1 = require_ApiMetaBilledUnits();
      var ApiMetaTokens_1 = require_ApiMetaTokens();
      exports.ApiMeta = core.serialization.object({
        apiVersion: core.serialization.property("api_version", ApiMetaApiVersion_1.ApiMetaApiVersion.optional()),
        billedUnits: core.serialization.property("billed_units", ApiMetaBilledUnits_1.ApiMetaBilledUnits.optional()),
        tokens: ApiMetaTokens_1.ApiMetaTokens.optional(),
        warnings: core.serialization.list(core.serialization.string()).optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/EmbedFloatsResponse.js
  var require_EmbedFloatsResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/EmbedFloatsResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedFloatsResponse = void 0;
      var core = __importStar3(require_core());
      var ApiMeta_1 = require_ApiMeta();
      exports.EmbedFloatsResponse = core.serialization.object({
        id: core.serialization.string(),
        embeddings: core.serialization.list(core.serialization.list(core.serialization.number())),
        texts: core.serialization.list(core.serialization.string()),
        meta: ApiMeta_1.ApiMeta.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/EmbedByTypeResponseEmbeddings.js
  var require_EmbedByTypeResponseEmbeddings = __commonJS({
    "node_modules/cohere-ai/serialization/types/EmbedByTypeResponseEmbeddings.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedByTypeResponseEmbeddings = void 0;
      var core = __importStar3(require_core());
      exports.EmbedByTypeResponseEmbeddings = core.serialization.object({
        float: core.serialization.list(core.serialization.list(core.serialization.number())).optional(),
        int8: core.serialization.list(core.serialization.list(core.serialization.number())).optional(),
        uint8: core.serialization.list(core.serialization.list(core.serialization.number())).optional(),
        binary: core.serialization.list(core.serialization.list(core.serialization.number())).optional(),
        ubinary: core.serialization.list(core.serialization.list(core.serialization.number())).optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/EmbedByTypeResponse.js
  var require_EmbedByTypeResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/EmbedByTypeResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedByTypeResponse = void 0;
      var core = __importStar3(require_core());
      var EmbedByTypeResponseEmbeddings_1 = require_EmbedByTypeResponseEmbeddings();
      var ApiMeta_1 = require_ApiMeta();
      exports.EmbedByTypeResponse = core.serialization.object({
        id: core.serialization.string(),
        embeddings: EmbedByTypeResponseEmbeddings_1.EmbedByTypeResponseEmbeddings,
        texts: core.serialization.list(core.serialization.string()),
        meta: ApiMeta_1.ApiMeta.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/EmbedResponse.js
  var require_EmbedResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/EmbedResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedResponse = void 0;
      var core = __importStar3(require_core());
      var EmbedFloatsResponse_1 = require_EmbedFloatsResponse();
      var EmbedByTypeResponse_1 = require_EmbedByTypeResponse();
      exports.EmbedResponse = core.serialization.union(core.serialization.discriminant("responseType", "response_type"), {
        embeddings_floats: EmbedFloatsResponse_1.EmbedFloatsResponse,
        embeddings_by_type: EmbedByTypeResponse_1.EmbedByTypeResponse
      }).transform({
        transform: (value14) => value14,
        untransform: (value14) => value14
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/RerankDocument.js
  var require_RerankDocument = __commonJS({
    "node_modules/cohere-ai/serialization/types/RerankDocument.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.RerankDocument = void 0;
      var core = __importStar3(require_core());
      exports.RerankDocument = core.serialization.record(core.serialization.string(), core.serialization.string());
    }
  });

  // node_modules/cohere-ai/serialization/types/RerankRequestDocumentsItem.js
  var require_RerankRequestDocumentsItem = __commonJS({
    "node_modules/cohere-ai/serialization/types/RerankRequestDocumentsItem.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.RerankRequestDocumentsItem = void 0;
      var core = __importStar3(require_core());
      var RerankDocument_1 = require_RerankDocument();
      exports.RerankRequestDocumentsItem = core.serialization.undiscriminatedUnion([core.serialization.string(), RerankDocument_1.RerankDocument]);
    }
  });

  // node_modules/cohere-ai/serialization/types/RerankResponseResultsItemDocument.js
  var require_RerankResponseResultsItemDocument = __commonJS({
    "node_modules/cohere-ai/serialization/types/RerankResponseResultsItemDocument.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.RerankResponseResultsItemDocument = void 0;
      var core = __importStar3(require_core());
      exports.RerankResponseResultsItemDocument = core.serialization.object({
        text: core.serialization.string()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/RerankResponseResultsItem.js
  var require_RerankResponseResultsItem = __commonJS({
    "node_modules/cohere-ai/serialization/types/RerankResponseResultsItem.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.RerankResponseResultsItem = void 0;
      var core = __importStar3(require_core());
      var RerankResponseResultsItemDocument_1 = require_RerankResponseResultsItemDocument();
      exports.RerankResponseResultsItem = core.serialization.object({
        document: RerankResponseResultsItemDocument_1.RerankResponseResultsItemDocument.optional(),
        index: core.serialization.number(),
        relevanceScore: core.serialization.property("relevance_score", core.serialization.number())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/RerankResponse.js
  var require_RerankResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/RerankResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.RerankResponse = void 0;
      var core = __importStar3(require_core());
      var RerankResponseResultsItem_1 = require_RerankResponseResultsItem();
      var ApiMeta_1 = require_ApiMeta();
      exports.RerankResponse = core.serialization.object({
        id: core.serialization.string().optional(),
        results: core.serialization.list(RerankResponseResultsItem_1.RerankResponseResultsItem),
        meta: ApiMeta_1.ApiMeta.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ClassifyRequestTruncate.js
  var require_ClassifyRequestTruncate = __commonJS({
    "node_modules/cohere-ai/serialization/types/ClassifyRequestTruncate.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ClassifyRequestTruncate = void 0;
      var core = __importStar3(require_core());
      exports.ClassifyRequestTruncate = core.serialization.enum_(["NONE", "START", "END"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/ClassifyResponseClassificationsItemLabelsValue.js
  var require_ClassifyResponseClassificationsItemLabelsValue = __commonJS({
    "node_modules/cohere-ai/serialization/types/ClassifyResponseClassificationsItemLabelsValue.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ClassifyResponseClassificationsItemLabelsValue = void 0;
      var core = __importStar3(require_core());
      exports.ClassifyResponseClassificationsItemLabelsValue = core.serialization.object({
        confidence: core.serialization.number().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ClassifyResponseClassificationsItemClassificationType.js
  var require_ClassifyResponseClassificationsItemClassificationType = __commonJS({
    "node_modules/cohere-ai/serialization/types/ClassifyResponseClassificationsItemClassificationType.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ClassifyResponseClassificationsItemClassificationType = void 0;
      var core = __importStar3(require_core());
      exports.ClassifyResponseClassificationsItemClassificationType = core.serialization.enum_(["single-label", "multi-label"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/ClassifyResponseClassificationsItem.js
  var require_ClassifyResponseClassificationsItem = __commonJS({
    "node_modules/cohere-ai/serialization/types/ClassifyResponseClassificationsItem.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ClassifyResponseClassificationsItem = void 0;
      var core = __importStar3(require_core());
      var ClassifyResponseClassificationsItemLabelsValue_1 = require_ClassifyResponseClassificationsItemLabelsValue();
      var ClassifyResponseClassificationsItemClassificationType_1 = require_ClassifyResponseClassificationsItemClassificationType();
      exports.ClassifyResponseClassificationsItem = core.serialization.object({
        id: core.serialization.string(),
        input: core.serialization.string().optional(),
        prediction: core.serialization.string().optional(),
        predictions: core.serialization.list(core.serialization.string()),
        confidence: core.serialization.number().optional(),
        confidences: core.serialization.list(core.serialization.number()),
        labels: core.serialization.record(core.serialization.string(), ClassifyResponseClassificationsItemLabelsValue_1.ClassifyResponseClassificationsItemLabelsValue),
        classificationType: core.serialization.property("classification_type", ClassifyResponseClassificationsItemClassificationType_1.ClassifyResponseClassificationsItemClassificationType)
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ClassifyResponse.js
  var require_ClassifyResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/ClassifyResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ClassifyResponse = void 0;
      var core = __importStar3(require_core());
      var ClassifyResponseClassificationsItem_1 = require_ClassifyResponseClassificationsItem();
      var ApiMeta_1 = require_ApiMeta();
      exports.ClassifyResponse = core.serialization.object({
        id: core.serialization.string(),
        classifications: core.serialization.list(ClassifyResponseClassificationsItem_1.ClassifyResponseClassificationsItem),
        meta: ApiMeta_1.ApiMeta.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/SummarizeRequestLength.js
  var require_SummarizeRequestLength = __commonJS({
    "node_modules/cohere-ai/serialization/types/SummarizeRequestLength.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SummarizeRequestLength = void 0;
      var core = __importStar3(require_core());
      exports.SummarizeRequestLength = core.serialization.enum_(["short", "medium", "long"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/SummarizeRequestFormat.js
  var require_SummarizeRequestFormat = __commonJS({
    "node_modules/cohere-ai/serialization/types/SummarizeRequestFormat.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SummarizeRequestFormat = void 0;
      var core = __importStar3(require_core());
      exports.SummarizeRequestFormat = core.serialization.enum_(["paragraph", "bullets"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/SummarizeRequestExtractiveness.js
  var require_SummarizeRequestExtractiveness = __commonJS({
    "node_modules/cohere-ai/serialization/types/SummarizeRequestExtractiveness.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SummarizeRequestExtractiveness = void 0;
      var core = __importStar3(require_core());
      exports.SummarizeRequestExtractiveness = core.serialization.enum_(["low", "medium", "high"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/SummarizeResponse.js
  var require_SummarizeResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/SummarizeResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SummarizeResponse = void 0;
      var core = __importStar3(require_core());
      var ApiMeta_1 = require_ApiMeta();
      exports.SummarizeResponse = core.serialization.object({
        id: core.serialization.string().optional(),
        summary: core.serialization.string().optional(),
        meta: ApiMeta_1.ApiMeta.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/TokenizeResponse.js
  var require_TokenizeResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/TokenizeResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.TokenizeResponse = void 0;
      var core = __importStar3(require_core());
      var ApiMeta_1 = require_ApiMeta();
      exports.TokenizeResponse = core.serialization.object({
        tokens: core.serialization.list(core.serialization.number()),
        tokenStrings: core.serialization.property("token_strings", core.serialization.list(core.serialization.string())),
        meta: ApiMeta_1.ApiMeta.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/DetokenizeResponse.js
  var require_DetokenizeResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/DetokenizeResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DetokenizeResponse = void 0;
      var core = __importStar3(require_core());
      var ApiMeta_1 = require_ApiMeta();
      exports.DetokenizeResponse = core.serialization.object({
        text: core.serialization.string(),
        meta: ApiMeta_1.ApiMeta.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/CheckApiKeyResponse.js
  var require_CheckApiKeyResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/CheckApiKeyResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CheckApiKeyResponse = void 0;
      var core = __importStar3(require_core());
      exports.CheckApiKeyResponse = core.serialization.object({
        valid: core.serialization.boolean(),
        organizationId: core.serialization.property("organization_id", core.serialization.string().optional()),
        ownerId: core.serialization.property("owner_id", core.serialization.string().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ToolCall.js
  var require_ToolCall = __commonJS({
    "node_modules/cohere-ai/serialization/types/ToolCall.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ToolCall = void 0;
      var core = __importStar3(require_core());
      exports.ToolCall = core.serialization.object({
        name: core.serialization.string(),
        parameters: core.serialization.record(core.serialization.string(), core.serialization.unknown())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatMessage.js
  var require_ChatMessage = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatMessage.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatMessage = void 0;
      var core = __importStar3(require_core());
      var ToolCall_1 = require_ToolCall();
      exports.ChatMessage = core.serialization.object({
        message: core.serialization.string(),
        toolCalls: core.serialization.property("tool_calls", core.serialization.list(ToolCall_1.ToolCall).optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ToolResult.js
  var require_ToolResult = __commonJS({
    "node_modules/cohere-ai/serialization/types/ToolResult.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ToolResult = void 0;
      var core = __importStar3(require_core());
      var ToolCall_1 = require_ToolCall();
      exports.ToolResult = core.serialization.object({
        call: ToolCall_1.ToolCall,
        outputs: core.serialization.list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ToolMessage.js
  var require_ToolMessage = __commonJS({
    "node_modules/cohere-ai/serialization/types/ToolMessage.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ToolMessage = void 0;
      var core = __importStar3(require_core());
      var ToolResult_1 = require_ToolResult();
      exports.ToolMessage = core.serialization.object({
        toolResults: core.serialization.property("tool_results", core.serialization.list(ToolResult_1.ToolResult).optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/Message.js
  var require_Message2 = __commonJS({
    "node_modules/cohere-ai/serialization/types/Message.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Message = void 0;
      var core = __importStar3(require_core());
      var ChatMessage_1 = require_ChatMessage();
      var ToolMessage_1 = require_ToolMessage();
      exports.Message = core.serialization.union("role", {
        CHATBOT: ChatMessage_1.ChatMessage,
        SYSTEM: ChatMessage_1.ChatMessage,
        USER: ChatMessage_1.ChatMessage,
        TOOL: ToolMessage_1.ToolMessage
      }).transform({
        transform: (value14) => value14,
        untransform: (value14) => value14
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatConnector.js
  var require_ChatConnector = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatConnector.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatConnector = void 0;
      var core = __importStar3(require_core());
      exports.ChatConnector = core.serialization.object({
        id: core.serialization.string(),
        userAccessToken: core.serialization.property("user_access_token", core.serialization.string().optional()),
        continueOnFailure: core.serialization.property("continue_on_failure", core.serialization.boolean().optional()),
        options: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatDocument.js
  var require_ChatDocument = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatDocument.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatDocument = void 0;
      var core = __importStar3(require_core());
      exports.ChatDocument = core.serialization.record(core.serialization.string(), core.serialization.string());
    }
  });

  // node_modules/cohere-ai/serialization/types/ToolParameterDefinitionsValue.js
  var require_ToolParameterDefinitionsValue = __commonJS({
    "node_modules/cohere-ai/serialization/types/ToolParameterDefinitionsValue.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ToolParameterDefinitionsValue = void 0;
      var core = __importStar3(require_core());
      exports.ToolParameterDefinitionsValue = core.serialization.object({
        description: core.serialization.string().optional(),
        type: core.serialization.string(),
        required: core.serialization.boolean().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/Tool.js
  var require_Tool = __commonJS({
    "node_modules/cohere-ai/serialization/types/Tool.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Tool = void 0;
      var core = __importStar3(require_core());
      var ToolParameterDefinitionsValue_1 = require_ToolParameterDefinitionsValue();
      exports.Tool = core.serialization.object({
        name: core.serialization.string(),
        description: core.serialization.string(),
        parameterDefinitions: core.serialization.property("parameter_definitions", core.serialization.record(core.serialization.string(), ToolParameterDefinitionsValue_1.ToolParameterDefinitionsValue).optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatCitation.js
  var require_ChatCitation = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatCitation.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatCitation = void 0;
      var core = __importStar3(require_core());
      exports.ChatCitation = core.serialization.object({
        start: core.serialization.number(),
        end: core.serialization.number(),
        text: core.serialization.string(),
        documentIds: core.serialization.property("document_ids", core.serialization.list(core.serialization.string()))
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatSearchQuery.js
  var require_ChatSearchQuery = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatSearchQuery.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatSearchQuery = void 0;
      var core = __importStar3(require_core());
      exports.ChatSearchQuery = core.serialization.object({
        text: core.serialization.string(),
        generationId: core.serialization.property("generation_id", core.serialization.string())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatSearchResultConnector.js
  var require_ChatSearchResultConnector = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatSearchResultConnector.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatSearchResultConnector = void 0;
      var core = __importStar3(require_core());
      exports.ChatSearchResultConnector = core.serialization.object({
        id: core.serialization.string()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatSearchResult.js
  var require_ChatSearchResult = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatSearchResult.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatSearchResult = void 0;
      var core = __importStar3(require_core());
      var ChatSearchQuery_1 = require_ChatSearchQuery();
      var ChatSearchResultConnector_1 = require_ChatSearchResultConnector();
      exports.ChatSearchResult = core.serialization.object({
        searchQuery: core.serialization.property("search_query", ChatSearchQuery_1.ChatSearchQuery.optional()),
        connector: ChatSearchResultConnector_1.ChatSearchResultConnector,
        documentIds: core.serialization.property("document_ids", core.serialization.list(core.serialization.string())),
        errorMessage: core.serialization.property("error_message", core.serialization.string().optional()),
        continueOnFailure: core.serialization.property("continue_on_failure", core.serialization.boolean().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/FinishReason.js
  var require_FinishReason = __commonJS({
    "node_modules/cohere-ai/serialization/types/FinishReason.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.FinishReason = void 0;
      var core = __importStar3(require_core());
      exports.FinishReason = core.serialization.enum_([
        "COMPLETE",
        "STOP_SEQUENCE",
        "ERROR",
        "ERROR_TOXIC",
        "ERROR_LIMIT",
        "USER_CANCEL",
        "MAX_TOKENS"
      ]);
    }
  });

  // node_modules/cohere-ai/serialization/types/NonStreamedChatResponse.js
  var require_NonStreamedChatResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/NonStreamedChatResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.NonStreamedChatResponse = void 0;
      var core = __importStar3(require_core());
      var ChatCitation_1 = require_ChatCitation();
      var ChatDocument_1 = require_ChatDocument();
      var ChatSearchQuery_1 = require_ChatSearchQuery();
      var ChatSearchResult_1 = require_ChatSearchResult();
      var FinishReason_1 = require_FinishReason();
      var ToolCall_1 = require_ToolCall();
      var Message_1 = require_Message2();
      var ApiMeta_1 = require_ApiMeta();
      exports.NonStreamedChatResponse = core.serialization.object({
        text: core.serialization.string(),
        generationId: core.serialization.property("generation_id", core.serialization.string().optional()),
        citations: core.serialization.list(ChatCitation_1.ChatCitation).optional(),
        documents: core.serialization.list(ChatDocument_1.ChatDocument).optional(),
        isSearchRequired: core.serialization.property("is_search_required", core.serialization.boolean().optional()),
        searchQueries: core.serialization.property("search_queries", core.serialization.list(ChatSearchQuery_1.ChatSearchQuery).optional()),
        searchResults: core.serialization.property("search_results", core.serialization.list(ChatSearchResult_1.ChatSearchResult).optional()),
        finishReason: core.serialization.property("finish_reason", FinishReason_1.FinishReason.optional()),
        toolCalls: core.serialization.property("tool_calls", core.serialization.list(ToolCall_1.ToolCall).optional()),
        chatHistory: core.serialization.property("chat_history", core.serialization.list(Message_1.Message).optional()),
        prompt: core.serialization.string().optional(),
        meta: ApiMeta_1.ApiMeta.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatStreamEvent.js
  var require_ChatStreamEvent = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatStreamEvent.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamEvent = void 0;
      var core = __importStar3(require_core());
      exports.ChatStreamEvent = core.serialization.object({});
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatStreamStartEvent.js
  var require_ChatStreamStartEvent = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatStreamStartEvent.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamStartEvent = void 0;
      var core = __importStar3(require_core());
      var ChatStreamEvent_1 = require_ChatStreamEvent();
      exports.ChatStreamStartEvent = core.serialization.object({
        generationId: core.serialization.property("generation_id", core.serialization.string())
      }).extend(ChatStreamEvent_1.ChatStreamEvent);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatSearchQueriesGenerationEvent.js
  var require_ChatSearchQueriesGenerationEvent = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatSearchQueriesGenerationEvent.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatSearchQueriesGenerationEvent = void 0;
      var core = __importStar3(require_core());
      var ChatSearchQuery_1 = require_ChatSearchQuery();
      var ChatStreamEvent_1 = require_ChatStreamEvent();
      exports.ChatSearchQueriesGenerationEvent = core.serialization.object({
        searchQueries: core.serialization.property("search_queries", core.serialization.list(ChatSearchQuery_1.ChatSearchQuery))
      }).extend(ChatStreamEvent_1.ChatStreamEvent);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatSearchResultsEvent.js
  var require_ChatSearchResultsEvent = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatSearchResultsEvent.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatSearchResultsEvent = void 0;
      var core = __importStar3(require_core());
      var ChatSearchResult_1 = require_ChatSearchResult();
      var ChatDocument_1 = require_ChatDocument();
      var ChatStreamEvent_1 = require_ChatStreamEvent();
      exports.ChatSearchResultsEvent = core.serialization.object({
        searchResults: core.serialization.property("search_results", core.serialization.list(ChatSearchResult_1.ChatSearchResult).optional()),
        documents: core.serialization.list(ChatDocument_1.ChatDocument).optional()
      }).extend(ChatStreamEvent_1.ChatStreamEvent);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatTextGenerationEvent.js
  var require_ChatTextGenerationEvent = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatTextGenerationEvent.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatTextGenerationEvent = void 0;
      var core = __importStar3(require_core());
      var ChatStreamEvent_1 = require_ChatStreamEvent();
      exports.ChatTextGenerationEvent = core.serialization.object({
        text: core.serialization.string()
      }).extend(ChatStreamEvent_1.ChatStreamEvent);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatCitationGenerationEvent.js
  var require_ChatCitationGenerationEvent = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatCitationGenerationEvent.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatCitationGenerationEvent = void 0;
      var core = __importStar3(require_core());
      var ChatCitation_1 = require_ChatCitation();
      var ChatStreamEvent_1 = require_ChatStreamEvent();
      exports.ChatCitationGenerationEvent = core.serialization.object({
        citations: core.serialization.list(ChatCitation_1.ChatCitation)
      }).extend(ChatStreamEvent_1.ChatStreamEvent);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatToolCallsGenerationEvent.js
  var require_ChatToolCallsGenerationEvent = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatToolCallsGenerationEvent.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatToolCallsGenerationEvent = void 0;
      var core = __importStar3(require_core());
      var ToolCall_1 = require_ToolCall();
      var ChatStreamEvent_1 = require_ChatStreamEvent();
      exports.ChatToolCallsGenerationEvent = core.serialization.object({
        text: core.serialization.string().optional(),
        toolCalls: core.serialization.property("tool_calls", core.serialization.list(ToolCall_1.ToolCall))
      }).extend(ChatStreamEvent_1.ChatStreamEvent);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatStreamEndEventFinishReason.js
  var require_ChatStreamEndEventFinishReason = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatStreamEndEventFinishReason.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamEndEventFinishReason = void 0;
      var core = __importStar3(require_core());
      exports.ChatStreamEndEventFinishReason = core.serialization.enum_(["COMPLETE", "ERROR_LIMIT", "MAX_TOKENS", "ERROR", "ERROR_TOXIC"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatStreamEndEvent.js
  var require_ChatStreamEndEvent = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatStreamEndEvent.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamEndEvent = void 0;
      var core = __importStar3(require_core());
      var ChatStreamEndEventFinishReason_1 = require_ChatStreamEndEventFinishReason();
      var NonStreamedChatResponse_1 = require_NonStreamedChatResponse();
      var ChatStreamEvent_1 = require_ChatStreamEvent();
      exports.ChatStreamEndEvent = core.serialization.object({
        finishReason: core.serialization.property("finish_reason", ChatStreamEndEventFinishReason_1.ChatStreamEndEventFinishReason),
        response: NonStreamedChatResponse_1.NonStreamedChatResponse
      }).extend(ChatStreamEvent_1.ChatStreamEvent);
    }
  });

  // node_modules/cohere-ai/serialization/types/ToolCallDelta.js
  var require_ToolCallDelta = __commonJS({
    "node_modules/cohere-ai/serialization/types/ToolCallDelta.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ToolCallDelta = void 0;
      var core = __importStar3(require_core());
      exports.ToolCallDelta = core.serialization.object({
        name: core.serialization.string().optional(),
        index: core.serialization.number().optional(),
        parameters: core.serialization.string().optional(),
        text: core.serialization.string().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatToolCallsChunkEvent.js
  var require_ChatToolCallsChunkEvent = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatToolCallsChunkEvent.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatToolCallsChunkEvent = void 0;
      var core = __importStar3(require_core());
      var ToolCallDelta_1 = require_ToolCallDelta();
      var ChatStreamEvent_1 = require_ChatStreamEvent();
      exports.ChatToolCallsChunkEvent = core.serialization.object({
        toolCallDelta: core.serialization.property("tool_call_delta", ToolCallDelta_1.ToolCallDelta)
      }).extend(ChatStreamEvent_1.ChatStreamEvent);
    }
  });

  // node_modules/cohere-ai/serialization/types/StreamedChatResponse.js
  var require_StreamedChatResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/StreamedChatResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.StreamedChatResponse = void 0;
      var core = __importStar3(require_core());
      var ChatStreamStartEvent_1 = require_ChatStreamStartEvent();
      var ChatSearchQueriesGenerationEvent_1 = require_ChatSearchQueriesGenerationEvent();
      var ChatSearchResultsEvent_1 = require_ChatSearchResultsEvent();
      var ChatTextGenerationEvent_1 = require_ChatTextGenerationEvent();
      var ChatCitationGenerationEvent_1 = require_ChatCitationGenerationEvent();
      var ChatToolCallsGenerationEvent_1 = require_ChatToolCallsGenerationEvent();
      var ChatStreamEndEvent_1 = require_ChatStreamEndEvent();
      var ChatToolCallsChunkEvent_1 = require_ChatToolCallsChunkEvent();
      exports.StreamedChatResponse = core.serialization.union(core.serialization.discriminant("eventType", "event_type"), {
        "stream-start": ChatStreamStartEvent_1.ChatStreamStartEvent,
        "search-queries-generation": ChatSearchQueriesGenerationEvent_1.ChatSearchQueriesGenerationEvent,
        "search-results": ChatSearchResultsEvent_1.ChatSearchResultsEvent,
        "text-generation": ChatTextGenerationEvent_1.ChatTextGenerationEvent,
        "citation-generation": ChatCitationGenerationEvent_1.ChatCitationGenerationEvent,
        "tool-calls-generation": ChatToolCallsGenerationEvent_1.ChatToolCallsGenerationEvent,
        "stream-end": ChatStreamEndEvent_1.ChatStreamEndEvent,
        "tool-calls-chunk": ChatToolCallsChunkEvent_1.ChatToolCallsChunkEvent
      }).transform({
        transform: (value14) => value14,
        untransform: (value14) => value14
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/SingleGenerationTokenLikelihoodsItem.js
  var require_SingleGenerationTokenLikelihoodsItem = __commonJS({
    "node_modules/cohere-ai/serialization/types/SingleGenerationTokenLikelihoodsItem.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SingleGenerationTokenLikelihoodsItem = void 0;
      var core = __importStar3(require_core());
      exports.SingleGenerationTokenLikelihoodsItem = core.serialization.object({
        token: core.serialization.string(),
        likelihood: core.serialization.number()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/SingleGeneration.js
  var require_SingleGeneration = __commonJS({
    "node_modules/cohere-ai/serialization/types/SingleGeneration.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SingleGeneration = void 0;
      var core = __importStar3(require_core());
      var SingleGenerationTokenLikelihoodsItem_1 = require_SingleGenerationTokenLikelihoodsItem();
      exports.SingleGeneration = core.serialization.object({
        id: core.serialization.string(),
        text: core.serialization.string(),
        index: core.serialization.number().optional(),
        likelihood: core.serialization.number().optional(),
        tokenLikelihoods: core.serialization.property("token_likelihoods", core.serialization.list(SingleGenerationTokenLikelihoodsItem_1.SingleGenerationTokenLikelihoodsItem).optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/Generation.js
  var require_Generation = __commonJS({
    "node_modules/cohere-ai/serialization/types/Generation.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Generation = void 0;
      var core = __importStar3(require_core());
      var SingleGeneration_1 = require_SingleGeneration();
      var ApiMeta_1 = require_ApiMeta();
      exports.Generation = core.serialization.object({
        id: core.serialization.string(),
        prompt: core.serialization.string().optional(),
        generations: core.serialization.list(SingleGeneration_1.SingleGeneration),
        meta: ApiMeta_1.ApiMeta.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/GenerateStreamEvent.js
  var require_GenerateStreamEvent = __commonJS({
    "node_modules/cohere-ai/serialization/types/GenerateStreamEvent.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateStreamEvent = void 0;
      var core = __importStar3(require_core());
      exports.GenerateStreamEvent = core.serialization.object({});
    }
  });

  // node_modules/cohere-ai/serialization/types/GenerateStreamText.js
  var require_GenerateStreamText = __commonJS({
    "node_modules/cohere-ai/serialization/types/GenerateStreamText.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateStreamText = void 0;
      var core = __importStar3(require_core());
      var GenerateStreamEvent_1 = require_GenerateStreamEvent();
      exports.GenerateStreamText = core.serialization.object({
        text: core.serialization.string(),
        index: core.serialization.number().optional(),
        isFinished: core.serialization.property("is_finished", core.serialization.boolean())
      }).extend(GenerateStreamEvent_1.GenerateStreamEvent);
    }
  });

  // node_modules/cohere-ai/serialization/types/SingleGenerationInStream.js
  var require_SingleGenerationInStream = __commonJS({
    "node_modules/cohere-ai/serialization/types/SingleGenerationInStream.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SingleGenerationInStream = void 0;
      var core = __importStar3(require_core());
      var FinishReason_1 = require_FinishReason();
      exports.SingleGenerationInStream = core.serialization.object({
        id: core.serialization.string(),
        text: core.serialization.string(),
        index: core.serialization.number().optional(),
        finishReason: core.serialization.property("finish_reason", FinishReason_1.FinishReason)
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/GenerateStreamEndResponse.js
  var require_GenerateStreamEndResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/GenerateStreamEndResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateStreamEndResponse = void 0;
      var core = __importStar3(require_core());
      var SingleGenerationInStream_1 = require_SingleGenerationInStream();
      exports.GenerateStreamEndResponse = core.serialization.object({
        id: core.serialization.string(),
        prompt: core.serialization.string().optional(),
        generations: core.serialization.list(SingleGenerationInStream_1.SingleGenerationInStream).optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/GenerateStreamEnd.js
  var require_GenerateStreamEnd = __commonJS({
    "node_modules/cohere-ai/serialization/types/GenerateStreamEnd.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateStreamEnd = void 0;
      var core = __importStar3(require_core());
      var FinishReason_1 = require_FinishReason();
      var GenerateStreamEndResponse_1 = require_GenerateStreamEndResponse();
      var GenerateStreamEvent_1 = require_GenerateStreamEvent();
      exports.GenerateStreamEnd = core.serialization.object({
        isFinished: core.serialization.property("is_finished", core.serialization.boolean()),
        finishReason: core.serialization.property("finish_reason", FinishReason_1.FinishReason.optional()),
        response: GenerateStreamEndResponse_1.GenerateStreamEndResponse
      }).extend(GenerateStreamEvent_1.GenerateStreamEvent);
    }
  });

  // node_modules/cohere-ai/serialization/types/GenerateStreamError.js
  var require_GenerateStreamError = __commonJS({
    "node_modules/cohere-ai/serialization/types/GenerateStreamError.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateStreamError = void 0;
      var core = __importStar3(require_core());
      var FinishReason_1 = require_FinishReason();
      var GenerateStreamEvent_1 = require_GenerateStreamEvent();
      exports.GenerateStreamError = core.serialization.object({
        index: core.serialization.number().optional(),
        isFinished: core.serialization.property("is_finished", core.serialization.boolean()),
        finishReason: core.serialization.property("finish_reason", FinishReason_1.FinishReason),
        err: core.serialization.string()
      }).extend(GenerateStreamEvent_1.GenerateStreamEvent);
    }
  });

  // node_modules/cohere-ai/serialization/types/GenerateStreamedResponse.js
  var require_GenerateStreamedResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/GenerateStreamedResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateStreamedResponse = void 0;
      var core = __importStar3(require_core());
      var GenerateStreamText_1 = require_GenerateStreamText();
      var GenerateStreamEnd_1 = require_GenerateStreamEnd();
      var GenerateStreamError_1 = require_GenerateStreamError();
      exports.GenerateStreamedResponse = core.serialization.union(core.serialization.discriminant("eventType", "event_type"), {
        "text-generation": GenerateStreamText_1.GenerateStreamText,
        "stream-end": GenerateStreamEnd_1.GenerateStreamEnd,
        "stream-error": GenerateStreamError_1.GenerateStreamError
      }).transform({
        transform: (value14) => value14,
        untransform: (value14) => value14
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/EmbedJobStatus.js
  var require_EmbedJobStatus = __commonJS({
    "node_modules/cohere-ai/serialization/types/EmbedJobStatus.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedJobStatus = void 0;
      var core = __importStar3(require_core());
      exports.EmbedJobStatus = core.serialization.enum_(["processing", "complete", "cancelling", "cancelled", "failed"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/EmbedJobTruncate.js
  var require_EmbedJobTruncate = __commonJS({
    "node_modules/cohere-ai/serialization/types/EmbedJobTruncate.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedJobTruncate = void 0;
      var core = __importStar3(require_core());
      exports.EmbedJobTruncate = core.serialization.enum_(["START", "END"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/EmbedJob.js
  var require_EmbedJob = __commonJS({
    "node_modules/cohere-ai/serialization/types/EmbedJob.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedJob = void 0;
      var core = __importStar3(require_core());
      var EmbedJobStatus_1 = require_EmbedJobStatus();
      var EmbedJobTruncate_1 = require_EmbedJobTruncate();
      var ApiMeta_1 = require_ApiMeta();
      exports.EmbedJob = core.serialization.object({
        jobId: core.serialization.property("job_id", core.serialization.string()),
        name: core.serialization.string().optional(),
        status: EmbedJobStatus_1.EmbedJobStatus,
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        inputDatasetId: core.serialization.property("input_dataset_id", core.serialization.string()),
        outputDatasetId: core.serialization.property("output_dataset_id", core.serialization.string().optional()),
        model: core.serialization.string(),
        truncate: EmbedJobTruncate_1.EmbedJobTruncate,
        meta: ApiMeta_1.ApiMeta.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ListEmbedJobResponse.js
  var require_ListEmbedJobResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/ListEmbedJobResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ListEmbedJobResponse = void 0;
      var core = __importStar3(require_core());
      var EmbedJob_1 = require_EmbedJob();
      exports.ListEmbedJobResponse = core.serialization.object({
        embedJobs: core.serialization.property("embed_jobs", core.serialization.list(EmbedJob_1.EmbedJob).optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/CreateEmbedJobResponse.js
  var require_CreateEmbedJobResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/CreateEmbedJobResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CreateEmbedJobResponse = void 0;
      var core = __importStar3(require_core());
      var ApiMeta_1 = require_ApiMeta();
      exports.CreateEmbedJobResponse = core.serialization.object({
        jobId: core.serialization.property("job_id", core.serialization.string()),
        meta: ApiMeta_1.ApiMeta.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ClassifyExample.js
  var require_ClassifyExample = __commonJS({
    "node_modules/cohere-ai/serialization/types/ClassifyExample.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ClassifyExample = void 0;
      var core = __importStar3(require_core());
      exports.ClassifyExample = core.serialization.object({
        text: core.serialization.string().optional(),
        label: core.serialization.string().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ParseInfo.js
  var require_ParseInfo = __commonJS({
    "node_modules/cohere-ai/serialization/types/ParseInfo.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ParseInfo = void 0;
      var core = __importStar3(require_core());
      exports.ParseInfo = core.serialization.object({
        separator: core.serialization.string().optional(),
        delimiter: core.serialization.string().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/RerankerDataMetrics.js
  var require_RerankerDataMetrics = __commonJS({
    "node_modules/cohere-ai/serialization/types/RerankerDataMetrics.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.RerankerDataMetrics = void 0;
      var core = __importStar3(require_core());
      exports.RerankerDataMetrics = core.serialization.object({
        numTrainQueries: core.serialization.property("num_train_queries", core.serialization.number().optional()),
        numTrainRelevantPassages: core.serialization.property("num_train_relevant_passages", core.serialization.number().optional()),
        numTrainHardNegatives: core.serialization.property("num_train_hard_negatives", core.serialization.number().optional()),
        numEvalQueries: core.serialization.property("num_eval_queries", core.serialization.number().optional()),
        numEvalRelevantPassages: core.serialization.property("num_eval_relevant_passages", core.serialization.number().optional()),
        numEvalHardNegatives: core.serialization.property("num_eval_hard_negatives", core.serialization.number().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ChatDataMetrics.js
  var require_ChatDataMetrics = __commonJS({
    "node_modules/cohere-ai/serialization/types/ChatDataMetrics.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatDataMetrics = void 0;
      var core = __importStar3(require_core());
      exports.ChatDataMetrics = core.serialization.object({
        numTrainTurns: core.serialization.property("num_train_turns", core.serialization.number().optional()),
        numEvalTurns: core.serialization.property("num_eval_turns", core.serialization.number().optional()),
        preamble: core.serialization.string().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/LabelMetric.js
  var require_LabelMetric = __commonJS({
    "node_modules/cohere-ai/serialization/types/LabelMetric.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.LabelMetric = void 0;
      var core = __importStar3(require_core());
      exports.LabelMetric = core.serialization.object({
        totalExamples: core.serialization.property("total_examples", core.serialization.number().optional()),
        label: core.serialization.string().optional(),
        samples: core.serialization.list(core.serialization.string()).optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ClassifyDataMetrics.js
  var require_ClassifyDataMetrics = __commonJS({
    "node_modules/cohere-ai/serialization/types/ClassifyDataMetrics.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ClassifyDataMetrics = void 0;
      var core = __importStar3(require_core());
      var LabelMetric_1 = require_LabelMetric();
      exports.ClassifyDataMetrics = core.serialization.object({
        labelMetrics: core.serialization.property("label_metrics", core.serialization.list(LabelMetric_1.LabelMetric).optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/FinetuneDatasetMetrics.js
  var require_FinetuneDatasetMetrics = __commonJS({
    "node_modules/cohere-ai/serialization/types/FinetuneDatasetMetrics.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.FinetuneDatasetMetrics = void 0;
      var core = __importStar3(require_core());
      exports.FinetuneDatasetMetrics = core.serialization.object({
        trainableTokenCount: core.serialization.property("trainable_token_count", core.serialization.number().optional()),
        totalExamples: core.serialization.property("total_examples", core.serialization.number().optional()),
        trainExamples: core.serialization.property("train_examples", core.serialization.number().optional()),
        trainSizeBytes: core.serialization.property("train_size_bytes", core.serialization.number().optional()),
        evalExamples: core.serialization.property("eval_examples", core.serialization.number().optional()),
        evalSizeBytes: core.serialization.property("eval_size_bytes", core.serialization.number().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/MetricsEmbedDataFieldsItem.js
  var require_MetricsEmbedDataFieldsItem = __commonJS({
    "node_modules/cohere-ai/serialization/types/MetricsEmbedDataFieldsItem.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.MetricsEmbedDataFieldsItem = void 0;
      var core = __importStar3(require_core());
      exports.MetricsEmbedDataFieldsItem = core.serialization.object({
        name: core.serialization.string().optional(),
        count: core.serialization.number().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/MetricsEmbedData.js
  var require_MetricsEmbedData = __commonJS({
    "node_modules/cohere-ai/serialization/types/MetricsEmbedData.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.MetricsEmbedData = void 0;
      var core = __importStar3(require_core());
      var MetricsEmbedDataFieldsItem_1 = require_MetricsEmbedDataFieldsItem();
      exports.MetricsEmbedData = core.serialization.object({
        fields: core.serialization.list(MetricsEmbedDataFieldsItem_1.MetricsEmbedDataFieldsItem).optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/Metrics.js
  var require_Metrics = __commonJS({
    "node_modules/cohere-ai/serialization/types/Metrics.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Metrics = void 0;
      var core = __importStar3(require_core());
      var FinetuneDatasetMetrics_1 = require_FinetuneDatasetMetrics();
      var MetricsEmbedData_1 = require_MetricsEmbedData();
      exports.Metrics = core.serialization.object({
        finetuneDatasetMetrics: core.serialization.property("finetune_dataset_metrics", FinetuneDatasetMetrics_1.FinetuneDatasetMetrics.optional()),
        embedData: core.serialization.property("embed_data", MetricsEmbedData_1.MetricsEmbedData.optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ConnectorOAuth.js
  var require_ConnectorOAuth = __commonJS({
    "node_modules/cohere-ai/serialization/types/ConnectorOAuth.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ConnectorOAuth = void 0;
      var core = __importStar3(require_core());
      exports.ConnectorOAuth = core.serialization.object({
        clientId: core.serialization.property("client_id", core.serialization.string().optional()),
        clientSecret: core.serialization.property("client_secret", core.serialization.string().optional()),
        authorizeUrl: core.serialization.property("authorize_url", core.serialization.string()),
        tokenUrl: core.serialization.property("token_url", core.serialization.string()),
        scope: core.serialization.string().optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ConnectorAuthStatus.js
  var require_ConnectorAuthStatus = __commonJS({
    "node_modules/cohere-ai/serialization/types/ConnectorAuthStatus.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ConnectorAuthStatus = void 0;
      var core = __importStar3(require_core());
      exports.ConnectorAuthStatus = core.serialization.enum_(["valid", "expired"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/Connector.js
  var require_Connector = __commonJS({
    "node_modules/cohere-ai/serialization/types/Connector.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Connector = void 0;
      var core = __importStar3(require_core());
      var ConnectorOAuth_1 = require_ConnectorOAuth();
      var ConnectorAuthStatus_1 = require_ConnectorAuthStatus();
      exports.Connector = core.serialization.object({
        id: core.serialization.string(),
        organizationId: core.serialization.property("organization_id", core.serialization.string().optional()),
        name: core.serialization.string(),
        description: core.serialization.string().optional(),
        url: core.serialization.string().optional(),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date()),
        excludes: core.serialization.list(core.serialization.string()).optional(),
        authType: core.serialization.property("auth_type", core.serialization.string().optional()),
        oauth: ConnectorOAuth_1.ConnectorOAuth.optional(),
        authStatus: core.serialization.property("auth_status", ConnectorAuthStatus_1.ConnectorAuthStatus.optional()),
        active: core.serialization.boolean().optional(),
        continueOnFailure: core.serialization.property("continue_on_failure", core.serialization.boolean().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ListConnectorsResponse.js
  var require_ListConnectorsResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/ListConnectorsResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ListConnectorsResponse = void 0;
      var core = __importStar3(require_core());
      var Connector_1 = require_Connector();
      exports.ListConnectorsResponse = core.serialization.object({
        connectors: core.serialization.list(Connector_1.Connector),
        totalCount: core.serialization.property("total_count", core.serialization.number().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/CreateConnectorResponse.js
  var require_CreateConnectorResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/CreateConnectorResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CreateConnectorResponse = void 0;
      var core = __importStar3(require_core());
      var Connector_1 = require_Connector();
      exports.CreateConnectorResponse = core.serialization.object({
        connector: Connector_1.Connector
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/GetConnectorResponse.js
  var require_GetConnectorResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/GetConnectorResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GetConnectorResponse = void 0;
      var core = __importStar3(require_core());
      var Connector_1 = require_Connector();
      exports.GetConnectorResponse = core.serialization.object({
        connector: Connector_1.Connector
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/DeleteConnectorResponse.js
  var require_DeleteConnectorResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/DeleteConnectorResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DeleteConnectorResponse = void 0;
      var core = __importStar3(require_core());
      exports.DeleteConnectorResponse = core.serialization.record(core.serialization.string(), core.serialization.unknown());
    }
  });

  // node_modules/cohere-ai/serialization/types/UpdateConnectorResponse.js
  var require_UpdateConnectorResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/UpdateConnectorResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.UpdateConnectorResponse = void 0;
      var core = __importStar3(require_core());
      var Connector_1 = require_Connector();
      exports.UpdateConnectorResponse = core.serialization.object({
        connector: Connector_1.Connector
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/OAuthAuthorizeResponse.js
  var require_OAuthAuthorizeResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/OAuthAuthorizeResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.OAuthAuthorizeResponse = void 0;
      var core = __importStar3(require_core());
      exports.OAuthAuthorizeResponse = core.serialization.object({
        redirectUrl: core.serialization.property("redirect_url", core.serialization.string().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/CompatibleEndpoint.js
  var require_CompatibleEndpoint = __commonJS({
    "node_modules/cohere-ai/serialization/types/CompatibleEndpoint.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CompatibleEndpoint = void 0;
      var core = __importStar3(require_core());
      exports.CompatibleEndpoint = core.serialization.enum_(["chat", "embed", "classify", "summarize", "rerank", "rate", "generate"]);
    }
  });

  // node_modules/cohere-ai/serialization/types/GetModelResponse.js
  var require_GetModelResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/GetModelResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GetModelResponse = void 0;
      var core = __importStar3(require_core());
      var CompatibleEndpoint_1 = require_CompatibleEndpoint();
      exports.GetModelResponse = core.serialization.object({
        name: core.serialization.string().optional(),
        endpoints: core.serialization.list(CompatibleEndpoint_1.CompatibleEndpoint).optional(),
        finetuned: core.serialization.boolean().optional(),
        contextLength: core.serialization.property("context_length", core.serialization.number().optional()),
        tokenizerUrl: core.serialization.property("tokenizer_url", core.serialization.string().optional()),
        defaultEndpoints: core.serialization.property("default_endpoints", core.serialization.list(CompatibleEndpoint_1.CompatibleEndpoint).optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/ListModelsResponse.js
  var require_ListModelsResponse = __commonJS({
    "node_modules/cohere-ai/serialization/types/ListModelsResponse.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ListModelsResponse = void 0;
      var core = __importStar3(require_core());
      var GetModelResponse_1 = require_GetModelResponse();
      exports.ListModelsResponse = core.serialization.object({
        models: core.serialization.list(GetModelResponse_1.GetModelResponse),
        nextPageToken: core.serialization.property("next_page_token", core.serialization.string().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/types/index.js
  var require_types5 = __commonJS({
    "node_modules/cohere-ai/serialization/types/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_ChatStreamRequestPromptTruncation(), exports);
      __exportStar3(require_ChatStreamRequestCitationQuality(), exports);
      __exportStar3(require_ChatStreamRequestConnectorsSearchOptions(), exports);
      __exportStar3(require_ChatStreamRequestResponseFormatType(), exports);
      __exportStar3(require_ChatStreamRequestResponseFormat(), exports);
      __exportStar3(require_UnprocessableEntityErrorBody(), exports);
      __exportStar3(require_TooManyRequestsErrorBody(), exports);
      __exportStar3(require_ClientClosedRequestErrorBody(), exports);
      __exportStar3(require_NotImplementedErrorBody(), exports);
      __exportStar3(require_GatewayTimeoutErrorBody(), exports);
      __exportStar3(require_ChatRequestPromptTruncation(), exports);
      __exportStar3(require_ChatRequestCitationQuality(), exports);
      __exportStar3(require_ChatRequestConnectorsSearchOptions(), exports);
      __exportStar3(require_ChatRequestResponseFormatType(), exports);
      __exportStar3(require_ChatRequestResponseFormat(), exports);
      __exportStar3(require_GenerateStreamRequestTruncate(), exports);
      __exportStar3(require_GenerateStreamRequestReturnLikelihoods(), exports);
      __exportStar3(require_GenerateRequestTruncate(), exports);
      __exportStar3(require_GenerateRequestReturnLikelihoods(), exports);
      __exportStar3(require_EmbedRequestTruncate(), exports);
      __exportStar3(require_EmbedResponse(), exports);
      __exportStar3(require_RerankRequestDocumentsItem(), exports);
      __exportStar3(require_RerankResponseResultsItemDocument(), exports);
      __exportStar3(require_RerankResponseResultsItem(), exports);
      __exportStar3(require_RerankResponse(), exports);
      __exportStar3(require_ClassifyRequestTruncate(), exports);
      __exportStar3(require_ClassifyResponseClassificationsItemLabelsValue(), exports);
      __exportStar3(require_ClassifyResponseClassificationsItemClassificationType(), exports);
      __exportStar3(require_ClassifyResponseClassificationsItem(), exports);
      __exportStar3(require_ClassifyResponse(), exports);
      __exportStar3(require_SummarizeRequestLength(), exports);
      __exportStar3(require_SummarizeRequestFormat(), exports);
      __exportStar3(require_SummarizeRequestExtractiveness(), exports);
      __exportStar3(require_SummarizeResponse(), exports);
      __exportStar3(require_TokenizeResponse(), exports);
      __exportStar3(require_DetokenizeResponse(), exports);
      __exportStar3(require_CheckApiKeyResponse(), exports);
      __exportStar3(require_ToolCall(), exports);
      __exportStar3(require_ChatMessage(), exports);
      __exportStar3(require_ToolResult(), exports);
      __exportStar3(require_ToolMessage(), exports);
      __exportStar3(require_Message2(), exports);
      __exportStar3(require_ChatConnector(), exports);
      __exportStar3(require_ChatDocument(), exports);
      __exportStar3(require_ToolParameterDefinitionsValue(), exports);
      __exportStar3(require_Tool(), exports);
      __exportStar3(require_ChatCitation(), exports);
      __exportStar3(require_ChatSearchQuery(), exports);
      __exportStar3(require_ChatSearchResultConnector(), exports);
      __exportStar3(require_ChatSearchResult(), exports);
      __exportStar3(require_FinishReason(), exports);
      __exportStar3(require_ApiMetaApiVersion(), exports);
      __exportStar3(require_ApiMetaBilledUnits(), exports);
      __exportStar3(require_ApiMetaTokens(), exports);
      __exportStar3(require_ApiMeta(), exports);
      __exportStar3(require_NonStreamedChatResponse(), exports);
      __exportStar3(require_ChatStreamEvent(), exports);
      __exportStar3(require_ChatStreamStartEvent(), exports);
      __exportStar3(require_ChatSearchQueriesGenerationEvent(), exports);
      __exportStar3(require_ChatSearchResultsEvent(), exports);
      __exportStar3(require_ChatTextGenerationEvent(), exports);
      __exportStar3(require_ChatCitationGenerationEvent(), exports);
      __exportStar3(require_ChatToolCallsGenerationEvent(), exports);
      __exportStar3(require_ChatStreamEndEventFinishReason(), exports);
      __exportStar3(require_ChatStreamEndEvent(), exports);
      __exportStar3(require_ToolCallDelta(), exports);
      __exportStar3(require_ChatToolCallsChunkEvent(), exports);
      __exportStar3(require_StreamedChatResponse(), exports);
      __exportStar3(require_SingleGenerationTokenLikelihoodsItem(), exports);
      __exportStar3(require_SingleGeneration(), exports);
      __exportStar3(require_Generation(), exports);
      __exportStar3(require_GenerateStreamEvent(), exports);
      __exportStar3(require_GenerateStreamText(), exports);
      __exportStar3(require_SingleGenerationInStream(), exports);
      __exportStar3(require_GenerateStreamEndResponse(), exports);
      __exportStar3(require_GenerateStreamEnd(), exports);
      __exportStar3(require_GenerateStreamError(), exports);
      __exportStar3(require_GenerateStreamedResponse(), exports);
      __exportStar3(require_EmbedInputType(), exports);
      __exportStar3(require_EmbeddingType(), exports);
      __exportStar3(require_EmbedFloatsResponse(), exports);
      __exportStar3(require_EmbedByTypeResponseEmbeddings(), exports);
      __exportStar3(require_EmbedByTypeResponse(), exports);
      __exportStar3(require_EmbedJobStatus(), exports);
      __exportStar3(require_EmbedJobTruncate(), exports);
      __exportStar3(require_EmbedJob(), exports);
      __exportStar3(require_ListEmbedJobResponse(), exports);
      __exportStar3(require_CreateEmbedJobResponse(), exports);
      __exportStar3(require_RerankDocument(), exports);
      __exportStar3(require_ClassifyExample(), exports);
      __exportStar3(require_DatasetValidationStatus(), exports);
      __exportStar3(require_DatasetType(), exports);
      __exportStar3(require_DatasetPart(), exports);
      __exportStar3(require_ParseInfo(), exports);
      __exportStar3(require_RerankerDataMetrics(), exports);
      __exportStar3(require_ChatDataMetrics(), exports);
      __exportStar3(require_LabelMetric(), exports);
      __exportStar3(require_ClassifyDataMetrics(), exports);
      __exportStar3(require_FinetuneDatasetMetrics(), exports);
      __exportStar3(require_MetricsEmbedDataFieldsItem(), exports);
      __exportStar3(require_MetricsEmbedData(), exports);
      __exportStar3(require_Metrics(), exports);
      __exportStar3(require_Dataset(), exports);
      __exportStar3(require_ConnectorOAuth(), exports);
      __exportStar3(require_ConnectorAuthStatus(), exports);
      __exportStar3(require_Connector(), exports);
      __exportStar3(require_ListConnectorsResponse(), exports);
      __exportStar3(require_CreateConnectorOAuth(), exports);
      __exportStar3(require_AuthTokenType(), exports);
      __exportStar3(require_CreateConnectorServiceAuth(), exports);
      __exportStar3(require_CreateConnectorResponse(), exports);
      __exportStar3(require_GetConnectorResponse(), exports);
      __exportStar3(require_DeleteConnectorResponse(), exports);
      __exportStar3(require_UpdateConnectorResponse(), exports);
      __exportStar3(require_OAuthAuthorizeResponse(), exports);
      __exportStar3(require_CompatibleEndpoint(), exports);
      __exportStar3(require_GetModelResponse(), exports);
      __exportStar3(require_ListModelsResponse(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/client/requests/ChatStreamRequest.js
  var require_ChatStreamRequest = __commonJS({
    "node_modules/cohere-ai/serialization/client/requests/ChatStreamRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamRequest = void 0;
      var core = __importStar3(require_core());
      var Message_1 = require_Message2();
      var ChatStreamRequestPromptTruncation_1 = require_ChatStreamRequestPromptTruncation();
      var ChatConnector_1 = require_ChatConnector();
      var ChatDocument_1 = require_ChatDocument();
      var ChatStreamRequestCitationQuality_1 = require_ChatStreamRequestCitationQuality();
      var Tool_1 = require_Tool();
      var ToolResult_1 = require_ToolResult();
      var ChatStreamRequestResponseFormat_1 = require_ChatStreamRequestResponseFormat();
      exports.ChatStreamRequest = core.serialization.object({
        message: core.serialization.string(),
        model: core.serialization.string().optional(),
        preamble: core.serialization.string().optional(),
        chatHistory: core.serialization.property("chat_history", core.serialization.list(Message_1.Message).optional()),
        conversationId: core.serialization.property("conversation_id", core.serialization.string().optional()),
        promptTruncation: core.serialization.property("prompt_truncation", ChatStreamRequestPromptTruncation_1.ChatStreamRequestPromptTruncation.optional()),
        connectors: core.serialization.list(ChatConnector_1.ChatConnector).optional(),
        searchQueriesOnly: core.serialization.property("search_queries_only", core.serialization.boolean().optional()),
        documents: core.serialization.list(ChatDocument_1.ChatDocument).optional(),
        citationQuality: core.serialization.property("citation_quality", ChatStreamRequestCitationQuality_1.ChatStreamRequestCitationQuality.optional()),
        temperature: core.serialization.number().optional(),
        maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
        maxInputTokens: core.serialization.property("max_input_tokens", core.serialization.number().optional()),
        k: core.serialization.number().optional(),
        p: core.serialization.number().optional(),
        seed: core.serialization.number().optional(),
        stopSequences: core.serialization.property("stop_sequences", core.serialization.list(core.serialization.string()).optional()),
        frequencyPenalty: core.serialization.property("frequency_penalty", core.serialization.number().optional()),
        presencePenalty: core.serialization.property("presence_penalty", core.serialization.number().optional()),
        rawPrompting: core.serialization.property("raw_prompting", core.serialization.boolean().optional()),
        returnPrompt: core.serialization.property("return_prompt", core.serialization.boolean().optional()),
        tools: core.serialization.list(Tool_1.Tool).optional(),
        toolResults: core.serialization.property("tool_results", core.serialization.list(ToolResult_1.ToolResult).optional()),
        forceSingleStep: core.serialization.property("force_single_step", core.serialization.boolean().optional()),
        responseFormat: core.serialization.property("response_format", ChatStreamRequestResponseFormat_1.ChatStreamRequestResponseFormat.optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/client/requests/ChatRequest.js
  var require_ChatRequest = __commonJS({
    "node_modules/cohere-ai/serialization/client/requests/ChatRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatRequest = void 0;
      var core = __importStar3(require_core());
      var Message_1 = require_Message2();
      var ChatRequestPromptTruncation_1 = require_ChatRequestPromptTruncation();
      var ChatConnector_1 = require_ChatConnector();
      var ChatDocument_1 = require_ChatDocument();
      var ChatRequestCitationQuality_1 = require_ChatRequestCitationQuality();
      var Tool_1 = require_Tool();
      var ToolResult_1 = require_ToolResult();
      var ChatRequestResponseFormat_1 = require_ChatRequestResponseFormat();
      exports.ChatRequest = core.serialization.object({
        message: core.serialization.string(),
        model: core.serialization.string().optional(),
        preamble: core.serialization.string().optional(),
        chatHistory: core.serialization.property("chat_history", core.serialization.list(Message_1.Message).optional()),
        conversationId: core.serialization.property("conversation_id", core.serialization.string().optional()),
        promptTruncation: core.serialization.property("prompt_truncation", ChatRequestPromptTruncation_1.ChatRequestPromptTruncation.optional()),
        connectors: core.serialization.list(ChatConnector_1.ChatConnector).optional(),
        searchQueriesOnly: core.serialization.property("search_queries_only", core.serialization.boolean().optional()),
        documents: core.serialization.list(ChatDocument_1.ChatDocument).optional(),
        citationQuality: core.serialization.property("citation_quality", ChatRequestCitationQuality_1.ChatRequestCitationQuality.optional()),
        temperature: core.serialization.number().optional(),
        maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
        maxInputTokens: core.serialization.property("max_input_tokens", core.serialization.number().optional()),
        k: core.serialization.number().optional(),
        p: core.serialization.number().optional(),
        seed: core.serialization.number().optional(),
        stopSequences: core.serialization.property("stop_sequences", core.serialization.list(core.serialization.string()).optional()),
        frequencyPenalty: core.serialization.property("frequency_penalty", core.serialization.number().optional()),
        presencePenalty: core.serialization.property("presence_penalty", core.serialization.number().optional()),
        rawPrompting: core.serialization.property("raw_prompting", core.serialization.boolean().optional()),
        returnPrompt: core.serialization.property("return_prompt", core.serialization.boolean().optional()),
        tools: core.serialization.list(Tool_1.Tool).optional(),
        toolResults: core.serialization.property("tool_results", core.serialization.list(ToolResult_1.ToolResult).optional()),
        forceSingleStep: core.serialization.property("force_single_step", core.serialization.boolean().optional()),
        responseFormat: core.serialization.property("response_format", ChatRequestResponseFormat_1.ChatRequestResponseFormat.optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/client/requests/GenerateStreamRequest.js
  var require_GenerateStreamRequest = __commonJS({
    "node_modules/cohere-ai/serialization/client/requests/GenerateStreamRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateStreamRequest = void 0;
      var core = __importStar3(require_core());
      var GenerateStreamRequestTruncate_1 = require_GenerateStreamRequestTruncate();
      var GenerateStreamRequestReturnLikelihoods_1 = require_GenerateStreamRequestReturnLikelihoods();
      exports.GenerateStreamRequest = core.serialization.object({
        prompt: core.serialization.string(),
        model: core.serialization.string().optional(),
        numGenerations: core.serialization.property("num_generations", core.serialization.number().optional()),
        maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
        truncate: GenerateStreamRequestTruncate_1.GenerateStreamRequestTruncate.optional(),
        temperature: core.serialization.number().optional(),
        seed: core.serialization.number().optional(),
        preset: core.serialization.string().optional(),
        endSequences: core.serialization.property("end_sequences", core.serialization.list(core.serialization.string()).optional()),
        stopSequences: core.serialization.property("stop_sequences", core.serialization.list(core.serialization.string()).optional()),
        k: core.serialization.number().optional(),
        p: core.serialization.number().optional(),
        frequencyPenalty: core.serialization.property("frequency_penalty", core.serialization.number().optional()),
        presencePenalty: core.serialization.property("presence_penalty", core.serialization.number().optional()),
        returnLikelihoods: core.serialization.property("return_likelihoods", GenerateStreamRequestReturnLikelihoods_1.GenerateStreamRequestReturnLikelihoods.optional()),
        rawPrompting: core.serialization.property("raw_prompting", core.serialization.boolean().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/client/requests/GenerateRequest.js
  var require_GenerateRequest = __commonJS({
    "node_modules/cohere-ai/serialization/client/requests/GenerateRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateRequest = void 0;
      var core = __importStar3(require_core());
      var GenerateRequestTruncate_1 = require_GenerateRequestTruncate();
      var GenerateRequestReturnLikelihoods_1 = require_GenerateRequestReturnLikelihoods();
      exports.GenerateRequest = core.serialization.object({
        prompt: core.serialization.string(),
        model: core.serialization.string().optional(),
        numGenerations: core.serialization.property("num_generations", core.serialization.number().optional()),
        maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
        truncate: GenerateRequestTruncate_1.GenerateRequestTruncate.optional(),
        temperature: core.serialization.number().optional(),
        seed: core.serialization.number().optional(),
        preset: core.serialization.string().optional(),
        endSequences: core.serialization.property("end_sequences", core.serialization.list(core.serialization.string()).optional()),
        stopSequences: core.serialization.property("stop_sequences", core.serialization.list(core.serialization.string()).optional()),
        k: core.serialization.number().optional(),
        p: core.serialization.number().optional(),
        frequencyPenalty: core.serialization.property("frequency_penalty", core.serialization.number().optional()),
        presencePenalty: core.serialization.property("presence_penalty", core.serialization.number().optional()),
        returnLikelihoods: core.serialization.property("return_likelihoods", GenerateRequestReturnLikelihoods_1.GenerateRequestReturnLikelihoods.optional()),
        rawPrompting: core.serialization.property("raw_prompting", core.serialization.boolean().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/client/requests/EmbedRequest.js
  var require_EmbedRequest = __commonJS({
    "node_modules/cohere-ai/serialization/client/requests/EmbedRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedRequest = void 0;
      var core = __importStar3(require_core());
      var EmbedInputType_1 = require_EmbedInputType();
      var EmbeddingType_1 = require_EmbeddingType();
      var EmbedRequestTruncate_1 = require_EmbedRequestTruncate();
      exports.EmbedRequest = core.serialization.object({
        texts: core.serialization.list(core.serialization.string()),
        model: core.serialization.string().optional(),
        inputType: core.serialization.property("input_type", EmbedInputType_1.EmbedInputType.optional()),
        embeddingTypes: core.serialization.property("embedding_types", core.serialization.list(EmbeddingType_1.EmbeddingType).optional()),
        truncate: EmbedRequestTruncate_1.EmbedRequestTruncate.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/client/requests/RerankRequest.js
  var require_RerankRequest = __commonJS({
    "node_modules/cohere-ai/serialization/client/requests/RerankRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.RerankRequest = void 0;
      var core = __importStar3(require_core());
      var RerankRequestDocumentsItem_1 = require_RerankRequestDocumentsItem();
      exports.RerankRequest = core.serialization.object({
        model: core.serialization.string().optional(),
        query: core.serialization.string(),
        documents: core.serialization.list(RerankRequestDocumentsItem_1.RerankRequestDocumentsItem),
        topN: core.serialization.property("top_n", core.serialization.number().optional()),
        rankFields: core.serialization.property("rank_fields", core.serialization.list(core.serialization.string()).optional()),
        returnDocuments: core.serialization.property("return_documents", core.serialization.boolean().optional()),
        maxChunksPerDoc: core.serialization.property("max_chunks_per_doc", core.serialization.number().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/client/requests/ClassifyRequest.js
  var require_ClassifyRequest = __commonJS({
    "node_modules/cohere-ai/serialization/client/requests/ClassifyRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ClassifyRequest = void 0;
      var core = __importStar3(require_core());
      var ClassifyExample_1 = require_ClassifyExample();
      var ClassifyRequestTruncate_1 = require_ClassifyRequestTruncate();
      exports.ClassifyRequest = core.serialization.object({
        inputs: core.serialization.list(core.serialization.string()),
        examples: core.serialization.list(ClassifyExample_1.ClassifyExample).optional(),
        model: core.serialization.string().optional(),
        preset: core.serialization.string().optional(),
        truncate: ClassifyRequestTruncate_1.ClassifyRequestTruncate.optional()
      });
    }
  });

  // node_modules/cohere-ai/serialization/client/requests/SummarizeRequest.js
  var require_SummarizeRequest = __commonJS({
    "node_modules/cohere-ai/serialization/client/requests/SummarizeRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SummarizeRequest = void 0;
      var core = __importStar3(require_core());
      var SummarizeRequestLength_1 = require_SummarizeRequestLength();
      var SummarizeRequestFormat_1 = require_SummarizeRequestFormat();
      var SummarizeRequestExtractiveness_1 = require_SummarizeRequestExtractiveness();
      exports.SummarizeRequest = core.serialization.object({
        text: core.serialization.string(),
        length: SummarizeRequestLength_1.SummarizeRequestLength.optional(),
        format: SummarizeRequestFormat_1.SummarizeRequestFormat.optional(),
        model: core.serialization.string().optional(),
        extractiveness: SummarizeRequestExtractiveness_1.SummarizeRequestExtractiveness.optional(),
        temperature: core.serialization.number().optional(),
        additionalCommand: core.serialization.property("additional_command", core.serialization.string().optional())
      });
    }
  });

  // node_modules/cohere-ai/serialization/client/requests/TokenizeRequest.js
  var require_TokenizeRequest = __commonJS({
    "node_modules/cohere-ai/serialization/client/requests/TokenizeRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.TokenizeRequest = void 0;
      var core = __importStar3(require_core());
      exports.TokenizeRequest = core.serialization.object({
        text: core.serialization.string(),
        model: core.serialization.string()
      });
    }
  });

  // node_modules/cohere-ai/serialization/client/requests/DetokenizeRequest.js
  var require_DetokenizeRequest = __commonJS({
    "node_modules/cohere-ai/serialization/client/requests/DetokenizeRequest.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DetokenizeRequest = void 0;
      var core = __importStar3(require_core());
      exports.DetokenizeRequest = core.serialization.object({
        tokens: core.serialization.list(core.serialization.number()),
        model: core.serialization.string()
      });
    }
  });

  // node_modules/cohere-ai/serialization/client/requests/index.js
  var require_requests4 = __commonJS({
    "node_modules/cohere-ai/serialization/client/requests/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DetokenizeRequest = exports.TokenizeRequest = exports.SummarizeRequest = exports.ClassifyRequest = exports.RerankRequest = exports.EmbedRequest = exports.GenerateRequest = exports.GenerateStreamRequest = exports.ChatRequest = exports.ChatStreamRequest = void 0;
      var ChatStreamRequest_1 = require_ChatStreamRequest();
      Object.defineProperty(exports, "ChatStreamRequest", { enumerable: true, get: function() {
        return ChatStreamRequest_1.ChatStreamRequest;
      } });
      var ChatRequest_1 = require_ChatRequest();
      Object.defineProperty(exports, "ChatRequest", { enumerable: true, get: function() {
        return ChatRequest_1.ChatRequest;
      } });
      var GenerateStreamRequest_1 = require_GenerateStreamRequest();
      Object.defineProperty(exports, "GenerateStreamRequest", { enumerable: true, get: function() {
        return GenerateStreamRequest_1.GenerateStreamRequest;
      } });
      var GenerateRequest_1 = require_GenerateRequest();
      Object.defineProperty(exports, "GenerateRequest", { enumerable: true, get: function() {
        return GenerateRequest_1.GenerateRequest;
      } });
      var EmbedRequest_1 = require_EmbedRequest();
      Object.defineProperty(exports, "EmbedRequest", { enumerable: true, get: function() {
        return EmbedRequest_1.EmbedRequest;
      } });
      var RerankRequest_1 = require_RerankRequest();
      Object.defineProperty(exports, "RerankRequest", { enumerable: true, get: function() {
        return RerankRequest_1.RerankRequest;
      } });
      var ClassifyRequest_1 = require_ClassifyRequest();
      Object.defineProperty(exports, "ClassifyRequest", { enumerable: true, get: function() {
        return ClassifyRequest_1.ClassifyRequest;
      } });
      var SummarizeRequest_1 = require_SummarizeRequest();
      Object.defineProperty(exports, "SummarizeRequest", { enumerable: true, get: function() {
        return SummarizeRequest_1.SummarizeRequest;
      } });
      var TokenizeRequest_1 = require_TokenizeRequest();
      Object.defineProperty(exports, "TokenizeRequest", { enumerable: true, get: function() {
        return TokenizeRequest_1.TokenizeRequest;
      } });
      var DetokenizeRequest_1 = require_DetokenizeRequest();
      Object.defineProperty(exports, "DetokenizeRequest", { enumerable: true, get: function() {
        return DetokenizeRequest_1.DetokenizeRequest;
      } });
    }
  });

  // node_modules/cohere-ai/serialization/client/index.js
  var require_client6 = __commonJS({
    "node_modules/cohere-ai/serialization/client/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_requests4(), exports);
    }
  });

  // node_modules/cohere-ai/serialization/index.js
  var require_serialization = __commonJS({
    "node_modules/cohere-ai/serialization/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_resources2(), exports);
      __exportStar3(require_types5(), exports);
      __exportStar3(require_client6(), exports);
    }
  });

  // node_modules/cohere-ai/aws-utils.js
  var require_aws_utils = __commonJS({
    "node_modules/cohere-ai/aws-utils.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      var __asyncValues3 = exports && exports.__asyncValues || function(o3) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m3 = o3[Symbol.asyncIterator], i4;
        return m3 ? m3.call(o3) : (o3 = typeof __values === "function" ? __values(o3) : o3[Symbol.iterator](), i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
          return this;
        }, i4);
        function verb(n3) {
          i4[n3] = o3[n3] && function(v3) {
            return new Promise(function(resolve, reject) {
              v3 = o3[n3](v3), settle(resolve, reject, v3.done, v3.value);
            });
          };
        }
        function settle(resolve, reject, d3, v3) {
          Promise.resolve(v3).then(function(v5) {
            resolve({ value: v5, done: d3 });
          }, reject);
        }
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.fetchOverride = exports.parseAWSEvent = exports.getEndpointFromUrl = exports.getAuthHeaders = exports.getUrl = exports.mapResponseFromBedrock = void 0;
      var sha256_js_1 = require_main2();
      var credential_providers_1 = (init_index_browser2(), __toCommonJS(index_browser_exports));
      var protocol_http_1 = require_dist_cjs6();
      var signature_v4_1 = require_dist_cjs16();
      var readable_stream_1 = require_browser3();
      var core_1 = require_core();
      var Stream_1 = require_Stream();
      var streaming_utils_1 = require_streaming_utils();
      var serializers = __importStar3(require_serialization());
      var withTempEnv = (updateEnv, fn) => __awaiter3(void 0, void 0, void 0, function* () {
        const previousEnv = Object.assign({}, process.env);
        try {
          updateEnv();
          return yield fn();
        } finally {
          process.env = previousEnv;
        }
      });
      var streamingResponseParser = {
        "chat": serializers.StreamedChatResponse,
        "generate": serializers.GenerateStreamedResponse
      };
      var nonStreamedResponseParser = {
        "chat": serializers.NonStreamedChatResponse,
        "embed": serializers.EmbedResponse,
        "generate": serializers.Generation
      };
      var mapResponseFromBedrock = (streaming, endpoint, obj) => __awaiter3(void 0, void 0, void 0, function* () {
        const parser = streaming ? streamingResponseParser[endpoint] : nonStreamedResponseParser[endpoint];
        const config = {
          unrecognizedObjectKeys: "passthrough",
          allowUnrecognizedUnionMembers: true,
          allowUnrecognizedEnumValues: true,
          skipValidation: true,
          breadcrumbsPrefix: ["response"]
        };
        const parsed = yield parser.parseOrThrow(obj, config);
        return parser.jsonOrThrow(parsed, config);
      });
      exports.mapResponseFromBedrock = mapResponseFromBedrock;
      var getUrl = (platform2, awsRegion, model, stream) => {
        const endpoint = {
          "bedrock": stream ? "invoke-with-response-stream" : "invoke",
          "sagemaker": stream ? "invocations-response-stream" : "invocations"
        }[platform2];
        return {
          "bedrock": `https://${platform2}-runtime.${awsRegion}.amazonaws.com/model/${model}/${endpoint}`,
          "sagemaker": `https://runtime.sagemaker.${awsRegion}.amazonaws.com/endpoints/${model}/${endpoint}`
        }[platform2];
      };
      exports.getUrl = getUrl;
      var getAuthHeaders = (url, method2, headers, body2, service, props) => __awaiter3(void 0, void 0, void 0, function* () {
        const providerChain = (0, credential_providers_1.fromNodeProviderChain)();
        const credentials = yield withTempEnv(() => {
          if (props.awsAccessKey) {
            process.env["AWS_ACCESS_KEY_ID"] = props.awsAccessKey;
          }
          if (props.awsSecretKey) {
            process.env["AWS_SECRET_ACCESS_KEY"] = props.awsSecretKey;
          }
          if (props.awsSessionToken) {
            process.env["AWS_SESSION_TOKEN"] = props.awsSessionToken;
          }
        }, () => providerChain());
        const signer = new signature_v4_1.SignatureV4({
          service,
          region: props.awsRegion,
          credentials,
          sha256: sha256_js_1.Sha256
        });
        delete headers["connection"];
        headers["host"] = url.hostname;
        const request3 = new protocol_http_1.HttpRequest({
          method: method2.toUpperCase(),
          protocol: url.protocol,
          path: url.pathname,
          headers,
          body: body2
        });
        const signed = yield signer.sign(request3);
        return signed.headers;
      });
      exports.getAuthHeaders = getAuthHeaders;
      var getEndpointFromUrl = (url, chatModel, embedModel, generateModel) => {
        if (chatModel && url.includes(chatModel)) {
          return "chat";
        }
        if (embedModel && url.includes(embedModel)) {
          return "embed";
        }
        if (generateModel && url.includes(generateModel)) {
          return "generate";
        }
        throw new Error(`Unknown endpoint in url: ${url}`);
      };
      exports.getEndpointFromUrl = getEndpointFromUrl;
      var parseAWSEvent = (line) => {
        const regex = /{[^\}]*}/;
        const match4 = line.match(regex);
        if (match4 === null || match4 === void 0 ? void 0 : match4[0]) {
          const obj = JSON.parse(match4[0]);
          if (obj.bytes) {
            const base64Payload = Buffer.from(obj.bytes, "base64").toString("utf-8");
            const streamedObj = JSON.parse(base64Payload);
            if (streamedObj.event_type) {
              return streamedObj;
            }
          }
        }
      };
      exports.parseAWSEvent = parseAWSEvent;
      var fetchOverride = (platform2, { awsRegion, awsAccessKey, awsSecretKey, awsSessionToken }) => (fetcherArgs) => __awaiter3(void 0, void 0, void 0, function* () {
        var e_1, _a2;
        const endpoint = fetcherArgs.url.split("/").pop();
        const bodyJson = fetcherArgs.body;
        console.assert(bodyJson.model, "model is required");
        const isStreaming = Boolean(bodyJson.stream);
        const url = (0, exports.getUrl)(platform2, awsRegion, bodyJson.model, isStreaming);
        delete bodyJson["stream"];
        delete bodyJson["model"];
        delete fetcherArgs.headers["Authorization"];
        fetcherArgs.headers["Host"] = new URL(url).hostname;
        const authHeaders = yield (0, exports.getAuthHeaders)(new URL(url), fetcherArgs.method, fetcherArgs.headers, JSON.stringify(bodyJson), platform2, {
          awsRegion,
          awsAccessKey,
          awsSecretKey,
          awsSessionToken
        });
        fetcherArgs.url = url;
        fetcherArgs.headers = authHeaders;
        const response = yield (0, core_1.fetcher)(fetcherArgs);
        if (!response.ok) {
          return response;
        }
        try {
          if (isStreaming) {
            const responseStream = (0, Stream_1.readableStreamAsyncIterable)(response.body);
            const lineDecoder = new streaming_utils_1.LineDecoder();
            const newBody = new readable_stream_1.PassThrough();
            try {
              for (var responseStream_1 = __asyncValues3(responseStream), responseStream_1_1; responseStream_1_1 = yield responseStream_1.next(), !responseStream_1_1.done; ) {
                const chunk = responseStream_1_1.value;
                for (const line of lineDecoder.decode(chunk)) {
                  const event = (0, exports.parseAWSEvent)(line);
                  if (event) {
                    const obj = yield (0, exports.mapResponseFromBedrock)(isStreaming, endpoint, event);
                    newBody.push(JSON.stringify(obj) + "\n");
                  }
                }
              }
            } catch (e_1_1) {
              e_1 = { error: e_1_1 };
            } finally {
              try {
                if (responseStream_1_1 && !responseStream_1_1.done && (_a2 = responseStream_1.return)) yield _a2.call(responseStream_1);
              } finally {
                if (e_1) throw e_1.error;
              }
            }
            for (const line of lineDecoder.flush()) {
              const event = (0, exports.parseAWSEvent)(line);
              if (event) {
                const obj = yield (0, exports.mapResponseFromBedrock)(isStreaming, endpoint, event);
                newBody.push(JSON.stringify(obj) + "\n");
              }
            }
            newBody.end();
            return {
              ok: true,
              body: newBody
            };
          } else {
            const oldBody = yield response.body;
            const mappedResponse = yield (0, exports.mapResponseFromBedrock)(isStreaming, endpoint, oldBody);
            return {
              ok: true,
              body: mappedResponse
            };
          }
        } catch (e3) {
          throw e3;
        }
      });
      exports.fetchOverride = fetchOverride;
    }
  });

  // node_modules/cohere-ai/environments.js
  var require_environments = __commonJS({
    "node_modules/cohere-ai/environments.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CohereEnvironment = void 0;
      exports.CohereEnvironment = {
        Production: "https://api.cohere.com/v1"
      };
    }
  });

  // node_modules/cohere-ai/api/resources/embedJobs/types/CreateEmbedJobRequestTruncate.js
  var require_CreateEmbedJobRequestTruncate2 = __commonJS({
    "node_modules/cohere-ai/api/resources/embedJobs/types/CreateEmbedJobRequestTruncate.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CreateEmbedJobRequestTruncate = void 0;
      exports.CreateEmbedJobRequestTruncate = {
        Start: "START",
        End: "END"
      };
    }
  });

  // node_modules/cohere-ai/api/resources/embedJobs/types/index.js
  var require_types6 = __commonJS({
    "node_modules/cohere-ai/api/resources/embedJobs/types/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_CreateEmbedJobRequestTruncate2(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/embedJobs/client/requests/index.js
  var require_requests5 = __commonJS({
    "node_modules/cohere-ai/api/resources/embedJobs/client/requests/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/embedJobs/client/index.js
  var require_client7 = __commonJS({
    "node_modules/cohere-ai/api/resources/embedJobs/client/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_requests5(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/embedJobs/index.js
  var require_embedJobs2 = __commonJS({
    "node_modules/cohere-ai/api/resources/embedJobs/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_types6(), exports);
      __exportStar3(require_client7(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/datasets/types/DatasetsListResponse.js
  var require_DatasetsListResponse2 = __commonJS({
    "node_modules/cohere-ai/api/resources/datasets/types/DatasetsListResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/datasets/types/DatasetsCreateResponseDatasetPartsItem.js
  var require_DatasetsCreateResponseDatasetPartsItem2 = __commonJS({
    "node_modules/cohere-ai/api/resources/datasets/types/DatasetsCreateResponseDatasetPartsItem.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/datasets/types/DatasetsCreateResponse.js
  var require_DatasetsCreateResponse2 = __commonJS({
    "node_modules/cohere-ai/api/resources/datasets/types/DatasetsCreateResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/datasets/types/DatasetsGetUsageResponse.js
  var require_DatasetsGetUsageResponse2 = __commonJS({
    "node_modules/cohere-ai/api/resources/datasets/types/DatasetsGetUsageResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/datasets/types/DatasetsGetResponse.js
  var require_DatasetsGetResponse2 = __commonJS({
    "node_modules/cohere-ai/api/resources/datasets/types/DatasetsGetResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/datasets/types/index.js
  var require_types7 = __commonJS({
    "node_modules/cohere-ai/api/resources/datasets/types/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_DatasetsListResponse2(), exports);
      __exportStar3(require_DatasetsCreateResponseDatasetPartsItem2(), exports);
      __exportStar3(require_DatasetsCreateResponse2(), exports);
      __exportStar3(require_DatasetsGetUsageResponse2(), exports);
      __exportStar3(require_DatasetsGetResponse2(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/datasets/client/requests/index.js
  var require_requests6 = __commonJS({
    "node_modules/cohere-ai/api/resources/datasets/client/requests/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/datasets/client/index.js
  var require_client8 = __commonJS({
    "node_modules/cohere-ai/api/resources/datasets/client/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_requests6(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/datasets/index.js
  var require_datasets2 = __commonJS({
    "node_modules/cohere-ai/api/resources/datasets/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_types7(), exports);
      __exportStar3(require_client8(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/BaseType.js
  var require_BaseType2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/BaseType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.BaseType = void 0;
      exports.BaseType = {
        BaseTypeUnspecified: "BASE_TYPE_UNSPECIFIED",
        BaseTypeGenerative: "BASE_TYPE_GENERATIVE",
        BaseTypeClassification: "BASE_TYPE_CLASSIFICATION",
        BaseTypeRerank: "BASE_TYPE_RERANK",
        BaseTypeChat: "BASE_TYPE_CHAT"
      };
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/Strategy.js
  var require_Strategy2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/Strategy.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Strategy = void 0;
      exports.Strategy = {
        StrategyUnspecified: "STRATEGY_UNSPECIFIED",
        StrategyVanilla: "STRATEGY_VANILLA",
        StrategyTfew: "STRATEGY_TFEW"
      };
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/BaseModel.js
  var require_BaseModel2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/BaseModel.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/Hyperparameters.js
  var require_Hyperparameters2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/Hyperparameters.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/Settings.js
  var require_Settings2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/Settings.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/Status.js
  var require_Status2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/Status.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Status = void 0;
      exports.Status = {
        StatusUnspecified: "STATUS_UNSPECIFIED",
        StatusFinetuning: "STATUS_FINETUNING",
        StatusDeployingApi: "STATUS_DEPLOYING_API",
        StatusReady: "STATUS_READY",
        StatusFailed: "STATUS_FAILED",
        StatusDeleted: "STATUS_DELETED",
        StatusTemporarilyOffline: "STATUS_TEMPORARILY_OFFLINE",
        StatusPaused: "STATUS_PAUSED",
        StatusQueued: "STATUS_QUEUED"
      };
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/FinetunedModel.js
  var require_FinetunedModel2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/FinetunedModel.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/ListFinetunedModelsResponse.js
  var require_ListFinetunedModelsResponse2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/ListFinetunedModelsResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/CreateFinetunedModelResponse.js
  var require_CreateFinetunedModelResponse2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/CreateFinetunedModelResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/GetFinetunedModelResponse.js
  var require_GetFinetunedModelResponse2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/GetFinetunedModelResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/DeleteFinetunedModelResponse.js
  var require_DeleteFinetunedModelResponse2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/DeleteFinetunedModelResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/UpdateFinetunedModelResponse.js
  var require_UpdateFinetunedModelResponse2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/UpdateFinetunedModelResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/Event.js
  var require_Event2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/Event.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/ListEventsResponse.js
  var require_ListEventsResponse2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/ListEventsResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/TrainingStepMetrics.js
  var require_TrainingStepMetrics2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/TrainingStepMetrics.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/ListTrainingStepMetricsResponse.js
  var require_ListTrainingStepMetricsResponse2 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/ListTrainingStepMetricsResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/index.js
  var require_types8 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/types/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_BaseType2(), exports);
      __exportStar3(require_Strategy2(), exports);
      __exportStar3(require_BaseModel2(), exports);
      __exportStar3(require_Hyperparameters2(), exports);
      __exportStar3(require_Settings2(), exports);
      __exportStar3(require_Status2(), exports);
      __exportStar3(require_FinetunedModel2(), exports);
      __exportStar3(require_ListFinetunedModelsResponse2(), exports);
      __exportStar3(require_CreateFinetunedModelResponse2(), exports);
      __exportStar3(require_GetFinetunedModelResponse2(), exports);
      __exportStar3(require_DeleteFinetunedModelResponse2(), exports);
      __exportStar3(require_UpdateFinetunedModelResponse2(), exports);
      __exportStar3(require_Event2(), exports);
      __exportStar3(require_ListEventsResponse2(), exports);
      __exportStar3(require_TrainingStepMetrics2(), exports);
      __exportStar3(require_ListTrainingStepMetricsResponse2(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/index.js
  var require_finetuning3 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/finetuning/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_types8(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/resources/index.js
  var require_resources3 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/resources/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.finetuning = void 0;
      exports.finetuning = __importStar3(require_finetuning3());
      __exportStar3(require_types8(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/client/requests/index.js
  var require_requests7 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/client/requests/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/client/index.js
  var require_client9 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/client/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_requests7(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/index.js
  var require_finetuning4 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_resources3(), exports);
      __exportStar3(require_client9(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/connectors/client/requests/index.js
  var require_requests8 = __commonJS({
    "node_modules/cohere-ai/api/resources/connectors/client/requests/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/connectors/client/index.js
  var require_client10 = __commonJS({
    "node_modules/cohere-ai/api/resources/connectors/client/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_requests8(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/connectors/index.js
  var require_connectors2 = __commonJS({
    "node_modules/cohere-ai/api/resources/connectors/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_client10(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/models/client/requests/index.js
  var require_requests9 = __commonJS({
    "node_modules/cohere-ai/api/resources/models/client/requests/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/resources/models/client/index.js
  var require_client11 = __commonJS({
    "node_modules/cohere-ai/api/resources/models/client/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_requests9(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/models/index.js
  var require_models = __commonJS({
    "node_modules/cohere-ai/api/resources/models/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_client11(), exports);
    }
  });

  // node_modules/cohere-ai/api/resources/index.js
  var require_resources4 = __commonJS({
    "node_modules/cohere-ai/api/resources/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.models = exports.connectors = exports.finetuning = exports.datasets = exports.embedJobs = void 0;
      exports.embedJobs = __importStar3(require_embedJobs2());
      __exportStar3(require_types6(), exports);
      exports.datasets = __importStar3(require_datasets2());
      __exportStar3(require_types7(), exports);
      exports.finetuning = __importStar3(require_finetuning4());
      exports.connectors = __importStar3(require_connectors2());
      exports.models = __importStar3(require_models());
      __exportStar3(require_requests5(), exports);
      __exportStar3(require_requests6(), exports);
      __exportStar3(require_requests8(), exports);
      __exportStar3(require_requests9(), exports);
      __exportStar3(require_requests7(), exports);
    }
  });

  // node_modules/cohere-ai/api/types/ChatStreamRequestPromptTruncation.js
  var require_ChatStreamRequestPromptTruncation2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatStreamRequestPromptTruncation.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamRequestPromptTruncation = void 0;
      exports.ChatStreamRequestPromptTruncation = {
        Off: "OFF",
        Auto: "AUTO",
        AutoPreserveOrder: "AUTO_PRESERVE_ORDER"
      };
    }
  });

  // node_modules/cohere-ai/api/types/ChatStreamRequestCitationQuality.js
  var require_ChatStreamRequestCitationQuality2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatStreamRequestCitationQuality.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamRequestCitationQuality = void 0;
      exports.ChatStreamRequestCitationQuality = {
        Fast: "fast",
        Accurate: "accurate",
        Off: "off"
      };
    }
  });

  // node_modules/cohere-ai/api/types/ChatStreamRequestConnectorsSearchOptions.js
  var require_ChatStreamRequestConnectorsSearchOptions2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatStreamRequestConnectorsSearchOptions.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatStreamRequestResponseFormatType.js
  var require_ChatStreamRequestResponseFormatType2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatStreamRequestResponseFormatType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamRequestResponseFormatType = void 0;
      exports.ChatStreamRequestResponseFormatType = {
        Text: "text",
        JsonObject: "json_object"
      };
    }
  });

  // node_modules/cohere-ai/api/types/ChatStreamRequestResponseFormat.js
  var require_ChatStreamRequestResponseFormat2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatStreamRequestResponseFormat.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/UnprocessableEntityErrorBody.js
  var require_UnprocessableEntityErrorBody2 = __commonJS({
    "node_modules/cohere-ai/api/types/UnprocessableEntityErrorBody.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/TooManyRequestsErrorBody.js
  var require_TooManyRequestsErrorBody2 = __commonJS({
    "node_modules/cohere-ai/api/types/TooManyRequestsErrorBody.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ClientClosedRequestErrorBody.js
  var require_ClientClosedRequestErrorBody2 = __commonJS({
    "node_modules/cohere-ai/api/types/ClientClosedRequestErrorBody.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/NotImplementedErrorBody.js
  var require_NotImplementedErrorBody2 = __commonJS({
    "node_modules/cohere-ai/api/types/NotImplementedErrorBody.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/GatewayTimeoutErrorBody.js
  var require_GatewayTimeoutErrorBody2 = __commonJS({
    "node_modules/cohere-ai/api/types/GatewayTimeoutErrorBody.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatRequestPromptTruncation.js
  var require_ChatRequestPromptTruncation2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatRequestPromptTruncation.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatRequestPromptTruncation = void 0;
      exports.ChatRequestPromptTruncation = {
        Off: "OFF",
        Auto: "AUTO",
        AutoPreserveOrder: "AUTO_PRESERVE_ORDER"
      };
    }
  });

  // node_modules/cohere-ai/api/types/ChatRequestCitationQuality.js
  var require_ChatRequestCitationQuality2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatRequestCitationQuality.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatRequestCitationQuality = void 0;
      exports.ChatRequestCitationQuality = {
        Fast: "fast",
        Accurate: "accurate",
        Off: "off"
      };
    }
  });

  // node_modules/cohere-ai/api/types/ChatRequestConnectorsSearchOptions.js
  var require_ChatRequestConnectorsSearchOptions2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatRequestConnectorsSearchOptions.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatRequestResponseFormatType.js
  var require_ChatRequestResponseFormatType2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatRequestResponseFormatType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatRequestResponseFormatType = void 0;
      exports.ChatRequestResponseFormatType = {
        Text: "text",
        JsonObject: "json_object"
      };
    }
  });

  // node_modules/cohere-ai/api/types/ChatRequestResponseFormat.js
  var require_ChatRequestResponseFormat2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatRequestResponseFormat.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/GenerateStreamRequestTruncate.js
  var require_GenerateStreamRequestTruncate2 = __commonJS({
    "node_modules/cohere-ai/api/types/GenerateStreamRequestTruncate.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateStreamRequestTruncate = void 0;
      exports.GenerateStreamRequestTruncate = {
        None: "NONE",
        Start: "START",
        End: "END"
      };
    }
  });

  // node_modules/cohere-ai/api/types/GenerateStreamRequestReturnLikelihoods.js
  var require_GenerateStreamRequestReturnLikelihoods2 = __commonJS({
    "node_modules/cohere-ai/api/types/GenerateStreamRequestReturnLikelihoods.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateStreamRequestReturnLikelihoods = void 0;
      exports.GenerateStreamRequestReturnLikelihoods = {
        Generation: "GENERATION",
        All: "ALL",
        None: "NONE"
      };
    }
  });

  // node_modules/cohere-ai/api/types/GenerateRequestTruncate.js
  var require_GenerateRequestTruncate2 = __commonJS({
    "node_modules/cohere-ai/api/types/GenerateRequestTruncate.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateRequestTruncate = void 0;
      exports.GenerateRequestTruncate = {
        None: "NONE",
        Start: "START",
        End: "END"
      };
    }
  });

  // node_modules/cohere-ai/api/types/GenerateRequestReturnLikelihoods.js
  var require_GenerateRequestReturnLikelihoods2 = __commonJS({
    "node_modules/cohere-ai/api/types/GenerateRequestReturnLikelihoods.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GenerateRequestReturnLikelihoods = void 0;
      exports.GenerateRequestReturnLikelihoods = {
        Generation: "GENERATION",
        All: "ALL",
        None: "NONE"
      };
    }
  });

  // node_modules/cohere-ai/api/types/EmbedRequestTruncate.js
  var require_EmbedRequestTruncate2 = __commonJS({
    "node_modules/cohere-ai/api/types/EmbedRequestTruncate.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedRequestTruncate = void 0;
      exports.EmbedRequestTruncate = {
        None: "NONE",
        Start: "START",
        End: "END"
      };
    }
  });

  // node_modules/cohere-ai/api/types/EmbedResponse.js
  var require_EmbedResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/EmbedResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/RerankRequestDocumentsItem.js
  var require_RerankRequestDocumentsItem2 = __commonJS({
    "node_modules/cohere-ai/api/types/RerankRequestDocumentsItem.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/RerankResponseResultsItemDocument.js
  var require_RerankResponseResultsItemDocument2 = __commonJS({
    "node_modules/cohere-ai/api/types/RerankResponseResultsItemDocument.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/RerankResponseResultsItem.js
  var require_RerankResponseResultsItem2 = __commonJS({
    "node_modules/cohere-ai/api/types/RerankResponseResultsItem.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/RerankResponse.js
  var require_RerankResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/RerankResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ClassifyRequestTruncate.js
  var require_ClassifyRequestTruncate2 = __commonJS({
    "node_modules/cohere-ai/api/types/ClassifyRequestTruncate.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ClassifyRequestTruncate = void 0;
      exports.ClassifyRequestTruncate = {
        None: "NONE",
        Start: "START",
        End: "END"
      };
    }
  });

  // node_modules/cohere-ai/api/types/ClassifyResponseClassificationsItemLabelsValue.js
  var require_ClassifyResponseClassificationsItemLabelsValue2 = __commonJS({
    "node_modules/cohere-ai/api/types/ClassifyResponseClassificationsItemLabelsValue.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ClassifyResponseClassificationsItemClassificationType.js
  var require_ClassifyResponseClassificationsItemClassificationType2 = __commonJS({
    "node_modules/cohere-ai/api/types/ClassifyResponseClassificationsItemClassificationType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ClassifyResponseClassificationsItemClassificationType = void 0;
      exports.ClassifyResponseClassificationsItemClassificationType = {
        SingleLabel: "single-label",
        MultiLabel: "multi-label"
      };
    }
  });

  // node_modules/cohere-ai/api/types/ClassifyResponseClassificationsItem.js
  var require_ClassifyResponseClassificationsItem2 = __commonJS({
    "node_modules/cohere-ai/api/types/ClassifyResponseClassificationsItem.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ClassifyResponse.js
  var require_ClassifyResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/ClassifyResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/SummarizeRequestLength.js
  var require_SummarizeRequestLength2 = __commonJS({
    "node_modules/cohere-ai/api/types/SummarizeRequestLength.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SummarizeRequestLength = void 0;
      exports.SummarizeRequestLength = {
        Short: "short",
        Medium: "medium",
        Long: "long"
      };
    }
  });

  // node_modules/cohere-ai/api/types/SummarizeRequestFormat.js
  var require_SummarizeRequestFormat2 = __commonJS({
    "node_modules/cohere-ai/api/types/SummarizeRequestFormat.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SummarizeRequestFormat = void 0;
      exports.SummarizeRequestFormat = {
        Paragraph: "paragraph",
        Bullets: "bullets"
      };
    }
  });

  // node_modules/cohere-ai/api/types/SummarizeRequestExtractiveness.js
  var require_SummarizeRequestExtractiveness2 = __commonJS({
    "node_modules/cohere-ai/api/types/SummarizeRequestExtractiveness.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SummarizeRequestExtractiveness = void 0;
      exports.SummarizeRequestExtractiveness = {
        Low: "low",
        Medium: "medium",
        High: "high"
      };
    }
  });

  // node_modules/cohere-ai/api/types/SummarizeResponse.js
  var require_SummarizeResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/SummarizeResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/TokenizeResponse.js
  var require_TokenizeResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/TokenizeResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/DetokenizeResponse.js
  var require_DetokenizeResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/DetokenizeResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/CheckApiKeyResponse.js
  var require_CheckApiKeyResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/CheckApiKeyResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ToolCall.js
  var require_ToolCall2 = __commonJS({
    "node_modules/cohere-ai/api/types/ToolCall.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatMessage.js
  var require_ChatMessage2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatMessage.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ToolResult.js
  var require_ToolResult2 = __commonJS({
    "node_modules/cohere-ai/api/types/ToolResult.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ToolMessage.js
  var require_ToolMessage2 = __commonJS({
    "node_modules/cohere-ai/api/types/ToolMessage.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/Message.js
  var require_Message3 = __commonJS({
    "node_modules/cohere-ai/api/types/Message.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatConnector.js
  var require_ChatConnector2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatConnector.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatDocument.js
  var require_ChatDocument2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatDocument.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ToolParameterDefinitionsValue.js
  var require_ToolParameterDefinitionsValue2 = __commonJS({
    "node_modules/cohere-ai/api/types/ToolParameterDefinitionsValue.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/Tool.js
  var require_Tool2 = __commonJS({
    "node_modules/cohere-ai/api/types/Tool.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatCitation.js
  var require_ChatCitation2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatCitation.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatSearchQuery.js
  var require_ChatSearchQuery2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatSearchQuery.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatSearchResultConnector.js
  var require_ChatSearchResultConnector2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatSearchResultConnector.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatSearchResult.js
  var require_ChatSearchResult2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatSearchResult.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/FinishReason.js
  var require_FinishReason2 = __commonJS({
    "node_modules/cohere-ai/api/types/FinishReason.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.FinishReason = void 0;
      exports.FinishReason = {
        Complete: "COMPLETE",
        StopSequence: "STOP_SEQUENCE",
        Error: "ERROR",
        ErrorToxic: "ERROR_TOXIC",
        ErrorLimit: "ERROR_LIMIT",
        UserCancel: "USER_CANCEL",
        MaxTokens: "MAX_TOKENS"
      };
    }
  });

  // node_modules/cohere-ai/api/types/ApiMetaApiVersion.js
  var require_ApiMetaApiVersion2 = __commonJS({
    "node_modules/cohere-ai/api/types/ApiMetaApiVersion.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ApiMetaBilledUnits.js
  var require_ApiMetaBilledUnits2 = __commonJS({
    "node_modules/cohere-ai/api/types/ApiMetaBilledUnits.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ApiMetaTokens.js
  var require_ApiMetaTokens2 = __commonJS({
    "node_modules/cohere-ai/api/types/ApiMetaTokens.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ApiMeta.js
  var require_ApiMeta2 = __commonJS({
    "node_modules/cohere-ai/api/types/ApiMeta.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/NonStreamedChatResponse.js
  var require_NonStreamedChatResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/NonStreamedChatResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatStreamEvent.js
  var require_ChatStreamEvent2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatStreamEvent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatStreamStartEvent.js
  var require_ChatStreamStartEvent2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatStreamStartEvent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatSearchQueriesGenerationEvent.js
  var require_ChatSearchQueriesGenerationEvent2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatSearchQueriesGenerationEvent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatSearchResultsEvent.js
  var require_ChatSearchResultsEvent2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatSearchResultsEvent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatTextGenerationEvent.js
  var require_ChatTextGenerationEvent2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatTextGenerationEvent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatCitationGenerationEvent.js
  var require_ChatCitationGenerationEvent2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatCitationGenerationEvent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatToolCallsGenerationEvent.js
  var require_ChatToolCallsGenerationEvent2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatToolCallsGenerationEvent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatStreamEndEventFinishReason.js
  var require_ChatStreamEndEventFinishReason2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatStreamEndEventFinishReason.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ChatStreamEndEventFinishReason = void 0;
      exports.ChatStreamEndEventFinishReason = {
        Complete: "COMPLETE",
        ErrorLimit: "ERROR_LIMIT",
        MaxTokens: "MAX_TOKENS",
        Error: "ERROR",
        ErrorToxic: "ERROR_TOXIC"
      };
    }
  });

  // node_modules/cohere-ai/api/types/ChatStreamEndEvent.js
  var require_ChatStreamEndEvent2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatStreamEndEvent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ToolCallDelta.js
  var require_ToolCallDelta2 = __commonJS({
    "node_modules/cohere-ai/api/types/ToolCallDelta.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatToolCallsChunkEvent.js
  var require_ChatToolCallsChunkEvent2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatToolCallsChunkEvent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/StreamedChatResponse.js
  var require_StreamedChatResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/StreamedChatResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/SingleGenerationTokenLikelihoodsItem.js
  var require_SingleGenerationTokenLikelihoodsItem2 = __commonJS({
    "node_modules/cohere-ai/api/types/SingleGenerationTokenLikelihoodsItem.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/SingleGeneration.js
  var require_SingleGeneration2 = __commonJS({
    "node_modules/cohere-ai/api/types/SingleGeneration.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/Generation.js
  var require_Generation2 = __commonJS({
    "node_modules/cohere-ai/api/types/Generation.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/GenerateStreamEvent.js
  var require_GenerateStreamEvent2 = __commonJS({
    "node_modules/cohere-ai/api/types/GenerateStreamEvent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/GenerateStreamText.js
  var require_GenerateStreamText2 = __commonJS({
    "node_modules/cohere-ai/api/types/GenerateStreamText.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/SingleGenerationInStream.js
  var require_SingleGenerationInStream2 = __commonJS({
    "node_modules/cohere-ai/api/types/SingleGenerationInStream.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/GenerateStreamEndResponse.js
  var require_GenerateStreamEndResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/GenerateStreamEndResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/GenerateStreamEnd.js
  var require_GenerateStreamEnd2 = __commonJS({
    "node_modules/cohere-ai/api/types/GenerateStreamEnd.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/GenerateStreamError.js
  var require_GenerateStreamError2 = __commonJS({
    "node_modules/cohere-ai/api/types/GenerateStreamError.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/GenerateStreamedResponse.js
  var require_GenerateStreamedResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/GenerateStreamedResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/EmbedInputType.js
  var require_EmbedInputType2 = __commonJS({
    "node_modules/cohere-ai/api/types/EmbedInputType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedInputType = void 0;
      exports.EmbedInputType = {
        SearchDocument: "search_document",
        SearchQuery: "search_query",
        Classification: "classification",
        Clustering: "clustering"
      };
    }
  });

  // node_modules/cohere-ai/api/types/EmbeddingType.js
  var require_EmbeddingType2 = __commonJS({
    "node_modules/cohere-ai/api/types/EmbeddingType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbeddingType = void 0;
      exports.EmbeddingType = {
        Float: "float",
        Int8: "int8",
        Uint8: "uint8",
        Binary: "binary",
        Ubinary: "ubinary"
      };
    }
  });

  // node_modules/cohere-ai/api/types/EmbedFloatsResponse.js
  var require_EmbedFloatsResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/EmbedFloatsResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/EmbedByTypeResponseEmbeddings.js
  var require_EmbedByTypeResponseEmbeddings2 = __commonJS({
    "node_modules/cohere-ai/api/types/EmbedByTypeResponseEmbeddings.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/EmbedByTypeResponse.js
  var require_EmbedByTypeResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/EmbedByTypeResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/EmbedJobStatus.js
  var require_EmbedJobStatus2 = __commonJS({
    "node_modules/cohere-ai/api/types/EmbedJobStatus.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedJobStatus = void 0;
      exports.EmbedJobStatus = {
        Processing: "processing",
        Complete: "complete",
        Cancelling: "cancelling",
        Cancelled: "cancelled",
        Failed: "failed"
      };
    }
  });

  // node_modules/cohere-ai/api/types/EmbedJobTruncate.js
  var require_EmbedJobTruncate2 = __commonJS({
    "node_modules/cohere-ai/api/types/EmbedJobTruncate.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedJobTruncate = void 0;
      exports.EmbedJobTruncate = {
        Start: "START",
        End: "END"
      };
    }
  });

  // node_modules/cohere-ai/api/types/EmbedJob.js
  var require_EmbedJob2 = __commonJS({
    "node_modules/cohere-ai/api/types/EmbedJob.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ListEmbedJobResponse.js
  var require_ListEmbedJobResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/ListEmbedJobResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/CreateEmbedJobResponse.js
  var require_CreateEmbedJobResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/CreateEmbedJobResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/RerankDocument.js
  var require_RerankDocument2 = __commonJS({
    "node_modules/cohere-ai/api/types/RerankDocument.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ClassifyExample.js
  var require_ClassifyExample2 = __commonJS({
    "node_modules/cohere-ai/api/types/ClassifyExample.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/DatasetValidationStatus.js
  var require_DatasetValidationStatus2 = __commonJS({
    "node_modules/cohere-ai/api/types/DatasetValidationStatus.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DatasetValidationStatus = void 0;
      exports.DatasetValidationStatus = {
        Unknown: "unknown",
        Queued: "queued",
        Processing: "processing",
        Failed: "failed",
        Validated: "validated",
        Skipped: "skipped"
      };
    }
  });

  // node_modules/cohere-ai/api/types/DatasetType.js
  var require_DatasetType2 = __commonJS({
    "node_modules/cohere-ai/api/types/DatasetType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DatasetType = void 0;
      exports.DatasetType = {
        EmbedInput: "embed-input",
        EmbedResult: "embed-result",
        ClusterResult: "cluster-result",
        ClusterOutliers: "cluster-outliers",
        RerankerFinetuneInput: "reranker-finetune-input",
        SingleLabelClassificationFinetuneInput: "single-label-classification-finetune-input",
        ChatFinetuneInput: "chat-finetune-input",
        MultiLabelClassificationFinetuneInput: "multi-label-classification-finetune-input"
      };
    }
  });

  // node_modules/cohere-ai/api/types/DatasetPart.js
  var require_DatasetPart2 = __commonJS({
    "node_modules/cohere-ai/api/types/DatasetPart.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ParseInfo.js
  var require_ParseInfo2 = __commonJS({
    "node_modules/cohere-ai/api/types/ParseInfo.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/RerankerDataMetrics.js
  var require_RerankerDataMetrics2 = __commonJS({
    "node_modules/cohere-ai/api/types/RerankerDataMetrics.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ChatDataMetrics.js
  var require_ChatDataMetrics2 = __commonJS({
    "node_modules/cohere-ai/api/types/ChatDataMetrics.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/LabelMetric.js
  var require_LabelMetric2 = __commonJS({
    "node_modules/cohere-ai/api/types/LabelMetric.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ClassifyDataMetrics.js
  var require_ClassifyDataMetrics2 = __commonJS({
    "node_modules/cohere-ai/api/types/ClassifyDataMetrics.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/FinetuneDatasetMetrics.js
  var require_FinetuneDatasetMetrics2 = __commonJS({
    "node_modules/cohere-ai/api/types/FinetuneDatasetMetrics.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/MetricsEmbedDataFieldsItem.js
  var require_MetricsEmbedDataFieldsItem2 = __commonJS({
    "node_modules/cohere-ai/api/types/MetricsEmbedDataFieldsItem.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/MetricsEmbedData.js
  var require_MetricsEmbedData2 = __commonJS({
    "node_modules/cohere-ai/api/types/MetricsEmbedData.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/Metrics.js
  var require_Metrics2 = __commonJS({
    "node_modules/cohere-ai/api/types/Metrics.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/Dataset.js
  var require_Dataset2 = __commonJS({
    "node_modules/cohere-ai/api/types/Dataset.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ConnectorOAuth.js
  var require_ConnectorOAuth2 = __commonJS({
    "node_modules/cohere-ai/api/types/ConnectorOAuth.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ConnectorAuthStatus.js
  var require_ConnectorAuthStatus2 = __commonJS({
    "node_modules/cohere-ai/api/types/ConnectorAuthStatus.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ConnectorAuthStatus = void 0;
      exports.ConnectorAuthStatus = {
        Valid: "valid",
        Expired: "expired"
      };
    }
  });

  // node_modules/cohere-ai/api/types/Connector.js
  var require_Connector2 = __commonJS({
    "node_modules/cohere-ai/api/types/Connector.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ListConnectorsResponse.js
  var require_ListConnectorsResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/ListConnectorsResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/CreateConnectorOAuth.js
  var require_CreateConnectorOAuth2 = __commonJS({
    "node_modules/cohere-ai/api/types/CreateConnectorOAuth.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/AuthTokenType.js
  var require_AuthTokenType2 = __commonJS({
    "node_modules/cohere-ai/api/types/AuthTokenType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.AuthTokenType = void 0;
      exports.AuthTokenType = {
        Bearer: "bearer",
        Basic: "basic",
        Noscheme: "noscheme"
      };
    }
  });

  // node_modules/cohere-ai/api/types/CreateConnectorServiceAuth.js
  var require_CreateConnectorServiceAuth2 = __commonJS({
    "node_modules/cohere-ai/api/types/CreateConnectorServiceAuth.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/CreateConnectorResponse.js
  var require_CreateConnectorResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/CreateConnectorResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/GetConnectorResponse.js
  var require_GetConnectorResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/GetConnectorResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/DeleteConnectorResponse.js
  var require_DeleteConnectorResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/DeleteConnectorResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/UpdateConnectorResponse.js
  var require_UpdateConnectorResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/UpdateConnectorResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/OAuthAuthorizeResponse.js
  var require_OAuthAuthorizeResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/OAuthAuthorizeResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/CompatibleEndpoint.js
  var require_CompatibleEndpoint2 = __commonJS({
    "node_modules/cohere-ai/api/types/CompatibleEndpoint.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CompatibleEndpoint = void 0;
      exports.CompatibleEndpoint = {
        Chat: "chat",
        Embed: "embed",
        Classify: "classify",
        Summarize: "summarize",
        Rerank: "rerank",
        Rate: "rate",
        Generate: "generate"
      };
    }
  });

  // node_modules/cohere-ai/api/types/GetModelResponse.js
  var require_GetModelResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/GetModelResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/ListModelsResponse.js
  var require_ListModelsResponse2 = __commonJS({
    "node_modules/cohere-ai/api/types/ListModelsResponse.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/types/index.js
  var require_types9 = __commonJS({
    "node_modules/cohere-ai/api/types/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_ChatStreamRequestPromptTruncation2(), exports);
      __exportStar3(require_ChatStreamRequestCitationQuality2(), exports);
      __exportStar3(require_ChatStreamRequestConnectorsSearchOptions2(), exports);
      __exportStar3(require_ChatStreamRequestResponseFormatType2(), exports);
      __exportStar3(require_ChatStreamRequestResponseFormat2(), exports);
      __exportStar3(require_UnprocessableEntityErrorBody2(), exports);
      __exportStar3(require_TooManyRequestsErrorBody2(), exports);
      __exportStar3(require_ClientClosedRequestErrorBody2(), exports);
      __exportStar3(require_NotImplementedErrorBody2(), exports);
      __exportStar3(require_GatewayTimeoutErrorBody2(), exports);
      __exportStar3(require_ChatRequestPromptTruncation2(), exports);
      __exportStar3(require_ChatRequestCitationQuality2(), exports);
      __exportStar3(require_ChatRequestConnectorsSearchOptions2(), exports);
      __exportStar3(require_ChatRequestResponseFormatType2(), exports);
      __exportStar3(require_ChatRequestResponseFormat2(), exports);
      __exportStar3(require_GenerateStreamRequestTruncate2(), exports);
      __exportStar3(require_GenerateStreamRequestReturnLikelihoods2(), exports);
      __exportStar3(require_GenerateRequestTruncate2(), exports);
      __exportStar3(require_GenerateRequestReturnLikelihoods2(), exports);
      __exportStar3(require_EmbedRequestTruncate2(), exports);
      __exportStar3(require_EmbedResponse2(), exports);
      __exportStar3(require_RerankRequestDocumentsItem2(), exports);
      __exportStar3(require_RerankResponseResultsItemDocument2(), exports);
      __exportStar3(require_RerankResponseResultsItem2(), exports);
      __exportStar3(require_RerankResponse2(), exports);
      __exportStar3(require_ClassifyRequestTruncate2(), exports);
      __exportStar3(require_ClassifyResponseClassificationsItemLabelsValue2(), exports);
      __exportStar3(require_ClassifyResponseClassificationsItemClassificationType2(), exports);
      __exportStar3(require_ClassifyResponseClassificationsItem2(), exports);
      __exportStar3(require_ClassifyResponse2(), exports);
      __exportStar3(require_SummarizeRequestLength2(), exports);
      __exportStar3(require_SummarizeRequestFormat2(), exports);
      __exportStar3(require_SummarizeRequestExtractiveness2(), exports);
      __exportStar3(require_SummarizeResponse2(), exports);
      __exportStar3(require_TokenizeResponse2(), exports);
      __exportStar3(require_DetokenizeResponse2(), exports);
      __exportStar3(require_CheckApiKeyResponse2(), exports);
      __exportStar3(require_ToolCall2(), exports);
      __exportStar3(require_ChatMessage2(), exports);
      __exportStar3(require_ToolResult2(), exports);
      __exportStar3(require_ToolMessage2(), exports);
      __exportStar3(require_Message3(), exports);
      __exportStar3(require_ChatConnector2(), exports);
      __exportStar3(require_ChatDocument2(), exports);
      __exportStar3(require_ToolParameterDefinitionsValue2(), exports);
      __exportStar3(require_Tool2(), exports);
      __exportStar3(require_ChatCitation2(), exports);
      __exportStar3(require_ChatSearchQuery2(), exports);
      __exportStar3(require_ChatSearchResultConnector2(), exports);
      __exportStar3(require_ChatSearchResult2(), exports);
      __exportStar3(require_FinishReason2(), exports);
      __exportStar3(require_ApiMetaApiVersion2(), exports);
      __exportStar3(require_ApiMetaBilledUnits2(), exports);
      __exportStar3(require_ApiMetaTokens2(), exports);
      __exportStar3(require_ApiMeta2(), exports);
      __exportStar3(require_NonStreamedChatResponse2(), exports);
      __exportStar3(require_ChatStreamEvent2(), exports);
      __exportStar3(require_ChatStreamStartEvent2(), exports);
      __exportStar3(require_ChatSearchQueriesGenerationEvent2(), exports);
      __exportStar3(require_ChatSearchResultsEvent2(), exports);
      __exportStar3(require_ChatTextGenerationEvent2(), exports);
      __exportStar3(require_ChatCitationGenerationEvent2(), exports);
      __exportStar3(require_ChatToolCallsGenerationEvent2(), exports);
      __exportStar3(require_ChatStreamEndEventFinishReason2(), exports);
      __exportStar3(require_ChatStreamEndEvent2(), exports);
      __exportStar3(require_ToolCallDelta2(), exports);
      __exportStar3(require_ChatToolCallsChunkEvent2(), exports);
      __exportStar3(require_StreamedChatResponse2(), exports);
      __exportStar3(require_SingleGenerationTokenLikelihoodsItem2(), exports);
      __exportStar3(require_SingleGeneration2(), exports);
      __exportStar3(require_Generation2(), exports);
      __exportStar3(require_GenerateStreamEvent2(), exports);
      __exportStar3(require_GenerateStreamText2(), exports);
      __exportStar3(require_SingleGenerationInStream2(), exports);
      __exportStar3(require_GenerateStreamEndResponse2(), exports);
      __exportStar3(require_GenerateStreamEnd2(), exports);
      __exportStar3(require_GenerateStreamError2(), exports);
      __exportStar3(require_GenerateStreamedResponse2(), exports);
      __exportStar3(require_EmbedInputType2(), exports);
      __exportStar3(require_EmbeddingType2(), exports);
      __exportStar3(require_EmbedFloatsResponse2(), exports);
      __exportStar3(require_EmbedByTypeResponseEmbeddings2(), exports);
      __exportStar3(require_EmbedByTypeResponse2(), exports);
      __exportStar3(require_EmbedJobStatus2(), exports);
      __exportStar3(require_EmbedJobTruncate2(), exports);
      __exportStar3(require_EmbedJob2(), exports);
      __exportStar3(require_ListEmbedJobResponse2(), exports);
      __exportStar3(require_CreateEmbedJobResponse2(), exports);
      __exportStar3(require_RerankDocument2(), exports);
      __exportStar3(require_ClassifyExample2(), exports);
      __exportStar3(require_DatasetValidationStatus2(), exports);
      __exportStar3(require_DatasetType2(), exports);
      __exportStar3(require_DatasetPart2(), exports);
      __exportStar3(require_ParseInfo2(), exports);
      __exportStar3(require_RerankerDataMetrics2(), exports);
      __exportStar3(require_ChatDataMetrics2(), exports);
      __exportStar3(require_LabelMetric2(), exports);
      __exportStar3(require_ClassifyDataMetrics2(), exports);
      __exportStar3(require_FinetuneDatasetMetrics2(), exports);
      __exportStar3(require_MetricsEmbedDataFieldsItem2(), exports);
      __exportStar3(require_MetricsEmbedData2(), exports);
      __exportStar3(require_Metrics2(), exports);
      __exportStar3(require_Dataset2(), exports);
      __exportStar3(require_ConnectorOAuth2(), exports);
      __exportStar3(require_ConnectorAuthStatus2(), exports);
      __exportStar3(require_Connector2(), exports);
      __exportStar3(require_ListConnectorsResponse2(), exports);
      __exportStar3(require_CreateConnectorOAuth2(), exports);
      __exportStar3(require_AuthTokenType2(), exports);
      __exportStar3(require_CreateConnectorServiceAuth2(), exports);
      __exportStar3(require_CreateConnectorResponse2(), exports);
      __exportStar3(require_GetConnectorResponse2(), exports);
      __exportStar3(require_DeleteConnectorResponse2(), exports);
      __exportStar3(require_UpdateConnectorResponse2(), exports);
      __exportStar3(require_OAuthAuthorizeResponse2(), exports);
      __exportStar3(require_CompatibleEndpoint2(), exports);
      __exportStar3(require_GetModelResponse2(), exports);
      __exportStar3(require_ListModelsResponse2(), exports);
    }
  });

  // node_modules/cohere-ai/api/errors/BadRequestError.js
  var require_BadRequestError = __commonJS({
    "node_modules/cohere-ai/api/errors/BadRequestError.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.BadRequestError = void 0;
      var errors = __importStar3(require_errors2());
      var BadRequestError = class _BadRequestError extends errors.CohereError {
        constructor(body2) {
          super({
            message: "BadRequestError",
            statusCode: 400,
            body: body2
          });
          Object.setPrototypeOf(this, _BadRequestError.prototype);
        }
      };
      exports.BadRequestError = BadRequestError;
    }
  });

  // node_modules/cohere-ai/api/errors/UnauthorizedError.js
  var require_UnauthorizedError = __commonJS({
    "node_modules/cohere-ai/api/errors/UnauthorizedError.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.UnauthorizedError = void 0;
      var errors = __importStar3(require_errors2());
      var UnauthorizedError = class _UnauthorizedError extends errors.CohereError {
        constructor(body2) {
          super({
            message: "UnauthorizedError",
            statusCode: 401,
            body: body2
          });
          Object.setPrototypeOf(this, _UnauthorizedError.prototype);
        }
      };
      exports.UnauthorizedError = UnauthorizedError;
    }
  });

  // node_modules/cohere-ai/api/errors/ForbiddenError.js
  var require_ForbiddenError = __commonJS({
    "node_modules/cohere-ai/api/errors/ForbiddenError.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ForbiddenError = void 0;
      var errors = __importStar3(require_errors2());
      var ForbiddenError = class _ForbiddenError extends errors.CohereError {
        constructor(body2) {
          super({
            message: "ForbiddenError",
            statusCode: 403,
            body: body2
          });
          Object.setPrototypeOf(this, _ForbiddenError.prototype);
        }
      };
      exports.ForbiddenError = ForbiddenError;
    }
  });

  // node_modules/cohere-ai/api/errors/NotFoundError.js
  var require_NotFoundError = __commonJS({
    "node_modules/cohere-ai/api/errors/NotFoundError.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.NotFoundError = void 0;
      var errors = __importStar3(require_errors2());
      var NotFoundError = class _NotFoundError extends errors.CohereError {
        constructor(body2) {
          super({
            message: "NotFoundError",
            statusCode: 404,
            body: body2
          });
          Object.setPrototypeOf(this, _NotFoundError.prototype);
        }
      };
      exports.NotFoundError = NotFoundError;
    }
  });

  // node_modules/cohere-ai/api/errors/UnprocessableEntityError.js
  var require_UnprocessableEntityError = __commonJS({
    "node_modules/cohere-ai/api/errors/UnprocessableEntityError.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.UnprocessableEntityError = void 0;
      var errors = __importStar3(require_errors2());
      var UnprocessableEntityError = class _UnprocessableEntityError extends errors.CohereError {
        constructor(body2) {
          super({
            message: "UnprocessableEntityError",
            statusCode: 422,
            body: body2
          });
          Object.setPrototypeOf(this, _UnprocessableEntityError.prototype);
        }
      };
      exports.UnprocessableEntityError = UnprocessableEntityError;
    }
  });

  // node_modules/cohere-ai/api/errors/TooManyRequestsError.js
  var require_TooManyRequestsError = __commonJS({
    "node_modules/cohere-ai/api/errors/TooManyRequestsError.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.TooManyRequestsError = void 0;
      var errors = __importStar3(require_errors2());
      var TooManyRequestsError = class _TooManyRequestsError extends errors.CohereError {
        constructor(body2) {
          super({
            message: "TooManyRequestsError",
            statusCode: 429,
            body: body2
          });
          Object.setPrototypeOf(this, _TooManyRequestsError.prototype);
        }
      };
      exports.TooManyRequestsError = TooManyRequestsError;
    }
  });

  // node_modules/cohere-ai/api/errors/ClientClosedRequestError.js
  var require_ClientClosedRequestError = __commonJS({
    "node_modules/cohere-ai/api/errors/ClientClosedRequestError.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ClientClosedRequestError = void 0;
      var errors = __importStar3(require_errors2());
      var ClientClosedRequestError = class _ClientClosedRequestError extends errors.CohereError {
        constructor(body2) {
          super({
            message: "ClientClosedRequestError",
            statusCode: 499,
            body: body2
          });
          Object.setPrototypeOf(this, _ClientClosedRequestError.prototype);
        }
      };
      exports.ClientClosedRequestError = ClientClosedRequestError;
    }
  });

  // node_modules/cohere-ai/api/errors/InternalServerError.js
  var require_InternalServerError = __commonJS({
    "node_modules/cohere-ai/api/errors/InternalServerError.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.InternalServerError = void 0;
      var errors = __importStar3(require_errors2());
      var InternalServerError = class _InternalServerError extends errors.CohereError {
        constructor(body2) {
          super({
            message: "InternalServerError",
            statusCode: 500,
            body: body2
          });
          Object.setPrototypeOf(this, _InternalServerError.prototype);
        }
      };
      exports.InternalServerError = InternalServerError;
    }
  });

  // node_modules/cohere-ai/api/errors/NotImplementedError.js
  var require_NotImplementedError = __commonJS({
    "node_modules/cohere-ai/api/errors/NotImplementedError.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.NotImplementedError = void 0;
      var errors = __importStar3(require_errors2());
      var NotImplementedError = class _NotImplementedError extends errors.CohereError {
        constructor(body2) {
          super({
            message: "NotImplementedError",
            statusCode: 501,
            body: body2
          });
          Object.setPrototypeOf(this, _NotImplementedError.prototype);
        }
      };
      exports.NotImplementedError = NotImplementedError;
    }
  });

  // node_modules/cohere-ai/api/errors/ServiceUnavailableError.js
  var require_ServiceUnavailableError = __commonJS({
    "node_modules/cohere-ai/api/errors/ServiceUnavailableError.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.ServiceUnavailableError = void 0;
      var errors = __importStar3(require_errors2());
      var ServiceUnavailableError = class _ServiceUnavailableError extends errors.CohereError {
        constructor(body2) {
          super({
            message: "ServiceUnavailableError",
            statusCode: 503,
            body: body2
          });
          Object.setPrototypeOf(this, _ServiceUnavailableError.prototype);
        }
      };
      exports.ServiceUnavailableError = ServiceUnavailableError;
    }
  });

  // node_modules/cohere-ai/api/errors/GatewayTimeoutError.js
  var require_GatewayTimeoutError = __commonJS({
    "node_modules/cohere-ai/api/errors/GatewayTimeoutError.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.GatewayTimeoutError = void 0;
      var errors = __importStar3(require_errors2());
      var GatewayTimeoutError = class _GatewayTimeoutError extends errors.CohereError {
        constructor(body2) {
          super({
            message: "GatewayTimeoutError",
            statusCode: 504,
            body: body2
          });
          Object.setPrototypeOf(this, _GatewayTimeoutError.prototype);
        }
      };
      exports.GatewayTimeoutError = GatewayTimeoutError;
    }
  });

  // node_modules/cohere-ai/api/errors/index.js
  var require_errors3 = __commonJS({
    "node_modules/cohere-ai/api/errors/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_BadRequestError(), exports);
      __exportStar3(require_UnauthorizedError(), exports);
      __exportStar3(require_ForbiddenError(), exports);
      __exportStar3(require_NotFoundError(), exports);
      __exportStar3(require_UnprocessableEntityError(), exports);
      __exportStar3(require_TooManyRequestsError(), exports);
      __exportStar3(require_ClientClosedRequestError(), exports);
      __exportStar3(require_InternalServerError(), exports);
      __exportStar3(require_NotImplementedError(), exports);
      __exportStar3(require_ServiceUnavailableError(), exports);
      __exportStar3(require_GatewayTimeoutError(), exports);
    }
  });

  // node_modules/cohere-ai/api/client/requests/index.js
  var require_requests10 = __commonJS({
    "node_modules/cohere-ai/api/client/requests/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
    }
  });

  // node_modules/cohere-ai/api/client/index.js
  var require_client12 = __commonJS({
    "node_modules/cohere-ai/api/client/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_requests10(), exports);
    }
  });

  // node_modules/cohere-ai/api/index.js
  var require_api = __commonJS({
    "node_modules/cohere-ai/api/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __exportStar3 = exports && exports.__exportStar || function(m3, exports2) {
        for (var p4 in m3) if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p4)) __createBinding3(exports2, m3, p4);
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      __exportStar3(require_resources4(), exports);
      __exportStar3(require_types9(), exports);
      __exportStar3(require_errors3(), exports);
      __exportStar3(require_client12(), exports);
    }
  });

  // node_modules/url-join/lib/url-join.js
  var require_url_join = __commonJS({
    "node_modules/url-join/lib/url-join.js"(exports, module) {
      (function(name15, context, definition) {
        if (typeof module !== "undefined" && module.exports) module.exports = definition();
        else if (typeof define === "function" && define.amd) define(definition);
        else context[name15] = definition();
      })("urljoin", exports, function() {
        function normalize2(strArray) {
          var resultArray = [];
          if (strArray.length === 0) {
            return "";
          }
          if (typeof strArray[0] !== "string") {
            throw new TypeError("Url must be a string. Received " + strArray[0]);
          }
          if (strArray[0].match(/^[^/:]+:\/*$/) && strArray.length > 1) {
            var first = strArray.shift();
            strArray[0] = first + strArray[0];
          }
          if (strArray[0].match(/^file:\/\/\//)) {
            strArray[0] = strArray[0].replace(/^([^/:]+):\/*/, "$1:///");
          } else {
            strArray[0] = strArray[0].replace(/^([^/:]+):\/*/, "$1://");
          }
          for (var i4 = 0; i4 < strArray.length; i4++) {
            var component = strArray[i4];
            if (typeof component !== "string") {
              throw new TypeError("Url must be a string. Received " + component);
            }
            if (component === "") {
              continue;
            }
            if (i4 > 0) {
              component = component.replace(/^[\/]+/, "");
            }
            if (i4 < strArray.length - 1) {
              component = component.replace(/[\/]+$/, "");
            } else {
              component = component.replace(/[\/]+$/, "/");
            }
            resultArray.push(component);
          }
          var str = resultArray.join("/");
          str = str.replace(/\/(\?|&|#[^!])/g, "$1");
          var parts = str.split("?");
          str = parts.shift() + (parts.length > 0 ? "?" : "") + parts.join("&");
          return str;
        }
        return function() {
          var input3;
          if (typeof arguments[0] === "object") {
            input3 = arguments[0];
          } else {
            input3 = [].slice.call(arguments);
          }
          return normalize2(input3);
        };
      });
    }
  });

  // node_modules/cohere-ai/api/resources/embedJobs/client/Client.js
  var require_Client = __commonJS({
    "node_modules/cohere-ai/api/resources/embedJobs/client/Client.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      var __importDefault3 = exports && exports.__importDefault || function(mod3) {
        return mod3 && mod3.__esModule ? mod3 : { "default": mod3 };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.EmbedJobs = void 0;
      var environments = __importStar3(require_environments());
      var core = __importStar3(require_core());
      var Cohere = __importStar3(require_api());
      var url_join_1 = __importDefault3(require_url_join());
      var serializers = __importStar3(require_serialization());
      var errors = __importStar3(require_errors2());
      var EmbedJobs = class {
        constructor(_options = {}) {
          this._options = _options;
        }
        /**
         * The list embed job endpoint allows users to view all embed jobs history for that specific user.
         *
         * @param {EmbedJobs.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.embedJobs.list()
         */
        list(requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "embed-jobs"),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.ListEmbedJobResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * This API launches an async Embed job for a [Dataset](https://docs.cohere.com/docs/datasets) of type `embed-input`. The result of a completed embed job is new Dataset of type `embed-output`, which contains the original text entries and the corresponding embeddings.
         *
         * @param {Cohere.CreateEmbedJobRequest} request
         * @param {EmbedJobs.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.embedJobs.create({
         *         model: "model",
         *         datasetId: "dataset_id",
         *         inputType: Cohere.EmbedInputType.SearchDocument
         *     })
         */
        create(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "embed-jobs"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: yield serializers.CreateEmbedJobRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.CreateEmbedJobResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * This API retrieves the details about an embed job started by the same user.
         *
         * @param {string} id - The ID of the embed job to retrieve.
         * @param {EmbedJobs.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.embedJobs.get("id")
         */
        get(id3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `embed-jobs/${encodeURIComponent(id3)}`),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.EmbedJob.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * This API allows users to cancel an active embed job. Once invoked, the embedding process will be terminated, and users will be charged for the embeddings processed up to the cancellation point. It's important to note that partial results will not be available to users after cancellation.
         *
         * @param {string} id - The ID of the embed job to cancel.
         * @param {EmbedJobs.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.embedJobs.cancel("id")
         */
        cancel(id3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `embed-jobs/${encodeURIComponent(id3)}/cancel`),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return;
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        _getAuthorizationHeader() {
          var _a2;
          return __awaiter3(this, void 0, void 0, function* () {
            const bearer = (_a2 = yield core.Supplier.get(this._options.token)) !== null && _a2 !== void 0 ? _a2 : process === null || process === void 0 ? void 0 : process.env["CO_API_KEY"];
            if (bearer == null) {
              throw new errors.CohereError({
                message: "Please specify CO_API_KEY when instantiating the client."
              });
            }
            return `Bearer ${bearer}`;
          });
        }
      };
      exports.EmbedJobs = EmbedJobs;
    }
  });

  // node_modules/cohere-ai/api/resources/datasets/client/Client.js
  var require_Client2 = __commonJS({
    "node_modules/cohere-ai/api/resources/datasets/client/Client.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      var __importDefault3 = exports && exports.__importDefault || function(mod3) {
        return mod3 && mod3.__esModule ? mod3 : { "default": mod3 };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Datasets = void 0;
      var environments = __importStar3(require_environments());
      var core = __importStar3(require_core());
      var Cohere = __importStar3(require_api());
      var url_join_1 = __importDefault3(require_url_join());
      var serializers = __importStar3(require_serialization());
      var errors = __importStar3(require_errors2());
      var Datasets = class {
        constructor(_options = {}) {
          this._options = _options;
        }
        /**
         * List datasets that have been created.
         *
         * @param {Cohere.DatasetsListRequest} request
         * @param {Datasets.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.datasets.list()
         */
        list(request3 = {}, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const { datasetType, before, after, limit, offset, validationStatus } = request3;
            const _queryParams = {};
            if (datasetType != null) {
              _queryParams["datasetType"] = datasetType;
            }
            if (before != null) {
              _queryParams["before"] = before.toISOString();
            }
            if (after != null) {
              _queryParams["after"] = after.toISOString();
            }
            if (limit != null) {
              _queryParams["limit"] = limit.toString();
            }
            if (offset != null) {
              _queryParams["offset"] = offset.toString();
            }
            if (validationStatus != null) {
              _queryParams["validationStatus"] = validationStatus;
            }
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "datasets"),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              queryParameters: _queryParams,
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.DatasetsListResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * Create a dataset by uploading a file. See ['Dataset Creation'](https://docs.cohere.com/docs/datasets#dataset-creation) for more information.
         *
         * @param {File | fs.ReadStream} data
         * @param {File | fs.ReadStream | undefined} evalData
         * @param {Cohere.DatasetsCreateRequest} request
         * @param {Datasets.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.datasets.create(fs.createReadStream("/path/to/your/file"), fs.createReadStream("/path/to/your/file"), {
         *         name: "name",
         *         type: Cohere.DatasetType.EmbedInput
         *     })
         */
        create(data, evalData, request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _queryParams = {};
            _queryParams["name"] = request3.name;
            _queryParams["type"] = request3.type;
            if (request3.keepOriginalFile != null) {
              _queryParams["keep_original_file"] = request3.keepOriginalFile.toString();
            }
            if (request3.skipMalformedInput != null) {
              _queryParams["skip_malformed_input"] = request3.skipMalformedInput.toString();
            }
            if (request3.keepFields != null) {
              if (Array.isArray(request3.keepFields)) {
                _queryParams["keep_fields"] = request3.keepFields.map((item) => item);
              } else {
                _queryParams["keep_fields"] = request3.keepFields;
              }
            }
            if (request3.optionalFields != null) {
              if (Array.isArray(request3.optionalFields)) {
                _queryParams["optional_fields"] = request3.optionalFields.map((item) => item);
              } else {
                _queryParams["optional_fields"] = request3.optionalFields;
              }
            }
            if (request3.textSeparator != null) {
              _queryParams["text_separator"] = request3.textSeparator;
            }
            if (request3.csvDelimiter != null) {
              _queryParams["csv_delimiter"] = request3.csvDelimiter;
            }
            if (request3.dryRun != null) {
              _queryParams["dry_run"] = request3.dryRun.toString();
            }
            const _request = new core.FormDataWrapper();
            yield _request.append("data", data);
            if (evalData != null) {
              yield _request.append("eval_data", evalData);
            }
            const _maybeEncodedRequest = _request.getRequest();
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "datasets"),
              method: "POST",
              headers: Object.assign({ Authorization: yield this._getAuthorizationHeader(), "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0, "X-Fern-Language": "JavaScript", "X-Fern-SDK-Name": "cohere-ai", "X-Fern-SDK-Version": "7.11.0", "X-Fern-Runtime": core.RUNTIME.type, "X-Fern-Runtime-Version": core.RUNTIME.version }, yield _maybeEncodedRequest.getHeaders()),
              queryParameters: _queryParams,
              body: yield _maybeEncodedRequest.getBody(),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.DatasetsCreateResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * View the dataset storage usage for your Organization. Each Organization can have up to 10GB of storage across all their users.
         *
         * @param {Datasets.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.datasets.getUsage()
         */
        getUsage(requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "datasets/usage"),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.DatasetsGetUsageResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * Retrieve a dataset by ID. See ['Datasets'](https://docs.cohere.com/docs/datasets) for more information.
         *
         * @param {string} id
         * @param {Datasets.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.datasets.get("id")
         */
        get(id3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `datasets/${encodeURIComponent(id3)}`),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.DatasetsGetResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * Delete a dataset by ID. Datasets are automatically deleted after 30 days, but they can also be deleted manually.
         *
         * @param {string} id
         * @param {Datasets.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.datasets.delete("id")
         */
        delete(id3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `datasets/${encodeURIComponent(id3)}`),
              method: "DELETE",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.datasets.delete.Response.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        _getAuthorizationHeader() {
          var _a2;
          return __awaiter3(this, void 0, void 0, function* () {
            const bearer = (_a2 = yield core.Supplier.get(this._options.token)) !== null && _a2 !== void 0 ? _a2 : process === null || process === void 0 ? void 0 : process.env["CO_API_KEY"];
            if (bearer == null) {
              throw new errors.CohereError({
                message: "Please specify CO_API_KEY when instantiating the client."
              });
            }
            return `Bearer ${bearer}`;
          });
        }
      };
      exports.Datasets = Datasets;
    }
  });

  // node_modules/cohere-ai/api/resources/connectors/client/Client.js
  var require_Client3 = __commonJS({
    "node_modules/cohere-ai/api/resources/connectors/client/Client.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      var __importDefault3 = exports && exports.__importDefault || function(mod3) {
        return mod3 && mod3.__esModule ? mod3 : { "default": mod3 };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Connectors = void 0;
      var environments = __importStar3(require_environments());
      var core = __importStar3(require_core());
      var Cohere = __importStar3(require_api());
      var url_join_1 = __importDefault3(require_url_join());
      var serializers = __importStar3(require_serialization());
      var errors = __importStar3(require_errors2());
      var Connectors = class {
        constructor(_options = {}) {
          this._options = _options;
        }
        /**
         * Returns a list of connectors ordered by descending creation date (newer first). See ['Managing your Connector'](https://docs.cohere.com/docs/managing-your-connector) for more information.
         *
         * @param {Cohere.ConnectorsListRequest} request
         * @param {Connectors.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.connectors.list()
         */
        list(request3 = {}, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const { limit, offset } = request3;
            const _queryParams = {};
            if (limit != null) {
              _queryParams["limit"] = limit.toString();
            }
            if (offset != null) {
              _queryParams["offset"] = offset.toString();
            }
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "connectors"),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              queryParameters: _queryParams,
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.ListConnectorsResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * Creates a new connector. The connector is tested during registration and will cancel registration when the test is unsuccessful. See ['Creating and Deploying a Connector'](https://docs.cohere.com/docs/creating-and-deploying-a-connector) for more information.
         *
         * @param {Cohere.CreateConnectorRequest} request
         * @param {Connectors.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.connectors.create({
         *         name: "name",
         *         url: "url"
         *     })
         */
        create(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "connectors"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: yield serializers.CreateConnectorRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.CreateConnectorResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * Retrieve a connector by ID. See ['Connectors'](https://docs.cohere.com/docs/connectors) for more information.
         *
         * @param {string} id - The ID of the connector to retrieve.
         * @param {Connectors.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.connectors.get("id")
         */
        get(id3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `connectors/${encodeURIComponent(id3)}`),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.GetConnectorResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * Delete a connector by ID. See ['Connectors'](https://docs.cohere.com/docs/connectors) for more information.
         *
         * @param {string} id - The ID of the connector to delete.
         * @param {Connectors.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.connectors.delete("id")
         */
        delete(id3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `connectors/${encodeURIComponent(id3)}`),
              method: "DELETE",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.DeleteConnectorResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * Update a connector by ID. Omitted fields will not be updated. See ['Managing your Connector'](https://docs.cohere.com/docs/managing-your-connector) for more information.
         *
         * @param {string} id - The ID of the connector to update.
         * @param {Cohere.UpdateConnectorRequest} request
         * @param {Connectors.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.connectors.update("id")
         */
        update(id3, request3 = {}, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `connectors/${encodeURIComponent(id3)}`),
              method: "PATCH",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: yield serializers.UpdateConnectorRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.UpdateConnectorResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * Authorize the connector with the given ID for the connector oauth app. See ['Connector Authentication'](https://docs.cohere.com/docs/connector-authentication) for more information.
         *
         * @param {string} id - The ID of the connector to authorize.
         * @param {Cohere.ConnectorsOAuthAuthorizeRequest} request
         * @param {Connectors.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.connectors.oAuthAuthorize("id")
         */
        oAuthAuthorize(id3, request3 = {}, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const { afterTokenRedirect } = request3;
            const _queryParams = {};
            if (afterTokenRedirect != null) {
              _queryParams["after_token_redirect"] = afterTokenRedirect;
            }
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `connectors/${encodeURIComponent(id3)}/oauth/authorize`),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              queryParameters: _queryParams,
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.OAuthAuthorizeResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        _getAuthorizationHeader() {
          var _a2;
          return __awaiter3(this, void 0, void 0, function* () {
            const bearer = (_a2 = yield core.Supplier.get(this._options.token)) !== null && _a2 !== void 0 ? _a2 : process === null || process === void 0 ? void 0 : process.env["CO_API_KEY"];
            if (bearer == null) {
              throw new errors.CohereError({
                message: "Please specify CO_API_KEY when instantiating the client."
              });
            }
            return `Bearer ${bearer}`;
          });
        }
      };
      exports.Connectors = Connectors;
    }
  });

  // node_modules/cohere-ai/api/resources/models/client/Client.js
  var require_Client4 = __commonJS({
    "node_modules/cohere-ai/api/resources/models/client/Client.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      var __importDefault3 = exports && exports.__importDefault || function(mod3) {
        return mod3 && mod3.__esModule ? mod3 : { "default": mod3 };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Models = void 0;
      var environments = __importStar3(require_environments());
      var core = __importStar3(require_core());
      var Cohere = __importStar3(require_api());
      var url_join_1 = __importDefault3(require_url_join());
      var serializers = __importStar3(require_serialization());
      var errors = __importStar3(require_errors2());
      var Models = class {
        constructor(_options = {}) {
          this._options = _options;
        }
        /**
         * Returns the details of a model, provided its name.
         *
         * @param {string} model
         * @param {Models.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.models.get("command-r")
         */
        get(model, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `models/${encodeURIComponent(model)}`),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.GetModelResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * Returns a list of models available for use. The list contains models from Cohere as well as your fine-tuned models.
         *
         * @param {Cohere.ModelsListRequest} request
         * @param {Models.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.models.list()
         */
        list(request3 = {}, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const { pageSize, pageToken, endpoint, defaultOnly } = request3;
            const _queryParams = {};
            if (pageSize != null) {
              _queryParams["page_size"] = pageSize.toString();
            }
            if (pageToken != null) {
              _queryParams["page_token"] = pageToken;
            }
            if (endpoint != null) {
              _queryParams["endpoint"] = endpoint;
            }
            if (defaultOnly != null) {
              _queryParams["default_only"] = defaultOnly.toString();
            }
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "models"),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              queryParameters: _queryParams,
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.ListModelsResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        _getAuthorizationHeader() {
          var _a2;
          return __awaiter3(this, void 0, void 0, function* () {
            const bearer = (_a2 = yield core.Supplier.get(this._options.token)) !== null && _a2 !== void 0 ? _a2 : process === null || process === void 0 ? void 0 : process.env["CO_API_KEY"];
            if (bearer == null) {
              throw new errors.CohereError({
                message: "Please specify CO_API_KEY when instantiating the client."
              });
            }
            return `Bearer ${bearer}`;
          });
        }
      };
      exports.Models = Models;
    }
  });

  // node_modules/cohere-ai/api/resources/finetuning/client/Client.js
  var require_Client5 = __commonJS({
    "node_modules/cohere-ai/api/resources/finetuning/client/Client.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      var __importDefault3 = exports && exports.__importDefault || function(mod3) {
        return mod3 && mod3.__esModule ? mod3 : { "default": mod3 };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.Finetuning = void 0;
      var environments = __importStar3(require_environments());
      var core = __importStar3(require_core());
      var Cohere = __importStar3(require_api());
      var url_join_1 = __importDefault3(require_url_join());
      var serializers = __importStar3(require_serialization());
      var errors = __importStar3(require_errors2());
      var Finetuning = class {
        constructor(_options = {}) {
          this._options = _options;
        }
        /**
         * @param {Cohere.FinetuningListFinetunedModelsRequest} request
         * @param {Finetuning.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.ServiceUnavailableError}
         *
         * @example
         *     await cohere.finetuning.listFinetunedModels()
         */
        listFinetunedModels(request3 = {}, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const { pageSize, pageToken, orderBy } = request3;
            const _queryParams = {};
            if (pageSize != null) {
              _queryParams["page_size"] = pageSize.toString();
            }
            if (pageToken != null) {
              _queryParams["page_token"] = pageToken;
            }
            if (orderBy != null) {
              _queryParams["order_by"] = orderBy;
            }
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "finetuning/finetuned-models"),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              queryParameters: _queryParams,
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.finetuning.ListFinetunedModelsResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * @param {Cohere.finetuning.FinetunedModel} request
         * @param {Finetuning.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.ServiceUnavailableError}
         *
         * @example
         *     await cohere.finetuning.createFinetunedModel({
         *         name: "api-test",
         *         settings: {
         *             baseModel: {
         *                 baseType: Cohere.finetuning.BaseType.BaseTypeGenerative
         *             },
         *             datasetId: "my-dataset-id"
         *         }
         *     })
         */
        createFinetunedModel(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "finetuning/finetuned-models"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: yield serializers.finetuning.FinetunedModel.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.finetuning.CreateFinetunedModelResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * @param {string} id - The fine-tuned model ID.
         * @param {Finetuning.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.ServiceUnavailableError}
         *
         * @example
         *     await cohere.finetuning.getFinetunedModel("id")
         */
        getFinetunedModel(id3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `finetuning/finetuned-models/${encodeURIComponent(id3)}`),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.finetuning.GetFinetunedModelResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * @param {string} id - The fine-tuned model ID.
         * @param {Finetuning.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.ServiceUnavailableError}
         *
         * @example
         *     await cohere.finetuning.deleteFinetunedModel("id")
         */
        deleteFinetunedModel(id3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `finetuning/finetuned-models/${encodeURIComponent(id3)}`),
              method: "DELETE",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.finetuning.DeleteFinetunedModelResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * @param {string} id - FinetunedModel ID.
         * @param {Cohere.FinetuningUpdateFinetunedModelRequest} request
         * @param {Finetuning.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.ServiceUnavailableError}
         *
         * @example
         *     await cohere.finetuning.updateFinetunedModel("id", {
         *         name: "name",
         *         settings: {
         *             baseModel: {
         *                 baseType: Cohere.finetuning.BaseType.BaseTypeUnspecified
         *             },
         *             datasetId: "dataset_id"
         *         }
         *     })
         */
        updateFinetunedModel(id3, request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `finetuning/finetuned-models/${encodeURIComponent(id3)}`),
              method: "PATCH",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: yield serializers.FinetuningUpdateFinetunedModelRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.finetuning.UpdateFinetunedModelResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * @param {string} finetunedModelId - The parent fine-tuned model ID.
         * @param {Cohere.FinetuningListEventsRequest} request
         * @param {Finetuning.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.ServiceUnavailableError}
         *
         * @example
         *     await cohere.finetuning.listEvents("finetuned_model_id")
         */
        listEvents(finetunedModelId, request3 = {}, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const { pageSize, pageToken, orderBy } = request3;
            const _queryParams = {};
            if (pageSize != null) {
              _queryParams["page_size"] = pageSize.toString();
            }
            if (pageToken != null) {
              _queryParams["page_token"] = pageToken;
            }
            if (orderBy != null) {
              _queryParams["order_by"] = orderBy;
            }
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `finetuning/finetuned-models/${encodeURIComponent(finetunedModelId)}/events`),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              queryParameters: _queryParams,
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.finetuning.ListEventsResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * @param {string} finetunedModelId - The parent fine-tuned model ID.
         * @param {Cohere.FinetuningListTrainingStepMetricsRequest} request
         * @param {Finetuning.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.ServiceUnavailableError}
         *
         * @example
         *     await cohere.finetuning.listTrainingStepMetrics("finetuned_model_id")
         */
        listTrainingStepMetrics(finetunedModelId, request3 = {}, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const { pageSize, pageToken } = request3;
            const _queryParams = {};
            if (pageSize != null) {
              _queryParams["page_size"] = pageSize.toString();
            }
            if (pageToken != null) {
              _queryParams["page_token"] = pageToken;
            }
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, `finetuning/finetuned-models/${encodeURIComponent(finetunedModelId)}/training-step-metrics`),
              method: "GET",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              queryParameters: _queryParams,
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.finetuning.ListTrainingStepMetricsResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        _getAuthorizationHeader() {
          var _a2;
          return __awaiter3(this, void 0, void 0, function* () {
            const bearer = (_a2 = yield core.Supplier.get(this._options.token)) !== null && _a2 !== void 0 ? _a2 : process === null || process === void 0 ? void 0 : process.env["CO_API_KEY"];
            if (bearer == null) {
              throw new errors.CohereError({
                message: "Please specify CO_API_KEY when instantiating the client."
              });
            }
            return `Bearer ${bearer}`;
          });
        }
      };
      exports.Finetuning = Finetuning;
    }
  });

  // node_modules/cohere-ai/Client.js
  var require_Client6 = __commonJS({
    "node_modules/cohere-ai/Client.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      var __awaiter3 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
        function adopt(value14) {
          return value14 instanceof P ? value14 : new P(function(resolve) {
            resolve(value14);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value14) {
            try {
              step3(generator.next(value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value14) {
            try {
              step3(generator["throw"](value14));
            } catch (e3) {
              reject(e3);
            }
          }
          function step3(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step3((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      var __importDefault3 = exports && exports.__importDefault || function(mod3) {
        return mod3 && mod3.__esModule ? mod3 : { "default": mod3 };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CohereClient = void 0;
      var environments = __importStar3(require_environments());
      var core = __importStar3(require_core());
      var Cohere = __importStar3(require_api());
      var serializers = __importStar3(require_serialization());
      var url_join_1 = __importDefault3(require_url_join());
      var errors = __importStar3(require_errors2());
      var Client_1 = require_Client();
      var Client_2 = require_Client2();
      var Client_3 = require_Client3();
      var Client_4 = require_Client4();
      var Client_5 = require_Client5();
      var CohereClient2 = class {
        constructor(_options = {}) {
          this._options = _options;
        }
        /**
         * Generates a text response to a user message.
         * To learn how to use the Chat API with Streaming and RAG follow our [Text Generation guides](https://docs.cohere.com/docs/chat-api).
         */
        chatStream(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "chat"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: Object.assign(Object.assign({}, yield serializers.ChatStreamRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              })), { stream: true }),
              responseType: "streaming",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return new core.Stream({
                stream: _response.body,
                parse: (data) => __awaiter3(this, void 0, void 0, function* () {
                  return yield serializers.StreamedChatResponse.parseOrThrow(data, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  });
                }),
                signal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal,
                eventShape: {
                  type: "json",
                  messageTerminator: "\n"
                }
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * Generates a text response to a user message.
         * To learn how to use the Chat API with Streaming and RAG follow our [Text Generation guides](https://docs.cohere.com/docs/chat-api).
         *
         * @param {Cohere.ChatRequest} request
         * @param {CohereClient.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.chat({
         *         message: "Can you give me a global market overview of solar panels?",
         *         stream: false,
         *         promptTruncation: Cohere.ChatRequestPromptTruncation.Off,
         *         temperature: 0.3
         *     })
         */
        chat(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "chat"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: Object.assign(Object.assign({}, yield serializers.ChatRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              })), { stream: false }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.NonStreamedChatResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * > 🚧 Warning
         * >
         * > This API is marked as "Legacy" and is no longer maintained. Follow the [migration guide](/docs/migrating-from-cogenerate-to-cochat) to start using the Chat API.
         *
         * Generates realistic text conditioned on a given input.
         */
        generateStream(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "generate"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: Object.assign(Object.assign({}, yield serializers.GenerateStreamRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              })), { stream: true }),
              responseType: "streaming",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return new core.Stream({
                stream: _response.body,
                parse: (data) => __awaiter3(this, void 0, void 0, function* () {
                  return yield serializers.GenerateStreamedResponse.parseOrThrow(data, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  });
                }),
                signal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal,
                eventShape: {
                  type: "json",
                  messageTerminator: "\n"
                }
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * > 🚧 Warning
         * >
         * > This API is marked as "Legacy" and is no longer maintained. Follow the [migration guide](/docs/migrating-from-cogenerate-to-cochat) to start using the Chat API.
         *
         * Generates realistic text conditioned on a given input.
         *
         * @param {Cohere.GenerateRequest} request
         * @param {CohereClient.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.generate({
         *         prompt: "Please explain to me how LLMs work",
         *         stream: false
         *     })
         */
        generate(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "generate"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: Object.assign(Object.assign({}, yield serializers.GenerateRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              })), { stream: false }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.Generation.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * This endpoint returns text embeddings. An embedding is a list of floating point numbers that captures semantic information about the text that it represents.
         *
         * Embeddings can be used to create text classifiers as well as empower semantic search. To learn more about embeddings, see the embedding page.
         *
         * If you want to learn more how to use the embedding model, have a look at the [Semantic Search Guide](/docs/semantic-search).
         *
         * @param {Cohere.EmbedRequest} request
         * @param {CohereClient.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.embed({
         *         texts: ["string"],
         *         model: "string",
         *         inputType: Cohere.EmbedInputType.SearchDocument,
         *         embeddingTypes: [Cohere.EmbeddingType.Float],
         *         truncate: Cohere.EmbedRequestTruncate.None
         *     })
         */
        embed(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "embed"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: yield serializers.EmbedRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.EmbedResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * This endpoint takes in a query and a list of texts and produces an ordered array with each text assigned a relevance score.
         *
         * @param {Cohere.RerankRequest} request
         * @param {CohereClient.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.rerank({
         *         model: "rerank-english-v3.0",
         *         query: "What is the capital of the United States?",
         *         documents: ["Carson City is the capital city of the American state of Nevada.", "The Commonwealth of the Northern Mariana Islands is a group of islands in the Pacific Ocean. Its capital is Saipan.", "Washington, D.C. (also known as simply Washington or D.C., and officially as the District of Columbia) is the capital of the United States. It is a federal district.", "Capital punishment (the death penalty) has existed in the United States since beforethe United States was a country. As of 2017, capital punishment is legal in 30 of the 50 states."]
         *     })
         */
        rerank(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "rerank"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: yield serializers.RerankRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.RerankResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * This endpoint makes a prediction about which label fits the specified text inputs best. To make a prediction, Classify uses the provided `examples` of text + label pairs as a reference.
         * Note: [Fine-tuned models](https://docs.cohere.com/docs/classify-fine-tuning) trained on classification examples don't require the `examples` parameter to be passed in explicitly.
         *
         * @param {Cohere.ClassifyRequest} request
         * @param {CohereClient.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.classify({
         *         inputs: ["Confirm your email address", "hey i need u to send some $"],
         *         examples: [{
         *                 text: "Dermatologists don't like her!",
         *                 label: "Spam"
         *             }, {
         *                 text: "Hello, open to this?",
         *                 label: "Spam"
         *             }, {
         *                 text: "I need help please wire me $1000 right now",
         *                 label: "Spam"
         *             }, {
         *                 text: "Nice to know you ;)",
         *                 label: "Spam"
         *             }, {
         *                 text: "Please help me?",
         *                 label: "Spam"
         *             }, {
         *                 text: "Your parcel will be delivered today",
         *                 label: "Not spam"
         *             }, {
         *                 text: "Review changes to our Terms and Conditions",
         *                 label: "Not spam"
         *             }, {
         *                 text: "Weekly sync notes",
         *                 label: "Not spam"
         *             }, {
         *                 text: "Re: Follow up from today\u2019s meeting",
         *                 label: "Not spam"
         *             }, {
         *                 text: "Pre-read for tomorrow",
         *                 label: "Not spam"
         *             }]
         *     })
         */
        classify(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "classify"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: yield serializers.ClassifyRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.ClassifyResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * > 🚧 Warning
         * >
         * > This API is marked as "Legacy" and is no longer maintained. Follow the [migration guide](/docs/migrating-from-cogenerate-to-cochat) to start using the Chat API.
         *
         * Generates a summary in English for a given text.
         *
         * @param {Cohere.SummarizeRequest} request
         * @param {CohereClient.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.summarize({
         *         text: "Ice cream is a sweetened frozen food typically eaten as a snack or dessert. It may be made from milk or cream and is flavoured with a sweetener, either sugar or an alternative, and a spice, such as cocoa or vanilla, or with fruit such as strawberries or peaches. It can also be made by whisking a flavored cream base and liquid nitrogen together. Food coloring is sometimes added, in addition to stabilizers. The mixture is cooled below the freezing point of water and stirred to incorporate air spaces and to prevent detectable ice crystals from forming. The result is a smooth, semi-solid foam that is solid at very low temperatures (below 2 \u00B0C or 35 \u00B0F). It becomes more malleable as its temperature increases.\n\nThe meaning of the name \"ice cream\" varies from one country to another. In some countries, such as the United States, \"ice cream\" applies only to a specific variety, and most governments regulate the commercial use of the various terms according to the relative quantities of the main ingredients, notably the amount of cream. Products that do not meet the criteria to be called ice cream are sometimes labelled \"frozen dairy dessert\" instead. In other countries, such as Italy and Argentina, one word is used fo\r all variants. Analogues made from dairy alternatives, such as goat's or sheep's milk, or milk substitutes (e.g., soy, cashew, coconut, almond milk or tofu), are available for those who are lactose intolerant, allergic to dairy protein or vegan."
         *     })
         */
        summarize(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "summarize"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: yield serializers.SummarizeRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.SummarizeResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * This endpoint splits input text into smaller units called tokens using byte-pair encoding (BPE). To learn more about tokenization and byte pair encoding, see the tokens page.
         *
         * @param {Cohere.TokenizeRequest} request
         * @param {CohereClient.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.tokenize({
         *         text: "tokenize me! :D",
         *         model: "command"
         *     })
         */
        tokenize(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "tokenize"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: yield serializers.TokenizeRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.TokenizeResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * This endpoint takes tokens using byte-pair encoding and returns their text representation. To learn more about tokenization and byte pair encoding, see the tokens page.
         *
         * @param {Cohere.DetokenizeRequest} request
         * @param {CohereClient.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.detokenize({
         *         tokens: [10104, 12221, 1315, 34, 1420, 69],
         *         model: "command"
         *     })
         */
        detokenize(request3, requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "detokenize"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              body: yield serializers.DetokenizeRequest.jsonOrThrow(request3, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true
              }),
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.DetokenizeResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        /**
         * Checks that the api key in the Authorization header is valid and active
         *
         * @param {CohereClient.RequestOptions} requestOptions - Request-specific configuration.
         *
         * @throws {@link Cohere.BadRequestError}
         * @throws {@link Cohere.UnauthorizedError}
         * @throws {@link Cohere.ForbiddenError}
         * @throws {@link Cohere.NotFoundError}
         * @throws {@link Cohere.UnprocessableEntityError}
         * @throws {@link Cohere.TooManyRequestsError}
         * @throws {@link Cohere.ClientClosedRequestError}
         * @throws {@link Cohere.InternalServerError}
         * @throws {@link Cohere.NotImplementedError}
         * @throws {@link Cohere.ServiceUnavailableError}
         * @throws {@link Cohere.GatewayTimeoutError}
         *
         * @example
         *     await cohere.checkApiKey()
         */
        checkApiKey(requestOptions) {
          var _a2, _b;
          return __awaiter3(this, void 0, void 0, function* () {
            const _response = yield ((_a2 = this._options.fetcher) !== null && _a2 !== void 0 ? _a2 : core.fetcher)({
              url: (0, url_join_1.default)((_b = yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.CohereEnvironment.Production, "check-api-key"),
              method: "POST",
              headers: {
                Authorization: yield this._getAuthorizationHeader(),
                "X-Client-Name": (yield core.Supplier.get(this._options.clientName)) != null ? yield core.Supplier.get(this._options.clientName) : void 0,
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "cohere-ai",
                "X-Fern-SDK-Version": "7.11.0",
                "X-Fern-Runtime": core.RUNTIME.type,
                "X-Fern-Runtime-Version": core.RUNTIME.version
              },
              contentType: "application/json",
              timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1e3 : 3e5,
              maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
              abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
              return yield serializers.CheckApiKeyResponse.parseOrThrow(_response.body, {
                unrecognizedObjectKeys: "passthrough",
                allowUnrecognizedUnionMembers: true,
                allowUnrecognizedEnumValues: true,
                skipValidation: true,
                breadcrumbsPrefix: ["response"]
              });
            }
            if (_response.error.reason === "status-code") {
              switch (_response.error.statusCode) {
                case 400:
                  throw new Cohere.BadRequestError(_response.error.body);
                case 401:
                  throw new Cohere.UnauthorizedError(_response.error.body);
                case 403:
                  throw new Cohere.ForbiddenError(_response.error.body);
                case 404:
                  throw new Cohere.NotFoundError(_response.error.body);
                case 422:
                  throw new Cohere.UnprocessableEntityError(yield serializers.UnprocessableEntityErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 429:
                  throw new Cohere.TooManyRequestsError(yield serializers.TooManyRequestsErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 499:
                  throw new Cohere.ClientClosedRequestError(yield serializers.ClientClosedRequestErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 500:
                  throw new Cohere.InternalServerError(_response.error.body);
                case 501:
                  throw new Cohere.NotImplementedError(yield serializers.NotImplementedErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                case 503:
                  throw new Cohere.ServiceUnavailableError(_response.error.body);
                case 504:
                  throw new Cohere.GatewayTimeoutError(yield serializers.GatewayTimeoutErrorBody.parseOrThrow(_response.error.body, {
                    unrecognizedObjectKeys: "passthrough",
                    allowUnrecognizedUnionMembers: true,
                    allowUnrecognizedEnumValues: true,
                    skipValidation: true,
                    breadcrumbsPrefix: ["response"]
                  }));
                default:
                  throw new errors.CohereError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                  });
              }
            }
            switch (_response.error.reason) {
              case "non-json":
                throw new errors.CohereError({
                  statusCode: _response.error.statusCode,
                  body: _response.error.rawBody
                });
              case "timeout":
                throw new errors.CohereTimeoutError();
              case "unknown":
                throw new errors.CohereError({
                  message: _response.error.errorMessage
                });
            }
          });
        }
        get embedJobs() {
          var _a2;
          return (_a2 = this._embedJobs) !== null && _a2 !== void 0 ? _a2 : this._embedJobs = new Client_1.EmbedJobs(this._options);
        }
        get datasets() {
          var _a2;
          return (_a2 = this._datasets) !== null && _a2 !== void 0 ? _a2 : this._datasets = new Client_2.Datasets(this._options);
        }
        get connectors() {
          var _a2;
          return (_a2 = this._connectors) !== null && _a2 !== void 0 ? _a2 : this._connectors = new Client_3.Connectors(this._options);
        }
        get models() {
          var _a2;
          return (_a2 = this._models) !== null && _a2 !== void 0 ? _a2 : this._models = new Client_4.Models(this._options);
        }
        get finetuning() {
          var _a2;
          return (_a2 = this._finetuning) !== null && _a2 !== void 0 ? _a2 : this._finetuning = new Client_5.Finetuning(this._options);
        }
        _getAuthorizationHeader() {
          var _a2;
          return __awaiter3(this, void 0, void 0, function* () {
            const bearer = (_a2 = yield core.Supplier.get(this._options.token)) !== null && _a2 !== void 0 ? _a2 : process === null || process === void 0 ? void 0 : process.env["CO_API_KEY"];
            if (bearer == null) {
              throw new errors.CohereError({
                message: "Please specify CO_API_KEY when instantiating the client."
              });
            }
            return `Bearer ${bearer}`;
          });
        }
      };
      exports.CohereClient = CohereClient2;
    }
  });

  // node_modules/cohere-ai/AwsClient.js
  var require_AwsClient = __commonJS({
    "node_modules/cohere-ai/AwsClient.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.AwsClient = void 0;
      var Client_1 = require_Client6();
      var AwsClient = class extends Client_1.CohereClient {
        constructor(_options) {
          _options.token = "n/a";
          super(_options);
        }
      };
      exports.AwsClient = AwsClient;
    }
  });

  // node_modules/cohere-ai/BedrockClient.js
  var require_BedrockClient = __commonJS({
    "node_modules/cohere-ai/BedrockClient.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.BedrockClient = void 0;
      var aws_utils_1 = require_aws_utils();
      var AwsClient_1 = require_AwsClient();
      var BedrockClient = class extends AwsClient_1.AwsClient {
        constructor(_options) {
          super(Object.assign(Object.assign({}, _options), { fetcher: (0, aws_utils_1.fetchOverride)("bedrock", _options) }));
        }
      };
      exports.BedrockClient = BedrockClient;
    }
  });

  // node_modules/cohere-ai/SagemakerClient.js
  var require_SagemakerClient = __commonJS({
    "node_modules/cohere-ai/SagemakerClient.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.SagemakerClient = void 0;
      var AwsClient_1 = require_AwsClient();
      var aws_utils_1 = require_aws_utils();
      var SagemakerClient = class extends AwsClient_1.AwsClient {
        constructor(_options) {
          super(Object.assign(Object.assign({}, _options), { fetcher: (0, aws_utils_1.fetchOverride)("sagemaker", _options) }));
        }
      };
      exports.SagemakerClient = SagemakerClient;
    }
  });

  // node_modules/cohere-ai/index.js
  var require_cohere_ai = __commonJS({
    "node_modules/cohere-ai/index.js"(exports) {
      "use strict";
      var __createBinding3 = exports && exports.__createBinding || (Object.create ? function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        var desc = Object.getOwnPropertyDescriptor(m3, k3);
        if (!desc || ("get" in desc ? !m3.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m3[k3];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m3, k3, k22) {
        if (k22 === void 0) k22 = k3;
        o3[k22] = m3[k3];
      });
      var __setModuleDefault2 = exports && exports.__setModuleDefault || (Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      });
      var __importStar3 = exports && exports.__importStar || function(mod3) {
        if (mod3 && mod3.__esModule) return mod3;
        var result = {};
        if (mod3 != null) {
          for (var k3 in mod3) if (k3 !== "default" && Object.prototype.hasOwnProperty.call(mod3, k3)) __createBinding3(result, mod3, k3);
        }
        __setModuleDefault2(result, mod3);
        return result;
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.CohereTimeoutError = exports.CohereError = exports.CohereEnvironment = exports.Cohere = exports.SagemakerClient = exports.CohereClient = exports.BedrockClient = void 0;
      var BedrockClient_1 = require_BedrockClient();
      Object.defineProperty(exports, "BedrockClient", { enumerable: true, get: function() {
        return BedrockClient_1.BedrockClient;
      } });
      var Client_1 = require_Client6();
      Object.defineProperty(exports, "CohereClient", { enumerable: true, get: function() {
        return Client_1.CohereClient;
      } });
      var SagemakerClient_1 = require_SagemakerClient();
      Object.defineProperty(exports, "SagemakerClient", { enumerable: true, get: function() {
        return SagemakerClient_1.SagemakerClient;
      } });
      exports.Cohere = __importStar3(require_api());
      var environments_1 = require_environments();
      Object.defineProperty(exports, "CohereEnvironment", { enumerable: true, get: function() {
        return environments_1.CohereEnvironment;
      } });
      var errors_1 = require_errors2();
      Object.defineProperty(exports, "CohereError", { enumerable: true, get: function() {
        return errors_1.CohereError;
      } });
      Object.defineProperty(exports, "CohereTimeoutError", { enumerable: true, get: function() {
        return errors_1.CohereTimeoutError;
      } });
    }
  });

  // output/AI/foreign.js
  var import_cohere_ai = __toESM(require_cohere_ai(), 1);
  var make_client = ({ token }) => () => {
    return new import_cohere_ai.CohereClient({ token });
  };
  var chat_ = ({ client, request: request3 }) => async () => {
    return await client.chat(request3);
  };

  // output/Control.Semigroupoid/index.js
  var semigroupoidFn = {
    compose: function(f3) {
      return function(g3) {
        return function(x2) {
          return f3(g3(x2));
        };
      };
    }
  };

  // output/Control.Category/index.js
  var identity = function(dict) {
    return dict.identity;
  };
  var categoryFn = {
    identity: function(x2) {
      return x2;
    },
    Semigroupoid0: function() {
      return semigroupoidFn;
    }
  };

  // output/Data.Boolean/index.js
  var otherwise = true;

  // output/Data.Function/index.js
  var flip = function(f3) {
    return function(b4) {
      return function(a4) {
        return f3(a4)(b4);
      };
    };
  };
  var $$const = function(a4) {
    return function(v3) {
      return a4;
    };
  };

  // output/Data.Functor/foreign.js
  var arrayMap = function(f3) {
    return function(arr) {
      var l3 = arr.length;
      var result = new Array(l3);
      for (var i4 = 0; i4 < l3; i4++) {
        result[i4] = f3(arr[i4]);
      }
      return result;
    };
  };

  // output/Data.Unit/foreign.js
  var unit = void 0;

  // output/Type.Proxy/index.js
  var $$Proxy = /* @__PURE__ */ function() {
    function $$Proxy2() {
    }
    ;
    $$Proxy2.value = new $$Proxy2();
    return $$Proxy2;
  }();

  // output/Data.Functor/index.js
  var map = function(dict) {
    return dict.map;
  };
  var $$void = function(dictFunctor) {
    return map(dictFunctor)($$const(unit));
  };
  var voidLeft = function(dictFunctor) {
    var map112 = map(dictFunctor);
    return function(f3) {
      return function(x2) {
        return map112($$const(x2))(f3);
      };
    };
  };
  var voidRight = function(dictFunctor) {
    var map112 = map(dictFunctor);
    return function(x2) {
      return map112($$const(x2));
    };
  };
  var functorArray = {
    map: arrayMap
  };

  // output/Control.Apply/index.js
  var identity2 = /* @__PURE__ */ identity(categoryFn);
  var apply = function(dict) {
    return dict.apply;
  };
  var applySecond = function(dictApply) {
    var apply1 = apply(dictApply);
    var map25 = map(dictApply.Functor0());
    return function(a4) {
      return function(b4) {
        return apply1(map25($$const(identity2))(a4))(b4);
      };
    };
  };

  // output/Control.Applicative/index.js
  var pure = function(dict) {
    return dict.pure;
  };
  var unless = function(dictApplicative) {
    var pure14 = pure(dictApplicative);
    return function(v3) {
      return function(v1) {
        if (!v3) {
          return v1;
        }
        ;
        if (v3) {
          return pure14(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): " + [v3.constructor.name, v1.constructor.name]);
      };
    };
  };
  var when = function(dictApplicative) {
    var pure14 = pure(dictApplicative);
    return function(v3) {
      return function(v1) {
        if (v3) {
          return v1;
        }
        ;
        if (!v3) {
          return pure14(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): " + [v3.constructor.name, v1.constructor.name]);
      };
    };
  };
  var liftA1 = function(dictApplicative) {
    var apply2 = apply(dictApplicative.Apply0());
    var pure14 = pure(dictApplicative);
    return function(f3) {
      return function(a4) {
        return apply2(pure14(f3))(a4);
      };
    };
  };

  // output/Control.Bind/index.js
  var discard = function(dict) {
    return dict.discard;
  };
  var bind = function(dict) {
    return dict.bind;
  };
  var bindFlipped = function(dictBind) {
    return flip(bind(dictBind));
  };
  var composeKleisliFlipped = function(dictBind) {
    var bindFlipped13 = bindFlipped(dictBind);
    return function(f3) {
      return function(g3) {
        return function(a4) {
          return bindFlipped13(f3)(g3(a4));
        };
      };
    };
  };
  var discardUnit = {
    discard: function(dictBind) {
      return bind(dictBind);
    }
  };

  // output/Data.Semigroup/foreign.js
  var concatString = function(s1) {
    return function(s22) {
      return s1 + s22;
    };
  };
  var concatArray = function(xs) {
    return function(ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };

  // output/Data.Symbol/index.js
  var reflectSymbol = function(dict) {
    return dict.reflectSymbol;
  };

  // output/Record.Unsafe/foreign.js
  var unsafeHas = function(label5) {
    return function(rec) {
      return {}.hasOwnProperty.call(rec, label5);
    };
  };
  var unsafeGet = function(label5) {
    return function(rec) {
      return rec[label5];
    };
  };
  var unsafeSet = function(label5) {
    return function(value14) {
      return function(rec) {
        var copy2 = {};
        for (var key2 in rec) {
          if ({}.hasOwnProperty.call(rec, key2)) {
            copy2[key2] = rec[key2];
          }
        }
        copy2[label5] = value14;
        return copy2;
      };
    };
  };
  var unsafeDelete = function(label5) {
    return function(rec) {
      var copy2 = {};
      for (var key2 in rec) {
        if (key2 !== label5 && {}.hasOwnProperty.call(rec, key2)) {
          copy2[key2] = rec[key2];
        }
      }
      return copy2;
    };
  };

  // output/Data.Semigroup/index.js
  var semigroupString = {
    append: concatString
  };
  var semigroupArray = {
    append: concatArray
  };
  var append = function(dict) {
    return dict.append;
  };

  // output/Control.Alt/index.js
  var alt = function(dict) {
    return dict.alt;
  };

  // output/Data.Bounded/foreign.js
  var topChar = String.fromCharCode(65535);
  var bottomChar = String.fromCharCode(0);
  var topNumber = Number.POSITIVE_INFINITY;
  var bottomNumber = Number.NEGATIVE_INFINITY;

  // output/Data.Ord/foreign.js
  var unsafeCompareImpl = function(lt) {
    return function(eq2) {
      return function(gt) {
        return function(x2) {
          return function(y2) {
            return x2 < y2 ? lt : x2 === y2 ? eq2 : gt;
          };
        };
      };
    };
  };
  var ordIntImpl = unsafeCompareImpl;
  var ordStringImpl = unsafeCompareImpl;
  var ordCharImpl = unsafeCompareImpl;

  // output/Data.Eq/foreign.js
  var refEq = function(r1) {
    return function(r22) {
      return r1 === r22;
    };
  };
  var eqIntImpl = refEq;
  var eqCharImpl = refEq;
  var eqStringImpl = refEq;

  // output/Data.Eq/index.js
  var eqUnit = {
    eq: function(v3) {
      return function(v1) {
        return true;
      };
    }
  };
  var eqString = {
    eq: eqStringImpl
  };
  var eqInt = {
    eq: eqIntImpl
  };
  var eqChar = {
    eq: eqCharImpl
  };
  var eq = function(dict) {
    return dict.eq;
  };

  // output/Data.Ordering/index.js
  var LT = /* @__PURE__ */ function() {
    function LT2() {
    }
    ;
    LT2.value = new LT2();
    return LT2;
  }();
  var GT = /* @__PURE__ */ function() {
    function GT2() {
    }
    ;
    GT2.value = new GT2();
    return GT2;
  }();
  var EQ = /* @__PURE__ */ function() {
    function EQ2() {
    }
    ;
    EQ2.value = new EQ2();
    return EQ2;
  }();

  // output/Data.Ring/foreign.js
  var intSub = function(x2) {
    return function(y2) {
      return x2 - y2 | 0;
    };
  };

  // output/Data.Semiring/foreign.js
  var intAdd = function(x2) {
    return function(y2) {
      return x2 + y2 | 0;
    };
  };
  var intMul = function(x2) {
    return function(y2) {
      return x2 * y2 | 0;
    };
  };

  // output/Data.Semiring/index.js
  var semiringInt = {
    add: intAdd,
    zero: 0,
    mul: intMul,
    one: 1
  };

  // output/Data.Ring/index.js
  var ringInt = {
    sub: intSub,
    Semiring0: function() {
      return semiringInt;
    }
  };

  // output/Data.Ord/index.js
  var ordUnit = {
    compare: function(v3) {
      return function(v1) {
        return EQ.value;
      };
    },
    Eq0: function() {
      return eqUnit;
    }
  };
  var ordString = /* @__PURE__ */ function() {
    return {
      compare: ordStringImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqString;
      }
    };
  }();
  var ordInt = /* @__PURE__ */ function() {
    return {
      compare: ordIntImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqInt;
      }
    };
  }();
  var ordChar = /* @__PURE__ */ function() {
    return {
      compare: ordCharImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqChar;
      }
    };
  }();
  var compare = function(dict) {
    return dict.compare;
  };

  // output/Data.Bounded/index.js
  var top = function(dict) {
    return dict.top;
  };
  var boundedChar = {
    top: topChar,
    bottom: bottomChar,
    Ord0: function() {
      return ordChar;
    }
  };
  var bottom = function(dict) {
    return dict.bottom;
  };

  // output/Data.Show/foreign.js
  var showIntImpl = function(n3) {
    return n3.toString();
  };
  var showStringImpl = function(s3) {
    var l3 = s3.length;
    return '"' + s3.replace(
      /[\0-\x1F\x7F"\\]/g,
      // eslint-disable-line no-control-regex
      function(c3, i4) {
        switch (c3) {
          case '"':
          case "\\":
            return "\\" + c3;
          case "\x07":
            return "\\a";
          case "\b":
            return "\\b";
          case "\f":
            return "\\f";
          case "\n":
            return "\\n";
          case "\r":
            return "\\r";
          case "	":
            return "\\t";
          case "\v":
            return "\\v";
        }
        var k3 = i4 + 1;
        var empty7 = k3 < l3 && s3[k3] >= "0" && s3[k3] <= "9" ? "\\&" : "";
        return "\\" + c3.charCodeAt(0).toString(10) + empty7;
      }
    ) + '"';
  };

  // output/Data.Show/index.js
  var showString = {
    show: showStringImpl
  };
  var showInt = {
    show: showIntImpl
  };
  var show = function(dict) {
    return dict.show;
  };

  // output/Data.Maybe/index.js
  var identity3 = /* @__PURE__ */ identity(categoryFn);
  var Nothing = /* @__PURE__ */ function() {
    function Nothing2() {
    }
    ;
    Nothing2.value = new Nothing2();
    return Nothing2;
  }();
  var Just = /* @__PURE__ */ function() {
    function Just2(value0) {
      this.value0 = value0;
    }
    ;
    Just2.create = function(value0) {
      return new Just2(value0);
    };
    return Just2;
  }();
  var maybe = function(v3) {
    return function(v1) {
      return function(v22) {
        if (v22 instanceof Nothing) {
          return v3;
        }
        ;
        if (v22 instanceof Just) {
          return v1(v22.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): " + [v3.constructor.name, v1.constructor.name, v22.constructor.name]);
      };
    };
  };
  var isNothing = /* @__PURE__ */ maybe(true)(/* @__PURE__ */ $$const(false));
  var isJust = /* @__PURE__ */ maybe(false)(/* @__PURE__ */ $$const(true));
  var functorMaybe = {
    map: function(v3) {
      return function(v1) {
        if (v1 instanceof Just) {
          return new Just(v3(v1.value0));
        }
        ;
        return Nothing.value;
      };
    }
  };
  var map2 = /* @__PURE__ */ map(functorMaybe);
  var fromMaybe = function(a4) {
    return maybe(a4)(identity3);
  };
  var fromJust = function() {
    return function(v3) {
      if (v3 instanceof Just) {
        return v3.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): " + [v3.constructor.name]);
    };
  };
  var applyMaybe = {
    apply: function(v3) {
      return function(v1) {
        if (v3 instanceof Just) {
          return map2(v3.value0)(v1);
        }
        ;
        if (v3 instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v3.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var bindMaybe = {
    bind: function(v3) {
      return function(v1) {
        if (v3 instanceof Just) {
          return v1(v3.value0);
        }
        ;
        if (v3 instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v3.constructor.name, v1.constructor.name]);
      };
    },
    Apply0: function() {
      return applyMaybe;
    }
  };

  // output/Data.Either/index.js
  var Left = /* @__PURE__ */ function() {
    function Left2(value0) {
      this.value0 = value0;
    }
    ;
    Left2.create = function(value0) {
      return new Left2(value0);
    };
    return Left2;
  }();
  var Right = /* @__PURE__ */ function() {
    function Right2(value0) {
      this.value0 = value0;
    }
    ;
    Right2.create = function(value0) {
      return new Right2(value0);
    };
    return Right2;
  }();
  var note = function(a4) {
    return maybe(new Left(a4))(Right.create);
  };
  var functorEither = {
    map: function(f3) {
      return function(m3) {
        if (m3 instanceof Left) {
          return new Left(m3.value0);
        }
        ;
        if (m3 instanceof Right) {
          return new Right(f3(m3.value0));
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [m3.constructor.name]);
      };
    }
  };
  var map3 = /* @__PURE__ */ map(functorEither);
  var either = function(v3) {
    return function(v1) {
      return function(v22) {
        if (v22 instanceof Left) {
          return v3(v22.value0);
        }
        ;
        if (v22 instanceof Right) {
          return v1(v22.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [v3.constructor.name, v1.constructor.name, v22.constructor.name]);
      };
    };
  };
  var applyEither = {
    apply: function(v3) {
      return function(v1) {
        if (v3 instanceof Left) {
          return new Left(v3.value0);
        }
        ;
        if (v3 instanceof Right) {
          return map3(v3.value0)(v1);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [v3.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorEither;
    }
  };
  var bindEither = {
    bind: /* @__PURE__ */ either(function(e3) {
      return function(v3) {
        return new Left(e3);
      };
    })(function(a4) {
      return function(f3) {
        return f3(a4);
      };
    }),
    Apply0: function() {
      return applyEither;
    }
  };
  var applicativeEither = /* @__PURE__ */ function() {
    return {
      pure: Right.create,
      Apply0: function() {
        return applyEither;
      }
    };
  }();

  // output/Effect/foreign.js
  var pureE = function(a4) {
    return function() {
      return a4;
    };
  };
  var bindE = function(a4) {
    return function(f3) {
      return function() {
        return f3(a4())();
      };
    };
  };

  // output/Control.Monad/index.js
  var unlessM = function(dictMonad) {
    var bind9 = bind(dictMonad.Bind1());
    var unless2 = unless(dictMonad.Applicative0());
    return function(mb) {
      return function(m3) {
        return bind9(mb)(function(b4) {
          return unless2(b4)(m3);
        });
      };
    };
  };
  var ap = function(dictMonad) {
    var bind9 = bind(dictMonad.Bind1());
    var pure11 = pure(dictMonad.Applicative0());
    return function(f3) {
      return function(a4) {
        return bind9(f3)(function(f$prime) {
          return bind9(a4)(function(a$prime) {
            return pure11(f$prime(a$prime));
          });
        });
      };
    };
  };

  // output/Data.EuclideanRing/foreign.js
  var intDegree = function(x2) {
    return Math.min(Math.abs(x2), 2147483647);
  };
  var intDiv = function(x2) {
    return function(y2) {
      if (y2 === 0) return 0;
      return y2 > 0 ? Math.floor(x2 / y2) : -Math.floor(x2 / -y2);
    };
  };
  var intMod = function(x2) {
    return function(y2) {
      if (y2 === 0) return 0;
      var yy = Math.abs(y2);
      return (x2 % yy + yy) % yy;
    };
  };

  // output/Data.CommutativeRing/index.js
  var commutativeRingInt = {
    Ring0: function() {
      return ringInt;
    }
  };

  // output/Data.EuclideanRing/index.js
  var mod = function(dict) {
    return dict.mod;
  };
  var euclideanRingInt = {
    degree: intDegree,
    div: intDiv,
    mod: intMod,
    CommutativeRing0: function() {
      return commutativeRingInt;
    }
  };
  var div = function(dict) {
    return dict.div;
  };

  // output/Data.Monoid/index.js
  var monoidString = {
    mempty: "",
    Semigroup0: function() {
      return semigroupString;
    }
  };
  var monoidArray = {
    mempty: [],
    Semigroup0: function() {
      return semigroupArray;
    }
  };
  var mempty = function(dict) {
    return dict.mempty;
  };

  // output/Effect/index.js
  var $runtime_lazy = function(name15, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2) return val2;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var monadEffect = {
    Applicative0: function() {
      return applicativeEffect;
    },
    Bind1: function() {
      return bindEffect;
    }
  };
  var bindEffect = {
    bind: bindE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var applicativeEffect = {
    pure: pureE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var $lazy_functorEffect = /* @__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
    return {
      map: liftA1(applicativeEffect)
    };
  });
  var $lazy_applyEffect = /* @__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
    return {
      apply: ap(monadEffect),
      Functor0: function() {
        return $lazy_functorEffect(0);
      }
    };
  });
  var functorEffect = /* @__PURE__ */ $lazy_functorEffect(20);

  // output/Effect.Exception/foreign.js
  function error(msg) {
    return new Error(msg);
  }
  function throwException(e3) {
    return function() {
      throw e3;
    };
  }

  // output/Effect.Exception/index.js
  var $$throw = function($4) {
    return throwException(error($4));
  };

  // output/Control.Monad.Error.Class/index.js
  var throwError = function(dict) {
    return dict.throwError;
  };
  var catchError = function(dict) {
    return dict.catchError;
  };
  var $$try = function(dictMonadError) {
    var catchError1 = catchError(dictMonadError);
    var Monad0 = dictMonadError.MonadThrow0().Monad0();
    var map25 = map(Monad0.Bind1().Apply0().Functor0());
    var pure11 = pure(Monad0.Applicative0());
    return function(a4) {
      return catchError1(map25(Right.create)(a4))(function($52) {
        return pure11(Left.create($52));
      });
    };
  };

  // output/Control.Promise/foreign.js
  function thenImpl(promise2) {
    return function(errCB) {
      return function(succCB) {
        return function() {
          promise2.then(succCB, errCB);
        };
      };
    };
  }

  // output/Data.Identity/index.js
  var Identity = function(x2) {
    return x2;
  };
  var functorIdentity = {
    map: function(f3) {
      return function(m3) {
        return f3(m3);
      };
    }
  };
  var applyIdentity = {
    apply: function(v3) {
      return function(v1) {
        return v3(v1);
      };
    },
    Functor0: function() {
      return functorIdentity;
    }
  };
  var bindIdentity = {
    bind: function(v3) {
      return function(f3) {
        return f3(v3);
      };
    },
    Apply0: function() {
      return applyIdentity;
    }
  };
  var applicativeIdentity = {
    pure: Identity,
    Apply0: function() {
      return applyIdentity;
    }
  };
  var monadIdentity = {
    Applicative0: function() {
      return applicativeIdentity;
    },
    Bind1: function() {
      return bindIdentity;
    }
  };

  // output/Effect.Ref/foreign.js
  var _new = function(val2) {
    return function() {
      return { value: val2 };
    };
  };
  var read = function(ref2) {
    return function() {
      return ref2.value;
    };
  };
  var modifyImpl = function(f3) {
    return function(ref2) {
      return function() {
        var t3 = f3(ref2.value);
        ref2.value = t3.state;
        return t3.value;
      };
    };
  };
  var write = function(val2) {
    return function(ref2) {
      return function() {
        ref2.value = val2;
      };
    };
  };

  // output/Effect.Ref/index.js
  var $$void2 = /* @__PURE__ */ $$void(functorEffect);
  var $$new = _new;
  var modify$prime = modifyImpl;
  var modify = function(f3) {
    return modify$prime(function(s3) {
      var s$prime = f3(s3);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var modify_ = function(f3) {
    return function(s3) {
      return $$void2(modify(f3)(s3));
    };
  };

  // output/Control.Monad.Rec.Class/index.js
  var bindFlipped2 = /* @__PURE__ */ bindFlipped(bindEffect);
  var map4 = /* @__PURE__ */ map(functorEffect);
  var Loop = /* @__PURE__ */ function() {
    function Loop2(value0) {
      this.value0 = value0;
    }
    ;
    Loop2.create = function(value0) {
      return new Loop2(value0);
    };
    return Loop2;
  }();
  var Done = /* @__PURE__ */ function() {
    function Done2(value0) {
      this.value0 = value0;
    }
    ;
    Done2.create = function(value0) {
      return new Done2(value0);
    };
    return Done2;
  }();
  var tailRecM = function(dict) {
    return dict.tailRecM;
  };
  var monadRecEffect = {
    tailRecM: function(f3) {
      return function(a4) {
        var fromDone = function(v3) {
          if (v3 instanceof Done) {
            return v3.value0;
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 137, column 30 - line 137, column 44): " + [v3.constructor.name]);
        };
        return function __do2() {
          var r3 = bindFlipped2($$new)(f3(a4))();
          (function() {
            while (!function __do3() {
              var v3 = read(r3)();
              if (v3 instanceof Loop) {
                var e3 = f3(v3.value0)();
                write(e3)(r3)();
                return false;
              }
              ;
              if (v3 instanceof Done) {
                return true;
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 128, column 22 - line 133, column 28): " + [v3.constructor.name]);
            }()) {
            }
            ;
            return {};
          })();
          return map4(fromDone)(read(r3))();
        };
      };
    },
    Monad0: function() {
      return monadEffect;
    }
  };

  // output/Unsafe.Coerce/foreign.js
  var unsafeCoerce2 = function(x2) {
    return x2;
  };

  // output/Data.HeytingAlgebra/foreign.js
  var boolConj = function(b1) {
    return function(b22) {
      return b1 && b22;
    };
  };
  var boolDisj = function(b1) {
    return function(b22) {
      return b1 || b22;
    };
  };
  var boolNot = function(b4) {
    return !b4;
  };

  // output/Data.HeytingAlgebra/index.js
  var tt = function(dict) {
    return dict.tt;
  };
  var not2 = function(dict) {
    return dict.not;
  };
  var implies = function(dict) {
    return dict.implies;
  };
  var ff = function(dict) {
    return dict.ff;
  };
  var disj = function(dict) {
    return dict.disj;
  };
  var heytingAlgebraBoolean = {
    ff: false,
    tt: true,
    implies: function(a4) {
      return function(b4) {
        return disj(heytingAlgebraBoolean)(not2(heytingAlgebraBoolean)(a4))(b4);
      };
    },
    conj: boolConj,
    disj: boolDisj,
    not: boolNot
  };
  var conj = function(dict) {
    return dict.conj;
  };
  var heytingAlgebraFunction = function(dictHeytingAlgebra) {
    var ff1 = ff(dictHeytingAlgebra);
    var tt1 = tt(dictHeytingAlgebra);
    var implies1 = implies(dictHeytingAlgebra);
    var conj1 = conj(dictHeytingAlgebra);
    var disj1 = disj(dictHeytingAlgebra);
    var not1 = not2(dictHeytingAlgebra);
    return {
      ff: function(v3) {
        return ff1;
      },
      tt: function(v3) {
        return tt1;
      },
      implies: function(f3) {
        return function(g3) {
          return function(a4) {
            return implies1(f3(a4))(g3(a4));
          };
        };
      },
      conj: function(f3) {
        return function(g3) {
          return function(a4) {
            return conj1(f3(a4))(g3(a4));
          };
        };
      },
      disj: function(f3) {
        return function(g3) {
          return function(a4) {
            return disj1(f3(a4))(g3(a4));
          };
        };
      },
      not: function(f3) {
        return function(a4) {
          return not1(f3(a4));
        };
      }
    };
  };

  // output/Data.Tuple/index.js
  var Tuple = /* @__PURE__ */ function() {
    function Tuple2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Tuple2.create = function(value0) {
      return function(value1) {
        return new Tuple2(value0, value1);
      };
    };
    return Tuple2;
  }();
  var snd = function(v3) {
    return v3.value1;
  };
  var functorTuple = {
    map: function(f3) {
      return function(m3) {
        return new Tuple(m3.value0, f3(m3.value1));
      };
    }
  };
  var fst = function(v3) {
    return v3.value0;
  };
  var eqTuple = function(dictEq) {
    var eq2 = eq(dictEq);
    return function(dictEq1) {
      var eq12 = eq(dictEq1);
      return {
        eq: function(x2) {
          return function(y2) {
            return eq2(x2.value0)(y2.value0) && eq12(x2.value1)(y2.value1);
          };
        }
      };
    };
  };
  var ordTuple = function(dictOrd) {
    var compare2 = compare(dictOrd);
    var eqTuple1 = eqTuple(dictOrd.Eq0());
    return function(dictOrd1) {
      var compare12 = compare(dictOrd1);
      var eqTuple2 = eqTuple1(dictOrd1.Eq0());
      return {
        compare: function(x2) {
          return function(y2) {
            var v3 = compare2(x2.value0)(y2.value0);
            if (v3 instanceof LT) {
              return LT.value;
            }
            ;
            if (v3 instanceof GT) {
              return GT.value;
            }
            ;
            return compare12(x2.value1)(y2.value1);
          };
        },
        Eq0: function() {
          return eqTuple2;
        }
      };
    };
  };

  // output/Control.Monad.State.Class/index.js
  var state = function(dict) {
    return dict.state;
  };
  var put = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(s3) {
      return state1(function(v3) {
        return new Tuple(unit, s3);
      });
    };
  };
  var modify_2 = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f3) {
      return state1(function(s3) {
        return new Tuple(unit, f3(s3));
      });
    };
  };
  var gets = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f3) {
      return state1(function(s3) {
        return new Tuple(f3(s3), s3);
      });
    };
  };
  var get2 = function(dictMonadState) {
    return state(dictMonadState)(function(s3) {
      return new Tuple(s3, s3);
    });
  };

  // output/Effect.Class/index.js
  var monadEffectEffect = {
    liftEffect: /* @__PURE__ */ identity(categoryFn),
    Monad0: function() {
      return monadEffect;
    }
  };
  var liftEffect = function(dict) {
    return dict.liftEffect;
  };

  // output/Control.Monad.Except.Trans/index.js
  var map5 = /* @__PURE__ */ map(functorEither);
  var ExceptT = function(x2) {
    return x2;
  };
  var runExceptT = function(v3) {
    return v3;
  };
  var mapExceptT = function(f3) {
    return function(v3) {
      return f3(v3);
    };
  };
  var functorExceptT = function(dictFunctor) {
    var map112 = map(dictFunctor);
    return {
      map: function(f3) {
        return mapExceptT(map112(map5(f3)));
      }
    };
  };
  var monadExceptT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeExceptT(dictMonad);
      },
      Bind1: function() {
        return bindExceptT(dictMonad);
      }
    };
  };
  var bindExceptT = function(dictMonad) {
    var bind9 = bind(dictMonad.Bind1());
    var pure11 = pure(dictMonad.Applicative0());
    return {
      bind: function(v3) {
        return function(k3) {
          return bind9(v3)(either(function($193) {
            return pure11(Left.create($193));
          })(function(a4) {
            var v1 = k3(a4);
            return v1;
          }));
        };
      },
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var applyExceptT = function(dictMonad) {
    var functorExceptT1 = functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadExceptT(dictMonad)),
      Functor0: function() {
        return functorExceptT1;
      }
    };
  };
  var applicativeExceptT = function(dictMonad) {
    return {
      pure: function() {
        var $194 = pure(dictMonad.Applicative0());
        return function($195) {
          return ExceptT($194(Right.create($195)));
        };
      }(),
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var monadThrowExceptT = function(dictMonad) {
    var monadExceptT1 = monadExceptT(dictMonad);
    return {
      throwError: function() {
        var $204 = pure(dictMonad.Applicative0());
        return function($205) {
          return ExceptT($204(Left.create($205)));
        };
      }(),
      Monad0: function() {
        return monadExceptT1;
      }
    };
  };
  var monadErrorExceptT = function(dictMonad) {
    var bind9 = bind(dictMonad.Bind1());
    var pure11 = pure(dictMonad.Applicative0());
    var monadThrowExceptT1 = monadThrowExceptT(dictMonad);
    return {
      catchError: function(v3) {
        return function(k3) {
          return bind9(v3)(either(function(a4) {
            var v1 = k3(a4);
            return v1;
          })(function($206) {
            return pure11(Right.create($206));
          }));
        };
      },
      MonadThrow0: function() {
        return monadThrowExceptT1;
      }
    };
  };
  var altExceptT = function(dictSemigroup) {
    var append6 = append(dictSemigroup);
    return function(dictMonad) {
      var Bind1 = dictMonad.Bind1();
      var bind9 = bind(Bind1);
      var pure11 = pure(dictMonad.Applicative0());
      var functorExceptT1 = functorExceptT(Bind1.Apply0().Functor0());
      return {
        alt: function(v3) {
          return function(v1) {
            return bind9(v3)(function(rm) {
              if (rm instanceof Right) {
                return pure11(new Right(rm.value0));
              }
              ;
              if (rm instanceof Left) {
                return bind9(v1)(function(rn) {
                  if (rn instanceof Right) {
                    return pure11(new Right(rn.value0));
                  }
                  ;
                  if (rn instanceof Left) {
                    return pure11(new Left(append6(rm.value0)(rn.value0)));
                  }
                  ;
                  throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 87, column 9 - line 89, column 49): " + [rn.constructor.name]);
                });
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 83, column 5 - line 89, column 49): " + [rm.constructor.name]);
            });
          };
        },
        Functor0: function() {
          return functorExceptT1;
        }
      };
    };
  };

  // output/Safe.Coerce/index.js
  var coerce = function() {
    return unsafeCoerce2;
  };

  // output/Data.Newtype/index.js
  var coerce2 = /* @__PURE__ */ coerce();
  var unwrap = function() {
    return coerce2;
  };
  var over = function() {
    return function() {
      return function(v3) {
        return coerce2;
      };
    };
  };

  // output/Control.Monad.Except/index.js
  var unwrap2 = /* @__PURE__ */ unwrap();
  var runExcept = function($3) {
    return unwrap2(runExceptT($3));
  };

  // output/Data.Foldable/foreign.js
  var foldrArray = function(f3) {
    return function(init3) {
      return function(xs) {
        var acc = init3;
        var len = xs.length;
        for (var i4 = len - 1; i4 >= 0; i4--) {
          acc = f3(xs[i4])(acc);
        }
        return acc;
      };
    };
  };
  var foldlArray = function(f3) {
    return function(init3) {
      return function(xs) {
        var acc = init3;
        var len = xs.length;
        for (var i4 = 0; i4 < len; i4++) {
          acc = f3(acc)(xs[i4]);
        }
        return acc;
      };
    };
  };

  // output/Control.Plus/index.js
  var empty = function(dict) {
    return dict.empty;
  };

  // output/Data.Bifunctor/index.js
  var identity4 = /* @__PURE__ */ identity(categoryFn);
  var bimap = function(dict) {
    return dict.bimap;
  };
  var lmap = function(dictBifunctor) {
    var bimap1 = bimap(dictBifunctor);
    return function(f3) {
      return bimap1(f3)(identity4);
    };
  };
  var bifunctorEither = {
    bimap: function(v3) {
      return function(v1) {
        return function(v22) {
          if (v22 instanceof Left) {
            return new Left(v3(v22.value0));
          }
          ;
          if (v22 instanceof Right) {
            return new Right(v1(v22.value0));
          }
          ;
          throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [v3.constructor.name, v1.constructor.name, v22.constructor.name]);
        };
      };
    }
  };

  // output/Data.Foldable/index.js
  var identity5 = /* @__PURE__ */ identity(categoryFn);
  var foldr = function(dict) {
    return dict.foldr;
  };
  var traverse_ = function(dictApplicative) {
    var applySecond2 = applySecond(dictApplicative.Apply0());
    var pure11 = pure(dictApplicative);
    return function(dictFoldable) {
      var foldr22 = foldr(dictFoldable);
      return function(f3) {
        return foldr22(function($454) {
          return applySecond2(f3($454));
        })(pure11(unit));
      };
    };
  };
  var for_ = function(dictApplicative) {
    var traverse_14 = traverse_(dictApplicative);
    return function(dictFoldable) {
      return flip(traverse_14(dictFoldable));
    };
  };
  var foldl = function(dict) {
    return dict.foldl;
  };
  var intercalate = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictMonoid) {
      var append6 = append(dictMonoid.Semigroup0());
      var mempty3 = mempty(dictMonoid);
      return function(sep) {
        return function(xs) {
          var go2 = function(v3) {
            return function(v1) {
              if (v3.init) {
                return {
                  init: false,
                  acc: v1
                };
              }
              ;
              return {
                init: false,
                acc: append6(v3.acc)(append6(sep)(v1))
              };
            };
          };
          return foldl2(go2)({
            init: true,
            acc: mempty3
          })(xs).acc;
        };
      };
    };
  };
  var foldableMaybe = {
    foldr: function(v3) {
      return function(v1) {
        return function(v22) {
          if (v22 instanceof Nothing) {
            return v1;
          }
          ;
          if (v22 instanceof Just) {
            return v3(v22.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v3.constructor.name, v1.constructor.name, v22.constructor.name]);
        };
      };
    },
    foldl: function(v3) {
      return function(v1) {
        return function(v22) {
          if (v22 instanceof Nothing) {
            return v1;
          }
          ;
          if (v22 instanceof Just) {
            return v3(v1)(v22.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v3.constructor.name, v1.constructor.name, v22.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty3 = mempty(dictMonoid);
      return function(v3) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            return mempty3;
          }
          ;
          if (v1 instanceof Just) {
            return v3(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v3.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldMapDefaultR = function(dictFoldable) {
    var foldr22 = foldr(dictFoldable);
    return function(dictMonoid) {
      var append6 = append(dictMonoid.Semigroup0());
      var mempty3 = mempty(dictMonoid);
      return function(f3) {
        return foldr22(function(x2) {
          return function(acc) {
            return append6(f3(x2))(acc);
          };
        })(mempty3);
      };
    };
  };
  var foldableArray = {
    foldr: foldrArray,
    foldl: foldlArray,
    foldMap: function(dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
    }
  };
  var foldMap = function(dict) {
    return dict.foldMap;
  };
  var fold = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable);
    return function(dictMonoid) {
      return foldMap2(dictMonoid)(identity5);
    };
  };

  // output/Data.FunctorWithIndex/foreign.js
  var mapWithIndexArray = function(f3) {
    return function(xs) {
      var l3 = xs.length;
      var result = Array(l3);
      for (var i4 = 0; i4 < l3; i4++) {
        result[i4] = f3(i4)(xs[i4]);
      }
      return result;
    };
  };

  // output/Data.FunctorWithIndex/index.js
  var mapWithIndex = function(dict) {
    return dict.mapWithIndex;
  };
  var functorWithIndexArray = {
    mapWithIndex: mapWithIndexArray,
    Functor0: function() {
      return functorArray;
    }
  };

  // output/Data.FoldableWithIndex/index.js
  var foldr8 = /* @__PURE__ */ foldr(foldableArray);
  var mapWithIndex2 = /* @__PURE__ */ mapWithIndex(functorWithIndexArray);
  var foldl8 = /* @__PURE__ */ foldl(foldableArray);
  var foldrWithIndex = function(dict) {
    return dict.foldrWithIndex;
  };
  var foldMapWithIndexDefaultR = function(dictFoldableWithIndex) {
    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
    return function(dictMonoid) {
      var append6 = append(dictMonoid.Semigroup0());
      var mempty3 = mempty(dictMonoid);
      return function(f3) {
        return foldrWithIndex1(function(i4) {
          return function(x2) {
            return function(acc) {
              return append6(f3(i4)(x2))(acc);
            };
          };
        })(mempty3);
      };
    };
  };
  var foldableWithIndexArray = {
    foldrWithIndex: function(f3) {
      return function(z2) {
        var $291 = foldr8(function(v3) {
          return function(y2) {
            return f3(v3.value0)(v3.value1)(y2);
          };
        })(z2);
        var $292 = mapWithIndex2(Tuple.create);
        return function($293) {
          return $291($292($293));
        };
      };
    },
    foldlWithIndex: function(f3) {
      return function(z2) {
        var $294 = foldl8(function(y2) {
          return function(v3) {
            return f3(v3.value0)(y2)(v3.value1);
          };
        })(z2);
        var $295 = mapWithIndex2(Tuple.create);
        return function($296) {
          return $294($295($296));
        };
      };
    },
    foldMapWithIndex: function(dictMonoid) {
      return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
    },
    Foldable0: function() {
      return foldableArray;
    }
  };

  // output/Data.Traversable/foreign.js
  var traverseArrayImpl = /* @__PURE__ */ function() {
    function array1(a4) {
      return [a4];
    }
    function array2(a4) {
      return function(b4) {
        return [a4, b4];
      };
    }
    function array3(a4) {
      return function(b4) {
        return function(c3) {
          return [a4, b4, c3];
        };
      };
    }
    function concat2(xs) {
      return function(ys) {
        return xs.concat(ys);
      };
    }
    return function(apply2) {
      return function(map25) {
        return function(pure11) {
          return function(f3) {
            return function(array) {
              function go2(bot, top2) {
                switch (top2 - bot) {
                  case 0:
                    return pure11([]);
                  case 1:
                    return map25(array1)(f3(array[bot]));
                  case 2:
                    return apply2(map25(array2)(f3(array[bot])))(f3(array[bot + 1]));
                  case 3:
                    return apply2(apply2(map25(array3)(f3(array[bot])))(f3(array[bot + 1])))(f3(array[bot + 2]));
                  default:
                    var pivot = bot + Math.floor((top2 - bot) / 4) * 2;
                    return apply2(map25(concat2)(go2(bot, pivot)))(go2(pivot, top2));
                }
              }
              return go2(0, array.length);
            };
          };
        };
      };
    };
  }();

  // output/Data.Traversable/index.js
  var identity6 = /* @__PURE__ */ identity(categoryFn);
  var traverse = function(dict) {
    return dict.traverse;
  };
  var sequenceDefault = function(dictTraversable) {
    var traverse22 = traverse(dictTraversable);
    return function(dictApplicative) {
      return traverse22(dictApplicative)(identity6);
    };
  };
  var traversableArray = {
    traverse: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      return traverseArrayImpl(apply(Apply0))(map(Apply0.Functor0()))(pure(dictApplicative));
    },
    sequence: function(dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
    },
    Functor0: function() {
      return functorArray;
    },
    Foldable1: function() {
      return foldableArray;
    }
  };
  var sequence = function(dict) {
    return dict.sequence;
  };

  // output/Data.TraversableWithIndex/index.js
  var traverseWithIndexDefault = function(dictTraversableWithIndex) {
    var sequence2 = sequence(dictTraversableWithIndex.Traversable2());
    var mapWithIndex4 = mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
    return function(dictApplicative) {
      var sequence12 = sequence2(dictApplicative);
      return function(f3) {
        var $174 = mapWithIndex4(f3);
        return function($175) {
          return sequence12($174($175));
        };
      };
    };
  };
  var traverseWithIndex = function(dict) {
    return dict.traverseWithIndex;
  };
  var traversableWithIndexArray = {
    traverseWithIndex: function(dictApplicative) {
      return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
    },
    FunctorWithIndex0: function() {
      return functorWithIndexArray;
    },
    FoldableWithIndex1: function() {
      return foldableWithIndexArray;
    },
    Traversable2: function() {
      return traversableArray;
    }
  };

  // output/Data.NonEmpty/index.js
  var NonEmpty = /* @__PURE__ */ function() {
    function NonEmpty2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    NonEmpty2.create = function(value0) {
      return function(value1) {
        return new NonEmpty2(value0, value1);
      };
    };
    return NonEmpty2;
  }();
  var singleton2 = function(dictPlus) {
    var empty7 = empty(dictPlus);
    return function(a4) {
      return new NonEmpty(a4, empty7);
    };
  };

  // output/Data.List.Types/index.js
  var Nil = /* @__PURE__ */ function() {
    function Nil2() {
    }
    ;
    Nil2.value = new Nil2();
    return Nil2;
  }();
  var Cons = /* @__PURE__ */ function() {
    function Cons2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Cons2.create = function(value0) {
      return function(value1) {
        return new Cons2(value0, value1);
      };
    };
    return Cons2;
  }();
  var NonEmptyList = function(x2) {
    return x2;
  };
  var toList = function(v3) {
    return new Cons(v3.value0, v3.value1);
  };
  var listMap = function(f3) {
    var chunkedRevMap = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v3, v1) {
          if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {
            $tco_var_v = new Cons(v1, v3);
            $copy_v1 = v1.value1.value1.value1;
            return;
          }
          ;
          var unrolledMap = function(v22) {
            if (v22 instanceof Cons && (v22.value1 instanceof Cons && v22.value1.value1 instanceof Nil)) {
              return new Cons(f3(v22.value0), new Cons(f3(v22.value1.value0), Nil.value));
            }
            ;
            if (v22 instanceof Cons && v22.value1 instanceof Nil) {
              return new Cons(f3(v22.value0), Nil.value);
            }
            ;
            return Nil.value;
          };
          var reverseUnrolledMap = function($copy_v2) {
            return function($copy_v3) {
              var $tco_var_v2 = $copy_v2;
              var $tco_done1 = false;
              var $tco_result2;
              function $tco_loop2(v22, v32) {
                if (v22 instanceof Cons && (v22.value0 instanceof Cons && (v22.value0.value1 instanceof Cons && v22.value0.value1.value1 instanceof Cons))) {
                  $tco_var_v2 = v22.value1;
                  $copy_v3 = new Cons(f3(v22.value0.value0), new Cons(f3(v22.value0.value1.value0), new Cons(f3(v22.value0.value1.value1.value0), v32)));
                  return;
                }
                ;
                $tco_done1 = true;
                return v32;
              }
              ;
              while (!$tco_done1) {
                $tco_result2 = $tco_loop2($tco_var_v2, $copy_v3);
              }
              ;
              return $tco_result2;
            };
          };
          $tco_done = true;
          return reverseUnrolledMap(v3)(unrolledMap(v1));
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return chunkedRevMap(Nil.value);
  };
  var functorList = {
    map: listMap
  };
  var foldableList = {
    foldr: function(f3) {
      return function(b4) {
        var rev3 = function() {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v3, v1) {
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return v3;
                }
                ;
                if (v1 instanceof Cons) {
                  $tco_var_v = new Cons(v1.value0, v3);
                  $copy_v1 = v1.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): " + [v3.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return go2(Nil.value);
        }();
        var $284 = foldl(foldableList)(flip(f3))(b4);
        return function($285) {
          return $284(rev3($285));
        };
      };
    },
    foldl: function(f3) {
      var go2 = function($copy_b) {
        return function($copy_v) {
          var $tco_var_b = $copy_b;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(b4, v3) {
            if (v3 instanceof Nil) {
              $tco_done1 = true;
              return b4;
            }
            ;
            if (v3 instanceof Cons) {
              $tco_var_b = f3(b4)(v3.value0);
              $copy_v = v3.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): " + [v3.constructor.name]);
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_b, $copy_v);
          }
          ;
          return $tco_result;
        };
      };
      return go2;
    },
    foldMap: function(dictMonoid) {
      var append22 = append(dictMonoid.Semigroup0());
      var mempty3 = mempty(dictMonoid);
      return function(f3) {
        return foldl(foldableList)(function(acc) {
          var $286 = append22(acc);
          return function($287) {
            return $286(f3($287));
          };
        })(mempty3);
      };
    }
  };
  var foldr2 = /* @__PURE__ */ foldr(foldableList);
  var semigroupList = {
    append: function(xs) {
      return function(ys) {
        return foldr2(Cons.create)(ys)(xs);
      };
    }
  };
  var append1 = /* @__PURE__ */ append(semigroupList);
  var semigroupNonEmptyList = {
    append: function(v3) {
      return function(as$prime) {
        return new NonEmpty(v3.value0, append1(v3.value1)(toList(as$prime)));
      };
    }
  };
  var altList = {
    alt: append1,
    Functor0: function() {
      return functorList;
    }
  };
  var plusList = /* @__PURE__ */ function() {
    return {
      empty: Nil.value,
      Alt0: function() {
        return altList;
      }
    };
  }();

  // output/Effect.Aff/foreign.js
  var Aff = function() {
    var EMPTY = {};
    var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt";
    var CONS = "Cons";
    var RESUME = "Resume";
    var RELEASE = "Release";
    var FINALIZER = "Finalizer";
    var FINALIZED = "Finalized";
    var FORKED = "Forked";
    var FIBER = "Fiber";
    var THUNK = "Thunk";
    function Aff2(tag, _1, _2, _3) {
      this.tag = tag;
      this._1 = _1;
      this._2 = _2;
      this._3 = _3;
    }
    function AffCtr(tag) {
      var fn = function(_1, _2, _3) {
        return new Aff2(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }
    function nonCanceler2(error4) {
      return new Aff2(PURE, void 0);
    }
    function runEff(eff) {
      try {
        eff();
      } catch (error4) {
        setTimeout(function() {
          throw error4;
        }, 0);
      }
    }
    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error4) {
        return left(error4);
      }
    }
    function runAsync(left, eff, k3) {
      try {
        return eff(k3)();
      } catch (error4) {
        k3(left(error4))();
        return nonCanceler2;
      }
    }
    var Scheduler = function() {
      var limit = 1024;
      var size5 = 0;
      var ix = 0;
      var queue = new Array(limit);
      var draining = false;
      function drain() {
        var thunk;
        draining = true;
        while (size5 !== 0) {
          size5--;
          thunk = queue[ix];
          queue[ix] = void 0;
          ix = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }
      return {
        isDraining: function() {
          return draining;
        },
        enqueue: function(cb) {
          var i4, tmp;
          if (size5 === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }
          queue[(ix + size5) % limit] = cb;
          size5++;
          if (!draining) {
            drain();
          }
        }
      };
    }();
    function Supervisor(util) {
      var fibers = {};
      var fiberId = 0;
      var count = 0;
      return {
        register: function(fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function(result) {
              return function() {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function() {
          return count === 0;
        },
        killAll: function(killError, cb) {
          return function() {
            if (count === 0) {
              return cb();
            }
            var killCount = 0;
            var kills = {};
            function kill2(fid) {
              kills[fid] = fibers[fid].kill(killError, function(result) {
                return function() {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function() {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }
            for (var k3 in fibers) {
              if (fibers.hasOwnProperty(k3)) {
                killCount++;
                kill2(k3);
              }
            }
            fibers = {};
            fiberId = 0;
            count = 0;
            return function(error4) {
              return new Aff2(SYNC, function() {
                for (var k4 in kills) {
                  if (kills.hasOwnProperty(k4)) {
                    kills[k4]();
                  }
                }
              });
            };
          };
        }
      };
    }
    var SUSPENDED = 0;
    var CONTINUE = 1;
    var STEP_BIND = 2;
    var STEP_RESULT = 3;
    var PENDING = 4;
    var RETURN = 5;
    var COMPLETED = 6;
    function Fiber(util, supervisor, aff) {
      var runTick = 0;
      var status = SUSPENDED;
      var step3 = aff;
      var fail2 = null;
      var interrupt = null;
      var bhead = null;
      var btail = null;
      var attempts = null;
      var bracketCount = 0;
      var joinId = 0;
      var joins = null;
      var rethrow = true;
      function run3(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp = null;
          result = null;
          attempt = null;
          switch (status) {
            case STEP_BIND:
              status = CONTINUE;
              try {
                step3 = bhead(step3);
                if (btail === null) {
                  bhead = null;
                } else {
                  bhead = btail._1;
                  btail = btail._2;
                }
              } catch (e3) {
                status = RETURN;
                fail2 = util.left(e3);
                step3 = null;
              }
              break;
            case STEP_RESULT:
              if (util.isLeft(step3)) {
                status = RETURN;
                fail2 = step3;
                step3 = null;
              } else if (bhead === null) {
                status = RETURN;
              } else {
                status = STEP_BIND;
                step3 = util.fromRight(step3);
              }
              break;
            case CONTINUE:
              switch (step3.tag) {
                case BIND:
                  if (bhead) {
                    btail = new Aff2(CONS, bhead, btail);
                  }
                  bhead = step3._2;
                  status = CONTINUE;
                  step3 = step3._1;
                  break;
                case PURE:
                  if (bhead === null) {
                    status = RETURN;
                    step3 = util.right(step3._1);
                  } else {
                    status = STEP_BIND;
                    step3 = step3._1;
                  }
                  break;
                case SYNC:
                  status = STEP_RESULT;
                  step3 = runSync(util.left, util.right, step3._1);
                  break;
                case ASYNC:
                  status = PENDING;
                  step3 = runAsync(util.left, step3._1, function(result2) {
                    return function() {
                      if (runTick !== localRunTick) {
                        return;
                      }
                      runTick++;
                      Scheduler.enqueue(function() {
                        if (runTick !== localRunTick + 1) {
                          return;
                        }
                        status = STEP_RESULT;
                        step3 = result2;
                        run3(runTick);
                      });
                    };
                  });
                  return;
                case THROW:
                  status = RETURN;
                  fail2 = util.left(step3._1);
                  step3 = null;
                  break;
                case CATCH:
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step3, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step3, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step3 = step3._1;
                  break;
                case BRACKET:
                  bracketCount++;
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step3, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step3, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step3 = step3._1;
                  break;
                case FORK:
                  status = STEP_RESULT;
                  tmp = Fiber(util, supervisor, step3._2);
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
                  if (step3._1) {
                    tmp.run();
                  }
                  step3 = util.right(tmp);
                  break;
                case SEQ:
                  status = CONTINUE;
                  step3 = sequential3(util, supervisor, step3._1);
                  break;
              }
              break;
            case RETURN:
              bhead = null;
              btail = null;
              if (attempts === null) {
                status = COMPLETED;
                step3 = interrupt || fail2 || step3;
              } else {
                tmp = attempts._3;
                attempt = attempts._1;
                attempts = attempts._2;
                switch (attempt.tag) {
                  case CATCH:
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      status = RETURN;
                    } else if (fail2) {
                      status = CONTINUE;
                      step3 = attempt._2(util.fromLeft(fail2));
                      fail2 = null;
                    }
                    break;
                  case RESUME:
                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail2) {
                      status = RETURN;
                    } else {
                      bhead = attempt._1;
                      btail = attempt._2;
                      status = STEP_BIND;
                      step3 = util.fromRight(step3);
                    }
                    break;
                  case BRACKET:
                    bracketCount--;
                    if (fail2 === null) {
                      result = util.fromRight(step3);
                      attempts = new Aff2(CONS, new Aff2(RELEASE, attempt._2, result), attempts, tmp);
                      if (interrupt === tmp || bracketCount > 0) {
                        status = CONTINUE;
                        step3 = attempt._3(result);
                      }
                    }
                    break;
                  case RELEASE:
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step3, fail2), attempts, interrupt);
                    status = CONTINUE;
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      step3 = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                    } else if (fail2) {
                      step3 = attempt._1.failed(util.fromLeft(fail2))(attempt._2);
                    } else {
                      step3 = attempt._1.completed(util.fromRight(step3))(attempt._2);
                    }
                    fail2 = null;
                    bracketCount++;
                    break;
                  case FINALIZER:
                    bracketCount++;
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step3, fail2), attempts, interrupt);
                    status = CONTINUE;
                    step3 = attempt._1;
                    break;
                  case FINALIZED:
                    bracketCount--;
                    status = RETURN;
                    step3 = attempt._1;
                    fail2 = attempt._2;
                    break;
                }
              }
              break;
            case COMPLETED:
              for (var k3 in joins) {
                if (joins.hasOwnProperty(k3)) {
                  rethrow = rethrow && joins[k3].rethrow;
                  runEff(joins[k3].handler(step3));
                }
              }
              joins = null;
              if (interrupt && fail2) {
                setTimeout(function() {
                  throw util.fromLeft(fail2);
                }, 0);
              } else if (util.isLeft(step3) && rethrow) {
                setTimeout(function() {
                  if (rethrow) {
                    throw util.fromLeft(step3);
                  }
                }, 0);
              }
              return;
            case SUSPENDED:
              status = CONTINUE;
              break;
            case PENDING:
              return;
          }
        }
      }
      function onComplete(join4) {
        return function() {
          if (status === COMPLETED) {
            rethrow = rethrow && join4.rethrow;
            join4.handler(step3)();
            return function() {
            };
          }
          var jid = joinId++;
          joins = joins || {};
          joins[jid] = join4;
          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }
      function kill2(error4, cb) {
        return function() {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function() {
            };
          }
          var canceler = onComplete({
            rethrow: false,
            handler: function() {
              return cb(util.right(void 0));
            }
          })();
          switch (status) {
            case SUSPENDED:
              interrupt = util.left(error4);
              status = COMPLETED;
              step3 = interrupt;
              run3(runTick);
              break;
            case PENDING:
              if (interrupt === null) {
                interrupt = util.left(error4);
              }
              if (bracketCount === 0) {
                if (status === PENDING) {
                  attempts = new Aff2(CONS, new Aff2(FINALIZER, step3(error4)), attempts, interrupt);
                }
                status = RETURN;
                step3 = null;
                fail2 = null;
                run3(++runTick);
              }
              break;
            default:
              if (interrupt === null) {
                interrupt = util.left(error4);
              }
              if (bracketCount === 0) {
                status = RETURN;
                step3 = null;
                fail2 = null;
              }
          }
          return canceler;
        };
      }
      function join3(cb) {
        return function() {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run3(runTick);
          }
          return canceler;
        };
      }
      return {
        kill: kill2,
        join: join3,
        onComplete,
        isSuspended: function() {
          return status === SUSPENDED;
        },
        run: function() {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function() {
                run3(runTick);
              });
            } else {
              run3(runTick);
            }
          }
        }
      };
    }
    function runPar(util, supervisor, par, cb) {
      var fiberId = 0;
      var fibers = {};
      var killId = 0;
      var kills = {};
      var early = new Error("[ParAff] Early exit");
      var interrupt = null;
      var root = EMPTY;
      function kill2(error4, par2, cb2) {
        var step3 = par2;
        var head3 = null;
        var tail2 = null;
        var count = 0;
        var kills2 = {};
        var tmp, kid;
        loop: while (true) {
          tmp = null;
          switch (step3.tag) {
            case FORKED:
              if (step3._3 === EMPTY) {
                tmp = fibers[step3._1];
                kills2[count++] = tmp.kill(error4, function(result) {
                  return function() {
                    count--;
                    if (count === 0) {
                      cb2(result)();
                    }
                  };
                });
              }
              if (head3 === null) {
                break loop;
              }
              step3 = head3._2;
              if (tail2 === null) {
                head3 = null;
              } else {
                head3 = tail2._1;
                tail2 = tail2._2;
              }
              break;
            case MAP:
              step3 = step3._2;
              break;
            case APPLY:
            case ALT:
              if (head3) {
                tail2 = new Aff2(CONS, head3, tail2);
              }
              head3 = step3;
              step3 = step3._1;
              break;
          }
        }
        if (count === 0) {
          cb2(util.right(void 0))();
        } else {
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills2[kid] = kills2[kid]();
          }
        }
        return kills2;
      }
      function join3(result, head3, tail2) {
        var fail2, step3, lhs, rhs, tmp, kid;
        if (util.isLeft(result)) {
          fail2 = result;
          step3 = null;
        } else {
          step3 = result;
          fail2 = null;
        }
        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;
          if (interrupt !== null) {
            return;
          }
          if (head3 === null) {
            cb(fail2 || step3)();
            return;
          }
          if (head3._3 !== EMPTY) {
            return;
          }
          switch (head3.tag) {
            case MAP:
              if (fail2 === null) {
                head3._3 = util.right(head3._1(util.fromRight(step3)));
                step3 = head3._3;
              } else {
                head3._3 = fail2;
              }
              break;
            case APPLY:
              lhs = head3._1._3;
              rhs = head3._2._3;
              if (fail2) {
                head3._3 = fail2;
                tmp = true;
                kid = killId++;
                kills[kid] = kill2(early, fail2 === lhs ? head3._2 : head3._1, function() {
                  return function() {
                    delete kills[kid];
                    if (tmp) {
                      tmp = false;
                    } else if (tail2 === null) {
                      join3(fail2, null, null);
                    } else {
                      join3(fail2, tail2._1, tail2._2);
                    }
                  };
                });
                if (tmp) {
                  tmp = false;
                  return;
                }
              } else if (lhs === EMPTY || rhs === EMPTY) {
                return;
              } else {
                step3 = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                head3._3 = step3;
              }
              break;
            case ALT:
              lhs = head3._1._3;
              rhs = head3._2._3;
              if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
                return;
              }
              if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                fail2 = step3 === lhs ? rhs : lhs;
                step3 = null;
                head3._3 = fail2;
              } else {
                head3._3 = step3;
                tmp = true;
                kid = killId++;
                kills[kid] = kill2(early, step3 === lhs ? head3._2 : head3._1, function() {
                  return function() {
                    delete kills[kid];
                    if (tmp) {
                      tmp = false;
                    } else if (tail2 === null) {
                      join3(step3, null, null);
                    } else {
                      join3(step3, tail2._1, tail2._2);
                    }
                  };
                });
                if (tmp) {
                  tmp = false;
                  return;
                }
              }
              break;
          }
          if (tail2 === null) {
            head3 = null;
          } else {
            head3 = tail2._1;
            tail2 = tail2._2;
          }
        }
      }
      function resolve(fiber) {
        return function(result) {
          return function() {
            delete fibers[fiber._1];
            fiber._3 = result;
            join3(result, fiber._2._1, fiber._2._2);
          };
        };
      }
      function run3() {
        var status = CONTINUE;
        var step3 = par;
        var head3 = null;
        var tail2 = null;
        var tmp, fid;
        loop: while (true) {
          tmp = null;
          fid = null;
          switch (status) {
            case CONTINUE:
              switch (step3.tag) {
                case MAP:
                  if (head3) {
                    tail2 = new Aff2(CONS, head3, tail2);
                  }
                  head3 = new Aff2(MAP, step3._1, EMPTY, EMPTY);
                  step3 = step3._2;
                  break;
                case APPLY:
                  if (head3) {
                    tail2 = new Aff2(CONS, head3, tail2);
                  }
                  head3 = new Aff2(APPLY, EMPTY, step3._2, EMPTY);
                  step3 = step3._1;
                  break;
                case ALT:
                  if (head3) {
                    tail2 = new Aff2(CONS, head3, tail2);
                  }
                  head3 = new Aff2(ALT, EMPTY, step3._2, EMPTY);
                  step3 = step3._1;
                  break;
                default:
                  fid = fiberId++;
                  status = RETURN;
                  tmp = step3;
                  step3 = new Aff2(FORKED, fid, new Aff2(CONS, head3, tail2), EMPTY);
                  tmp = Fiber(util, supervisor, tmp);
                  tmp.onComplete({
                    rethrow: false,
                    handler: resolve(step3)
                  })();
                  fibers[fid] = tmp;
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
              }
              break;
            case RETURN:
              if (head3 === null) {
                break loop;
              }
              if (head3._1 === EMPTY) {
                head3._1 = step3;
                status = CONTINUE;
                step3 = head3._2;
                head3._2 = EMPTY;
              } else {
                head3._2 = step3;
                step3 = head3;
                if (tail2 === null) {
                  head3 = null;
                } else {
                  head3 = tail2._1;
                  tail2 = tail2._2;
                }
              }
          }
        }
        root = step3;
        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }
      function cancel(error4, cb2) {
        interrupt = util.left(error4);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }
        kills = null;
        var newKills = kill2(error4, root, cb2);
        return function(killError) {
          return new Aff2(ASYNC, function(killCb) {
            return function() {
              for (var kid2 in newKills) {
                if (newKills.hasOwnProperty(kid2)) {
                  newKills[kid2]();
                }
              }
              return nonCanceler2;
            };
          });
        };
      }
      run3();
      return function(killError) {
        return new Aff2(ASYNC, function(killCb) {
          return function() {
            return cancel(killError, killCb);
          };
        });
      };
    }
    function sequential3(util, supervisor, par) {
      return new Aff2(ASYNC, function(cb) {
        return function() {
          return runPar(util, supervisor, par, cb);
        };
      });
    }
    Aff2.EMPTY = EMPTY;
    Aff2.Pure = AffCtr(PURE);
    Aff2.Throw = AffCtr(THROW);
    Aff2.Catch = AffCtr(CATCH);
    Aff2.Sync = AffCtr(SYNC);
    Aff2.Async = AffCtr(ASYNC);
    Aff2.Bind = AffCtr(BIND);
    Aff2.Bracket = AffCtr(BRACKET);
    Aff2.Fork = AffCtr(FORK);
    Aff2.Seq = AffCtr(SEQ);
    Aff2.ParMap = AffCtr(MAP);
    Aff2.ParApply = AffCtr(APPLY);
    Aff2.ParAlt = AffCtr(ALT);
    Aff2.Fiber = Fiber;
    Aff2.Supervisor = Supervisor;
    Aff2.Scheduler = Scheduler;
    Aff2.nonCanceler = nonCanceler2;
    return Aff2;
  }();
  var _pure = Aff.Pure;
  var _throwError = Aff.Throw;
  function _catchError(aff) {
    return function(k3) {
      return Aff.Catch(aff, k3);
    };
  }
  function _map(f3) {
    return function(aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f3(aff._1));
      } else {
        return Aff.Bind(aff, function(value14) {
          return Aff.Pure(f3(value14));
        });
      }
    };
  }
  function _bind(aff) {
    return function(k3) {
      return Aff.Bind(aff, k3);
    };
  }
  function _fork(immediate) {
    return function(aff) {
      return Aff.Fork(immediate, aff);
    };
  }
  var _liftEffect = Aff.Sync;
  function _parAffMap(f3) {
    return function(aff) {
      return Aff.ParMap(f3, aff);
    };
  }
  function _parAffApply(aff1) {
    return function(aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  }
  var makeAff = Aff.Async;
  function generalBracket(acquire) {
    return function(options2) {
      return function(k3) {
        return Aff.Bracket(acquire, options2, k3);
      };
    };
  }
  function _makeFiber(util, aff) {
    return function() {
      return Aff.Fiber(util, null, aff);
    };
  }
  var _sequential = Aff.Seq;

  // output/Control.Parallel.Class/index.js
  var sequential = function(dict) {
    return dict.sequential;
  };
  var parallel = function(dict) {
    return dict.parallel;
  };

  // output/Control.Parallel/index.js
  var identity7 = /* @__PURE__ */ identity(categoryFn);
  var parTraverse_ = function(dictParallel) {
    var sequential3 = sequential(dictParallel);
    var parallel4 = parallel(dictParallel);
    return function(dictApplicative) {
      var traverse_8 = traverse_(dictApplicative);
      return function(dictFoldable) {
        var traverse_14 = traverse_8(dictFoldable);
        return function(f3) {
          var $51 = traverse_14(function($53) {
            return parallel4(f3($53));
          });
          return function($52) {
            return sequential3($51($52));
          };
        };
      };
    };
  };
  var parSequence_ = function(dictParallel) {
    var parTraverse_1 = parTraverse_(dictParallel);
    return function(dictApplicative) {
      var parTraverse_2 = parTraverse_1(dictApplicative);
      return function(dictFoldable) {
        return parTraverse_2(dictFoldable)(identity7);
      };
    };
  };

  // output/Effect.Unsafe/foreign.js
  var unsafePerformEffect = function(f3) {
    return f3();
  };

  // output/Partial.Unsafe/foreign.js
  var _unsafePartial = function(f3) {
    return f3();
  };

  // output/Partial/foreign.js
  var _crashWith = function(msg) {
    throw new Error(msg);
  };

  // output/Partial/index.js
  var crashWith = function() {
    return _crashWith;
  };

  // output/Partial.Unsafe/index.js
  var crashWith2 = /* @__PURE__ */ crashWith();
  var unsafePartial = _unsafePartial;
  var unsafeCrashWith = function(msg) {
    return unsafePartial(function() {
      return crashWith2(msg);
    });
  };

  // output/Effect.Aff/index.js
  var $runtime_lazy2 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2) return val2;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var pure2 = /* @__PURE__ */ pure(applicativeEffect);
  var $$void3 = /* @__PURE__ */ $$void(functorEffect);
  var map6 = /* @__PURE__ */ map(functorEffect);
  var Canceler = function(x2) {
    return x2;
  };
  var suspendAff = /* @__PURE__ */ _fork(false);
  var functorParAff = {
    map: _parAffMap
  };
  var functorAff = {
    map: _map
  };
  var map1 = /* @__PURE__ */ map(functorAff);
  var forkAff = /* @__PURE__ */ _fork(true);
  var ffiUtil = /* @__PURE__ */ function() {
    var unsafeFromRight = function(v3) {
      if (v3 instanceof Right) {
        return v3.value0;
      }
      ;
      if (v3 instanceof Left) {
        return unsafeCrashWith("unsafeFromRight: Left");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 412, column 21 - line 414, column 54): " + [v3.constructor.name]);
    };
    var unsafeFromLeft = function(v3) {
      if (v3 instanceof Left) {
        return v3.value0;
      }
      ;
      if (v3 instanceof Right) {
        return unsafeCrashWith("unsafeFromLeft: Right");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 407, column 20 - line 409, column 55): " + [v3.constructor.name]);
    };
    var isLeft = function(v3) {
      if (v3 instanceof Left) {
        return true;
      }
      ;
      if (v3 instanceof Right) {
        return false;
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 402, column 12 - line 404, column 21): " + [v3.constructor.name]);
    };
    return {
      isLeft,
      fromLeft: unsafeFromLeft,
      fromRight: unsafeFromRight,
      left: Left.create,
      right: Right.create
    };
  }();
  var makeFiber = function(aff) {
    return _makeFiber(ffiUtil, aff);
  };
  var launchAff = function(aff) {
    return function __do2() {
      var fiber = makeFiber(aff)();
      fiber.run();
      return fiber;
    };
  };
  var bracket = function(acquire) {
    return function(completed) {
      return generalBracket(acquire)({
        killed: $$const(completed),
        failed: $$const(completed),
        completed: $$const(completed)
      });
    };
  };
  var applyParAff = {
    apply: _parAffApply,
    Functor0: function() {
      return functorParAff;
    }
  };
  var monadAff = {
    Applicative0: function() {
      return applicativeAff;
    },
    Bind1: function() {
      return bindAff;
    }
  };
  var bindAff = {
    bind: _bind,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var applicativeAff = {
    pure: _pure,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var $lazy_applyAff = /* @__PURE__ */ $runtime_lazy2("applyAff", "Effect.Aff", function() {
    return {
      apply: ap(monadAff),
      Functor0: function() {
        return functorAff;
      }
    };
  });
  var applyAff = /* @__PURE__ */ $lazy_applyAff(73);
  var pure22 = /* @__PURE__ */ pure(applicativeAff);
  var bind1 = /* @__PURE__ */ bind(bindAff);
  var bindFlipped3 = /* @__PURE__ */ bindFlipped(bindAff);
  var $$finally = function(fin) {
    return function(a4) {
      return bracket(pure22(unit))($$const(fin))($$const(a4));
    };
  };
  var parallelAff = {
    parallel: unsafeCoerce2,
    sequential: _sequential,
    Apply0: function() {
      return applyAff;
    },
    Apply1: function() {
      return applyParAff;
    }
  };
  var parallel2 = /* @__PURE__ */ parallel(parallelAff);
  var applicativeParAff = {
    pure: function($76) {
      return parallel2(pure22($76));
    },
    Apply0: function() {
      return applyParAff;
    }
  };
  var parSequence_2 = /* @__PURE__ */ parSequence_(parallelAff)(applicativeParAff)(foldableArray);
  var semigroupCanceler = {
    append: function(v3) {
      return function(v1) {
        return function(err) {
          return parSequence_2([v3(err), v1(err)]);
        };
      };
    }
  };
  var monadEffectAff = {
    liftEffect: _liftEffect,
    Monad0: function() {
      return monadAff;
    }
  };
  var liftEffect2 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var effectCanceler = function($77) {
    return Canceler($$const(liftEffect2($77)));
  };
  var joinFiber = function(v3) {
    return makeAff(function(k3) {
      return map6(effectCanceler)(v3.join(k3));
    });
  };
  var functorFiber = {
    map: function(f3) {
      return function(t3) {
        return unsafePerformEffect(makeFiber(map1(f3)(joinFiber(t3))));
      };
    }
  };
  var killFiber = function(e3) {
    return function(v3) {
      return bind1(liftEffect2(v3.isSuspended))(function(suspended) {
        if (suspended) {
          return liftEffect2($$void3(v3.kill(e3, $$const(pure2(unit)))));
        }
        ;
        return makeAff(function(k3) {
          return map6(effectCanceler)(v3.kill(e3, k3));
        });
      });
    };
  };
  var monadThrowAff = {
    throwError: _throwError,
    Monad0: function() {
      return monadAff;
    }
  };
  var monadErrorAff = {
    catchError: _catchError,
    MonadThrow0: function() {
      return monadThrowAff;
    }
  };
  var $$try2 = /* @__PURE__ */ $$try(monadErrorAff);
  var runAff = function(k3) {
    return function(aff) {
      return launchAff(bindFlipped3(function($83) {
        return liftEffect2(k3($83));
      })($$try2(aff)));
    };
  };
  var runAff_ = function(k3) {
    return function(aff) {
      return $$void3(runAff(k3)(aff));
    };
  };
  var monadRecAff = {
    tailRecM: function(k3) {
      var go2 = function(a4) {
        return bind1(k3(a4))(function(res) {
          if (res instanceof Done) {
            return pure22(res.value0);
          }
          ;
          if (res instanceof Loop) {
            return go2(res.value0);
          }
          ;
          throw new Error("Failed pattern match at Effect.Aff (line 104, column 7 - line 106, column 23): " + [res.constructor.name]);
        });
      };
      return go2;
    },
    Monad0: function() {
      return monadAff;
    }
  };
  var nonCanceler = /* @__PURE__ */ $$const(/* @__PURE__ */ pure22(unit));
  var monoidCanceler = {
    mempty: nonCanceler,
    Semigroup0: function() {
      return semigroupCanceler;
    }
  };

  // output/Foreign/foreign.js
  function typeOf(value14) {
    return typeof value14;
  }
  function tagOf(value14) {
    return Object.prototype.toString.call(value14).slice(8, -1);
  }
  var isArray = Array.isArray || function(value14) {
    return Object.prototype.toString.call(value14) === "[object Array]";
  };

  // output/Data.Int/foreign.js
  var fromNumberImpl = function(just) {
    return function(nothing) {
      return function(n3) {
        return (n3 | 0) === n3 ? just(n3) : nothing;
      };
    };
  };

  // output/Data.Int/index.js
  var fromNumber = /* @__PURE__ */ function() {
    return fromNumberImpl(Just.create)(Nothing.value);
  }();

  // output/Data.List/index.js
  var reverse = /* @__PURE__ */ function() {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v3, v1) {
          if (v1 instanceof Nil) {
            $tco_done = true;
            return v3;
          }
          ;
          if (v1 instanceof Cons) {
            $tco_var_v = new Cons(v1.value0, v3);
            $copy_v1 = v1.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [v3.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return go2(Nil.value);
  }();
  var $$null = function(v3) {
    if (v3 instanceof Nil) {
      return true;
    }
    ;
    return false;
  };

  // output/Data.List.NonEmpty/index.js
  var singleton3 = /* @__PURE__ */ function() {
    var $200 = singleton2(plusList);
    return function($201) {
      return NonEmptyList($200($201));
    };
  }();
  var cons = function(y2) {
    return function(v3) {
      return new NonEmpty(y2, new Cons(v3.value0, v3.value1));
    };
  };

  // output/Data.String.CodeUnits/foreign.js
  var singleton4 = function(c3) {
    return c3;
  };

  // output/Foreign/index.js
  var TypeMismatch = /* @__PURE__ */ function() {
    function TypeMismatch3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TypeMismatch3.create = function(value0) {
      return function(value1) {
        return new TypeMismatch3(value0, value1);
      };
    };
    return TypeMismatch3;
  }();
  var unsafeFromForeign = unsafeCoerce2;
  var fail = function(dictMonad) {
    var $153 = throwError(monadThrowExceptT(dictMonad));
    return function($154) {
      return $153(singleton3($154));
    };
  };
  var unsafeReadTagged = function(dictMonad) {
    var pure14 = pure(applicativeExceptT(dictMonad));
    var fail1 = fail(dictMonad);
    return function(tag) {
      return function(value14) {
        if (tagOf(value14) === tag) {
          return pure14(unsafeFromForeign(value14));
        }
        ;
        if (otherwise) {
          return fail1(new TypeMismatch(tag, tagOf(value14)));
        }
        ;
        throw new Error("Failed pattern match at Foreign (line 123, column 1 - line 123, column 104): " + [tag.constructor.name, value14.constructor.name]);
      };
    };
  };
  var readString = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("String");
  };

  // output/Control.Promise/index.js
  var voidRight2 = /* @__PURE__ */ voidRight(functorEffect);
  var mempty2 = /* @__PURE__ */ mempty(monoidCanceler);
  var identity8 = /* @__PURE__ */ identity(categoryFn);
  var alt2 = /* @__PURE__ */ alt(/* @__PURE__ */ altExceptT(semigroupNonEmptyList)(monadIdentity));
  var unsafeReadTagged2 = /* @__PURE__ */ unsafeReadTagged(monadIdentity);
  var map7 = /* @__PURE__ */ map(/* @__PURE__ */ functorExceptT(functorIdentity));
  var readString2 = /* @__PURE__ */ readString(monadIdentity);
  var bind2 = /* @__PURE__ */ bind(bindAff);
  var liftEffect3 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var toAff$prime = function(customCoerce) {
    return function(p4) {
      return makeAff(function(cb) {
        return voidRight2(mempty2)(thenImpl(p4)(function($14) {
          return cb(Left.create(customCoerce($14)))();
        })(function($15) {
          return cb(Right.create($15))();
        }));
      });
    };
  };
  var coerce3 = function(fn) {
    return either(function(v3) {
      return error("Promise failed, couldn't extract JS Error or String");
    })(identity8)(runExcept(alt2(unsafeReadTagged2("Error")(fn))(map7(error)(readString2(fn)))));
  };
  var toAff = /* @__PURE__ */ toAff$prime(coerce3);
  var toAffE = function(f3) {
    return bind2(liftEffect3(f3))(toAff);
  };

  // output/Data.Argonaut.Core/foreign.js
  function stringify(j3) {
    return JSON.stringify(j3);
  }
  function _caseJson(isNull3, isBool, isNum, isStr, isArr, isObj, j3) {
    if (j3 == null) return isNull3();
    else if (typeof j3 === "boolean") return isBool(j3);
    else if (typeof j3 === "number") return isNum(j3);
    else if (typeof j3 === "string") return isStr(j3);
    else if (Object.prototype.toString.call(j3) === "[object Array]")
      return isArr(j3);
    else return isObj(j3);
  }

  // output/Foreign.Object/foreign.js
  function _copyST(m3) {
    return function() {
      var r3 = {};
      for (var k3 in m3) {
        if (hasOwnProperty.call(m3, k3)) {
          r3[k3] = m3[k3];
        }
      }
      return r3;
    };
  }
  var empty2 = {};
  function runST(f3) {
    return f3();
  }
  function _lookup(no, yes, k3, m3) {
    return k3 in m3 ? yes(m3[k3]) : no;
  }
  function toArrayWithKey(f3) {
    return function(m3) {
      var r3 = [];
      for (var k3 in m3) {
        if (hasOwnProperty.call(m3, k3)) {
          r3.push(f3(k3)(m3[k3]));
        }
      }
      return r3;
    };
  }
  var keys = Object.keys || toArrayWithKey(function(k3) {
    return function() {
      return k3;
    };
  });

  // output/Data.Array/foreign.js
  var rangeImpl = function(start2, end) {
    var step3 = start2 > end ? -1 : 1;
    var result = new Array(step3 * (end - start2) + 1);
    var i4 = start2, n3 = 0;
    while (i4 !== end) {
      result[n3++] = i4;
      i4 += step3;
    }
    result[n3] = i4;
    return result;
  };
  var replicateFill = function(count, value14) {
    if (count < 1) {
      return [];
    }
    var result = new Array(count);
    return result.fill(value14);
  };
  var replicatePolyfill = function(count, value14) {
    var result = [];
    var n3 = 0;
    for (var i4 = 0; i4 < count; i4++) {
      result[n3++] = value14;
    }
    return result;
  };
  var replicateImpl = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
  var length3 = function(xs) {
    return xs.length;
  };
  var findIndexImpl = function(just, nothing, f3, xs) {
    for (var i4 = 0, l3 = xs.length; i4 < l3; i4++) {
      if (f3(xs[i4])) return just(i4);
    }
    return nothing;
  };
  var _deleteAt = function(just, nothing, i4, l3) {
    if (i4 < 0 || i4 >= l3.length) return nothing;
    var l1 = l3.slice();
    l1.splice(i4, 1);
    return just(l1);
  };

  // output/Data.Function.Uncurried/foreign.js
  var runFn2 = function(fn) {
    return function(a4) {
      return function(b4) {
        return fn(a4, b4);
      };
    };
  };
  var runFn4 = function(fn) {
    return function(a4) {
      return function(b4) {
        return function(c3) {
          return function(d3) {
            return fn(a4, b4, c3, d3);
          };
        };
      };
    };
  };

  // output/Data.Array/index.js
  var intercalate1 = /* @__PURE__ */ intercalate(foldableArray);
  var fromJust2 = /* @__PURE__ */ fromJust();
  var fold12 = /* @__PURE__ */ fold(foldableArray);
  var append2 = /* @__PURE__ */ append(semigroupArray);
  var replicate = /* @__PURE__ */ runFn2(replicateImpl);
  var range2 = /* @__PURE__ */ runFn2(rangeImpl);
  var intercalate2 = function(dictMonoid) {
    return intercalate1(dictMonoid);
  };
  var fold2 = function(dictMonoid) {
    return fold12(dictMonoid);
  };
  var findIndex2 = /* @__PURE__ */ function() {
    return runFn4(findIndexImpl)(Just.create)(Nothing.value);
  }();
  var deleteAt = /* @__PURE__ */ function() {
    return runFn4(_deleteAt)(Just.create)(Nothing.value);
  }();
  var deleteBy = function(v3) {
    return function(v1) {
      return function(v22) {
        if (v22.length === 0) {
          return [];
        }
        ;
        return maybe(v22)(function(i4) {
          return fromJust2(deleteAt(i4)(v22));
        })(findIndex2(v3(v1))(v22));
      };
    };
  };
  var cons2 = function(x2) {
    return function(xs) {
      return append2([x2])(xs);
    };
  };

  // output/Foreign.Object.ST/foreign.js
  var newImpl = function() {
    return {};
  };
  function poke2(k3) {
    return function(v3) {
      return function(m3) {
        return function() {
          m3[k3] = v3;
          return m3;
        };
      };
    };
  }

  // output/Foreign.Object/index.js
  var thawST = _copyST;
  var mutate = function(f3) {
    return function(m3) {
      return runST(function __do2() {
        var s3 = thawST(m3)();
        f3(s3)();
        return s3;
      });
    };
  };
  var lookup = /* @__PURE__ */ function() {
    return runFn4(_lookup)(Nothing.value)(Just.create);
  }();
  var insert = function(k3) {
    return function(v3) {
      return mutate(poke2(k3)(v3));
    };
  };

  // output/Data.Argonaut.Core/index.js
  var verbJsonType = function(def) {
    return function(f3) {
      return function(g3) {
        return g3(def)(f3);
      };
    };
  };
  var toJsonType = /* @__PURE__ */ function() {
    return verbJsonType(Nothing.value)(Just.create);
  }();
  var caseJsonString = function(d3) {
    return function(f3) {
      return function(j3) {
        return _caseJson($$const(d3), $$const(d3), $$const(d3), f3, $$const(d3), $$const(d3), j3);
      };
    };
  };
  var caseJsonObject = function(d3) {
    return function(f3) {
      return function(j3) {
        return _caseJson($$const(d3), $$const(d3), $$const(d3), $$const(d3), $$const(d3), f3, j3);
      };
    };
  };
  var toObject = /* @__PURE__ */ toJsonType(caseJsonObject);
  var caseJsonNumber = function(d3) {
    return function(f3) {
      return function(j3) {
        return _caseJson($$const(d3), $$const(d3), f3, $$const(d3), $$const(d3), $$const(d3), j3);
      };
    };
  };
  var caseJsonArray = function(d3) {
    return function(f3) {
      return function(j3) {
        return _caseJson($$const(d3), $$const(d3), $$const(d3), $$const(d3), f3, $$const(d3), j3);
      };
    };
  };
  var toArray = /* @__PURE__ */ toJsonType(caseJsonArray);

  // output/Data.Argonaut.Decode.Error/index.js
  var show1 = /* @__PURE__ */ show(showInt);
  var TypeMismatch2 = /* @__PURE__ */ function() {
    function TypeMismatch3(value0) {
      this.value0 = value0;
    }
    ;
    TypeMismatch3.create = function(value0) {
      return new TypeMismatch3(value0);
    };
    return TypeMismatch3;
  }();
  var UnexpectedValue = /* @__PURE__ */ function() {
    function UnexpectedValue2(value0) {
      this.value0 = value0;
    }
    ;
    UnexpectedValue2.create = function(value0) {
      return new UnexpectedValue2(value0);
    };
    return UnexpectedValue2;
  }();
  var AtIndex = /* @__PURE__ */ function() {
    function AtIndex2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    AtIndex2.create = function(value0) {
      return function(value1) {
        return new AtIndex2(value0, value1);
      };
    };
    return AtIndex2;
  }();
  var AtKey = /* @__PURE__ */ function() {
    function AtKey2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    AtKey2.create = function(value0) {
      return function(value1) {
        return new AtKey2(value0, value1);
      };
    };
    return AtKey2;
  }();
  var Named = /* @__PURE__ */ function() {
    function Named2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Named2.create = function(value0) {
      return function(value1) {
        return new Named2(value0, value1);
      };
    };
    return Named2;
  }();
  var MissingValue = /* @__PURE__ */ function() {
    function MissingValue2() {
    }
    ;
    MissingValue2.value = new MissingValue2();
    return MissingValue2;
  }();
  var printJsonDecodeError = function(err) {
    var go2 = function(v3) {
      if (v3 instanceof TypeMismatch2) {
        return "  Expected value of type '" + (v3.value0 + "'.");
      }
      ;
      if (v3 instanceof UnexpectedValue) {
        return "  Unexpected value " + (stringify(v3.value0) + ".");
      }
      ;
      if (v3 instanceof AtIndex) {
        return "  At array index " + (show1(v3.value0) + (":\n" + go2(v3.value1)));
      }
      ;
      if (v3 instanceof AtKey) {
        return "  At object key '" + (v3.value0 + ("':\n" + go2(v3.value1)));
      }
      ;
      if (v3 instanceof Named) {
        return "  Under '" + (v3.value0 + ("':\n" + go2(v3.value1)));
      }
      ;
      if (v3 instanceof MissingValue) {
        return "  No value was found.";
      }
      ;
      throw new Error("Failed pattern match at Data.Argonaut.Decode.Error (line 37, column 8 - line 43, column 44): " + [v3.constructor.name]);
    };
    return "An error occurred while decoding a JSON value:\n" + go2(err);
  };

  // output/Data.Map.Internal/index.js
  var $runtime_lazy3 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2) return val2;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var map8 = /* @__PURE__ */ map(functorMaybe);
  var Leaf = /* @__PURE__ */ function() {
    function Leaf2() {
    }
    ;
    Leaf2.value = new Leaf2();
    return Leaf2;
  }();
  var Node = /* @__PURE__ */ function() {
    function Node2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    Node2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new Node2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return Node2;
  }();
  var Split = /* @__PURE__ */ function() {
    function Split2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Split2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Split2(value0, value1, value22);
        };
      };
    };
    return Split2;
  }();
  var SplitLast = /* @__PURE__ */ function() {
    function SplitLast2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    SplitLast2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new SplitLast2(value0, value1, value22);
        };
      };
    };
    return SplitLast2;
  }();
  var unsafeNode = function(k3, v3, l3, r3) {
    if (l3 instanceof Leaf) {
      if (r3 instanceof Leaf) {
        return new Node(1, 1, k3, v3, l3, r3);
      }
      ;
      if (r3 instanceof Node) {
        return new Node(1 + r3.value0 | 0, 1 + r3.value1 | 0, k3, v3, l3, r3);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 702, column 5 - line 706, column 39): " + [r3.constructor.name]);
    }
    ;
    if (l3 instanceof Node) {
      if (r3 instanceof Leaf) {
        return new Node(1 + l3.value0 | 0, 1 + l3.value1 | 0, k3, v3, l3, r3);
      }
      ;
      if (r3 instanceof Node) {
        return new Node(1 + function() {
          var $280 = l3.value0 > r3.value0;
          if ($280) {
            return l3.value0;
          }
          ;
          return r3.value0;
        }() | 0, (1 + l3.value1 | 0) + r3.value1 | 0, k3, v3, l3, r3);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 708, column 5 - line 712, column 68): " + [r3.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 700, column 32 - line 712, column 68): " + [l3.constructor.name]);
  };
  var singleton7 = function(k3) {
    return function(v3) {
      return new Node(1, 1, k3, v3, Leaf.value, Leaf.value);
    };
  };
  var unsafeBalancedNode = /* @__PURE__ */ function() {
    var height8 = function(v3) {
      if (v3 instanceof Leaf) {
        return 0;
      }
      ;
      if (v3 instanceof Node) {
        return v3.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 757, column 12 - line 759, column 26): " + [v3.constructor.name]);
    };
    var rotateLeft = function(k3, v3, l3, rk, rv, rl, rr) {
      if (rl instanceof Node && rl.value0 > height8(rr)) {
        return unsafeNode(rl.value2, rl.value3, unsafeNode(k3, v3, l3, rl.value4), unsafeNode(rk, rv, rl.value5, rr));
      }
      ;
      return unsafeNode(rk, rv, unsafeNode(k3, v3, l3, rl), rr);
    };
    var rotateRight = function(k3, v3, lk, lv, ll, lr, r3) {
      if (lr instanceof Node && height8(ll) <= lr.value0) {
        return unsafeNode(lr.value2, lr.value3, unsafeNode(lk, lv, ll, lr.value4), unsafeNode(k3, v3, lr.value5, r3));
      }
      ;
      return unsafeNode(lk, lv, ll, unsafeNode(k3, v3, lr, r3));
    };
    return function(k3, v3, l3, r3) {
      if (l3 instanceof Leaf) {
        if (r3 instanceof Leaf) {
          return singleton7(k3)(v3);
        }
        ;
        if (r3 instanceof Node && r3.value0 > 1) {
          return rotateLeft(k3, v3, l3, r3.value2, r3.value3, r3.value4, r3.value5);
        }
        ;
        return unsafeNode(k3, v3, l3, r3);
      }
      ;
      if (l3 instanceof Node) {
        if (r3 instanceof Node) {
          if (r3.value0 > (l3.value0 + 1 | 0)) {
            return rotateLeft(k3, v3, l3, r3.value2, r3.value3, r3.value4, r3.value5);
          }
          ;
          if (l3.value0 > (r3.value0 + 1 | 0)) {
            return rotateRight(k3, v3, l3.value2, l3.value3, l3.value4, l3.value5, r3);
          }
          ;
        }
        ;
        if (r3 instanceof Leaf && l3.value0 > 1) {
          return rotateRight(k3, v3, l3.value2, l3.value3, l3.value4, l3.value5, r3);
        }
        ;
        return unsafeNode(k3, v3, l3, r3);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 717, column 40 - line 738, column 34): " + [l3.constructor.name]);
    };
  }();
  var $lazy_unsafeSplit = /* @__PURE__ */ $runtime_lazy3("unsafeSplit", "Data.Map.Internal", function() {
    return function(comp, k3, m3) {
      if (m3 instanceof Leaf) {
        return new Split(Nothing.value, Leaf.value, Leaf.value);
      }
      ;
      if (m3 instanceof Node) {
        var v3 = comp(k3)(m3.value2);
        if (v3 instanceof LT) {
          var v1 = $lazy_unsafeSplit(793)(comp, k3, m3.value4);
          return new Split(v1.value0, v1.value1, unsafeBalancedNode(m3.value2, m3.value3, v1.value2, m3.value5));
        }
        ;
        if (v3 instanceof GT) {
          var v1 = $lazy_unsafeSplit(796)(comp, k3, m3.value5);
          return new Split(v1.value0, unsafeBalancedNode(m3.value2, m3.value3, m3.value4, v1.value1), v1.value2);
        }
        ;
        if (v3 instanceof EQ) {
          return new Split(new Just(m3.value3), m3.value4, m3.value5);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 791, column 5 - line 799, column 30): " + [v3.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 787, column 34 - line 799, column 30): " + [m3.constructor.name]);
    };
  });
  var unsafeSplit = /* @__PURE__ */ $lazy_unsafeSplit(786);
  var $lazy_unsafeSplitLast = /* @__PURE__ */ $runtime_lazy3("unsafeSplitLast", "Data.Map.Internal", function() {
    return function(k3, v3, l3, r3) {
      if (r3 instanceof Leaf) {
        return new SplitLast(k3, v3, l3);
      }
      ;
      if (r3 instanceof Node) {
        var v1 = $lazy_unsafeSplitLast(779)(r3.value2, r3.value3, r3.value4, r3.value5);
        return new SplitLast(v1.value0, v1.value1, unsafeBalancedNode(k3, v3, l3, v1.value2));
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 776, column 37 - line 780, column 57): " + [r3.constructor.name]);
    };
  });
  var unsafeSplitLast = /* @__PURE__ */ $lazy_unsafeSplitLast(775);
  var unsafeJoinNodes = function(v3, v1) {
    if (v3 instanceof Leaf) {
      return v1;
    }
    ;
    if (v3 instanceof Node) {
      var v22 = unsafeSplitLast(v3.value2, v3.value3, v3.value4, v3.value5);
      return unsafeBalancedNode(v22.value0, v22.value1, v22.value2, v1);
    }
    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 764, column 25 - line 768, column 38): " + [v3.constructor.name, v1.constructor.name]);
  };
  var pop = function(dictOrd) {
    var compare2 = compare(dictOrd);
    return function(k3) {
      return function(m3) {
        var v3 = unsafeSplit(compare2, k3, m3);
        return map8(function(a4) {
          return new Tuple(a4, unsafeJoinNodes(v3.value1, v3.value2));
        })(v3.value0);
      };
    };
  };
  var lookup2 = function(dictOrd) {
    var compare2 = compare(dictOrd);
    return function(k3) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v3) {
          if (v3 instanceof Leaf) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v3 instanceof Node) {
            var v1 = compare2(k3)(v3.value2);
            if (v1 instanceof LT) {
              $copy_v = v3.value4;
              return;
            }
            ;
            if (v1 instanceof GT) {
              $copy_v = v3.value5;
              return;
            }
            ;
            if (v1 instanceof EQ) {
              $tco_done = true;
              return new Just(v3.value3);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 283, column 7 - line 286, column 22): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 280, column 8 - line 286, column 22): " + [v3.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return go2;
    };
  };
  var insert3 = function(dictOrd) {
    var compare2 = compare(dictOrd);
    return function(k3) {
      return function(v3) {
        var go2 = function(v1) {
          if (v1 instanceof Leaf) {
            return singleton7(k3)(v3);
          }
          ;
          if (v1 instanceof Node) {
            var v22 = compare2(k3)(v1.value2);
            if (v22 instanceof LT) {
              return unsafeBalancedNode(v1.value2, v1.value3, go2(v1.value4), v1.value5);
            }
            ;
            if (v22 instanceof GT) {
              return unsafeBalancedNode(v1.value2, v1.value3, v1.value4, go2(v1.value5));
            }
            ;
            if (v22 instanceof EQ) {
              return new Node(v1.value0, v1.value1, k3, v3, v1.value4, v1.value5);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 471, column 7 - line 474, column 35): " + [v22.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 468, column 8 - line 474, column 35): " + [v1.constructor.name]);
        };
        return go2;
      };
    };
  };
  var foldableMap = {
    foldr: function(f3) {
      return function(z2) {
        var $lazy_go = $runtime_lazy3("go", "Data.Map.Internal", function() {
          return function(m$prime, z$prime) {
            if (m$prime instanceof Leaf) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(172)(m$prime.value4, f3(m$prime.value3)($lazy_go(172)(m$prime.value5, z$prime)));
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 169, column 26 - line 172, column 43): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(169);
        return function(m3) {
          return go2(m3, z2);
        };
      };
    },
    foldl: function(f3) {
      return function(z2) {
        var $lazy_go = $runtime_lazy3("go", "Data.Map.Internal", function() {
          return function(z$prime, m$prime) {
            if (m$prime instanceof Leaf) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(178)(f3($lazy_go(178)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 175, column 26 - line 178, column 43): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(175);
        return function(m3) {
          return go2(z2, m3);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty3 = mempty(dictMonoid);
      var append13 = append(dictMonoid.Semigroup0());
      return function(f3) {
        var go2 = function(v3) {
          if (v3 instanceof Leaf) {
            return mempty3;
          }
          ;
          if (v3 instanceof Node) {
            return append13(go2(v3.value4))(append13(f3(v3.value3))(go2(v3.value5)));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 181, column 10 - line 184, column 28): " + [v3.constructor.name]);
        };
        return go2;
      };
    }
  };
  var empty3 = /* @__PURE__ */ function() {
    return Leaf.value;
  }();
  var $$delete2 = function(dictOrd) {
    var compare2 = compare(dictOrd);
    return function(k3) {
      var go2 = function(v3) {
        if (v3 instanceof Leaf) {
          return Leaf.value;
        }
        ;
        if (v3 instanceof Node) {
          var v1 = compare2(k3)(v3.value2);
          if (v1 instanceof LT) {
            return unsafeBalancedNode(v3.value2, v3.value3, go2(v3.value4), v3.value5);
          }
          ;
          if (v1 instanceof GT) {
            return unsafeBalancedNode(v3.value2, v3.value3, v3.value4, go2(v3.value5));
          }
          ;
          if (v1 instanceof EQ) {
            return unsafeJoinNodes(v3.value4, v3.value5);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 498, column 7 - line 501, column 43): " + [v1.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 8 - line 501, column 43): " + [v3.constructor.name]);
      };
      return go2;
    };
  };
  var alter = function(dictOrd) {
    var compare2 = compare(dictOrd);
    return function(f3) {
      return function(k3) {
        return function(m3) {
          var v3 = unsafeSplit(compare2, k3, m3);
          var v22 = f3(v3.value0);
          if (v22 instanceof Nothing) {
            return unsafeJoinNodes(v3.value1, v3.value2);
          }
          ;
          if (v22 instanceof Just) {
            return unsafeBalancedNode(k3, v22.value0, v3.value1, v3.value2);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 514, column 3 - line 518, column 41): " + [v22.constructor.name]);
        };
      };
    };
  };

  // output/Data.String.CodePoints/foreign.js
  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";
  var _fromCodePointArray = function(singleton9) {
    return hasFromCodePoint ? function(cps) {
      if (cps.length < 1e4) {
        return String.fromCodePoint.apply(String, cps);
      }
      return cps.map(singleton9).join("");
    } : function(cps) {
      return cps.map(singleton9).join("");
    };
  };

  // output/Data.Enum/foreign.js
  function toCharCode(c3) {
    return c3.charCodeAt(0);
  }
  function fromCharCode(c3) {
    return String.fromCharCode(c3);
  }

  // output/Data.Enum/index.js
  var bottom1 = /* @__PURE__ */ bottom(boundedChar);
  var top1 = /* @__PURE__ */ top(boundedChar);
  var toEnum = function(dict) {
    return dict.toEnum;
  };
  var fromEnum = function(dict) {
    return dict.fromEnum;
  };
  var toEnumWithDefaults = function(dictBoundedEnum) {
    var toEnum1 = toEnum(dictBoundedEnum);
    var fromEnum1 = fromEnum(dictBoundedEnum);
    var bottom2 = bottom(dictBoundedEnum.Bounded0());
    return function(low2) {
      return function(high2) {
        return function(x2) {
          var v3 = toEnum1(x2);
          if (v3 instanceof Just) {
            return v3.value0;
          }
          ;
          if (v3 instanceof Nothing) {
            var $140 = x2 < fromEnum1(bottom2);
            if ($140) {
              return low2;
            }
            ;
            return high2;
          }
          ;
          throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v3.constructor.name]);
        };
      };
    };
  };
  var defaultSucc = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a4) {
        return toEnum$prime(fromEnum$prime(a4) + 1 | 0);
      };
    };
  };
  var defaultPred = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a4) {
        return toEnum$prime(fromEnum$prime(a4) - 1 | 0);
      };
    };
  };
  var charToEnum = function(v3) {
    if (v3 >= toCharCode(bottom1) && v3 <= toCharCode(top1)) {
      return new Just(fromCharCode(v3));
    }
    ;
    return Nothing.value;
  };
  var enumChar = {
    succ: /* @__PURE__ */ defaultSucc(charToEnum)(toCharCode),
    pred: /* @__PURE__ */ defaultPred(charToEnum)(toCharCode),
    Ord0: function() {
      return ordChar;
    }
  };
  var boundedEnumChar = /* @__PURE__ */ function() {
    return {
      cardinality: toCharCode(top1) - toCharCode(bottom1) | 0,
      toEnum: charToEnum,
      fromEnum: toCharCode,
      Bounded0: function() {
        return boundedChar;
      },
      Enum1: function() {
        return enumChar;
      }
    };
  }();

  // output/Data.String.Common/foreign.js
  var split = function(sep) {
    return function(s3) {
      return s3.split(sep);
    };
  };
  var joinWith = function(s3) {
    return function(xs) {
      return xs.join(s3);
    };
  };

  // output/Data.String.CodePoints/index.js
  var fromEnum2 = /* @__PURE__ */ fromEnum(boundedEnumChar);
  var div2 = /* @__PURE__ */ div(euclideanRingInt);
  var mod2 = /* @__PURE__ */ mod(euclideanRingInt);
  var CodePoint = function(x2) {
    return x2;
  };
  var fromCharCode2 = /* @__PURE__ */ function() {
    var $75 = toEnumWithDefaults(boundedEnumChar)(bottom(boundedChar))(top(boundedChar));
    return function($76) {
      return singleton4($75($76));
    };
  }();
  var singletonFallback = function(v3) {
    if (v3 <= 65535) {
      return fromCharCode2(v3);
    }
    ;
    var lead = div2(v3 - 65536 | 0)(1024) + 55296 | 0;
    var trail = mod2(v3 - 65536 | 0)(1024) + 56320 | 0;
    return fromCharCode2(lead) + fromCharCode2(trail);
  };
  var fromCodePointArray = /* @__PURE__ */ _fromCodePointArray(singletonFallback);
  var codePointFromChar = function($77) {
    return CodePoint(fromEnum2($77));
  };

  // output/Data.Argonaut.Decode.Decoders/index.js
  var lmap2 = /* @__PURE__ */ lmap(bifunctorEither);
  var composeKleisliFlipped2 = /* @__PURE__ */ composeKleisliFlipped(bindEither);
  var traverseWithIndex2 = /* @__PURE__ */ traverseWithIndex(traversableWithIndexArray)(applicativeEither);
  var decodeString = /* @__PURE__ */ function() {
    return caseJsonString(new Left(new TypeMismatch2("String")))(Right.create);
  }();
  var decodeNumber = /* @__PURE__ */ function() {
    return caseJsonNumber(new Left(new TypeMismatch2("Number")))(Right.create);
  }();
  var decodeJArray = /* @__PURE__ */ function() {
    var $52 = note(new TypeMismatch2("Array"));
    return function($53) {
      return $52(toArray($53));
    };
  }();
  var decodeInt = /* @__PURE__ */ composeKleisliFlipped2(/* @__PURE__ */ function() {
    var $84 = note(new TypeMismatch2("Integer"));
    return function($85) {
      return $84(fromNumber($85));
    };
  }())(decodeNumber);
  var decodeArray = function(decoder) {
    return composeKleisliFlipped2(function() {
      var $89 = lmap2(Named.create("Array"));
      var $90 = traverseWithIndex2(function(i4) {
        var $92 = lmap2(AtIndex.create(i4));
        return function($93) {
          return $92(decoder($93));
        };
      });
      return function($91) {
        return $89($90($91));
      };
    }())(decodeJArray);
  };

  // output/Record/index.js
  var insert4 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function() {
        return function(l3) {
          return function(a4) {
            return function(r3) {
              return unsafeSet(reflectSymbol2(l3))(a4)(r3);
            };
          };
        };
      };
    };
  };
  var get3 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function(l3) {
        return function(r3) {
          return unsafeGet(reflectSymbol2(l3))(r3);
        };
      };
    };
  };
  var $$delete3 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function() {
        return function(l3) {
          return function(r3) {
            return unsafeDelete(reflectSymbol2(l3))(r3);
          };
        };
      };
    };
  };

  // output/Data.Argonaut.Decode.Class/index.js
  var bind3 = /* @__PURE__ */ bind(bindEither);
  var lmap3 = /* @__PURE__ */ lmap(bifunctorEither);
  var map9 = /* @__PURE__ */ map(functorMaybe);
  var gDecodeJsonNil = {
    gDecodeJson: function(v3) {
      return function(v1) {
        return new Right({});
      };
    }
  };
  var gDecodeJson = function(dict) {
    return dict.gDecodeJson;
  };
  var decodeRecord = function(dictGDecodeJson) {
    var gDecodeJson1 = gDecodeJson(dictGDecodeJson);
    return function() {
      return {
        decodeJson: function(json) {
          var v3 = toObject(json);
          if (v3 instanceof Just) {
            return gDecodeJson1(v3.value0)($$Proxy.value);
          }
          ;
          if (v3 instanceof Nothing) {
            return new Left(new TypeMismatch2("Object"));
          }
          ;
          throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 103, column 5 - line 105, column 46): " + [v3.constructor.name]);
        }
      };
    };
  };
  var decodeJsonString = {
    decodeJson: decodeString
  };
  var decodeJsonInt = {
    decodeJson: decodeInt
  };
  var decodeJsonField = function(dict) {
    return dict.decodeJsonField;
  };
  var gDecodeJsonCons = function(dictDecodeJsonField) {
    var decodeJsonField1 = decodeJsonField(dictDecodeJsonField);
    return function(dictGDecodeJson) {
      var gDecodeJson1 = gDecodeJson(dictGDecodeJson);
      return function(dictIsSymbol) {
        var reflectSymbol2 = reflectSymbol(dictIsSymbol);
        var insert8 = insert4(dictIsSymbol)()();
        return function() {
          return function() {
            return {
              gDecodeJson: function(object2) {
                return function(v3) {
                  var fieldName = reflectSymbol2($$Proxy.value);
                  var fieldValue = lookup(fieldName)(object2);
                  var v1 = decodeJsonField1(fieldValue);
                  if (v1 instanceof Just) {
                    return bind3(lmap3(AtKey.create(fieldName))(v1.value0))(function(val2) {
                      return bind3(gDecodeJson1(object2)($$Proxy.value))(function(rest) {
                        return new Right(insert8($$Proxy.value)(val2)(rest));
                      });
                    });
                  }
                  ;
                  if (v1 instanceof Nothing) {
                    return new Left(new AtKey(fieldName, MissingValue.value));
                  }
                  ;
                  throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 127, column 5 - line 134, column 44): " + [v1.constructor.name]);
                };
              }
            };
          };
        };
      };
    };
  };
  var decodeJson = function(dict) {
    return dict.decodeJson;
  };
  var decodeFieldId = function(dictDecodeJson) {
    var decodeJson1 = decodeJson(dictDecodeJson);
    return {
      decodeJsonField: function(j3) {
        return map9(decodeJson1)(j3);
      }
    };
  };
  var decodeArray2 = function(dictDecodeJson) {
    return {
      decodeJson: decodeArray(decodeJson(dictDecodeJson))
    };
  };

  // output/AI/index.js
  var chat = function(client) {
    return function(request3) {
      return toAffE(chat_({
        client,
        request: request3
      }));
    };
  };

  // output/Data.Variant/index.js
  var onMatch = function() {
    return function() {
      return function() {
        return function(r3) {
          return function(k3) {
            return function(v3) {
              if (unsafeHas(v3.type)(r3)) {
                return unsafeGet(v3.type)(r3)(v3.value);
              }
              ;
              return k3(v3);
            };
          };
        };
      };
    };
  };
  var onMatch1 = /* @__PURE__ */ onMatch()()();
  var inj = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(p4) {
        return function(value14) {
          return {
            type: reflectSymbol2(p4),
            value: value14
          };
        };
      };
    };
  };
  var case_ = function(r3) {
    return unsafeCrashWith("Data.Variant: pattern match failure [" + (r3.type + "]"));
  };
  var match = function() {
    return function() {
      return function() {
        return function(r3) {
          return onMatch1(r3)(case_);
        };
      };
    };
  };

  // output/Common/index.js
  var inj2 = /* @__PURE__ */ inj();
  var Action = function(x2) {
    return x2;
  };
  var actionsSpec_mapNil = {
    toTools_fromActionsSpec_map: function(v3) {
      return function(v1) {
        return [];
      };
    },
    fromToolCall_toAction_map: function(dictMonadError) {
      var throwError5 = throwError(dictMonadError.MonadThrow0());
      return function(v3) {
        return function(_actionsSpec) {
          return function(v1) {
            return throwError5(v1.name);
          };
        };
      };
    }
  };
  var actionParamsSpec_mapRowNi = {
    toToolParameterDefinitionsValues_fromActionParamsSpec_map: function(v3) {
      return function(_actionParamsSpec) {
        return empty2;
      };
    }
  };
  var actionParamTypeString = {
    toToolParamType: function(v3) {
      return "str";
    }
  };
  var actionParamTypeInt = {
    toToolParamType: function(v3) {
      return "int";
    }
  };
  var toTools_fromActionsSpec_map = function(dict) {
    return dict.toTools_fromActionsSpec_map;
  };
  var toTools_fromActionsSpec = function(dict) {
    return dict.toTools_fromActionsSpec;
  };
  var toToolParameterDefinitionsValues_fromActionParamsSpec_map = function(dict) {
    return dict.toToolParameterDefinitionsValues_fromActionParamsSpec_map;
  };
  var actionParamsSpec = function() {
    return function(dictActionParamsSpec_map) {
      var toToolParameterDefinitionsValues_fromActionParamsSpec_map1 = toToolParameterDefinitionsValues_fromActionParamsSpec_map(dictActionParamsSpec_map);
      return function(dictDecodeJson) {
        var decodeJson2 = decodeJson(dictDecodeJson);
        return {
          toToolParameterDefinitionsValues_fromActionParamsSpec: toToolParameterDefinitionsValues_fromActionParamsSpec_map1($$Proxy.value),
          fromToolCallParameters_toActionParams: function(dictMonadError) {
            var MonadThrow0 = dictMonadError.MonadThrow0();
            var throwError5 = throwError(MonadThrow0);
            var pure11 = pure(MonadThrow0.Monad0().Applicative0());
            return function(_actionParamsSpec) {
              var $132 = either(function($134) {
                return throwError5(printJsonDecodeError($134));
              })(pure11);
              return function($133) {
                return $132(decodeJson2($133));
              };
            };
          }
        };
      };
    };
  };
  var toToolParameterDefinitionsValues_fromActionParamsSpec = function(dict) {
    return dict.toToolParameterDefinitionsValues_fromActionParamsSpec;
  };
  var toToolParamType = function(dict) {
    return dict.toToolParamType;
  };
  var actionParamTypeArray = function(dictActionParamType) {
    var toToolParamType1 = toToolParamType(dictActionParamType);
    return {
      toToolParamType: function(v3) {
        return "list[" + (toToolParamType1($$Proxy.value) + "]");
      }
    };
  };
  var actionParamsSpec_mapConsA = function(dictIsSymbol) {
    var get6 = get3(dictIsSymbol)();
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    var $$delete5 = $$delete3(dictIsSymbol)()();
    return function(dictActionParamType) {
      var toToolParamType1 = toToolParamType(dictActionParamType);
      return function() {
        return function() {
          return function() {
            return function() {
              return function(dictActionParamsSpec_map) {
                var toToolParameterDefinitionsValues_fromActionParamsSpec_map1 = toToolParameterDefinitionsValues_fromActionParamsSpec_map(dictActionParamsSpec_map);
                return {
                  toToolParameterDefinitionsValues_fromActionParamsSpec_map: function(v3) {
                    return function(actionParamsSpec1) {
                      var v1 = get6($$Proxy.value)(actionParamsSpec1);
                      return insert(reflectSymbol2($$Proxy.value))({
                        description: v1.description,
                        required: true,
                        type: toToolParamType1(v1.proxy_ty)
                      })(toToolParameterDefinitionsValues_fromActionParamsSpec_map1($$Proxy.value)($$delete5($$Proxy.value)(actionParamsSpec1)));
                    };
                  }
                };
              };
            };
          };
        };
      };
    };
  };
  var fromToolCall_toAction_map = function(dict) {
    return dict.fromToolCall_toAction_map;
  };
  var actionsSpec = function() {
    return function(dictActionsSpec_map) {
      var fromToolCall_toAction_map1 = fromToolCall_toAction_map(dictActionsSpec_map);
      return {
        toTools_fromActionsSpec: toTools_fromActionsSpec_map(dictActionsSpec_map)($$Proxy.value),
        fromToolCall_toAction: function(dictMonadError) {
          return fromToolCall_toAction_map1(dictMonadError)($$Proxy.value);
        }
      };
    };
  };
  var fromToolCall_toAction = function(dict) {
    return dict.fromToolCall_toAction;
  };
  var fromToolCallParameters_toActionParams = function(dict) {
    return dict.fromToolCallParameters_toActionParams;
  };
  var actionsSpec_mapConsAction = function(dictIsSymbol) {
    var get6 = get3(dictIsSymbol)();
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    var inj1 = inj2(dictIsSymbol);
    return function(dictActionParamsSpec) {
      var toToolParameterDefinitionsValues_fromActionParamsSpec1 = toToolParameterDefinitionsValues_fromActionParamsSpec(dictActionParamsSpec);
      var fromToolCallParameters_toActionParams1 = fromToolCallParameters_toActionParams(dictActionParamsSpec);
      return function() {
        return function() {
          return function(dictActionsSpec_map) {
            var toTools_fromActionsSpec_map1 = toTools_fromActionsSpec_map(dictActionsSpec_map);
            var fromToolCall_toAction_map1 = fromToolCall_toAction_map(dictActionsSpec_map);
            return {
              toTools_fromActionsSpec_map: function(v3) {
                return function(actionsSpec1) {
                  var v1 = get6($$Proxy.value)(actionsSpec1);
                  return cons2({
                    name: reflectSymbol2($$Proxy.value),
                    description: v1.description,
                    parameterDefinitions: toToolParameterDefinitionsValues_fromActionParamsSpec1(v1.params)
                  })(toTools_fromActionsSpec_map1($$Proxy.value)(actionsSpec1));
                };
              },
              fromToolCall_toAction_map: function(dictMonadError) {
                var map25 = map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0());
                var fromToolCallParameters_toActionParams2 = fromToolCallParameters_toActionParams1(dictMonadError);
                var fromToolCall_toAction_map2 = fromToolCall_toAction_map1(dictMonadError);
                return function(v3) {
                  return function(actionsSpec1) {
                    return function(v1) {
                      var $128 = v1.name === reflectSymbol2($$Proxy.value);
                      if ($128) {
                        var v22 = get6($$Proxy.value)(actionsSpec1);
                        return map25(inj1($$Proxy.value))(map25(Action)(fromToolCallParameters_toActionParams2(v22.params)(v1.parameters)));
                      }
                      ;
                      return fromToolCall_toAction_map2($$Proxy.value)(actionsSpec1)(v1);
                    };
                  };
                };
              }
            };
          };
        };
      };
    };
  };

  // output/Effect.Aff.Class/index.js
  var monadAffAff = {
    liftAff: /* @__PURE__ */ identity(categoryFn),
    MonadEffect0: function() {
      return monadEffectAff;
    }
  };
  var liftAff = function(dict) {
    return dict.liftAff;
  };

  // output/Web.DOM.ParentNode/foreign.js
  var getEffProp = function(name15) {
    return function(node) {
      return function() {
        return node[name15];
      };
    };
  };
  var children = getEffProp("children");
  var _firstElementChild = getEffProp("firstElementChild");
  var _lastElementChild = getEffProp("lastElementChild");
  var childElementCount = getEffProp("childElementCount");
  function _querySelector(selector) {
    return function(node) {
      return function() {
        return node.querySelector(selector);
      };
    };
  }

  // output/Data.Nullable/foreign.js
  var nullImpl = null;
  function nullable(a4, r3, f3) {
    return a4 == null ? r3 : f3(a4);
  }
  function notNull(x2) {
    return x2;
  }

  // output/Data.Nullable/index.js
  var toNullable = /* @__PURE__ */ maybe(nullImpl)(notNull);
  var toMaybe = function(n3) {
    return nullable(n3, Nothing.value, Just.create);
  };

  // output/Web.DOM.ParentNode/index.js
  var map10 = /* @__PURE__ */ map(functorEffect);
  var querySelector = function(qs) {
    var $2 = map10(toMaybe);
    var $3 = _querySelector(qs);
    return function($4) {
      return $2($3($4));
    };
  };

  // output/Web.Event.EventTarget/foreign.js
  function eventListener(fn) {
    return function() {
      return function(event) {
        return fn(event)();
      };
    };
  }
  function addEventListener(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target6) {
          return function() {
            return target6.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }
  function removeEventListener(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target6) {
          return function() {
            return target6.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }

  // output/Web.HTML/foreign.js
  var windowImpl = function() {
    return window;
  };

  // output/Web.Internal.FFI/foreign.js
  function _unsafeReadProtoTagged(nothing, just, name15, value14) {
    if (typeof window !== "undefined") {
      var ty = window[name15];
      if (ty != null && value14 instanceof ty) {
        return just(value14);
      }
    }
    var obj = value14;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var constructorName = proto.constructor.name;
      if (constructorName === name15) {
        return just(value14);
      } else if (constructorName === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  }

  // output/Web.Internal.FFI/index.js
  var unsafeReadProtoTagged = function(name15) {
    return function(value14) {
      return _unsafeReadProtoTagged(Nothing.value, Just.create, name15, value14);
    };
  };

  // output/Web.HTML.HTMLDocument/foreign.js
  function _readyState(doc) {
    return doc.readyState;
  }

  // output/Web.HTML.HTMLDocument.ReadyState/index.js
  var Loading = /* @__PURE__ */ function() {
    function Loading2() {
    }
    ;
    Loading2.value = new Loading2();
    return Loading2;
  }();
  var Interactive = /* @__PURE__ */ function() {
    function Interactive2() {
    }
    ;
    Interactive2.value = new Interactive2();
    return Interactive2;
  }();
  var Complete = /* @__PURE__ */ function() {
    function Complete2() {
    }
    ;
    Complete2.value = new Complete2();
    return Complete2;
  }();
  var parse = function(v3) {
    if (v3 === "loading") {
      return new Just(Loading.value);
    }
    ;
    if (v3 === "interactive") {
      return new Just(Interactive.value);
    }
    ;
    if (v3 === "complete") {
      return new Just(Complete.value);
    }
    ;
    return Nothing.value;
  };

  // output/Web.HTML.HTMLDocument/index.js
  var map11 = /* @__PURE__ */ map(functorEffect);
  var toParentNode = unsafeCoerce2;
  var toDocument = unsafeCoerce2;
  var readyState = function(doc) {
    return map11(function() {
      var $4 = fromMaybe(Loading.value);
      return function($5) {
        return $4(parse($5));
      };
    }())(function() {
      return _readyState(doc);
    });
  };

  // output/Web.HTML.HTMLElement/foreign.js
  function _read(nothing, just, value14) {
    var tag = Object.prototype.toString.call(value14);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value14);
    } else {
      return nothing;
    }
  }

  // output/Web.HTML.HTMLElement/index.js
  var toNode = unsafeCoerce2;
  var fromElement = function(x2) {
    return _read(Nothing.value, Just.create, x2);
  };

  // output/Web.HTML.HTMLInputElement/foreign.js
  function value3(input3) {
    return function() {
      return input3.value;
    };
  }

  // output/Web.HTML.HTMLInputElement/index.js
  var fromEventTarget = /* @__PURE__ */ unsafeReadProtoTagged("HTMLInputElement");

  // output/Web.HTML.Window/foreign.js
  function document(window2) {
    return function() {
      return window2.document;
    };
  }

  // output/Web.HTML.Window/index.js
  var toEventTarget = unsafeCoerce2;

  // output/Web.HTML.Event.EventTypes/index.js
  var domcontentloaded = "DOMContentLoaded";

  // output/Halogen.Aff.Util/index.js
  var bind4 = /* @__PURE__ */ bind(bindAff);
  var liftEffect4 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var bindFlipped4 = /* @__PURE__ */ bindFlipped(bindEffect);
  var composeKleisliFlipped3 = /* @__PURE__ */ composeKleisliFlipped(bindEffect);
  var pure3 = /* @__PURE__ */ pure(applicativeAff);
  var bindFlipped1 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var pure1 = /* @__PURE__ */ pure(applicativeEffect);
  var map12 = /* @__PURE__ */ map(functorEffect);
  var discard2 = /* @__PURE__ */ discard(discardUnit);
  var throwError2 = /* @__PURE__ */ throwError(monadThrowAff);
  var selectElement = function(query3) {
    return bind4(liftEffect4(bindFlipped4(composeKleisliFlipped3(function() {
      var $16 = querySelector(query3);
      return function($17) {
        return $16(toParentNode($17));
      };
    }())(document))(windowImpl)))(function(mel) {
      return pure3(bindFlipped1(fromElement)(mel));
    });
  };
  var runHalogenAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure1(unit))));
  var awaitLoad = /* @__PURE__ */ makeAff(function(callback) {
    return function __do2() {
      var rs = bindFlipped4(readyState)(bindFlipped4(document)(windowImpl))();
      if (rs instanceof Loading) {
        var et = map12(toEventTarget)(windowImpl)();
        var listener = eventListener(function(v3) {
          return callback(new Right(unit));
        })();
        addEventListener(domcontentloaded)(listener)(false)(et)();
        return effectCanceler(removeEventListener(domcontentloaded)(listener)(false)(et));
      }
      ;
      callback(new Right(unit))();
      return nonCanceler;
    };
  });
  var awaitBody = /* @__PURE__ */ discard2(bindAff)(awaitLoad)(function() {
    return bind4(selectElement("body"))(function(body2) {
      return maybe(throwError2(error("Could not find body")))(pure3)(body2);
    });
  });

  // output/Data.Exists/index.js
  var runExists = unsafeCoerce2;
  var mkExists = unsafeCoerce2;

  // output/Data.Coyoneda/index.js
  var CoyonedaF = /* @__PURE__ */ function() {
    function CoyonedaF2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CoyonedaF2.create = function(value0) {
      return function(value1) {
        return new CoyonedaF2(value0, value1);
      };
    };
    return CoyonedaF2;
  }();
  var unCoyoneda = function(f3) {
    return function(v3) {
      return runExists(function(v1) {
        return f3(v1.value0)(v1.value1);
      })(v3);
    };
  };
  var coyoneda = function(k3) {
    return function(fi) {
      return mkExists(new CoyonedaF(k3, fi));
    };
  };
  var functorCoyoneda = {
    map: function(f3) {
      return function(v3) {
        return runExists(function(v1) {
          return coyoneda(function($180) {
            return f3(v1.value0($180));
          })(v1.value1);
        })(v3);
      };
    }
  };
  var liftCoyoneda = /* @__PURE__ */ coyoneda(/* @__PURE__ */ identity(categoryFn));

  // output/Halogen.Data.OrdBox/index.js
  var OrdBox = /* @__PURE__ */ function() {
    function OrdBox2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    OrdBox2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new OrdBox2(value0, value1, value22);
        };
      };
    };
    return OrdBox2;
  }();
  var mkOrdBox = function(dictOrd) {
    return OrdBox.create(eq(dictOrd.Eq0()))(compare(dictOrd));
  };
  var eqOrdBox = {
    eq: function(v3) {
      return function(v1) {
        return v3.value0(v3.value2)(v1.value2);
      };
    }
  };
  var ordOrdBox = {
    compare: function(v3) {
      return function(v1) {
        return v3.value1(v3.value2)(v1.value2);
      };
    },
    Eq0: function() {
      return eqOrdBox;
    }
  };

  // output/Halogen.Data.Slot/index.js
  var ordTuple2 = /* @__PURE__ */ ordTuple(ordString)(ordOrdBox);
  var pop1 = /* @__PURE__ */ pop(ordTuple2);
  var lookup1 = /* @__PURE__ */ lookup2(ordTuple2);
  var insert1 = /* @__PURE__ */ insert3(ordTuple2);
  var pop2 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key2) {
            return function(v3) {
              return pop1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key2)))(v3);
            };
          };
        };
      };
    };
  };
  var lookup4 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key2) {
            return function(v3) {
              return lookup1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key2)))(v3);
            };
          };
        };
      };
    };
  };
  var insert5 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key2) {
            return function(val2) {
              return function(v3) {
                return insert1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key2)))(val2)(v3);
              };
            };
          };
        };
      };
    };
  };
  var foreachSlot = function(dictApplicative) {
    var traverse_8 = traverse_(dictApplicative)(foldableMap);
    return function(v3) {
      return function(k3) {
        return traverse_8(function($54) {
          return k3($54);
        })(v3);
      };
    };
  };
  var empty4 = empty3;

  // output/Halogen.Query.Input/index.js
  var RefUpdate = /* @__PURE__ */ function() {
    function RefUpdate2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RefUpdate2.create = function(value0) {
      return function(value1) {
        return new RefUpdate2(value0, value1);
      };
    };
    return RefUpdate2;
  }();
  var Action2 = /* @__PURE__ */ function() {
    function Action4(value0) {
      this.value0 = value0;
    }
    ;
    Action4.create = function(value0) {
      return new Action4(value0);
    };
    return Action4;
  }();

  // output/Halogen.VDom.Machine/index.js
  var Step = /* @__PURE__ */ function() {
    function Step3(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Step3.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Step3(value0, value1, value22, value32);
          };
        };
      };
    };
    return Step3;
  }();
  var unStep = unsafeCoerce2;
  var step2 = function(v3, a4) {
    return v3.value2(v3.value1, a4);
  };
  var mkStep = unsafeCoerce2;
  var halt = function(v3) {
    return v3.value3(v3.value1);
  };
  var extract2 = /* @__PURE__ */ unStep(function(v3) {
    return v3.value0;
  });

  // output/Halogen.VDom.Types/index.js
  var map13 = /* @__PURE__ */ map(functorArray);
  var map14 = /* @__PURE__ */ map(functorTuple);
  var Text = /* @__PURE__ */ function() {
    function Text2(value0) {
      this.value0 = value0;
    }
    ;
    Text2.create = function(value0) {
      return new Text2(value0);
    };
    return Text2;
  }();
  var Elem = /* @__PURE__ */ function() {
    function Elem2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Elem2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Elem2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Elem2;
  }();
  var Keyed = /* @__PURE__ */ function() {
    function Keyed2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Keyed2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Keyed2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Keyed2;
  }();
  var Widget = /* @__PURE__ */ function() {
    function Widget2(value0) {
      this.value0 = value0;
    }
    ;
    Widget2.create = function(value0) {
      return new Widget2(value0);
    };
    return Widget2;
  }();
  var Grafted = /* @__PURE__ */ function() {
    function Grafted2(value0) {
      this.value0 = value0;
    }
    ;
    Grafted2.create = function(value0) {
      return new Grafted2(value0);
    };
    return Grafted2;
  }();
  var Graft = /* @__PURE__ */ function() {
    function Graft2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Graft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Graft2(value0, value1, value22);
        };
      };
    };
    return Graft2;
  }();
  var unGraft = function(f3) {
    return function($61) {
      return f3($61);
    };
  };
  var graft = unsafeCoerce2;
  var bifunctorGraft = {
    bimap: function(f3) {
      return function(g3) {
        return unGraft(function(v3) {
          return graft(new Graft(function($63) {
            return f3(v3.value0($63));
          }, function($64) {
            return g3(v3.value1($64));
          }, v3.value2));
        });
      };
    }
  };
  var bimap2 = /* @__PURE__ */ bimap(bifunctorGraft);
  var runGraft = /* @__PURE__ */ unGraft(function(v3) {
    var go2 = function(v22) {
      if (v22 instanceof Text) {
        return new Text(v22.value0);
      }
      ;
      if (v22 instanceof Elem) {
        return new Elem(v22.value0, v22.value1, v3.value0(v22.value2), map13(go2)(v22.value3));
      }
      ;
      if (v22 instanceof Keyed) {
        return new Keyed(v22.value0, v22.value1, v3.value0(v22.value2), map13(map14(go2))(v22.value3));
      }
      ;
      if (v22 instanceof Widget) {
        return new Widget(v3.value1(v22.value0));
      }
      ;
      if (v22 instanceof Grafted) {
        return new Grafted(bimap2(v3.value0)(v3.value1)(v22.value0));
      }
      ;
      throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [v22.constructor.name]);
    };
    return go2(v3.value2);
  });

  // output/Halogen.VDom.Util/foreign.js
  function unsafeGetAny(key2, obj) {
    return obj[key2];
  }
  function unsafeHasAny(key2, obj) {
    return obj.hasOwnProperty(key2);
  }
  function unsafeSetAny(key2, val2, obj) {
    obj[key2] = val2;
  }
  function forE2(a4, f3) {
    var b4 = [];
    for (var i4 = 0; i4 < a4.length; i4++) {
      b4.push(f3(i4, a4[i4]));
    }
    return b4;
  }
  function forEachE(a4, f3) {
    for (var i4 = 0; i4 < a4.length; i4++) {
      f3(a4[i4]);
    }
  }
  function forInE(o3, f3) {
    var ks = Object.keys(o3);
    for (var i4 = 0; i4 < ks.length; i4++) {
      var k3 = ks[i4];
      f3(k3, o3[k3]);
    }
  }
  function diffWithIxE(a1, a22, f1, f22, f3) {
    var a32 = [];
    var l1 = a1.length;
    var l22 = a22.length;
    var i4 = 0;
    while (1) {
      if (i4 < l1) {
        if (i4 < l22) {
          a32.push(f1(i4, a1[i4], a22[i4]));
        } else {
          f22(i4, a1[i4]);
        }
      } else if (i4 < l22) {
        a32.push(f3(i4, a22[i4]));
      } else {
        break;
      }
      i4++;
    }
    return a32;
  }
  function strMapWithIxE(as, fk, f3) {
    var o3 = {};
    for (var i4 = 0; i4 < as.length; i4++) {
      var a4 = as[i4];
      var k3 = fk(a4);
      o3[k3] = f3(k3, i4, a4);
    }
    return o3;
  }
  function diffWithKeyAndIxE(o1, as, fk, f1, f22, f3) {
    var o22 = {};
    for (var i4 = 0; i4 < as.length; i4++) {
      var a4 = as[i4];
      var k3 = fk(a4);
      if (o1.hasOwnProperty(k3)) {
        o22[k3] = f1(k3, i4, o1[k3], a4);
      } else {
        o22[k3] = f3(k3, i4, a4);
      }
    }
    for (var k3 in o1) {
      if (k3 in o22) {
        continue;
      }
      f22(k3, o1[k3]);
    }
    return o22;
  }
  function refEq2(a4, b4) {
    return a4 === b4;
  }
  function createTextNode(s3, doc) {
    return doc.createTextNode(s3);
  }
  function setTextContent(s3, n3) {
    n3.textContent = s3;
  }
  function createElement(ns, name15, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name15);
    } else {
      return doc.createElement(name15);
    }
  }
  function insertChildIx(i4, a4, b4) {
    var n3 = b4.childNodes.item(i4) || null;
    if (n3 !== a4) {
      b4.insertBefore(a4, n3);
    }
  }
  function removeChild(a4, b4) {
    if (b4 && a4.parentNode === b4) {
      b4.removeChild(a4);
    }
  }
  function parentNode(a4) {
    return a4.parentNode;
  }
  function setAttribute(ns, attr3, val2, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr3, val2);
    } else {
      el.setAttribute(attr3, val2);
    }
  }
  function removeAttribute(ns, attr3, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr3);
    } else {
      el.removeAttribute(attr3);
    }
  }
  function hasAttribute(ns, attr3, el) {
    if (ns != null) {
      return el.hasAttributeNS(ns, attr3);
    } else {
      return el.hasAttribute(attr3);
    }
  }
  function addEventListener2(ev, listener, el) {
    el.addEventListener(ev, listener, false);
  }
  function removeEventListener2(ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  }
  var jsUndefined = void 0;

  // output/Halogen.VDom.Util/index.js
  var unsafeLookup = unsafeGetAny;
  var unsafeFreeze2 = unsafeCoerce2;
  var pokeMutMap = unsafeSetAny;
  var newMutMap = newImpl;

  // output/Web.DOM.Element/foreign.js
  var getProp = function(name15) {
    return function(doctype) {
      return doctype[name15];
    };
  };
  var _namespaceURI = getProp("namespaceURI");
  var _prefix = getProp("prefix");
  var localName = getProp("localName");
  var tagName = getProp("tagName");

  // output/Web.DOM.Element/index.js
  var toNode2 = unsafeCoerce2;

  // output/Halogen.VDom.DOM/index.js
  var $runtime_lazy4 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2) return val2;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var haltWidget = function(v3) {
    return halt(v3.widget);
  };
  var $lazy_patchWidget = /* @__PURE__ */ $runtime_lazy4("patchWidget", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchWidget(291)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Widget) {
        var res = step2(state3.widget, vdom.value0);
        var res$prime = unStep(function(v3) {
          return mkStep(new Step(v3.value0, {
            build: state3.build,
            widget: res
          }, $lazy_patchWidget(296), haltWidget));
        })(res);
        return res$prime;
      }
      ;
      haltWidget(state3);
      return state3.build(vdom);
    };
  });
  var patchWidget = /* @__PURE__ */ $lazy_patchWidget(286);
  var haltText = function(v3) {
    var parent2 = parentNode(v3.node);
    return removeChild(v3.node, parent2);
  };
  var $lazy_patchText = /* @__PURE__ */ $runtime_lazy4("patchText", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchText(82)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Text) {
        if (state3.value === vdom.value0) {
          return mkStep(new Step(state3.node, state3, $lazy_patchText(85), haltText));
        }
        ;
        if (otherwise) {
          var nextState = {
            build: state3.build,
            node: state3.node,
            value: vdom.value0
          };
          setTextContent(vdom.value0, state3.node);
          return mkStep(new Step(state3.node, nextState, $lazy_patchText(89), haltText));
        }
        ;
      }
      ;
      haltText(state3);
      return state3.build(vdom);
    };
  });
  var patchText = /* @__PURE__ */ $lazy_patchText(77);
  var haltKeyed = function(v3) {
    var parent2 = parentNode(v3.node);
    removeChild(v3.node, parent2);
    forInE(v3.children, function(v1, s3) {
      return halt(s3);
    });
    return halt(v3.attrs);
  };
  var haltElem = function(v3) {
    var parent2 = parentNode(v3.node);
    removeChild(v3.node, parent2);
    forEachE(v3.children, halt);
    return halt(v3.attrs);
  };
  var eqElemSpec = function(ns1, v3, ns2, v1) {
    var $63 = v3 === v1;
    if ($63) {
      if (ns1 instanceof Just && (ns2 instanceof Just && ns1.value0 === ns2.value0)) {
        return true;
      }
      ;
      if (ns1 instanceof Nothing && ns2 instanceof Nothing) {
        return true;
      }
      ;
      return false;
    }
    ;
    return false;
  };
  var $lazy_patchElem = /* @__PURE__ */ $runtime_lazy4("patchElem", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchElem(135)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Elem && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v3 = length3(vdom.value3);
        var v1 = length3(state3.children);
        if (v1 === 0 && v3 === 0) {
          var attrs2 = step2(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children
          };
          return mkStep(new Step(state3.node, nextState, $lazy_patchElem(149), haltElem));
        }
        ;
        var onThis = function(v22, s3) {
          return halt(s3);
        };
        var onThese = function(ix, s3, v22) {
          var res = step2(s3, v22);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var onThat = function(ix, v22) {
          var res = state3.build(v22);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithIxE(state3.children, vdom.value3, onThese, onThis, onThat);
        var attrs2 = step2(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2
        };
        return mkStep(new Step(state3.node, nextState, $lazy_patchElem(172), haltElem));
      }
      ;
      haltElem(state3);
      return state3.build(vdom);
    };
  });
  var patchElem = /* @__PURE__ */ $lazy_patchElem(130);
  var $lazy_patchKeyed = /* @__PURE__ */ $runtime_lazy4("patchKeyed", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchKeyed(222)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Keyed && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v3 = length3(vdom.value3);
        if (state3.length === 0 && v3 === 0) {
          var attrs2 = step2(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children,
            length: 0
          };
          return mkStep(new Step(state3.node, nextState, $lazy_patchKeyed(237), haltKeyed));
        }
        ;
        var onThis = function(v22, s3) {
          return halt(s3);
        };
        var onThese = function(v22, ix$prime, s3, v32) {
          var res = step2(s3, v32.value1);
          insertChildIx(ix$prime, extract2(res), state3.node);
          return res;
        };
        var onThat = function(v22, ix, v32) {
          var res = state3.build(v32.value1);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithKeyAndIxE(state3.children, vdom.value3, fst, onThese, onThis, onThat);
        var attrs2 = step2(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2,
          length: v3
        };
        return mkStep(new Step(state3.node, nextState, $lazy_patchKeyed(261), haltKeyed));
      }
      ;
      haltKeyed(state3);
      return state3.build(vdom);
    };
  });
  var patchKeyed = /* @__PURE__ */ $lazy_patchKeyed(217);
  var buildWidget = function(v3, build, w2) {
    var res = v3.buildWidget(v3)(w2);
    var res$prime = unStep(function(v1) {
      return mkStep(new Step(v1.value0, {
        build,
        widget: res
      }, patchWidget, haltWidget));
    })(res);
    return res$prime;
  };
  var buildText = function(v3, build, s3) {
    var node = createTextNode(s3, v3.document);
    var state3 = {
      build,
      node,
      value: s3
    };
    return mkStep(new Step(node, state3, patchText, haltText));
  };
  var buildKeyed = function(v3, build, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v3.document);
    var node = toNode2(el);
    var onChild = function(v1, ix, v22) {
      var res = build(v22.value1);
      insertChildIx(ix, extract2(res), node);
      return res;
    };
    var children2 = strMapWithIxE(ch1, fst, onChild);
    var attrs = v3.buildAttributes(el)(as1);
    var state3 = {
      build,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2,
      length: length3(ch1)
    };
    return mkStep(new Step(node, state3, patchKeyed, haltKeyed));
  };
  var buildElem = function(v3, build, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v3.document);
    var node = toNode2(el);
    var onChild = function(ix, child) {
      var res = build(child);
      insertChildIx(ix, extract2(res), node);
      return res;
    };
    var children2 = forE2(ch1, onChild);
    var attrs = v3.buildAttributes(el)(as1);
    var state3 = {
      build,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2
    };
    return mkStep(new Step(node, state3, patchElem, haltElem));
  };
  var buildVDom = function(spec) {
    var $lazy_build = $runtime_lazy4("build", "Halogen.VDom.DOM", function() {
      return function(v3) {
        if (v3 instanceof Text) {
          return buildText(spec, $lazy_build(59), v3.value0);
        }
        ;
        if (v3 instanceof Elem) {
          return buildElem(spec, $lazy_build(60), v3.value0, v3.value1, v3.value2, v3.value3);
        }
        ;
        if (v3 instanceof Keyed) {
          return buildKeyed(spec, $lazy_build(61), v3.value0, v3.value1, v3.value2, v3.value3);
        }
        ;
        if (v3 instanceof Widget) {
          return buildWidget(spec, $lazy_build(62), v3.value0);
        }
        ;
        if (v3 instanceof Grafted) {
          return $lazy_build(63)(runGraft(v3.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [v3.constructor.name]);
      };
    });
    var build = $lazy_build(58);
    return build;
  };

  // output/Halogen.VDom.DOM.Prop/index.js
  var $runtime_lazy5 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2) return val2;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var Created = /* @__PURE__ */ function() {
    function Created2(value0) {
      this.value0 = value0;
    }
    ;
    Created2.create = function(value0) {
      return new Created2(value0);
    };
    return Created2;
  }();
  var Removed = /* @__PURE__ */ function() {
    function Removed2(value0) {
      this.value0 = value0;
    }
    ;
    Removed2.create = function(value0) {
      return new Removed2(value0);
    };
    return Removed2;
  }();
  var Attribute = /* @__PURE__ */ function() {
    function Attribute2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Attribute2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Attribute2(value0, value1, value22);
        };
      };
    };
    return Attribute2;
  }();
  var Property = /* @__PURE__ */ function() {
    function Property2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Property2.create = function(value0) {
      return function(value1) {
        return new Property2(value0, value1);
      };
    };
    return Property2;
  }();
  var Handler = /* @__PURE__ */ function() {
    function Handler2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Handler2.create = function(value0) {
      return function(value1) {
        return new Handler2(value0, value1);
      };
    };
    return Handler2;
  }();
  var Ref = /* @__PURE__ */ function() {
    function Ref2(value0) {
      this.value0 = value0;
    }
    ;
    Ref2.create = function(value0) {
      return new Ref2(value0);
    };
    return Ref2;
  }();
  var unsafeGetProperty = unsafeGetAny;
  var setProperty = unsafeSetAny;
  var removeProperty = function(key2, el) {
    var v3 = hasAttribute(nullImpl, key2, el);
    if (v3) {
      return removeAttribute(nullImpl, key2, el);
    }
    ;
    var v1 = typeOf(unsafeGetAny(key2, el));
    if (v1 === "string") {
      return unsafeSetAny(key2, "", el);
    }
    ;
    if (key2 === "rowSpan") {
      return unsafeSetAny(key2, 1, el);
    }
    ;
    if (key2 === "colSpan") {
      return unsafeSetAny(key2, 1, el);
    }
    ;
    return unsafeSetAny(key2, jsUndefined, el);
  };
  var propToStrKey = function(v3) {
    if (v3 instanceof Attribute && v3.value0 instanceof Just) {
      return "attr/" + (v3.value0.value0 + (":" + v3.value1));
    }
    ;
    if (v3 instanceof Attribute) {
      return "attr/:" + v3.value1;
    }
    ;
    if (v3 instanceof Property) {
      return "prop/" + v3.value0;
    }
    ;
    if (v3 instanceof Handler) {
      return "handler/" + v3.value0;
    }
    ;
    if (v3 instanceof Ref) {
      return "ref";
    }
    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [v3.constructor.name]);
  };
  var propFromString = unsafeCoerce2;
  var buildProp = function(emit) {
    return function(el) {
      var removeProp = function(prevEvents) {
        return function(v3, v1) {
          if (v1 instanceof Attribute) {
            return removeAttribute(toNullable(v1.value0), v1.value1, el);
          }
          ;
          if (v1 instanceof Property) {
            return removeProperty(v1.value0, el);
          }
          ;
          if (v1 instanceof Handler) {
            var handler3 = unsafeLookup(v1.value0, prevEvents);
            return removeEventListener2(v1.value0, fst(handler3), el);
          }
          ;
          if (v1 instanceof Ref) {
            return unit;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [v1.constructor.name]);
        };
      };
      var mbEmit = function(v3) {
        if (v3 instanceof Just) {
          return emit(v3.value0)();
        }
        ;
        return unit;
      };
      var haltProp = function(state3) {
        var v3 = lookup("ref")(state3.props);
        if (v3 instanceof Just && v3.value0 instanceof Ref) {
          return mbEmit(v3.value0.value0(new Removed(el)));
        }
        ;
        return unit;
      };
      var diffProp = function(prevEvents, events) {
        return function(v3, v1, v11, v22) {
          if (v11 instanceof Attribute && v22 instanceof Attribute) {
            var $66 = v11.value2 === v22.value2;
            if ($66) {
              return v22;
            }
            ;
            setAttribute(toNullable(v22.value0), v22.value1, v22.value2, el);
            return v22;
          }
          ;
          if (v11 instanceof Property && v22 instanceof Property) {
            var v42 = refEq2(v11.value1, v22.value1);
            if (v42) {
              return v22;
            }
            ;
            if (v22.value0 === "value") {
              var elVal = unsafeGetProperty("value", el);
              var $75 = refEq2(elVal, v22.value1);
              if ($75) {
                return v22;
              }
              ;
              setProperty(v22.value0, v22.value1, el);
              return v22;
            }
            ;
            setProperty(v22.value0, v22.value1, el);
            return v22;
          }
          ;
          if (v11 instanceof Handler && v22 instanceof Handler) {
            var handler3 = unsafeLookup(v22.value0, prevEvents);
            write(v22.value1)(snd(handler3))();
            pokeMutMap(v22.value0, handler3, events);
            return v22;
          }
          ;
          return v22;
        };
      };
      var applyProp = function(events) {
        return function(v3, v1, v22) {
          if (v22 instanceof Attribute) {
            setAttribute(toNullable(v22.value0), v22.value1, v22.value2, el);
            return v22;
          }
          ;
          if (v22 instanceof Property) {
            setProperty(v22.value0, v22.value1, el);
            return v22;
          }
          ;
          if (v22 instanceof Handler) {
            var v32 = unsafeGetAny(v22.value0, events);
            if (unsafeHasAny(v22.value0, events)) {
              write(v22.value1)(snd(v32))();
              return v22;
            }
            ;
            var ref2 = $$new(v22.value1)();
            var listener = eventListener(function(ev) {
              return function __do2() {
                var f$prime = read(ref2)();
                return mbEmit(f$prime(ev));
              };
            })();
            pokeMutMap(v22.value0, new Tuple(listener, ref2), events);
            addEventListener2(v22.value0, listener, el);
            return v22;
          }
          ;
          if (v22 instanceof Ref) {
            mbEmit(v22.value0(new Created(el)));
            return v22;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [v22.constructor.name]);
        };
      };
      var $lazy_patchProp = $runtime_lazy5("patchProp", "Halogen.VDom.DOM.Prop", function() {
        return function(state3, ps2) {
          var events = newMutMap();
          var onThis = removeProp(state3.events);
          var onThese = diffProp(state3.events, events);
          var onThat = applyProp(events);
          var props = diffWithKeyAndIxE(state3.props, ps2, propToStrKey, onThese, onThis, onThat);
          var nextState = {
            events: unsafeFreeze2(events),
            props
          };
          return mkStep(new Step(unit, nextState, $lazy_patchProp(100), haltProp));
        };
      });
      var patchProp = $lazy_patchProp(87);
      var renderProp = function(ps1) {
        var events = newMutMap();
        var ps1$prime = strMapWithIxE(ps1, propToStrKey, applyProp(events));
        var state3 = {
          events: unsafeFreeze2(events),
          props: ps1$prime
        };
        return mkStep(new Step(unit, state3, patchProp, haltProp));
      };
      return renderProp;
    };
  };

  // output/Halogen.HTML.Core/index.js
  var HTML = function(x2) {
    return x2;
  };
  var widget = function($28) {
    return HTML(Widget.create($28));
  };
  var toPropValue = function(dict) {
    return dict.toPropValue;
  };
  var text5 = function($29) {
    return HTML(Text.create($29));
  };
  var prop = function(dictIsProp) {
    var toPropValue1 = toPropValue(dictIsProp);
    return function(v3) {
      var $31 = Property.create(v3);
      return function($32) {
        return $31(toPropValue1($32));
      };
    };
  };
  var isPropString = {
    toPropValue: propFromString
  };
  var handler = /* @__PURE__ */ function() {
    return Handler.create;
  }();
  var element = function(ns) {
    return function(name15) {
      return function(props) {
        return function(children2) {
          return new Elem(ns, name15, props, children2);
        };
      };
    };
  };
  var attr = function(ns) {
    return function(v3) {
      return Attribute.create(ns)(v3);
    };
  };

  // output/Control.Applicative.Free/index.js
  var identity9 = /* @__PURE__ */ identity(categoryFn);
  var Pure = /* @__PURE__ */ function() {
    function Pure2(value0) {
      this.value0 = value0;
    }
    ;
    Pure2.create = function(value0) {
      return new Pure2(value0);
    };
    return Pure2;
  }();
  var Lift = /* @__PURE__ */ function() {
    function Lift3(value0) {
      this.value0 = value0;
    }
    ;
    Lift3.create = function(value0) {
      return new Lift3(value0);
    };
    return Lift3;
  }();
  var Ap = /* @__PURE__ */ function() {
    function Ap2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Ap2.create = function(value0) {
      return function(value1) {
        return new Ap2(value0, value1);
      };
    };
    return Ap2;
  }();
  var mkAp = function(fba) {
    return function(fb) {
      return new Ap(fba, fb);
    };
  };
  var liftFreeAp = /* @__PURE__ */ function() {
    return Lift.create;
  }();
  var goLeft = function(dictApplicative) {
    var pure11 = pure(dictApplicative);
    return function(fStack) {
      return function(valStack) {
        return function(nat) {
          return function(func) {
            return function(count) {
              if (func instanceof Pure) {
                return new Tuple(new Cons({
                  func: pure11(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Lift) {
                return new Tuple(new Cons({
                  func: nat(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Ap) {
                return goLeft(dictApplicative)(fStack)(cons(func.value1)(valStack))(nat)(func.value0)(count + 1 | 0);
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [func.constructor.name]);
            };
          };
        };
      };
    };
  };
  var goApply = function(dictApplicative) {
    var apply2 = apply(dictApplicative.Apply0());
    return function(fStack) {
      return function(vals) {
        return function(gVal) {
          if (fStack instanceof Nil) {
            return new Left(gVal);
          }
          ;
          if (fStack instanceof Cons) {
            var gRes = apply2(fStack.value0.func)(gVal);
            var $31 = fStack.value0.count === 1;
            if ($31) {
              if (fStack.value1 instanceof Nil) {
                return new Left(gRes);
              }
              ;
              return goApply(dictApplicative)(fStack.value1)(vals)(gRes);
            }
            ;
            if (vals instanceof Nil) {
              return new Left(gRes);
            }
            ;
            if (vals instanceof Cons) {
              return new Right(new Tuple(new Cons({
                func: gRes,
                count: fStack.value0.count - 1 | 0
              }, fStack.value1), new NonEmpty(vals.value0, vals.value1)));
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [vals.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [fStack.constructor.name]);
        };
      };
    };
  };
  var functorFreeAp = {
    map: function(f3) {
      return function(x2) {
        return mkAp(new Pure(f3))(x2);
      };
    }
  };
  var foldFreeAp = function(dictApplicative) {
    var goApply1 = goApply(dictApplicative);
    var pure11 = pure(dictApplicative);
    var goLeft1 = goLeft(dictApplicative);
    return function(nat) {
      return function(z2) {
        var go2 = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v3) {
            if (v3.value1.value0 instanceof Pure) {
              var v1 = goApply1(v3.value0)(v3.value1.value1)(pure11(v3.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v3.value1.value0 instanceof Lift) {
              var v1 = goApply1(v3.value0)(v3.value1.value1)(nat(v3.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v3.value1.value0 instanceof Ap) {
              var nextVals = new NonEmpty(v3.value1.value0.value1, v3.value1.value1);
              $copy_v = goLeft1(v3.value0)(nextVals)(nat)(v3.value1.value0.value0)(1);
              return;
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [v3.value1.value0.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go2(new Tuple(Nil.value, singleton3(z2)));
      };
    };
  };
  var retractFreeAp = function(dictApplicative) {
    return foldFreeAp(dictApplicative)(identity9);
  };
  var applyFreeAp = {
    apply: function(fba) {
      return function(fb) {
        return mkAp(fba)(fb);
      };
    },
    Functor0: function() {
      return functorFreeAp;
    }
  };
  var applicativeFreeAp = /* @__PURE__ */ function() {
    return {
      pure: Pure.create,
      Apply0: function() {
        return applyFreeAp;
      }
    };
  }();
  var foldFreeAp1 = /* @__PURE__ */ foldFreeAp(applicativeFreeAp);
  var hoistFreeAp = function(f3) {
    return foldFreeAp1(function($54) {
      return liftFreeAp(f3($54));
    });
  };

  // output/Data.CatQueue/index.js
  var CatQueue = /* @__PURE__ */ function() {
    function CatQueue2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatQueue2.create = function(value0) {
      return function(value1) {
        return new CatQueue2(value0, value1);
      };
    };
    return CatQueue2;
  }();
  var uncons3 = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v3) {
      if (v3.value0 instanceof Nil && v3.value1 instanceof Nil) {
        $tco_done = true;
        return Nothing.value;
      }
      ;
      if (v3.value0 instanceof Nil) {
        $copy_v = new CatQueue(reverse(v3.value1), Nil.value);
        return;
      }
      ;
      if (v3.value0 instanceof Cons) {
        $tco_done = true;
        return new Just(new Tuple(v3.value0.value0, new CatQueue(v3.value0.value1, v3.value1)));
      }
      ;
      throw new Error("Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): " + [v3.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var snoc3 = function(v3) {
    return function(a4) {
      return new CatQueue(v3.value0, new Cons(a4, v3.value1));
    };
  };
  var $$null2 = function(v3) {
    if (v3.value0 instanceof Nil && v3.value1 instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var empty5 = /* @__PURE__ */ function() {
    return new CatQueue(Nil.value, Nil.value);
  }();

  // output/Data.CatList/index.js
  var CatNil = /* @__PURE__ */ function() {
    function CatNil2() {
    }
    ;
    CatNil2.value = new CatNil2();
    return CatNil2;
  }();
  var CatCons = /* @__PURE__ */ function() {
    function CatCons2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatCons2.create = function(value0) {
      return function(value1) {
        return new CatCons2(value0, value1);
      };
    };
    return CatCons2;
  }();
  var link = function(v3) {
    return function(v1) {
      if (v3 instanceof CatNil) {
        return v1;
      }
      ;
      if (v1 instanceof CatNil) {
        return v3;
      }
      ;
      if (v3 instanceof CatCons) {
        return new CatCons(v3.value0, snoc3(v3.value1)(v1));
      }
      ;
      throw new Error("Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): " + [v3.constructor.name, v1.constructor.name]);
    };
  };
  var foldr3 = function(k3) {
    return function(b4) {
      return function(q4) {
        var foldl2 = function($copy_v) {
          return function($copy_v1) {
            return function($copy_v2) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v3, v1, v22) {
                if (v22 instanceof Nil) {
                  $tco_done = true;
                  return v1;
                }
                ;
                if (v22 instanceof Cons) {
                  $tco_var_v = v3;
                  $tco_var_v1 = v3(v1)(v22.value0);
                  $copy_v2 = v22.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): " + [v3.constructor.name, v1.constructor.name, v22.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
              }
              ;
              return $tco_result;
            };
          };
        };
        var go2 = function($copy_xs) {
          return function($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(xs, ys) {
              var v3 = uncons3(xs);
              if (v3 instanceof Nothing) {
                $tco_done1 = true;
                return foldl2(function(x2) {
                  return function(i4) {
                    return i4(x2);
                  };
                })(b4)(ys);
              }
              ;
              if (v3 instanceof Just) {
                $tco_var_xs = v3.value0.value1;
                $copy_ys = new Cons(k3(v3.value0.value0), ys);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): " + [v3.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_xs, $copy_ys);
            }
            ;
            return $tco_result;
          };
        };
        return go2(q4)(Nil.value);
      };
    };
  };
  var uncons4 = function(v3) {
    if (v3 instanceof CatNil) {
      return Nothing.value;
    }
    ;
    if (v3 instanceof CatCons) {
      return new Just(new Tuple(v3.value0, function() {
        var $66 = $$null2(v3.value1);
        if ($66) {
          return CatNil.value;
        }
        ;
        return foldr3(link)(CatNil.value)(v3.value1);
      }()));
    }
    ;
    throw new Error("Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): " + [v3.constructor.name]);
  };
  var empty6 = /* @__PURE__ */ function() {
    return CatNil.value;
  }();
  var append3 = link;
  var semigroupCatList = {
    append: append3
  };
  var snoc4 = function(cat) {
    return function(a4) {
      return append3(cat)(new CatCons(a4, empty5));
    };
  };

  // output/Control.Monad.Free/index.js
  var $runtime_lazy6 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2) return val2;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var append4 = /* @__PURE__ */ append(semigroupCatList);
  var Free = /* @__PURE__ */ function() {
    function Free2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Free2.create = function(value0) {
      return function(value1) {
        return new Free2(value0, value1);
      };
    };
    return Free2;
  }();
  var Return = /* @__PURE__ */ function() {
    function Return2(value0) {
      this.value0 = value0;
    }
    ;
    Return2.create = function(value0) {
      return new Return2(value0);
    };
    return Return2;
  }();
  var Bind = /* @__PURE__ */ function() {
    function Bind2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Bind2.create = function(value0) {
      return function(value1) {
        return new Bind2(value0, value1);
      };
    };
    return Bind2;
  }();
  var toView = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v3) {
      var runExpF = function(v23) {
        return v23;
      };
      var concatF = function(v23) {
        return function(r3) {
          return new Free(v23.value0, append4(v23.value1)(r3));
        };
      };
      if (v3.value0 instanceof Return) {
        var v22 = uncons4(v3.value1);
        if (v22 instanceof Nothing) {
          $tco_done = true;
          return new Return(v3.value0.value0);
        }
        ;
        if (v22 instanceof Just) {
          $copy_v = concatF(runExpF(v22.value0.value0)(v3.value0.value0))(v22.value0.value1);
          return;
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v22.constructor.name]);
      }
      ;
      if (v3.value0 instanceof Bind) {
        $tco_done = true;
        return new Bind(v3.value0.value0, function(a4) {
          return concatF(v3.value0.value1(a4))(v3.value1);
        });
      }
      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v3.value0.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var fromView = function(f3) {
    return new Free(f3, empty6);
  };
  var freeMonad = {
    Applicative0: function() {
      return freeApplicative;
    },
    Bind1: function() {
      return freeBind;
    }
  };
  var freeFunctor = {
    map: function(k3) {
      return function(f3) {
        return bindFlipped(freeBind)(function() {
          var $189 = pure(freeApplicative);
          return function($190) {
            return $189(k3($190));
          };
        }())(f3);
      };
    }
  };
  var freeBind = {
    bind: function(v3) {
      return function(k3) {
        return new Free(v3.value0, snoc4(v3.value1)(k3));
      };
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var freeApplicative = {
    pure: function($191) {
      return fromView(Return.create($191));
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var $lazy_freeApply = /* @__PURE__ */ $runtime_lazy6("freeApply", "Control.Monad.Free", function() {
    return {
      apply: ap(freeMonad),
      Functor0: function() {
        return freeFunctor;
      }
    };
  });
  var pure4 = /* @__PURE__ */ pure(freeApplicative);
  var liftF = function(f3) {
    return fromView(new Bind(f3, function($192) {
      return pure4($192);
    }));
  };
  var foldFree = function(dictMonadRec) {
    var Monad0 = dictMonadRec.Monad0();
    var map112 = map(Monad0.Bind1().Apply0().Functor0());
    var pure14 = pure(Monad0.Applicative0());
    var tailRecM4 = tailRecM(dictMonadRec);
    return function(k3) {
      var go2 = function(f3) {
        var v3 = toView(f3);
        if (v3 instanceof Return) {
          return map112(Done.create)(pure14(v3.value0));
        }
        ;
        if (v3 instanceof Bind) {
          return map112(function($199) {
            return Loop.create(v3.value1($199));
          })(k3(v3.value0));
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [v3.constructor.name]);
      };
      return tailRecM4(go2);
    };
  };

  // output/Halogen.Query.ChildQuery/index.js
  var ChildQuery = /* @__PURE__ */ function() {
    function ChildQuery3(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    ChildQuery3.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new ChildQuery3(value0, value1, value22);
        };
      };
    };
    return ChildQuery3;
  }();
  var unChildQueryBox = unsafeCoerce2;
  var mkChildQueryBox = unsafeCoerce2;

  // output/Unsafe.Reference/foreign.js
  function reallyUnsafeRefEq(a4) {
    return function(b4) {
      return a4 === b4;
    };
  }

  // output/Unsafe.Reference/index.js
  var unsafeRefEq = reallyUnsafeRefEq;

  // output/Halogen.Subscription/index.js
  var $$void4 = /* @__PURE__ */ $$void(functorEffect);
  var bind5 = /* @__PURE__ */ bind(bindEffect);
  var append5 = /* @__PURE__ */ append(semigroupArray);
  var traverse_2 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_1 = /* @__PURE__ */ traverse_2(foldableArray);
  var unsubscribe = function(v3) {
    return v3;
  };
  var subscribe = function(v3) {
    return function(k3) {
      return v3(function($76) {
        return $$void4(k3($76));
      });
    };
  };
  var notify = function(v3) {
    return function(a4) {
      return v3(a4);
    };
  };
  var create3 = function __do() {
    var subscribers = $$new([])();
    return {
      emitter: function(k3) {
        return function __do2() {
          modify_(function(v3) {
            return append5(v3)([k3]);
          })(subscribers)();
          return modify_(deleteBy(unsafeRefEq)(k3))(subscribers);
        };
      },
      listener: function(a4) {
        return bind5(read(subscribers))(traverse_1(function(k3) {
          return k3(a4);
        }));
      }
    };
  };

  // output/Halogen.Query.HalogenM/index.js
  var identity10 = /* @__PURE__ */ identity(categoryFn);
  var lookup5 = /* @__PURE__ */ lookup4();
  var SubscriptionId = function(x2) {
    return x2;
  };
  var ForkId = function(x2) {
    return x2;
  };
  var State = /* @__PURE__ */ function() {
    function State2(value0) {
      this.value0 = value0;
    }
    ;
    State2.create = function(value0) {
      return new State2(value0);
    };
    return State2;
  }();
  var Subscribe = /* @__PURE__ */ function() {
    function Subscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Subscribe2.create = function(value0) {
      return function(value1) {
        return new Subscribe2(value0, value1);
      };
    };
    return Subscribe2;
  }();
  var Unsubscribe = /* @__PURE__ */ function() {
    function Unsubscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Unsubscribe2.create = function(value0) {
      return function(value1) {
        return new Unsubscribe2(value0, value1);
      };
    };
    return Unsubscribe2;
  }();
  var Lift2 = /* @__PURE__ */ function() {
    function Lift3(value0) {
      this.value0 = value0;
    }
    ;
    Lift3.create = function(value0) {
      return new Lift3(value0);
    };
    return Lift3;
  }();
  var ChildQuery2 = /* @__PURE__ */ function() {
    function ChildQuery3(value0) {
      this.value0 = value0;
    }
    ;
    ChildQuery3.create = function(value0) {
      return new ChildQuery3(value0);
    };
    return ChildQuery3;
  }();
  var Raise = /* @__PURE__ */ function() {
    function Raise2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Raise2.create = function(value0) {
      return function(value1) {
        return new Raise2(value0, value1);
      };
    };
    return Raise2;
  }();
  var Par = /* @__PURE__ */ function() {
    function Par2(value0) {
      this.value0 = value0;
    }
    ;
    Par2.create = function(value0) {
      return new Par2(value0);
    };
    return Par2;
  }();
  var Fork = /* @__PURE__ */ function() {
    function Fork2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Fork2.create = function(value0) {
      return function(value1) {
        return new Fork2(value0, value1);
      };
    };
    return Fork2;
  }();
  var Join = /* @__PURE__ */ function() {
    function Join2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Join2.create = function(value0) {
      return function(value1) {
        return new Join2(value0, value1);
      };
    };
    return Join2;
  }();
  var Kill = /* @__PURE__ */ function() {
    function Kill2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Kill2.create = function(value0) {
      return function(value1) {
        return new Kill2(value0, value1);
      };
    };
    return Kill2;
  }();
  var GetRef = /* @__PURE__ */ function() {
    function GetRef2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    GetRef2.create = function(value0) {
      return function(value1) {
        return new GetRef2(value0, value1);
      };
    };
    return GetRef2;
  }();
  var HalogenM = function(x2) {
    return x2;
  };
  var raise = function(o3) {
    return liftF(new Raise(o3, unit));
  };
  var query = function() {
    return function(dictIsSymbol) {
      var lookup13 = lookup5(dictIsSymbol);
      return function(dictOrd) {
        var lookup23 = lookup13(dictOrd);
        return function(label5) {
          return function(p4) {
            return function(q4) {
              return liftF(new ChildQuery2(mkChildQueryBox(new ChildQuery(function(dictApplicative) {
                var pure14 = pure(dictApplicative);
                return function(k3) {
                  var $177 = maybe(pure14(Nothing.value))(k3);
                  var $178 = lookup23(label5)(p4);
                  return function($179) {
                    return $177($178($179));
                  };
                };
              }, q4, identity10))));
            };
          };
        };
      };
    };
  };
  var ordSubscriptionId = ordInt;
  var ordForkId = ordInt;
  var monadHalogenM = freeMonad;
  var monadStateHalogenM = {
    state: function($181) {
      return HalogenM(liftF(State.create($181)));
    },
    Monad0: function() {
      return monadHalogenM;
    }
  };
  var monadThrowHalogenM = function(dictMonadThrow) {
    return {
      throwError: function() {
        var $184 = throwError(dictMonadThrow);
        return function($185) {
          return HalogenM(liftF(Lift2.create($184($185))));
        };
      }(),
      Monad0: function() {
        return monadHalogenM;
      }
    };
  };
  var monadEffectHalogenM = function(dictMonadEffect) {
    return {
      liftEffect: function() {
        var $186 = liftEffect(dictMonadEffect);
        return function($187) {
          return HalogenM(liftF(Lift2.create($186($187))));
        };
      }(),
      Monad0: function() {
        return monadHalogenM;
      }
    };
  };
  var monadAffHalogenM = function(dictMonadAff) {
    var monadEffectHalogenM1 = monadEffectHalogenM(dictMonadAff.MonadEffect0());
    return {
      liftAff: function() {
        var $188 = liftAff(dictMonadAff);
        return function($189) {
          return HalogenM(liftF(Lift2.create($188($189))));
        };
      }(),
      MonadEffect0: function() {
        return monadEffectHalogenM1;
      }
    };
  };
  var functorHalogenM = freeFunctor;
  var bindHalogenM = freeBind;
  var applicativeHalogenM = freeApplicative;

  // output/Halogen.Query.HalogenQ/index.js
  var Initialize = /* @__PURE__ */ function() {
    function Initialize2(value0) {
      this.value0 = value0;
    }
    ;
    Initialize2.create = function(value0) {
      return new Initialize2(value0);
    };
    return Initialize2;
  }();
  var Finalize = /* @__PURE__ */ function() {
    function Finalize2(value0) {
      this.value0 = value0;
    }
    ;
    Finalize2.create = function(value0) {
      return new Finalize2(value0);
    };
    return Finalize2;
  }();
  var Receive = /* @__PURE__ */ function() {
    function Receive2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Receive2.create = function(value0) {
      return function(value1) {
        return new Receive2(value0, value1);
      };
    };
    return Receive2;
  }();
  var Action3 = /* @__PURE__ */ function() {
    function Action4(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Action4.create = function(value0) {
      return function(value1) {
        return new Action4(value0, value1);
      };
    };
    return Action4;
  }();
  var Query = /* @__PURE__ */ function() {
    function Query2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Query2.create = function(value0) {
      return function(value1) {
        return new Query2(value0, value1);
      };
    };
    return Query2;
  }();

  // output/Halogen.VDom.Thunk/index.js
  var $runtime_lazy7 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2) return val2;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var unsafeEqThunk = function(v3, v1) {
    return refEq2(v3.value0, v1.value0) && (refEq2(v3.value1, v1.value1) && v3.value1(v3.value3, v1.value3));
  };
  var runThunk = function(v3) {
    return v3.value2(v3.value3);
  };
  var buildThunk = function(toVDom) {
    var haltThunk = function(state3) {
      return halt(state3.vdom);
    };
    var $lazy_patchThunk = $runtime_lazy7("patchThunk", "Halogen.VDom.Thunk", function() {
      return function(state3, t22) {
        var $48 = unsafeEqThunk(state3.thunk, t22);
        if ($48) {
          return mkStep(new Step(extract2(state3.vdom), state3, $lazy_patchThunk(112), haltThunk));
        }
        ;
        var vdom = step2(state3.vdom, toVDom(runThunk(t22)));
        return mkStep(new Step(extract2(vdom), {
          vdom,
          thunk: t22
        }, $lazy_patchThunk(115), haltThunk));
      };
    });
    var patchThunk = $lazy_patchThunk(108);
    var renderThunk = function(spec) {
      return function(t3) {
        var vdom = buildVDom(spec)(toVDom(runThunk(t3)));
        return mkStep(new Step(extract2(vdom), {
          thunk: t3,
          vdom
        }, patchThunk, haltThunk));
      };
    };
    return renderThunk;
  };

  // output/Halogen.Component/index.js
  var voidLeft2 = /* @__PURE__ */ voidLeft(functorHalogenM);
  var traverse_3 = /* @__PURE__ */ traverse_(applicativeHalogenM)(foldableMaybe);
  var map15 = /* @__PURE__ */ map(functorHalogenM);
  var pure5 = /* @__PURE__ */ pure(applicativeHalogenM);
  var lookup6 = /* @__PURE__ */ lookup4();
  var pop3 = /* @__PURE__ */ pop2();
  var insert6 = /* @__PURE__ */ insert5();
  var ComponentSlot = /* @__PURE__ */ function() {
    function ComponentSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ComponentSlot2.create = function(value0) {
      return new ComponentSlot2(value0);
    };
    return ComponentSlot2;
  }();
  var ThunkSlot = /* @__PURE__ */ function() {
    function ThunkSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ThunkSlot2.create = function(value0) {
      return new ThunkSlot2(value0);
    };
    return ThunkSlot2;
  }();
  var unComponentSlot = unsafeCoerce2;
  var unComponent = unsafeCoerce2;
  var mkEval = function(args) {
    return function(v3) {
      if (v3 instanceof Initialize) {
        return voidLeft2(traverse_3(args.handleAction)(args.initialize))(v3.value0);
      }
      ;
      if (v3 instanceof Finalize) {
        return voidLeft2(traverse_3(args.handleAction)(args.finalize))(v3.value0);
      }
      ;
      if (v3 instanceof Receive) {
        return voidLeft2(traverse_3(args.handleAction)(args.receive(v3.value0)))(v3.value1);
      }
      ;
      if (v3 instanceof Action3) {
        return voidLeft2(args.handleAction(v3.value0))(v3.value1);
      }
      ;
      if (v3 instanceof Query) {
        return unCoyoneda(function(g3) {
          var $45 = map15(maybe(v3.value1(unit))(g3));
          return function($46) {
            return $45(args.handleQuery($46));
          };
        })(v3.value0);
      }
      ;
      throw new Error("Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 71): " + [v3.constructor.name]);
    };
  };
  var mkComponentSlot = unsafeCoerce2;
  var mkComponent = unsafeCoerce2;
  var defaultEval = /* @__PURE__ */ function() {
    return {
      handleAction: $$const(pure5(unit)),
      handleQuery: $$const(pure5(Nothing.value)),
      receive: $$const(Nothing.value),
      initialize: Nothing.value,
      finalize: Nothing.value
    };
  }();
  var componentSlot = function() {
    return function(dictIsSymbol) {
      var lookup13 = lookup6(dictIsSymbol);
      var pop12 = pop3(dictIsSymbol);
      var insert13 = insert6(dictIsSymbol);
      return function(dictOrd) {
        var lookup23 = lookup13(dictOrd);
        var pop22 = pop12(dictOrd);
        var insert22 = insert13(dictOrd);
        return function(label5) {
          return function(p4) {
            return function(comp) {
              return function(input3) {
                return function(output2) {
                  return mkComponentSlot({
                    get: lookup23(label5)(p4),
                    pop: pop22(label5)(p4),
                    set: insert22(label5)(p4),
                    component: comp,
                    input: input3,
                    output: output2
                  });
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Halogen.HTML.Elements/index.js
  var element2 = /* @__PURE__ */ function() {
    return element(Nothing.value);
  }();
  var input = function(props) {
    return element2("input")(props)([]);
  };
  var div3 = /* @__PURE__ */ element2("div");

  // output/Halogen.HTML.Properties/index.js
  var prop2 = function(dictIsProp) {
    return prop(dictIsProp);
  };
  var value12 = function(dictIsProp) {
    return prop2(dictIsProp)("value");
  };
  var attr2 = /* @__PURE__ */ function() {
    return attr(Nothing.value);
  }();
  var style = /* @__PURE__ */ attr2("style");

  // output/Halogen.HTML/index.js
  var componentSlot2 = /* @__PURE__ */ componentSlot();
  var slot_ = function() {
    return function(dictIsSymbol) {
      var componentSlot1 = componentSlot2(dictIsSymbol);
      return function(dictOrd) {
        var componentSlot22 = componentSlot1(dictOrd);
        return function(label5) {
          return function(p4) {
            return function(component) {
              return function(input3) {
                return widget(new ComponentSlot(componentSlot22(label5)(p4)(component)(input3)($$const(Nothing.value))));
              };
            };
          };
        };
      };
    };
  };
  var slot = function() {
    return function(dictIsSymbol) {
      var componentSlot1 = componentSlot2(dictIsSymbol);
      return function(dictOrd) {
        var componentSlot22 = componentSlot1(dictOrd);
        return function(label5) {
          return function(p4) {
            return function(component) {
              return function(input3) {
                return function(outputQuery) {
                  return widget(new ComponentSlot(componentSlot22(label5)(p4)(component)(input3)(function($11) {
                    return Just.create(outputQuery($11));
                  })));
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Halogen.Query/index.js
  var $$void5 = /* @__PURE__ */ $$void(functorHalogenM);
  var query2 = /* @__PURE__ */ query();
  var identity11 = /* @__PURE__ */ identity(categoryFn);
  var tell2 = function() {
    return function(dictIsSymbol) {
      var query1 = query2(dictIsSymbol);
      return function(dictOrd) {
        var query22 = query1(dictOrd);
        return function(slot3) {
          return function(label5) {
            return function(req) {
              return $$void5(query22(slot3)(label5)(req(unit)));
            };
          };
        };
      };
    };
  };
  var request = function() {
    return function(dictIsSymbol) {
      var query1 = query2(dictIsSymbol);
      return function(dictOrd) {
        var query22 = query1(dictOrd);
        return function(slot3) {
          return function(label5) {
            return function(req) {
              return query22(slot3)(label5)(req(identity11));
            };
          };
        };
      };
    };
  };

  // output/Control.Monad.Fork.Class/index.js
  var monadForkAff = {
    suspend: suspendAff,
    fork: forkAff,
    join: joinFiber,
    Monad0: function() {
      return monadAff;
    },
    Functor1: function() {
      return functorFiber;
    }
  };
  var fork2 = function(dict) {
    return dict.fork;
  };

  // output/Effect.Console/foreign.js
  var warn = function(s3) {
    return function() {
      console.warn(s3);
    };
  };

  // output/Halogen.Aff.Driver.State/index.js
  var unRenderStateX = unsafeCoerce2;
  var unDriverStateX = unsafeCoerce2;
  var renderStateX_ = function(dictApplicative) {
    var traverse_8 = traverse_(dictApplicative)(foldableMaybe);
    return function(f3) {
      return unDriverStateX(function(st) {
        return traverse_8(f3)(st.rendering);
      });
    };
  };
  var mkRenderStateX = unsafeCoerce2;
  var renderStateX = function(dictFunctor) {
    return function(f3) {
      return unDriverStateX(function(st) {
        return mkRenderStateX(f3(st.rendering));
      });
    };
  };
  var mkDriverStateXRef = unsafeCoerce2;
  var mapDriverState = function(f3) {
    return function(v3) {
      return f3(v3);
    };
  };
  var initDriverState = function(component) {
    return function(input3) {
      return function(handler3) {
        return function(lchs) {
          return function __do2() {
            var selfRef = $$new({})();
            var childrenIn = $$new(empty4)();
            var childrenOut = $$new(empty4)();
            var handlerRef = $$new(handler3)();
            var pendingQueries = $$new(new Just(Nil.value))();
            var pendingOuts = $$new(new Just(Nil.value))();
            var pendingHandlers = $$new(Nothing.value)();
            var fresh2 = $$new(1)();
            var subscriptions = $$new(new Just(empty3))();
            var forks = $$new(empty3)();
            var ds = {
              component,
              state: component.initialState(input3),
              refs: empty3,
              children: empty4,
              childrenIn,
              childrenOut,
              selfRef,
              handlerRef,
              pendingQueries,
              pendingOuts,
              pendingHandlers,
              rendering: Nothing.value,
              fresh: fresh2,
              subscriptions,
              forks,
              lifecycleHandlers: lchs
            };
            write(ds)(selfRef)();
            return mkDriverStateXRef(selfRef);
          };
        };
      };
    };
  };

  // output/Halogen.Aff.Driver.Eval/index.js
  var traverse_4 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var bindFlipped5 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var lookup7 = /* @__PURE__ */ lookup2(ordSubscriptionId);
  var bind12 = /* @__PURE__ */ bind(bindAff);
  var liftEffect5 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var discard3 = /* @__PURE__ */ discard(discardUnit);
  var discard1 = /* @__PURE__ */ discard3(bindAff);
  var traverse_12 = /* @__PURE__ */ traverse_(applicativeAff);
  var traverse_22 = /* @__PURE__ */ traverse_12(foldableList);
  var fork3 = /* @__PURE__ */ fork2(monadForkAff);
  var parSequence_3 = /* @__PURE__ */ parSequence_(parallelAff)(applicativeParAff)(foldableList);
  var pure6 = /* @__PURE__ */ pure(applicativeAff);
  var map17 = /* @__PURE__ */ map(functorCoyoneda);
  var parallel3 = /* @__PURE__ */ parallel(parallelAff);
  var map18 = /* @__PURE__ */ map(functorAff);
  var sequential2 = /* @__PURE__ */ sequential(parallelAff);
  var map22 = /* @__PURE__ */ map(functorMaybe);
  var insert7 = /* @__PURE__ */ insert3(ordSubscriptionId);
  var retractFreeAp2 = /* @__PURE__ */ retractFreeAp(applicativeParAff);
  var $$delete4 = /* @__PURE__ */ $$delete2(ordForkId);
  var unlessM2 = /* @__PURE__ */ unlessM(monadEffect);
  var insert12 = /* @__PURE__ */ insert3(ordForkId);
  var traverse_32 = /* @__PURE__ */ traverse_12(foldableMaybe);
  var lookup12 = /* @__PURE__ */ lookup2(ordForkId);
  var lookup22 = /* @__PURE__ */ lookup2(ordString);
  var foldFree2 = /* @__PURE__ */ foldFree(monadRecAff);
  var alter2 = /* @__PURE__ */ alter(ordString);
  var unsubscribe3 = function(sid) {
    return function(ref2) {
      return function __do2() {
        var v3 = read(ref2)();
        var subs = read(v3.subscriptions)();
        return traverse_4(unsubscribe)(bindFlipped5(lookup7(sid))(subs))();
      };
    };
  };
  var queueOrRun = function(ref2) {
    return function(au) {
      return bind12(liftEffect5(read(ref2)))(function(v3) {
        if (v3 instanceof Nothing) {
          return au;
        }
        ;
        if (v3 instanceof Just) {
          return liftEffect5(write(new Just(new Cons(au, v3.value0)))(ref2));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 188, column 33 - line 190, column 57): " + [v3.constructor.name]);
      });
    };
  };
  var handleLifecycle = function(lchs) {
    return function(f3) {
      return discard1(liftEffect5(write({
        initializers: Nil.value,
        finalizers: Nil.value
      })(lchs)))(function() {
        return bind12(liftEffect5(f3))(function(result) {
          return bind12(liftEffect5(read(lchs)))(function(v3) {
            return discard1(traverse_22(fork3)(v3.finalizers))(function() {
              return discard1(parSequence_3(v3.initializers))(function() {
                return pure6(result);
              });
            });
          });
        });
      });
    };
  };
  var handleAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure(applicativeEffect)(unit))));
  var fresh = function(f3) {
    return function(ref2) {
      return bind12(liftEffect5(read(ref2)))(function(v3) {
        return liftEffect5(modify$prime(function(i4) {
          return {
            state: i4 + 1 | 0,
            value: f3(i4)
          };
        })(v3.fresh));
      });
    };
  };
  var evalQ = function(render) {
    return function(ref2) {
      return function(q4) {
        return bind12(liftEffect5(read(ref2)))(function(v3) {
          return evalM(render)(ref2)(v3["component"]["eval"](new Query(map17(Just.create)(liftCoyoneda(q4)), $$const(Nothing.value))));
        });
      };
    };
  };
  var evalM = function(render) {
    return function(initRef) {
      return function(v3) {
        var evalChildQuery = function(ref2) {
          return function(cqb) {
            return bind12(liftEffect5(read(ref2)))(function(v1) {
              return unChildQueryBox(function(v22) {
                var evalChild = function(v32) {
                  return parallel3(bind12(liftEffect5(read(v32)))(function(dsx) {
                    return unDriverStateX(function(ds) {
                      return evalQ(render)(ds.selfRef)(v22.value1);
                    })(dsx);
                  }));
                };
                return map18(v22.value2)(sequential2(v22.value0(applicativeParAff)(evalChild)(v1.children)));
              })(cqb);
            });
          };
        };
        var go2 = function(ref2) {
          return function(v1) {
            if (v1 instanceof State) {
              return bind12(liftEffect5(read(ref2)))(function(v22) {
                var v32 = v1.value0(v22.state);
                if (unsafeRefEq(v22.state)(v32.value1)) {
                  return pure6(v32.value0);
                }
                ;
                if (otherwise) {
                  return discard1(liftEffect5(write({
                    component: v22.component,
                    refs: v22.refs,
                    children: v22.children,
                    childrenIn: v22.childrenIn,
                    childrenOut: v22.childrenOut,
                    selfRef: v22.selfRef,
                    handlerRef: v22.handlerRef,
                    pendingQueries: v22.pendingQueries,
                    pendingOuts: v22.pendingOuts,
                    pendingHandlers: v22.pendingHandlers,
                    rendering: v22.rendering,
                    fresh: v22.fresh,
                    subscriptions: v22.subscriptions,
                    forks: v22.forks,
                    lifecycleHandlers: v22.lifecycleHandlers,
                    state: v32.value1
                  })(ref2)))(function() {
                    return discard1(handleLifecycle(v22.lifecycleHandlers)(render(v22.lifecycleHandlers)(ref2)))(function() {
                      return pure6(v32.value0);
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): " + [v32.constructor.name]);
              });
            }
            ;
            if (v1 instanceof Subscribe) {
              return bind12(fresh(SubscriptionId)(ref2))(function(sid) {
                return bind12(liftEffect5(subscribe(v1.value0(sid))(function(act) {
                  return handleAff(evalF(render)(ref2)(new Action2(act)));
                })))(function(finalize) {
                  return bind12(liftEffect5(read(ref2)))(function(v22) {
                    return discard1(liftEffect5(modify_(map22(insert7(sid)(finalize)))(v22.subscriptions)))(function() {
                      return pure6(v1.value1(sid));
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Unsubscribe) {
              return discard1(liftEffect5(unsubscribe3(v1.value0)(ref2)))(function() {
                return pure6(v1.value1);
              });
            }
            ;
            if (v1 instanceof Lift2) {
              return v1.value0;
            }
            ;
            if (v1 instanceof ChildQuery2) {
              return evalChildQuery(ref2)(v1.value0);
            }
            ;
            if (v1 instanceof Raise) {
              return bind12(liftEffect5(read(ref2)))(function(v22) {
                return bind12(liftEffect5(read(v22.handlerRef)))(function(handler3) {
                  return discard1(queueOrRun(v22.pendingOuts)(handler3(v1.value0)))(function() {
                    return pure6(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Par) {
              return sequential2(retractFreeAp2(hoistFreeAp(function() {
                var $119 = evalM(render)(ref2);
                return function($120) {
                  return parallel3($119($120));
                };
              }())(v1.value0)));
            }
            ;
            if (v1 instanceof Fork) {
              return bind12(fresh(ForkId)(ref2))(function(fid) {
                return bind12(liftEffect5(read(ref2)))(function(v22) {
                  return bind12(liftEffect5($$new(false)))(function(doneRef) {
                    return bind12(fork3($$finally(liftEffect5(function __do2() {
                      modify_($$delete4(fid))(v22.forks)();
                      return write(true)(doneRef)();
                    }))(evalM(render)(ref2)(v1.value0))))(function(fiber) {
                      return discard1(liftEffect5(unlessM2(read(doneRef))(modify_(insert12(fid)(fiber))(v22.forks))))(function() {
                        return pure6(v1.value1(fid));
                      });
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Join) {
              return bind12(liftEffect5(read(ref2)))(function(v22) {
                return bind12(liftEffect5(read(v22.forks)))(function(forkMap) {
                  return discard1(traverse_32(joinFiber)(lookup12(v1.value0)(forkMap)))(function() {
                    return pure6(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Kill) {
              return bind12(liftEffect5(read(ref2)))(function(v22) {
                return bind12(liftEffect5(read(v22.forks)))(function(forkMap) {
                  return discard1(traverse_32(killFiber(error("Cancelled")))(lookup12(v1.value0)(forkMap)))(function() {
                    return pure6(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof GetRef) {
              return bind12(liftEffect5(read(ref2)))(function(v22) {
                return pure6(v1.value1(lookup22(v1.value0)(v22.refs)));
              });
            }
            ;
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 139, column 33): " + [v1.constructor.name]);
          };
        };
        return foldFree2(go2(initRef))(v3);
      };
    };
  };
  var evalF = function(render) {
    return function(ref2) {
      return function(v3) {
        if (v3 instanceof RefUpdate) {
          return liftEffect5(flip(modify_)(ref2)(mapDriverState(function(st) {
            return {
              component: st.component,
              state: st.state,
              children: st.children,
              childrenIn: st.childrenIn,
              childrenOut: st.childrenOut,
              selfRef: st.selfRef,
              handlerRef: st.handlerRef,
              pendingQueries: st.pendingQueries,
              pendingOuts: st.pendingOuts,
              pendingHandlers: st.pendingHandlers,
              rendering: st.rendering,
              fresh: st.fresh,
              subscriptions: st.subscriptions,
              forks: st.forks,
              lifecycleHandlers: st.lifecycleHandlers,
              refs: alter2($$const(v3.value1))(v3.value0)(st.refs)
            };
          })));
        }
        ;
        if (v3 instanceof Action2) {
          return bind12(liftEffect5(read(ref2)))(function(v1) {
            return evalM(render)(ref2)(v1["component"]["eval"](new Action3(v3.value0, unit)));
          });
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): " + [v3.constructor.name]);
      };
    };
  };

  // output/Halogen.Aff.Driver/index.js
  var bind6 = /* @__PURE__ */ bind(bindEffect);
  var discard4 = /* @__PURE__ */ discard(discardUnit);
  var for_2 = /* @__PURE__ */ for_(applicativeEffect)(foldableMaybe);
  var traverse_5 = /* @__PURE__ */ traverse_(applicativeAff)(foldableList);
  var fork4 = /* @__PURE__ */ fork2(monadForkAff);
  var bindFlipped6 = /* @__PURE__ */ bindFlipped(bindEffect);
  var traverse_13 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_23 = /* @__PURE__ */ traverse_13(foldableMaybe);
  var traverse_33 = /* @__PURE__ */ traverse_13(foldableMap);
  var discard22 = /* @__PURE__ */ discard4(bindAff);
  var parSequence_4 = /* @__PURE__ */ parSequence_(parallelAff)(applicativeParAff)(foldableList);
  var liftEffect6 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var pure7 = /* @__PURE__ */ pure(applicativeEffect);
  var map19 = /* @__PURE__ */ map(functorEffect);
  var pure12 = /* @__PURE__ */ pure(applicativeAff);
  var when2 = /* @__PURE__ */ when(applicativeEffect);
  var renderStateX2 = /* @__PURE__ */ renderStateX(functorEffect);
  var $$void6 = /* @__PURE__ */ $$void(functorAff);
  var foreachSlot2 = /* @__PURE__ */ foreachSlot(applicativeEffect);
  var renderStateX_2 = /* @__PURE__ */ renderStateX_(applicativeEffect);
  var tailRecM3 = /* @__PURE__ */ tailRecM(monadRecEffect);
  var voidLeft3 = /* @__PURE__ */ voidLeft(functorEffect);
  var bind13 = /* @__PURE__ */ bind(bindAff);
  var liftEffect1 = /* @__PURE__ */ liftEffect(monadEffectEffect);
  var newLifecycleHandlers = /* @__PURE__ */ function() {
    return $$new({
      initializers: Nil.value,
      finalizers: Nil.value
    });
  }();
  var handlePending = function(ref2) {
    return function __do2() {
      var queue = read(ref2)();
      write(Nothing.value)(ref2)();
      return for_2(queue)(function() {
        var $59 = traverse_5(fork4);
        return function($60) {
          return handleAff($59(reverse($60)));
        };
      }())();
    };
  };
  var cleanupSubscriptionsAndForks = function(v3) {
    return function __do2() {
      bindFlipped6(traverse_23(traverse_33(unsubscribe)))(read(v3.subscriptions))();
      write(Nothing.value)(v3.subscriptions)();
      bindFlipped6(traverse_33(function() {
        var $61 = killFiber(error("finalized"));
        return function($62) {
          return handleAff($61($62));
        };
      }()))(read(v3.forks))();
      return write(empty3)(v3.forks)();
    };
  };
  var runUI = function(renderSpec2) {
    return function(component) {
      return function(i4) {
        var squashChildInitializers = function(lchs) {
          return function(preInits) {
            return unDriverStateX(function(st) {
              var parentInitializer = evalM(render)(st.selfRef)(st["component"]["eval"](new Initialize(unit)));
              return modify_(function(handlers) {
                return {
                  initializers: new Cons(discard22(parSequence_4(reverse(handlers.initializers)))(function() {
                    return discard22(parentInitializer)(function() {
                      return liftEffect6(function __do2() {
                        handlePending(st.pendingQueries)();
                        return handlePending(st.pendingOuts)();
                      });
                    });
                  }), preInits),
                  finalizers: handlers.finalizers
                };
              })(lchs);
            });
          };
        };
        var runComponent = function(lchs) {
          return function(handler3) {
            return function(j3) {
              return unComponent(function(c3) {
                return function __do2() {
                  var lchs$prime = newLifecycleHandlers();
                  var $$var2 = initDriverState(c3)(j3)(handler3)(lchs$prime)();
                  var pre2 = read(lchs)();
                  write({
                    initializers: Nil.value,
                    finalizers: pre2.finalizers
                  })(lchs)();
                  bindFlipped6(unDriverStateX(function() {
                    var $63 = render(lchs);
                    return function($64) {
                      return $63(function(v3) {
                        return v3.selfRef;
                      }($64));
                    };
                  }()))(read($$var2))();
                  bindFlipped6(squashChildInitializers(lchs)(pre2.initializers))(read($$var2))();
                  return $$var2;
                };
              });
            };
          };
        };
        var renderChild = function(lchs) {
          return function(handler3) {
            return function(childrenInRef) {
              return function(childrenOutRef) {
                return unComponentSlot(function(slot3) {
                  return function __do2() {
                    var childrenIn = map19(slot3.pop)(read(childrenInRef))();
                    var $$var2 = function() {
                      if (childrenIn instanceof Just) {
                        write(childrenIn.value0.value1)(childrenInRef)();
                        var dsx = read(childrenIn.value0.value0)();
                        unDriverStateX(function(st) {
                          return function __do3() {
                            flip(write)(st.handlerRef)(function() {
                              var $65 = maybe(pure12(unit))(handler3);
                              return function($66) {
                                return $65(slot3.output($66));
                              };
                            }())();
                            return handleAff(evalM(render)(st.selfRef)(st["component"]["eval"](new Receive(slot3.input, unit))))();
                          };
                        })(dsx)();
                        return childrenIn.value0.value0;
                      }
                      ;
                      if (childrenIn instanceof Nothing) {
                        return runComponent(lchs)(function() {
                          var $67 = maybe(pure12(unit))(handler3);
                          return function($68) {
                            return $67(slot3.output($68));
                          };
                        }())(slot3.input)(slot3.component)();
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 213, column 14 - line 222, column 98): " + [childrenIn.constructor.name]);
                    }();
                    var isDuplicate = map19(function($69) {
                      return isJust(slot3.get($69));
                    })(read(childrenOutRef))();
                    when2(isDuplicate)(warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                    modify_(slot3.set($$var2))(childrenOutRef)();
                    return bind6(read($$var2))(renderStateX2(function(v3) {
                      if (v3 instanceof Nothing) {
                        return $$throw("Halogen internal error: child was not initialized in renderChild");
                      }
                      ;
                      if (v3 instanceof Just) {
                        return pure7(renderSpec2.renderChild(v3.value0));
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 227, column 37 - line 229, column 50): " + [v3.constructor.name]);
                    }))();
                  };
                });
              };
            };
          };
        };
        var render = function(lchs) {
          return function($$var2) {
            return function __do2() {
              var v3 = read($$var2)();
              var shouldProcessHandlers = map19(isNothing)(read(v3.pendingHandlers))();
              when2(shouldProcessHandlers)(write(new Just(Nil.value))(v3.pendingHandlers))();
              write(empty4)(v3.childrenOut)();
              write(v3.children)(v3.childrenIn)();
              var handler3 = function() {
                var $70 = queueOrRun(v3.pendingHandlers);
                var $71 = evalF(render)(v3.selfRef);
                return function($72) {
                  return $70($$void6($71($72)));
                };
              }();
              var childHandler = function() {
                var $73 = queueOrRun(v3.pendingQueries);
                return function($74) {
                  return $73(handler3(Action2.create($74)));
                };
              }();
              var rendering = renderSpec2.render(function($75) {
                return handleAff(handler3($75));
              })(renderChild(lchs)(childHandler)(v3.childrenIn)(v3.childrenOut))(v3.component.render(v3.state))(v3.rendering)();
              var children2 = read(v3.childrenOut)();
              var childrenIn = read(v3.childrenIn)();
              foreachSlot2(childrenIn)(function(v1) {
                return function __do3() {
                  var childDS = read(v1)();
                  renderStateX_2(renderSpec2.removeChild)(childDS)();
                  return finalize(lchs)(childDS)();
                };
              })();
              flip(modify_)(v3.selfRef)(mapDriverState(function(ds$prime) {
                return {
                  component: ds$prime.component,
                  state: ds$prime.state,
                  refs: ds$prime.refs,
                  childrenIn: ds$prime.childrenIn,
                  childrenOut: ds$prime.childrenOut,
                  selfRef: ds$prime.selfRef,
                  handlerRef: ds$prime.handlerRef,
                  pendingQueries: ds$prime.pendingQueries,
                  pendingOuts: ds$prime.pendingOuts,
                  pendingHandlers: ds$prime.pendingHandlers,
                  fresh: ds$prime.fresh,
                  subscriptions: ds$prime.subscriptions,
                  forks: ds$prime.forks,
                  lifecycleHandlers: ds$prime.lifecycleHandlers,
                  rendering: new Just(rendering),
                  children: children2
                };
              }))();
              return when2(shouldProcessHandlers)(flip(tailRecM3)(unit)(function(v1) {
                return function __do3() {
                  var handlers = read(v3.pendingHandlers)();
                  write(new Just(Nil.value))(v3.pendingHandlers)();
                  traverse_23(function() {
                    var $76 = traverse_5(fork4);
                    return function($77) {
                      return handleAff($76(reverse($77)));
                    };
                  }())(handlers)();
                  var mmore = read(v3.pendingHandlers)();
                  var $52 = maybe(false)($$null)(mmore);
                  if ($52) {
                    return voidLeft3(write(Nothing.value)(v3.pendingHandlers))(new Done(unit))();
                  }
                  ;
                  return new Loop(unit);
                };
              }))();
            };
          };
        };
        var finalize = function(lchs) {
          return unDriverStateX(function(st) {
            return function __do2() {
              cleanupSubscriptionsAndForks(st)();
              var f3 = evalM(render)(st.selfRef)(st["component"]["eval"](new Finalize(unit)));
              modify_(function(handlers) {
                return {
                  initializers: handlers.initializers,
                  finalizers: new Cons(f3, handlers.finalizers)
                };
              })(lchs)();
              return foreachSlot2(st.children)(function(v3) {
                return function __do3() {
                  var dsx = read(v3)();
                  return finalize(lchs)(dsx)();
                };
              })();
            };
          });
        };
        var evalDriver = function(disposed) {
          return function(ref2) {
            return function(q4) {
              return bind13(liftEffect6(read(disposed)))(function(v3) {
                if (v3) {
                  return pure12(Nothing.value);
                }
                ;
                return evalQ(render)(ref2)(q4);
              });
            };
          };
        };
        var dispose = function(disposed) {
          return function(lchs) {
            return function(dsx) {
              return handleLifecycle(lchs)(function __do2() {
                var v3 = read(disposed)();
                if (v3) {
                  return unit;
                }
                ;
                write(true)(disposed)();
                finalize(lchs)(dsx)();
                return unDriverStateX(function(v1) {
                  return function __do3() {
                    var v22 = liftEffect1(read(v1.selfRef))();
                    return for_2(v22.rendering)(renderSpec2.dispose)();
                  };
                })(dsx)();
              });
            };
          };
        };
        return bind13(liftEffect6(newLifecycleHandlers))(function(lchs) {
          return bind13(liftEffect6($$new(false)))(function(disposed) {
            return handleLifecycle(lchs)(function __do2() {
              var sio = create3();
              var dsx = bindFlipped6(read)(runComponent(lchs)(function() {
                var $78 = notify(sio.listener);
                return function($79) {
                  return liftEffect6($78($79));
                };
              }())(i4)(component))();
              return unDriverStateX(function(st) {
                return pure7({
                  query: evalDriver(disposed)(st.selfRef),
                  messages: sio.emitter,
                  dispose: dispose(disposed)(lchs)(dsx)
                });
              })(dsx)();
            });
          });
        });
      };
    };
  };

  // output/Web.DOM.Node/foreign.js
  var getEffProp2 = function(name15) {
    return function(node) {
      return function() {
        return node[name15];
      };
    };
  };
  var baseURI = getEffProp2("baseURI");
  var _ownerDocument = getEffProp2("ownerDocument");
  var _parentNode = getEffProp2("parentNode");
  var _parentElement = getEffProp2("parentElement");
  var childNodes = getEffProp2("childNodes");
  var _firstChild = getEffProp2("firstChild");
  var _lastChild = getEffProp2("lastChild");
  var _previousSibling = getEffProp2("previousSibling");
  var _nextSibling = getEffProp2("nextSibling");
  var _nodeValue = getEffProp2("nodeValue");
  var textContent = getEffProp2("textContent");
  function insertBefore(node1) {
    return function(node2) {
      return function(parent2) {
        return function() {
          parent2.insertBefore(node1, node2);
        };
      };
    };
  }
  function appendChild(node) {
    return function(parent2) {
      return function() {
        parent2.appendChild(node);
      };
    };
  }
  function removeChild2(node) {
    return function(parent2) {
      return function() {
        parent2.removeChild(node);
      };
    };
  }

  // output/Web.DOM.Node/index.js
  var map20 = /* @__PURE__ */ map(functorEffect);
  var parentNode2 = /* @__PURE__ */ function() {
    var $6 = map20(toMaybe);
    return function($7) {
      return $6(_parentNode($7));
    };
  }();
  var nextSibling = /* @__PURE__ */ function() {
    var $15 = map20(toMaybe);
    return function($16) {
      return $15(_nextSibling($16));
    };
  }();

  // output/Halogen.VDom.Driver/index.js
  var $runtime_lazy8 = function(name15, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2) return val2;
      if (state3 === 1) throw new ReferenceError(name15 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var $$void7 = /* @__PURE__ */ $$void(functorEffect);
  var pure8 = /* @__PURE__ */ pure(applicativeEffect);
  var traverse_6 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var unwrap3 = /* @__PURE__ */ unwrap();
  var when3 = /* @__PURE__ */ when(applicativeEffect);
  var not3 = /* @__PURE__ */ not2(/* @__PURE__ */ heytingAlgebraFunction(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean)));
  var identity12 = /* @__PURE__ */ identity(categoryFn);
  var bind14 = /* @__PURE__ */ bind(bindAff);
  var liftEffect7 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var map21 = /* @__PURE__ */ map(functorEffect);
  var bindFlipped7 = /* @__PURE__ */ bindFlipped(bindEffect);
  var substInParent = function(v3) {
    return function(v1) {
      return function(v22) {
        if (v1 instanceof Just && v22 instanceof Just) {
          return $$void7(insertBefore(v3)(v1.value0)(v22.value0));
        }
        ;
        if (v1 instanceof Nothing && v22 instanceof Just) {
          return $$void7(appendChild(v3)(v22.value0));
        }
        ;
        return pure8(unit);
      };
    };
  };
  var removeChild3 = function(v3) {
    return function __do2() {
      var npn = parentNode2(v3.node)();
      return traverse_6(function(pn) {
        return removeChild2(v3.node)(pn);
      })(npn)();
    };
  };
  var mkSpec = function(handler3) {
    return function(renderChildRef) {
      return function(document2) {
        var getNode = unRenderStateX(function(v3) {
          return v3.node;
        });
        var done = function(st) {
          if (st instanceof Just) {
            return halt(st.value0);
          }
          ;
          return unit;
        };
        var buildWidget2 = function(spec) {
          var buildThunk2 = buildThunk(unwrap3)(spec);
          var $lazy_patch = $runtime_lazy8("patch", "Halogen.VDom.Driver", function() {
            return function(st, slot3) {
              if (st instanceof Just) {
                if (slot3 instanceof ComponentSlot) {
                  halt(st.value0);
                  return $lazy_renderComponentSlot(100)(slot3.value0);
                }
                ;
                if (slot3 instanceof ThunkSlot) {
                  var step$prime = step2(st.value0, slot3.value0);
                  return mkStep(new Step(extract2(step$prime), new Just(step$prime), $lazy_patch(103), done));
                }
                ;
                throw new Error("Failed pattern match at Halogen.VDom.Driver (line 97, column 22 - line 103, column 79): " + [slot3.constructor.name]);
              }
              ;
              return $lazy_render(104)(slot3);
            };
          });
          var $lazy_render = $runtime_lazy8("render", "Halogen.VDom.Driver", function() {
            return function(slot3) {
              if (slot3 instanceof ComponentSlot) {
                return $lazy_renderComponentSlot(86)(slot3.value0);
              }
              ;
              if (slot3 instanceof ThunkSlot) {
                var step3 = buildThunk2(slot3.value0);
                return mkStep(new Step(extract2(step3), new Just(step3), $lazy_patch(89), done));
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 84, column 7 - line 89, column 75): " + [slot3.constructor.name]);
            };
          });
          var $lazy_renderComponentSlot = $runtime_lazy8("renderComponentSlot", "Halogen.VDom.Driver", function() {
            return function(cs) {
              var renderChild = read(renderChildRef)();
              var rsx = renderChild(cs)();
              var node = getNode(rsx);
              return mkStep(new Step(node, Nothing.value, $lazy_patch(117), done));
            };
          });
          var patch = $lazy_patch(91);
          var render = $lazy_render(82);
          var renderComponentSlot = $lazy_renderComponentSlot(109);
          return render;
        };
        var buildAttributes = buildProp(handler3);
        return {
          buildWidget: buildWidget2,
          buildAttributes,
          document: document2
        };
      };
    };
  };
  var renderSpec = function(document2) {
    return function(container) {
      var render = function(handler3) {
        return function(child) {
          return function(v3) {
            return function(v1) {
              if (v1 instanceof Nothing) {
                return function __do2() {
                  var renderChildRef = $$new(child)();
                  var spec = mkSpec(handler3)(renderChildRef)(document2);
                  var machine = buildVDom(spec)(v3);
                  var node = extract2(machine);
                  $$void7(appendChild(node)(toNode(container)))();
                  return {
                    machine,
                    node,
                    renderChildRef
                  };
                };
              }
              ;
              if (v1 instanceof Just) {
                return function __do2() {
                  write(child)(v1.value0.renderChildRef)();
                  var parent2 = parentNode2(v1.value0.node)();
                  var nextSib = nextSibling(v1.value0.node)();
                  var machine$prime = step2(v1.value0.machine, v3);
                  var newNode = extract2(machine$prime);
                  when3(not3(unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent2))();
                  return {
                    machine: machine$prime,
                    node: newNode,
                    renderChildRef: v1.value0.renderChildRef
                  };
                };
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 157, column 5 - line 173, column 80): " + [v1.constructor.name]);
            };
          };
        };
      };
      return {
        render,
        renderChild: identity12,
        removeChild: removeChild3,
        dispose: removeChild3
      };
    };
  };
  var runUI2 = function(component) {
    return function(i4) {
      return function(element3) {
        return bind14(liftEffect7(map21(toDocument)(bindFlipped7(document)(windowImpl))))(function(document2) {
          return runUI(renderSpec(document2)(element3))(component)(i4);
        });
      };
    };
  };

  // output/Secret/foreign.js
  var cohere_token = "AxNj02vfJ3xRsseatciO8AUZ0dr1STITgJBfT2Pd";

  // output/App.Halogen/index.js
  var map23 = /* @__PURE__ */ map(functorArray);
  var intercalate5 = /* @__PURE__ */ intercalate2(monoidString);
  var actionsIsSymbol = {
    reflectSymbol: function() {
      return "actions";
    }
  };
  var actionsSpec2 = /* @__PURE__ */ actionsSpec()(/* @__PURE__ */ actionsSpec_mapConsAction({
    reflectSymbol: function() {
      return "submit_interpretation";
    }
  })(/* @__PURE__ */ actionParamsSpec()(/* @__PURE__ */ actionParamsSpec_mapConsA(actionsIsSymbol)(/* @__PURE__ */ actionParamTypeArray(actionParamTypeString))()()()()(actionParamsSpec_mapRowNi))(/* @__PURE__ */ decodeRecord(/* @__PURE__ */ gDecodeJsonCons(/* @__PURE__ */ decodeFieldId(/* @__PURE__ */ decodeArray2(decodeJsonString)))(gDecodeJsonNil)(actionsIsSymbol)()())()))()()(actionsSpec_mapNil));
  var toTools_fromActionsSpec2 = /* @__PURE__ */ toTools_fromActionsSpec(actionsSpec2);
  var fold3 = /* @__PURE__ */ fold2(monoidArray);
  var slot2 = /* @__PURE__ */ slot()({
    reflectSymbol: function() {
      return "prompt";
    }
  })(ordUnit);
  var viewIsSymbol = {
    reflectSymbol: function() {
      return "view";
    }
  };
  var slot_2 = /* @__PURE__ */ slot_()(viewIsSymbol)(ordUnit);
  var bind7 = /* @__PURE__ */ bind(bindHalogenM);
  var request2 = /* @__PURE__ */ request()(viewIsSymbol)(ordUnit);
  var throwError3 = /* @__PURE__ */ throwError(/* @__PURE__ */ monadThrowHalogenM(monadThrowAff));
  var pure9 = /* @__PURE__ */ pure(applicativeHalogenM);
  var gets2 = /* @__PURE__ */ gets(monadStateHalogenM);
  var unwrap4 = /* @__PURE__ */ unwrap();
  var get4 = /* @__PURE__ */ get2(monadStateHalogenM);
  var liftAff2 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var liftEffect8 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var discard5 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_3 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var over2 = /* @__PURE__ */ over()();
  var tell3 = /* @__PURE__ */ tell2()(viewIsSymbol)(ordUnit);
  var map110 = /* @__PURE__ */ map(functorHalogenM);
  var bindFlipped8 = /* @__PURE__ */ bindFlipped(bindHalogenM);
  var traverse2 = /* @__PURE__ */ traverse(traversableArray)(applicativeHalogenM);
  var match2 = /* @__PURE__ */ match()()();
  var monadErrorExceptT2 = /* @__PURE__ */ monadErrorExceptT(monadHalogenM);
  var fromToolCall_toAction2 = /* @__PURE__ */ fromToolCall_toAction(actionsSpec2)(monadErrorExceptT2);
  var traverse_7 = /* @__PURE__ */ traverse_(applicativeHalogenM)(foldableArray);
  var bindFlipped12 = /* @__PURE__ */ bindFlipped(bindAff);
  var GetState_ViewQuery = /* @__PURE__ */ function() {
    function GetState_ViewQuery2(value0) {
      this.value0 = value0;
    }
    ;
    GetState_ViewQuery2.create = function(value0) {
      return new GetState_ViewQuery2(value0);
    };
    return GetState_ViewQuery2;
  }();
  var UpdateState_ViewQuery = /* @__PURE__ */ function() {
    function UpdateState_ViewQuery2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    UpdateState_ViewQuery2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new UpdateState_ViewQuery2(value0, value1, value22);
        };
      };
    };
    return UpdateState_ViewQuery2;
  }();
  var SetAnnotation_ViewQuery = /* @__PURE__ */ function() {
    function SetAnnotation_ViewQuery2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    SetAnnotation_ViewQuery2.create = function(value0) {
      return function(value1) {
        return new SetAnnotation_ViewQuery2(value0, value1);
      };
    };
    return SetAnnotation_ViewQuery2;
  }();
  var SubmitPrompt_PromptOutput = /* @__PURE__ */ function() {
    function SubmitPrompt_PromptOutput2(value0) {
      this.value0 = value0;
    }
    ;
    SubmitPrompt_PromptOutput2.create = function(value0) {
      return new SubmitPrompt_PromptOutput2(value0);
    };
    return SubmitPrompt_PromptOutput2;
  }();
  var AppState = function(x2) {
    return x2;
  };
  var Initialize_AppAction = /* @__PURE__ */ function() {
    function Initialize_AppAction2() {
    }
    ;
    Initialize_AppAction2.value = new Initialize_AppAction2();
    return Initialize_AppAction2;
  }();
  var SubmitPrompt_AppAction = /* @__PURE__ */ function() {
    function SubmitPrompt_AppAction2(value0) {
      this.value0 = value0;
    }
    ;
    SubmitPrompt_AppAction2.create = function(value0) {
      return new SubmitPrompt_AppAction2(value0);
    };
    return SubmitPrompt_AppAction2;
  }();
  var indent = function(n3) {
    var space = codePointFromChar(" ");
    var $143 = joinWith("\n");
    var $144 = map23(function(v3) {
      return fromCodePointArray(replicate(n3)(space)) + v3;
    });
    var $145 = split("\n");
    return function($146) {
      return $143($144($145($146)));
    };
  };
  var interpretPreactionToAction_chat = function(v3) {
    return chat(v3.client)({
      model: "command-r-plus",
      preamble: "\n## Context\n\n" + (v3.model.describeContext(v3.state) + ("\n\n## Current State\n\n" + (indent(4)(v3.model.describeState(v3.state)) + "\n\n## Task\n\nThe user will give you an instruction in natural language.\nYour task is to interpret this informal instruction by using the corresponding tool to accomplish what the user intended.\n"))),
      chatHistory: [],
      message: v3.preaction,
      forceSingleStep: true,
      tools: v3.tools
    });
  };
  var sequentializePromptToPreactions_chat = function(v3) {
    return chat(v3.client)({
      model: "command-r-plus",
      preamble: "\n## Context\n\n" + (v3.model.describeContext(v3.state) + ("\n\n## Task\n\nThe user will give you instructions in natural language.\nYour task is to interpret these instructions into a sequence of simple actions.\n\nEach step should be only a single simple action, where the available actions are:\n" + (intercalate5("\n")(map23(function(v1) {
        return "  - " + (v1.name + (": " + v1.description));
      })(v3.tools)) + "\n\nNote that the user's instructions can be vague, so you must do your best to interpret them into the MOST REASONABLE form of the simple actions described above.\n\nMake sure to use the `submit_interpretation` tool to submit your interpretation the sequence of actions.\n"))),
      chatHistory: [],
      message: "\nThe current state is:\n\n" + (indent(4)(v3.model.describeState(v3.state)) + ("\n\nSubmit your interpretation of the user's instructions as a sequence of simple actions.\nThe user's instructions are:\n\n" + (indent(4)(v3.prompt) + "\n"))),
      forceSingleStep: true,
      tools: v3.sequentialize_tools
    });
  };
  var appComponent = function(dictActionsSpec) {
    var toTools_fromActionsSpec1 = toTools_fromActionsSpec(dictActionsSpec);
    var fromToolCall_toAction1 = fromToolCall_toAction(dictActionsSpec)(monadErrorExceptT2);
    var sequentialize_actionsSpec = {
      submit_interpretation: {
        description: "Submit a sequence of simple actions as a structured interpretation of the user prompt.",
        params: {
          actions: {
            description: "The sequence of simple actions",
            proxy_ty: $$Proxy.value
          }
        }
      }
    };
    var sequentialize_tools = toTools_fromActionsSpec2(sequentialize_actionsSpec);
    var render = function(v3) {
      return div3([])(fold3([[slot2($$Proxy.value)(unit)(v3.promptComponent)({})(function(v1) {
        return new SubmitPrompt_AppAction(v1.value0);
      })], function() {
        if (v3.mb_initialState instanceof Nothing) {
          return [];
        }
        ;
        if (v3.mb_initialState instanceof Just) {
          return [slot_2($$Proxy.value)(unit)(v3.viewComponent)({
            state: v3.mb_initialState.value0
          })];
        }
        ;
        throw new Error("Failed pattern match at App.Halogen (line 161, column 11 - line 163, column 92): " + [v3.mb_initialState.constructor.name]);
      }()]));
    };
    var initialComponentState = function(v3) {
      return {
        model: v3.model,
        tools: toTools_fromActionsSpec1(v3.model.actionsSpec),
        mb_initialState: Nothing.value,
        mb_client: Nothing.value,
        promptComponent: v3.promptComponent,
        viewComponent: v3.viewComponent
      };
    };
    var getModelViewState = bind7(request2($$Proxy.value)(unit)(GetState_ViewQuery.create))(maybe(throwError3(error("[getModelViewState] view component does not exist")))(pure9));
    var getClient = bind7(gets2(function($147) {
      return function(v3) {
        return v3.mb_client;
      }(unwrap4($147));
    }))(maybe(throwError3(error("[getClient] client has not yet been initialized")))(pure9));
    var handleAction = function(v3) {
      if (v3 instanceof Initialize_AppAction) {
        return bind7(get4)(function(v1) {
          return bind7(liftAff2(v1.model.initialState))(function(initialState) {
            return bind7(liftEffect8(make_client({
              token: cohere_token
            })))(function(client) {
              return discard5(modify_3(over2(AppState)(function(v22) {
                return {
                  model: v22.model,
                  promptComponent: v22.promptComponent,
                  tools: v22.tools,
                  viewComponent: v22.viewComponent,
                  mb_initialState: new Just(initialState),
                  mb_client: new Just(client)
                };
              })))(function() {
                return pure9(unit);
              });
            });
          });
        });
      }
      ;
      if (v3 instanceof SubmitPrompt_AppAction) {
        return discard5(tell3($$Proxy.value)(unit)(SetAnnotation_ViewQuery.create(v3.value0)))(function() {
          return bind7(getClient)(function(client) {
            return bind7(get4)(function(v1) {
              return bind7(bind7(getModelViewState)(function(modelState) {
                return map110(fold3)(bindFlipped8(traverse2(function(toolCall) {
                  return bindFlipped8(match2({
                    submit_interpretation: function(v22) {
                      return pure9(v22.actions);
                    }
                  }))(bindFlipped8(either(function(err) {
                    return throwError3(error(err));
                  })(pure9))(runExceptT(fromToolCall_toAction2(sequentialize_actionsSpec)(toolCall))));
                }))(map110(function(v22) {
                  return v22.toolCalls;
                })(liftAff2(sequentializePromptToPreactions_chat({
                  client,
                  model: v1.model,
                  tools: v1.tools,
                  state: modelState,
                  prompt: v3.value0,
                  sequentialize_tools
                })))));
              }))(function(v22) {
                return discard5(traverse_7(function(preaction) {
                  return bind7(getModelViewState)(function(modelState) {
                    return bindFlipped8(traverse2(function(toolCall) {
                      return bindFlipped8(function(action2) {
                        return tell3($$Proxy.value)(unit)(UpdateState_ViewQuery.create(v3.value0)(v1.model.updateState(action2)));
                      })(bindFlipped8(either(function(err) {
                        return throwError3(error(err));
                      })(pure9))(runExceptT(fromToolCall_toAction1(v1.model.actionsSpec)(toolCall))));
                    }))(map110(function(v32) {
                      return v32.toolCalls;
                    })(liftAff2(interpretPreactionToAction_chat({
                      client,
                      model: v1.model,
                      preaction,
                      state: modelState,
                      tools: v1.tools
                    }))));
                  });
                })(v22))(function() {
                  return pure9(unit);
                });
              });
            });
          });
        });
      }
      ;
      throw new Error("Failed pattern match at App.Halogen (line 108, column 18 - line 152, column 16): " + [v3.constructor.name]);
    };
    var $$eval = mkEval({
      handleQuery: defaultEval.handleQuery,
      receive: defaultEval.receive,
      finalize: defaultEval.finalize,
      initialize: new Just(Initialize_AppAction.value),
      handleAction
    });
    return mkComponent({
      initialState: initialComponentState,
      "eval": $$eval,
      render
    });
  };
  var runApp = function(dictActionsSpec) {
    var appComponent1 = appComponent(dictActionsSpec);
    return function(input3) {
      return runHalogenAff(bindFlipped12(runUI2(appComponent1)(input3))(awaitBody));
    };
  };

  // output/Web.Event.Event/foreign.js
  function _target(e3) {
    return e3.target;
  }

  // output/Web.Event.Event/index.js
  var target5 = function($3) {
    return toMaybe(_target($3));
  };

  // output/Web.UIEvent.KeyboardEvent.EventTypes/index.js
  var keydown = "keydown";

  // output/Halogen.HTML.Events/index.js
  var keyHandler = unsafeCoerce2;
  var handler2 = function(et) {
    return function(f3) {
      return handler(et)(function(ev) {
        return new Just(new Action2(f3(ev)));
      });
    };
  };
  var onKeyDown = /* @__PURE__ */ function() {
    var $23 = handler2(keydown);
    return function($24) {
      return $23(keyHandler($24));
    };
  }();

  // output/Web.UIEvent.KeyboardEvent/foreign.js
  function key(e3) {
    return e3.key;
  }

  // output/Web.UIEvent.KeyboardEvent/index.js
  var toEvent = unsafeCoerce2;

  // output/Examples.Hyper1/index.js
  var fold4 = /* @__PURE__ */ fold2(monoidArray);
  var map24 = /* @__PURE__ */ map(functorArray);
  var append12 = /* @__PURE__ */ append(semigroupArray);
  var show2 = /* @__PURE__ */ show(showInt);
  var bind8 = /* @__PURE__ */ bind(bindHalogenM);
  var get5 = /* @__PURE__ */ get2(monadStateHalogenM);
  var pure10 = /* @__PURE__ */ pure(applicativeHalogenM);
  var discard6 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var bindFlipped9 = /* @__PURE__ */ bindFlipped(bindHalogenM);
  var put2 = /* @__PURE__ */ put(monadStateHalogenM);
  var map111 = /* @__PURE__ */ map(functorHalogenM);
  var liftAff3 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_4 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var match3 = /* @__PURE__ */ match()()();
  var liftEffect9 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var throwError4 = /* @__PURE__ */ throwError(/* @__PURE__ */ monadThrowHalogenM(monadThrowAff));
  var when4 = /* @__PURE__ */ when(applicativeHalogenM);
  var inj3 = /* @__PURE__ */ inj()({
    reflectSymbol: function() {
      return "OnKeyDown";
    }
  });
  var value13 = /* @__PURE__ */ value12(isPropString);
  var pure13 = /* @__PURE__ */ pure(applicativeAff);
  var show12 = /* @__PURE__ */ show(showString);
  var actionParamsSpec2 = /* @__PURE__ */ actionParamsSpec();
  var distanceIsSymbol = {
    reflectSymbol: function() {
      return "distance";
    }
  };
  var colorIsSymbol = {
    reflectSymbol: function() {
      return "color";
    }
  };
  var main2 = /* @__PURE__ */ function() {
    var viewComponent = function() {
      var render = function(v3) {
        return div3([style("display: flex; flex-direction: column; gap: 1em;")])(fold4([[div3([style("margin: 0.5em; padding: 0.5em; display: flex; flex-direction: row; gap: 0.5em; box-shadow: 0 0 0 0.1em black inset; width: 80vw; overflow-x: scroll;")])(map24(function(i4) {
          return div3([style("display: flex; flex-direction: column; gap: 0.5em; padding: 0.5em; min-width: 1.5em; box-shadow: 0 0 0 0.2em black inset; " + function() {
            var $110 = i4 !== v3.state.position;
            if ($110) {
              return "";
            }
            ;
            return "background-color: " + (v3.state.color + "; ");
          }())])(append12([div3([])([text5(show2(i4))])])(function() {
            var $111 = i4 !== v3.state.position;
            if ($111) {
              return [];
            }
            ;
            return [div3([])([text5("X")])];
          }()));
        })(range2(0)(20)))], function() {
          if (v3.mb_prompt instanceof Nothing) {
            return [];
          }
          ;
          if (v3.mb_prompt instanceof Just) {
            return [div3([style("padding: 0.5em; font-style: italic")])([text5(v3.mb_prompt.value0)])];
          }
          ;
          throw new Error("Failed pattern match at Examples.Hyper1 (line 167, column 13 - line 169, column 109): " + [v3.mb_prompt.constructor.name]);
        }()]));
      };
      var initialState = function(v3) {
        return {
          state: v3.state,
          mb_prompt: Nothing.value
        };
      };
      var handleQuery = function(v3) {
        if (v3 instanceof GetState_ViewQuery) {
          return bind8(get5)(function(v1) {
            return pure10(new Just(v3.value0(v1.state)));
          });
        }
        ;
        if (v3 instanceof UpdateState_ViewQuery) {
          return bind8(get5)(function(v1) {
            return discard6(bindFlipped9(put2)(map111(function(v22) {
              var $125 = {};
              for (var $126 in v1) {
                if ({}.hasOwnProperty.call(v1, $126)) {
                  $125[$126] = v1[$126];
                }
                ;
              }
              ;
              $125.state = v22;
              return $125;
            })(liftAff3(v3.value1(v1.state)))))(function() {
              return pure10(new Just(v3.value2));
            });
          });
        }
        ;
        if (v3 instanceof SetAnnotation_ViewQuery) {
          return discard6(modify_4(function(v1) {
            var $132 = {};
            for (var $133 in v1) {
              if ({}.hasOwnProperty.call(v1, $133)) {
                $132[$133] = v1[$133];
              }
              ;
            }
            ;
            $132.mb_prompt = new Just(v3.value0);
            return $132;
          }))(function() {
            return pure10(new Just(v3.value1));
          });
        }
        ;
        throw new Error("Failed pattern match at Examples.Hyper1 (line 130, column 19 - line 141, column 22): " + [v3.constructor.name]);
      };
      var $$eval = mkEval({
        handleAction: defaultEval.handleAction,
        receive: defaultEval.receive,
        initialize: defaultEval.initialize,
        finalize: defaultEval.finalize,
        handleQuery
      });
      return mkComponent({
        initialState,
        "eval": $$eval,
        render
      });
    }();
    var promptComponent = function() {
      var initialState = function(v3) {
        return {
          prompt: ""
        };
      };
      var handleAction = match3({
        OnPromptChange: function(event) {
          return bind8(bindFlipped9(function($166) {
            return liftEffect9(value3($166));
          })(bindFlipped9(maybe(throwError4(error("HTMLInputElement.fromEventTarget ... = Nothing")))(pure10))(bindFlipped9(function($167) {
            return pure10(fromEventTarget($167));
          })(maybe(throwError4(error("Event.target == Nothing")))(pure10)(target5(event))))))(function(prompt) {
            return modify_4(function(v3) {
              var $138 = {};
              for (var $139 in v3) {
                if ({}.hasOwnProperty.call(v3, $139)) {
                  $138[$139] = v3[$139];
                }
                ;
              }
              ;
              $138.prompt = prompt;
              return $138;
            });
          });
        },
        OnKeyDown: function(event) {
          return bind8(bindFlipped9(function($168) {
            return liftEffect9(value3($168));
          })(bindFlipped9(maybe(throwError4(error("HTMLInputElement.fromEventTarget ... = Nothing")))(pure10))(bindFlipped9(function($169) {
            return pure10(fromEventTarget($169));
          })(maybe(throwError4(error("Event.target == Nothing")))(pure10)(target5(toEvent(event)))))))(function(prompt) {
            return discard6(modify_4(function(v3) {
              var $141 = {};
              for (var $142 in v3) {
                if ({}.hasOwnProperty.call(v3, $142)) {
                  $141[$142] = v3[$142];
                }
                ;
              }
              ;
              $141.prompt = prompt;
              return $141;
            }))(function() {
              return when4(key(event) === "Enter")(bind8(get5)(function(v3) {
                return discard6(modify_4(function(v1) {
                  var $145 = {};
                  for (var $146 in v1) {
                    if ({}.hasOwnProperty.call(v1, $146)) {
                      $145[$146] = v1[$146];
                    }
                    ;
                  }
                  ;
                  $145.prompt = "";
                  return $145;
                }))(function() {
                  return raise(new SubmitPrompt_PromptOutput(v3.prompt));
                });
              }));
            });
          });
        }
      });
      var $$eval = mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        initialize: defaultEval.initialize,
        finalize: defaultEval.finalize,
        handleAction
      });
      var render = function(v3) {
        return div3([style("display: flex; flex-direction: column; padding: 0.5em; margin: 0.5em; box-shadow: 0 0 0 0.1em black inset;")])([input([onKeyDown(inj3($$Proxy.value)), value13(v3.prompt)])]);
      };
      return mkComponent({
        initialState,
        "eval": $$eval,
        render
      });
    }();
    var model = function() {
      var actionsSpec3 = {
        move: {
          description: "Move a distance",
          params: {
            distance: {
              description: "The distance to move by",
              proxy_ty: $$Proxy.value
            }
          }
        },
        set_light_color: {
          description: "Set the robot's light color.",
          params: {
            color: {
              description: "A string representing the robot's new light color",
              proxy_ty: $$Proxy.value
            }
          }
        }
      };
      return {
        actionsSpec: actionsSpec3,
        initialState: pure13({
          position: 0,
          color: "white"
        }),
        updateState: match3({
          move: function(v3) {
            return function(v1) {
              return pure13(function() {
                var $153 = {};
                for (var $154 in v1) {
                  if ({}.hasOwnProperty.call(v1, $154)) {
                    $153[$154] = v1[$154];
                  }
                  ;
                }
                ;
                $153.position = v1.position + v3.distance | 0;
                return $153;
              }());
            };
          },
          set_light_color: function(v3) {
            return function(state3) {
              return pure13(function() {
                var $159 = {};
                for (var $160 in state3) {
                  if ({}.hasOwnProperty.call(state3, $160)) {
                    $159[$160] = state3[$160];
                  }
                  ;
                }
                ;
                $159.color = v3.color;
                return $159;
              }());
            };
          }
        }),
        describeContext: function(v3) {
          return "You are controlling a robot with one dimension of movement and a colored light attachment.";
        },
        describeState: function(v3) {
          return joinWith("\n")(["", "position: " + show2(v3.position), "color: " + show12(v3.color)]);
        }
      };
    }();
    return runApp(actionsSpec()(actionsSpec_mapConsAction({
      reflectSymbol: function() {
        return "move";
      }
    })(actionParamsSpec2(actionParamsSpec_mapConsA(distanceIsSymbol)(actionParamTypeInt)()()()()(actionParamsSpec_mapRowNi))(decodeRecord(gDecodeJsonCons(decodeFieldId(decodeJsonInt))(gDecodeJsonNil)(distanceIsSymbol)()())()))()()(actionsSpec_mapConsAction({
      reflectSymbol: function() {
        return "set_light_color";
      }
    })(actionParamsSpec2(actionParamsSpec_mapConsA(colorIsSymbol)(actionParamTypeString)()()()()(actionParamsSpec_mapRowNi))(decodeRecord(gDecodeJsonCons(decodeFieldId(decodeJsonString))(gDecodeJsonNil)(colorIsSymbol)()())()))()()(actionsSpec_mapNil))))({
      model,
      promptComponent,
      viewComponent
    });
  }();

  // <stdin>
  main2();
})();
/*! Bundled license information:

ieee754/index.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

buffer/index.js:
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

safe-buffer/index.js:
  (*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> *)
*/
